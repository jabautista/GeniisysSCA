DROP TRIGGER CPI.GIIS_INTERMEDIARY_TAIUD;

CREATE OR REPLACE TRIGGER CPI.GIIS_INTERMEDIARY_TAIUD
AFTER INSERT OR DELETE OR UPDATE
ON CPI.GIIS_INTERMEDIARY FOR EACH ROW
DECLARE
BEGIN
  BEGIN
    DECLARE
      ws_fund_cd       giac_sl_lists.fund_cd%TYPE    ;
      ws_sl_type_cd    giac_sl_lists.sl_type_cd%TYPE := '3';
      ws_sl_cd         giac_sl_lists.sl_cd%TYPE      := NVL(:NEW.intm_no, :OLD.intm_no);
      ws_sl_nm         giac_sl_lists.sl_name%TYPE    := NVL(:NEW.intm_name, :OLD.intm_name);
      ws_pno           giis_payees.payee_no%TYPE     := NVL(:NEW.intm_no, :OLD.intm_no);
      ws_pcd           giis_payees.payee_class_cd%TYPE;
      ws_plast         giis_payees.payee_last_name%TYPE := NVL(:NEW.intm_name, :OLD.intm_name);
      ws_addr1         giis_payees.mail_addr1%TYPE   := NVL(:NEW.mail_addr1, :OLD.mail_addr1);
      ws_addr2         giis_payees.mail_addr2%TYPE   := NVL(:NEW.mail_addr2, :OLD.mail_addr2); -- added by pj
      ws_addr3         giis_payees.mail_addr3%TYPE   := NVL(:NEW.mail_addr3, :OLD.mail_addr3); -- added by pj
      ws_tin           giis_payees.tin%TYPE          := NVL(:NEW.tin, :OLD.tin);
      ws_tag           giis_payees.allow_tag%TYPE    := 'Y';
      ws_cp_no     	   giis_payees.cp_no%TYPE    	 := :NEW.cp_no;
      ws_smart_no      giis_payees.smart_no%TYPE  	 := :NEW.smart_no;
      ws_sun_no        giis_payees.sun_no%TYPE   	 := :NEW.sun_no;
      ws_globe_no      giis_payees.globe_no%TYPE  	 := :NEW.globe_no;
    BEGIN
  --
  -- Get fund code...
  --
      BEGIN
        SELECT param_value_v
          INTO ws_fund_cd
          FROM giac_parameters
         WHERE param_name = 'FUND_CD';
      EXCEPTION
        WHEN NO_DATA_FOUND THEN
          RAISE_APPLICATION_ERROR(-20008, 'NO RECORDS IN PARAMETERS TABLE.');
      END;
  --
  -- Get payee class code...
  --
      BEGIN
        SELECT param_value_v
          INTO ws_pcd
          FROM giac_parameters
         WHERE param_name = 'INTM_CLASS_CD';
      END;
  --
  --
      IF UPDATING THEN
  --
  -- Update GIAC SL LISTS...
  --
        UPDATE giac_sl_lists
           SET sl_name = ws_sl_nm
         WHERE fund_cd = ws_fund_cd
           AND sl_type_cd = ws_sl_type_cd
           AND sl_cd      = ws_sl_cd;
  --
  -- Update GIIS PAYEES...
  --
        UPDATE giis_payees
           SET payee_no = ws_pno,
               payee_last_name = ws_plast,
               mail_addr1 = ws_addr1,
               mail_addr2 = ws_addr2,
               mail_addr3 = ws_addr3,
               tin = ws_tin,
               user_id = NVL (giis_users_pkg.app_user, USER),
               last_update = SYSDATE,
      cp_no = ws_cp_no,
      smart_no = ws_smart_no,
      globe_no = ws_globe_no,
      sun_no = ws_sun_no
         WHERE payee_no = ws_pno
           AND payee_class_cd = ws_pcd;
     ELSIF INSERTING THEN
  --
  -- Insert into GIAC SL LISTS...
  --
       INSERT INTO giac_sl_lists(fund_cd   , sl_type_cd   , sl_cd   , sl_name ,
                                 remarks   , user_id      , last_update)
                          VALUES(ws_fund_cd, ws_sl_type_cd, ws_sl_cd, ws_sl_nm,
                                 'THIS IS GENERATED BY THE SYSTEM AFTER INSERT ON INTERMEDIARY TABLE.',
                                 NVL (giis_users_pkg.app_user, USER)     , SYSDATE);
  --
  -- Insert into GIIS PAYEES...
  --
        INSERT INTO giis_payees(payee_no,
                                payee_class_cd,
                                payee_last_name,
                                mail_addr1,
                                mail_addr2,
                                mail_addr3,
                                tin,
                                allow_tag,
                                remarks,
                                user_id,
                                last_update,
        cp_no,
        smart_no,
        globe_no,
        sun_no)
                         VALUES(ws_pno,
                                ws_pcd,
                                ws_plast,
                                ws_addr1,
                                ws_addr2,
                                ws_addr3,
                                ws_tin,
                                ws_tag,
                                'THIS IS GENERATED BY THE SYSTEM AFTER INSERT ON INTERMEDIARY TABLE.',
                                NVL (giis_users_pkg.app_user, USER),
                                SYSDATE,
        ws_cp_no,
        ws_smart_no,
        ws_globe_no,
        ws_sun_no);
     ELSIF DELETING THEN
  --
  -- Delete from GIAC SL LISTS...
  --
       DELETE FROM giac_sl_lists
        WHERE fund_cd = ws_fund_cd
          AND sl_type_cd = ws_sl_type_cd
          AND sl_cd = ws_sl_cd;
  --
  -- Delete from GIIS PAYEES...
  --
        DELETE FROM giis_payees
         WHERE payee_no = ws_pno
           AND payee_class_cd = ws_pcd;
     END IF;
    END;
  END;
END;
/


