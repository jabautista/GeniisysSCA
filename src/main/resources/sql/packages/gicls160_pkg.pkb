CREATE OR REPLACE PACKAGE BODY CPI.gicls160_pkg
AS
/*
**  Created by   : Ildefonso Ellarina
**  Date Created : 8.16.2013
**  Reference By    : (GICLS160 - Table Maintenance Claim Status)
**  Description  : Populate Claim Status List
*/
   FUNCTION get_claim_status
      RETURN claim_status_tab PIPELINED
   IS
      v_list   claim_status_type;
   BEGIN
      FOR i IN (SELECT *
                  FROM giis_clm_stat
                 WHERE clm_stat_cd NOT IN ('CC', 'CD', 'WD', 'DN'))
      LOOP
         v_list.clm_stat_cd := i.clm_stat_cd;
         v_list.clm_stat_desc := i.clm_stat_desc;
         v_list.clm_stat_type := i.clm_stat_type;
         v_list.remarks := i.remarks;
         v_list.user_id := i.user_id;
         v_list.last_update :=
                            TO_CHAR (i.last_update, 'MM-DD-YYYY HH:MM:SS AM');
         PIPE ROW (v_list);
      END LOOP;

      RETURN;
   END get_claim_status;

    /*
   **  Created by       :Fons Ellarina
   **  Date Created    : 08.22.2013
   **  Reference By    : (GICLS160 - Table Maintenance - Claim Status)
   **  Description     : Insert or update record to giis_clm_stat
   */
   PROCEDURE set_claim_status (
      p_clm_stat_cd     giis_clm_stat.clm_stat_cd%TYPE,
      p_clm_stat_desc   giis_clm_stat.clm_stat_desc%TYPE,
      p_remarks         giis_clm_stat.remarks%TYPE
   )
   IS
   BEGIN
      MERGE INTO giis_clm_stat
         USING DUAL
         ON (clm_stat_cd = p_clm_stat_cd)
         WHEN NOT MATCHED THEN
            INSERT (clm_stat_cd, clm_stat_desc, clm_stat_type, remarks)
            VALUES (p_clm_stat_cd, p_clm_stat_desc, 'N', p_remarks)
         WHEN MATCHED THEN
            UPDATE
               SET clm_stat_desc = p_clm_stat_desc, remarks = p_remarks
            ;
   END set_claim_status;

       /*
   **  Created by       :Fons Ellarina
   **  Date Created    : 08.22.2013
   **  Reference By    : (GICLS160 - Table Maintenance - Claim Status)
   **  Description     : Delete record in giis_clm_stat
   */
   PROCEDURE delete_in_claim_status (
      p_clm_stat_cd   giis_clm_stat.clm_stat_cd%TYPE
   )
   IS
   BEGIN
      DELETE FROM giis_clm_stat
            WHERE clm_stat_cd = p_clm_stat_cd;
   END delete_in_claim_status;

   /*
   **  Created by   : Ildefonso Ellarina
   **  Date Created : 8.22.2013
   **  Reference By    : (GICLS150 - Table Maintenance Claim Status)
   **  Description  : Validate the input of user.
   */
   FUNCTION chk_if_valid_input (p_txt_field VARCHAR2, p_search_string VARCHAR2)
      RETURN VARCHAR2
   IS
      v_result   VARCHAR2 (500)                     := 'TRUE';
      v_desc     giis_clm_stat.clm_stat_desc%TYPE;
      v_cd       giis_clm_stat.clm_stat_cd%TYPE;
   BEGIN
      IF p_txt_field = 'Code'
      THEN
         BEGIN
            IF p_search_string IN ('CC', 'CD', 'WD', 'DN')
            THEN
               FOR i IN (SELECT clm_stat_desc des
                           FROM giis_clm_stat
                          WHERE clm_stat_cd = p_search_string)
               LOOP
                  v_desc := i.des;
                  EXIT;
               END LOOP;

               v_result :=
                     'The '
                  || p_search_string
                  || ' ('
                  || v_desc
                  || ') claim status code need not be entered. '
                  || 'Code is already generated by the system.';
            ELSE
               FOR i IN (SELECT '1'
                           FROM giis_clm_stat
                          WHERE clm_stat_cd = p_search_string)
               LOOP
                  v_result := 'Claim status code must be unique.';
                  EXIT;
               END LOOP;
            END IF;
         END;
      ELSIF p_txt_field = 'Status Description'
      THEN
         BEGIN
            FOR i IN (SELECT clm_stat_desc des, clm_stat_cd cd
                        FROM giis_clm_stat
                       WHERE clm_stat_desc = p_search_string)
            LOOP
               v_desc := i.des;
               v_cd := i.cd;
               EXIT;
            END LOOP;

            IF v_desc IS NOT NULL
            THEN
               IF v_cd IN ('CC', 'CD', 'WD', 'DN')
               THEN
                  v_result :=
                        'The recovery status '
                     || v_desc
                     || ' already exists.'
                     || CHR (10)
                     || 'This has already been generated by the system with code '
                     || v_cd
                     || '. Please change the description.';
               ELSE
                  v_result :=
                        'The recovery status '
                     || v_desc
                     || ' already exists with code '
                     || v_cd
                     || '. '
                     || 'Please change the description.';
               END IF;
            END IF;
         END;
      END IF;

      RETURN v_result;
   END chk_if_valid_input;
END gicls160_pkg;
/


