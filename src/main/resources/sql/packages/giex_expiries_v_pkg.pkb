CREATE OR REPLACE PACKAGE BODY CPI.giex_expiries_v_pkg
AS
   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 09.16.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   */
    FUNCTION get_expired_policies (
        p_user_id       giex_expiries_v.extract_user%TYPE,
        p_all_user      giis_users.all_user_sw%TYPE)
      RETURN giex_expiries_v_tab
      PIPELINED
    IS
      v_expiries   giex_expiries_v_type;
      v_all_user   VARCHAR2(1)  := 'N'; --added by joanne 06.25.14, default all_user_sw is N
    BEGIN
      FOR i IN
        (
         SELECT all_user_sw
           FROM giis_users
          WHERE user_id = p_user_id
        )
      LOOP
        v_all_user := i.all_user_sw;
        EXIT;
      END LOOP;
    
      FOR dt
         IN (  SELECT policy_id,
                      expiry_date,
                      renew_flag,
                      line_cd,
                      subline_cd,
                      same_polno_sw,
                      cpi_rec_no,
                      cpi_branch_cd,
                      iss_cd,
                      post_flag,
                      balance_flag,
                      claim_flag,
                      extract_user,
                      extract_date,
                      processor,
                      user_id,
                      last_update,
                      date_printed,
                      no_of_copies,
                      auto_renew_flag,
                      update_flag,
                      tsi_amt,
                      prem_amt,
                      ren_tsi_amt,
                      ren_prem_amt,
                      summary_sw,
                      incept_date,
                      assd_no,
                      auto_sw,
                      tax_amt,
                      policy_tax_amt,
                      issue_yy,
                      pol_seq_no,
                      renew_no,
                      color,
                      motor_no,
                      model_year,
                      make,
                      serialno,
                      plate_no,
                      ren_notice_cnt,
                      ren_notice_date,
                      item_title,
                      loc_risk1,
                      loc_risk2,
                      loc_risk3,
                      car_company,
                      intm_no,
                      remarks,
                      orig_tsi_amt,
                      sms_flag,
                      renewal_id,
                      reg_policy_sw,
                      assd_sms,
                      intm_sms,
                      email_doc,
                      email_sw,
                      email_stat,
                      assd_email,
                      intm_email,
                      non_ren_reason,
                      coc_serial_no,
                      non_ren_reason_cd,
                      pack_policy_id,
                      is_package
                 FROM giex_expiries_v
                WHERE (line_cd, iss_cd) IN (
                                            SELECT line_cd, branch_cd 
                                              FROM TABLE(security_access.get_branch_line('UW', 'GIEXS004', p_user_id))
                                            )
                  AND NVL (post_flag, 'N') = 'N'
                  AND DECODE (v_all_user, 'Y', p_user_id, extract_user) =
                             p_user_id
                ORDER BY line_cd,
                      subline_cd,
                      iss_cd,
                      expiry_date)
      LOOP
         v_expiries.policy_id := dt.policy_id;
         v_expiries.expiry_date := dt.expiry_date;
         v_expiries.renew_flag := dt.renew_flag;
         v_expiries.line_cd := dt.line_cd;
         v_expiries.subline_cd := dt.subline_cd;
         v_expiries.same_polno_sw := dt.same_polno_sw;
         v_expiries.cpi_rec_no := dt.cpi_rec_no;
         v_expiries.cpi_branch_cd := dt.cpi_branch_cd;
         v_expiries.iss_cd := dt.iss_cd;
         v_expiries.post_flag := dt.post_flag;
         v_expiries.balance_flag := dt.balance_flag;
         v_expiries.claim_flag := dt.claim_flag;
         v_expiries.extract_user := dt.extract_user;
         v_expiries.extract_date := dt.extract_date;
         v_expiries.processor := dt.processor;
         v_expiries.user_id := dt.user_id;
         v_expiries.last_update := dt.last_update;
         v_expiries.date_printed := dt.date_printed;
         v_expiries.no_of_copies := dt.no_of_copies;
         v_expiries.auto_renew_flag := dt.auto_renew_flag;
         v_expiries.update_flag := dt.update_flag;
         /*comment by joanne 02.0714, tsi and prem should consider summary_sw
         v_expiries.tsi_amt := dt.tsi_amt;
         v_expiries.prem_amt := dt.prem_amt;*/
         v_expiries.ren_tsi_amt := dt.ren_tsi_amt;
         v_expiries.ren_prem_amt := dt.ren_prem_amt;
         v_expiries.summary_sw := dt.summary_sw;
         v_expiries.incept_date := dt.incept_date;
         v_expiries.assd_no := dt.assd_no;
         v_expiries.auto_sw := dt.auto_sw;
         v_expiries.tax_amt := dt.tax_amt;
         v_expiries.policy_tax_amt := dt.policy_tax_amt;
         v_expiries.issue_yy := dt.issue_yy;
         v_expiries.pol_seq_no := dt.pol_seq_no;
         v_expiries.renew_no := dt.renew_no;
         v_expiries.color := dt.color;
         v_expiries.motor_no := dt.motor_no;
         v_expiries.model_year := dt.model_year;
         v_expiries.make := dt.make;
         v_expiries.serialno := dt.serialno;
         v_expiries.plate_no := dt.plate_no;
         v_expiries.ren_notice_cnt := dt.ren_notice_cnt;
         v_expiries.ren_notice_date := dt.ren_notice_date;
         v_expiries.item_title := dt.item_title;
         v_expiries.loc_risk1 := dt.loc_risk1;
         v_expiries.loc_risk2 := dt.loc_risk2;
         v_expiries.loc_risk3 := dt.loc_risk3;
         v_expiries.car_company := dt.car_company;
         v_expiries.intm_no := dt.intm_no;
         v_expiries.remarks := dt.remarks;
         v_expiries.orig_tsi_amt := dt.orig_tsi_amt;
         v_expiries.sms_flag := dt.sms_flag;
         v_expiries.renewal_id := dt.renewal_id;
         v_expiries.reg_policy_sw := dt.reg_policy_sw;
         v_expiries.assd_sms := dt.assd_sms;
         v_expiries.intm_sms := dt.intm_sms;
         v_expiries.email_doc := dt.email_doc;
         v_expiries.email_sw := dt.email_sw;
         v_expiries.email_stat := dt.email_stat;
         v_expiries.assd_email := dt.assd_email;
         v_expiries.intm_email := dt.intm_email;
         v_expiries.non_ren_reason := dt.non_ren_reason;
         v_expiries.coc_serial_no := dt.coc_serial_no;
         v_expiries.non_ren_reason_cd := dt.non_ren_reason_cd;
         v_expiries.pack_policy_id := dt.pack_policy_id;
         v_expiries.is_package := dt.is_package;
         giex_expiries_v_pkg.get_dist_sw (dt.is_package,
                                          dt.policy_id,
                                          v_expiries.dist_sw);

         BEGIN
            DECLARE
               CURSOR C
               IS
                  SELECT    a.line_cd
                         || ' - '
                         || a.subline_cd
                         || ' - '
                         || a.iss_cd
                         || ' - '
                         || TO_CHAR (a.issue_yy, '09')
                         || ' - '
                         || TO_CHAR (a.pol_seq_no, '0999999')
                         || ' - '
                         || TO_CHAR (a.renew_no, '09')
                            policy_no
                    FROM GIPI_POLBASIC a
                   WHERE a.policy_id = dt.policy_id AND dt.is_package = 'N'
                  UNION ALL
                  SELECT    a.line_cd
                         || ' - '
                         || a.subline_cd
                         || ' - '
                         || a.iss_cd
                         || ' - '
                         || TO_CHAR (a.issue_yy, '09')
                         || ' - '
                         || TO_CHAR (a.pol_seq_no, '0999999')
                         || ' - '
                         || TO_CHAR (a.renew_no, '09')
                            policy_no
                    FROM GIPI_PACK_POLBASIC a
                   WHERE     a.pack_policy_id = dt.policy_id
                         AND dt.is_package = 'Y';
            BEGIN
               OPEN C;

               FETCH C INTO v_expiries.policy_no;

               IF C%NOTFOUND
               THEN
                  RAISE NO_DATA_FOUND;
               END IF;

               CLOSE C;
            END;
         END;

         /*Added by: Joanne
         **Date: 020714
         Description: For tsi_amt and prem_amt, should consider summary_sw*/
        BEGIN
            IF dt.is_package = 'Y' THEN
               IF NVL (dt.summary_sw, 'Y') = 'Y' THEN
                   FOR A IN (SELECT SUM(prem_amt) prem_amt,
                                    SUM(tsi_amt) tsi_amt
                                FROM gipi_pack_polbasic
                               WHERE line_cd = dt.line_cd
                                 AND subline_cd = dt.subline_cd
                                 AND iss_cd = dt.iss_cd
                                 AND issue_yy = dt.issue_yy
                                 AND pol_seq_no = dt.pol_seq_no
                                 AND renew_no = dt.renew_no
                              GROUP BY line_cd, subline_cd, iss_cd, issue_yy, pol_seq_no, renew_no)
                   LOOP
                        v_expiries.tsi_amt := a.tsi_amt;
                        v_expiries.prem_amt := a.prem_amt;
                   END LOOP;
                ELSE
                   FOR A IN (SELECT ann_prem_amt,
                                   ann_tsi_amt
                              FROM gipi_pack_polbasic
                             WHERE pack_policy_id = dt.policy_id)
                   LOOP
                        v_expiries.tsi_amt := a.ann_tsi_amt;
                        v_expiries.prem_amt := a.ann_prem_amt;
                   END LOOP;
               END IF;
            ELSE
               IF NVL (dt.summary_sw, 'Y') = 'Y' THEN
                   FOR A IN (SELECT SUM(prem_amt) prem_amt,
                                    SUM(tsi_amt) tsi_amt
                                FROM gipi_polbasic
                               WHERE line_cd = dt.line_cd
                                 AND subline_cd = dt.subline_cd
                                 AND iss_cd = dt.iss_cd
                                 AND issue_yy = dt.issue_yy
                                 AND pol_seq_no = dt.pol_seq_no
                                 AND renew_no = dt.renew_no
                              GROUP BY line_cd, subline_cd, iss_cd, issue_yy, pol_seq_no, renew_no)
                   LOOP
                        v_expiries.tsi_amt := a.tsi_amt;
                        v_expiries.prem_amt := a.prem_amt;
                   END LOOP;
                ELSE
                   FOR A IN (SELECT ann_prem_amt,
                                    ann_tsi_amt
                              FROM gipi_polbasic
                             WHERE policy_id = dt.policy_id)
                   LOOP
                        v_expiries.tsi_amt := a.ann_tsi_amt;
                        v_expiries.prem_amt := a.ann_prem_amt;
                   END LOOP;
               END IF;
            END IF;
        END; --end by joanne

         BEGIN
            DECLARE
               v_tsi_amt    gipi_itmperil.tsi_amt%TYPE := 0;
               v_prem_amt   gipi_itmperil.prem_amt%TYPE := 0;
               v_dep_pct    NUMBER (3, 2) := Giisp.n ('MC_DEP_PCT') / 100;
               v_exist      VARCHAR2(1);--joanne, 02.10.14
               v_currency   giex_itmperil.currency_rt%TYPE;
               --added by joanne, 053014
               v_ren_tsi_amt  giex_expiry.ren_tsi_amt%TYPE;
               v_ren_prem_amt giex_expiry.ren_prem_amt%TYPE;
               v_round_off    giis_parameters.param_value_n%TYPE;
               --end
            BEGIN
               -- get the round off parameter value
               BEGIN
                  SELECT DECODE (param_value_n,
                                 10, -1,
                                 100, -2,
                                 1000, -3,
                                 10000, -4,
                                 100000, -5,
                                 1000000, -6,
                                 9
                                )
                    INTO v_round_off
                    FROM giis_parameters
                   WHERE param_name = 'ROUND_OFF_PLACE';
               EXCEPTION
                  WHEN NO_DATA_FOUND
                  THEN
                     v_round_off := 9;
               END;

               IF dt.is_package = 'Y'
               THEN
                  FOR A IN (SELECT ann_prem_amt,
                                   ann_tsi_amt,
                                   prem_amt,
                                   tsi_amt
                              FROM gipi_pack_polbasic
                             WHERE pack_policy_id = dt.policy_id)
                  LOOP
                     IF NVL (dt.summary_sw, 'Y') = 'N'--'N') = 'N', default is 'Y'
                     THEN
                        v_expiries.dsp_prem := NVL (a.ann_prem_amt, 0);
                        v_expiries.dsp_tsi := a.ann_tsi_amt;
                        v_expiries.dsp_orig_prem := NVL (a.prem_amt, 0);
                        v_expiries.dsp_orig_tsi := a.tsi_amt;
                     ELSE
                        v_expiries.dsp_prem := dt.ren_prem_amt;
                        v_expiries.dsp_tsi := dt.ren_tsi_amt;
                        v_expiries.dsp_orig_prem := dt.prem_amt;
                        v_expiries.dsp_orig_tsi := dt.tsi_amt;
                     END IF;

                     EXIT;
                  END LOOP;
               ELSE
                  FOR A IN (SELECT line_cd,
                                   subline_cd,
                                   iss_cd,
                                   issue_yy,
                                   pol_seq_no,
                                   renew_no,
                                   par_id,
                                   ann_prem_amt,
                                   ann_tsi_amt,
                                   prem_amt,
                                   tsi_amt
                              FROM gipi_polbasic
                             WHERE policy_id = dt.policy_id)
                  LOOP
                     IF NVL (dt.summary_sw, 'Y') = 'N'--'N') = 'N', default is 'Y'
                     THEN
                        v_expiries.dsp_prem := NVL (a.ann_prem_amt, 0);
                        v_expiries.dsp_tsi := a.ann_tsi_amt;
                        v_expiries.dsp_orig_prem := NVL (a.prem_amt, 0);
                        v_expiries.dsp_orig_tsi := a.tsi_amt;
                     ELSE
                        v_expiries.dsp_prem := dt.ren_prem_amt;
                        v_expiries.dsp_tsi := dt.ren_tsi_amt;
                        v_expiries.dsp_orig_prem := dt.prem_amt;
                        v_expiries.dsp_orig_tsi := dt.tsi_amt;
                     END IF;

                     EXIT;
                  END LOOP;

                    --added by joanne 052914
                    FOR curr IN (SELECT DISTINCT NVL(currency_rt, 1) currency_rt
                                  FROM giex_old_group_itmperil
                                 WHERE policy_id = dt.policy_id)
                    LOOP
                        v_currency := curr.currency_rt;
                    END LOOP;

                  IF NVL (dt.summary_sw, 'Y') = 'N' THEN--'N') = 'N', default is 'Y'  -- added by joanne 02.07.14, consider summary_sw
                      FOR x IN (SELECT '1'
                                  FROM gipi_polbasic
                                 WHERE policy_id = dt.policy_id)
                      LOOP
                        --added by joanne, 06.26.14
                        FOR gi IN (SELECT '1'
                                  FROM giex_new_group_peril
                                 WHERE policy_id = dt.policy_id)
                        LOOP
                            v_exist := 'Y';
                            EXIT;
                        END LOOP;

                        IF  v_exist = 'Y' THEN   --for policy edited in GIEXS007
                             FOR a
                                IN (SELECT tsi_amt AS ren_tsi_amt,
                                           prem_amt AS ren_prem_amt,
                                           peril_type,
                                           gi.line_cd AS line_cd,
                                           gi.peril_cd AS peril_cd
                                      FROM giex_new_group_peril gi,
                                           giis_peril gp
                                     WHERE     gi.line_cd = gp.line_cd
                                           AND gi.peril_cd = gp.peril_cd
                                           AND gi.policy_id = dt.policy_id)
                             LOOP
                                IF a.peril_type = 'B'
                                THEN
                                   v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                                END IF;

                                v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                             END LOOP;
                        ELSE
                             FOR a
                                IN (SELECT tsi_amt,
                                           prem_amt,
                                           tsi_amt AS ren_tsi_amt,
                                           ann_prem_amt AS ren_prem_amt,
                                           peril_type,
                                           gi.line_cd AS line_cd,
                                           gi.peril_cd AS peril_cd,
                                           prem_rt,
                                           item_no --benjo 11.24.2016 SR-5278
                                      FROM gipi_itmperil gi, giis_peril gp
                                     WHERE     gi.line_cd = gp.line_cd
                                           AND gi.peril_cd = gp.peril_cd
                                           AND gi.policy_id = dt.policy_id)
                             LOOP
                                /*FOR b
                                   IN (SELECT NVL (rate, 0) rate --'1' , modify by joanne 02.07.14, dep should not be base on parameter
                                         FROM giex_dep_perl b
                                        WHERE     b.line_cd = a.line_cd
                                              AND b.peril_cd = a.peril_cd
                                              AND Giisp.v ('AUTO_COMPUTE_MC_DEP') =
                                                     'Y')
                                LOOP
                                   IF b.rate <> 0 THEN
                                       v_ren_tsi_amt:= --a.ren_tsi_amt :=
                                          --a.ren_tsi_amt - (a.ren_tsi_amt * v_dep_pct); joanne 02.07.14, dep should not be base on parameter
                                          ROUND((a.ren_tsi_amt - (a.ren_tsi_amt * (b.rate / 100))), v_round_off) * v_currency; -- joanne 053014 added currency_rt and round
                                       v_ren_prem_amt :=
                                          --a.ren_prem_amt - (a.ren_prem_amt * v_dep_pct); joanne 02.07.14, dep should not be base on parameter
                                          ((ROUND((a.ren_tsi_amt - (a.ren_tsi_amt * (b.rate / 100))), v_round_off)) * (a.prem_rt / 100) ) * v_currency;
                                   END IF;
                                END LOOP;*/ --benjo 11.24.2016 SR-5278 comment out
                                
                                /* benjo 11.24.2016 SR-5278 */
                                v_ren_tsi_amt:= a.ren_tsi_amt * v_currency;
                                compute_depreciation_amounts (dt.policy_id, a.item_no, a.line_cd, a.peril_cd, v_ren_tsi_amt);
                                v_ren_prem_amt := v_ren_tsi_amt * (a.prem_rt/100);
                                /* end SR-5278 */

                                IF a.peril_type = 'B'
                                THEN
                                   v_tsi_amt := v_tsi_amt + NVL(v_ren_tsi_amt, 0); --NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                                END IF;

                                v_prem_amt := v_prem_amt + NVL (v_ren_prem_amt, 0);--NVL (a.ren_prem_amt, 0) + v_prem_amt;
                             END LOOP;
                         END IF;

                        /*added by Joanne
                        **date: 02.10.14*/
                        /*move select above
                        SELECT DISTINCT NVL(currency_rt, 1)
                            INTO v_currency
                          FROM giex_old_group_itmperil
                         WHERE policy_id = dt.policy_id;  */
                        -- IF NVL (dt.summary_sw, 'N') = 'N'
                         --THEN
                            v_expiries.dsp_prem := v_prem_amt; --* v_currency; currency rt should be multiply per peril
                            v_expiries.dsp_tsi := v_tsi_amt; --* v_currency;  currency rt should be multiply per peril
                         --END IF;
                      END LOOP;
                  ELSE
                     FOR x IN (SELECT '1'
                                  FROM giex_expiry
                                 WHERE policy_id = dt.policy_id)
                     LOOP
                        FOR gi IN (SELECT '1'
                                  FROM giex_new_group_peril --giex_itmperil joanne 052914, replace table
                                 WHERE policy_id = dt.policy_id)
                        LOOP
                            v_exist := 'Y';
                            EXIT;
                        END LOOP;

                        IF  v_exist = 'Y' THEN   --for policy edited in GIEXS007
                             FOR a
                                IN (SELECT tsi_amt AS ren_tsi_amt,
                                           prem_amt AS ren_prem_amt,
                                          -- ann_tsi_amt AS ren_tsi_amt,
                                           --ann_prem_amt AS ren_prem_amt,
                                           peril_type,
                                           gi.line_cd AS line_cd,
                                           gi.peril_cd AS peril_cd --,
                                           --prem_rt prem_rt,
                                           --currency_rt
                                      FROM giex_new_group_peril gi, /*giex_itmperil replace table*/
                                           giis_peril gp
                                     WHERE     gi.line_cd = gp.line_cd
                                           AND gi.peril_cd = gp.peril_cd
                                           AND gi.policy_id = dt.policy_id)
                             LOOP
                                IF a.peril_type = 'B'
                                THEN
                                   v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                                END IF;

                                v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                                --v_currency := NVL(a.currency_rt,1);
                             END LOOP;
                        ELSE
                            FOR a
                                IN (SELECT gi.tsi_amt AS ren_tsi_amt,
                                           gi.prem_amt AS ren_prem_amt,
                                           --ren_tsi_amt AS ren_tsi_amt,
                                           --ren_prem_amt AS ren_prem_amt,
                                           gp.peril_type,
                                           gi.line_cd AS line_cd,
                                           gi.peril_cd AS peril_cd --,
                                           --prem_rt prem_rt,
                                           --currency_rt
                                      FROM /*giex_old_group_itmperil replace table*/ giex_old_group_peril gi,
                                            giis_peril gp
                                     WHERE     gi.line_cd = gp.line_cd
                                           AND gi.peril_cd = gp.peril_cd
                                           AND gi.policy_id = dt.policy_id)
                             LOOP
                                IF a.peril_type = 'B'
                                THEN
                                   v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                                END IF;

                                v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                                --v_currency := NVL(a.currency_rt,1);
                             END LOOP;
                        END IF;
                            v_expiries.dsp_prem := v_prem_amt; --* v_currency; joanne 053014
                            v_expiries.dsp_tsi := v_tsi_amt; --* v_currency;   joanne 053014
                     END LOOP;
                  END IF;
               END IF;
            END;
         END;

         PIPE ROW (v_expiries);
      END LOOP;
    END get_expired_policies;

    /*Joanne*/
    FUNCTION get_expired_policies2 (
        p_user_id       giex_expiries_v.extract_user%TYPE,
        p_all_user      giis_users.all_user_sw%TYPE,
        p_line_cd       giex_expiries_v.line_cd%TYPE,
        p_subline_cd    giex_expiries_v.subline_cd%TYPE,
        p_iss_cd        giex_expiries_v.iss_cd%TYPE,
        p_issue_yy      giex_expiries_v.issue_yy%TYPE,
        p_pol_seq_no    giex_expiries_v.pol_seq_no%TYPE,
        p_renew_no      giex_expiries_v.renew_no%TYPE,
        p_claim_sw      giex_expiries_v.claim_flag%TYPE,
        p_balance_sw    giex_expiries_v.balance_flag%TYPE,
        p_intm_name     giis_intermediary.intm_name%TYPE,
        p_intm_no       giex_expiries_v.intm_no%TYPE,
        p_range_type    VARCHAR2,
        p_range         VARCHAR2,
        p_fm_date       DATE,
        p_to_date       DATE,
        p_fm_mon        NUMBER, --marco - 08.29.2014 - changed types from DATE
        p_to_mon        NUMBER, --
        p_fm_year       NUMBER, --
        p_to_year       NUMBER )
      RETURN giex_expiries_v_tab
      PIPELINED
    IS
      v_expiries   giex_expiries_v_type;
    BEGIN
      FOR dt
         IN (  SELECT policy_id,
                      expiry_date,
                      renew_flag,
                      line_cd,
                      subline_cd,
                      same_polno_sw,
                      cpi_rec_no,
                      cpi_branch_cd,
                      iss_cd,
                      post_flag,
                      balance_flag,
                      claim_flag,
                      extract_user,
                      extract_date,
                      user_id,
                      last_update,
                      date_printed,
                      no_of_copies,
                      auto_renew_flag,
                      update_flag,
                      tsi_amt,
                      prem_amt,
                      ren_tsi_amt,
                      ren_prem_amt,
                      summary_sw,
                      incept_date,
                      assd_no,
                      auto_sw,
                      tax_amt,
                      policy_tax_amt,
                      issue_yy,
                      pol_seq_no,
                      renew_no,
                      color,
                      motor_no,
                      model_year,
                      make,
                      serialno,
                      plate_no,
                      ren_notice_cnt,
                      ren_notice_date,
                      item_title,
                      loc_risk1,
                      loc_risk2,
                      loc_risk3,
                      car_company,
                      intm_no,
                      remarks,
                      orig_tsi_amt,
                      sms_flag,
                      renewal_id,
                      reg_policy_sw,
                      assd_sms,
                      intm_sms,
                      email_doc,
                      email_sw,
                      email_stat,
                      assd_email,
                      intm_email,
                      non_ren_reason,
                      coc_serial_no,
                      non_ren_reason_cd,
                      pack_policy_id,
                      is_package,
                      processor
                 FROM giex_expiries_v
                WHERE NVL (post_flag, 'N') = 'N'
                     AND (line_cd, iss_cd) IN (
                                                SELECT line_cd, branch_cd 
                                                  FROM TABLE(security_access.get_branch_line('UW', 'GIEXS004', p_user_id))
                                                )                      
                      AND processor = p_user_id
                      --added by joanne, 110513, process only policies displayed on screen
                     AND line_cd = NVL (p_line_cd, line_cd)
                     AND subline_cd = NVL (p_subline_cd, subline_cd)
                     AND iss_cd = NVL (p_iss_cd, iss_cd)
                     AND issue_yy = NVL (p_issue_yy, issue_yy)
                     AND pol_seq_no = NVL (p_pol_seq_no, pol_seq_no)
                     AND renew_no = NVL (p_renew_no, renew_no)
                     AND NVL (claim_flag, 'N') = DECODE (NVL (p_claim_sw, 'N'), 'Y', 'Y', NVL (claim_flag, 'N'))
                     AND NVL (balance_flag, 'N') = DECODE (NVL (p_balance_sw, 'N'), 'Y', 'Y', NVL (balance_flag, 'N'))
                     AND (   (p_intm_name IS NULL AND p_intm_no IS NULL)
                          OR (p_intm_no IS NOT NULL AND intm_no = p_intm_no)
                          OR (p_intm_name IS NOT NULL
                              AND intm_no IN (
                                       SELECT intm_no
                                         FROM giis_intermediary
                                        WHERE intm_name LIKE '%' || p_intm_name || '%')
                             )
                         )
                     AND (   (    --p_range_type = 'EXACT' --marco - 08.29.2014 - replaced
                              --AND p_range = 'BYDATE'
                              p_range_type = '2'
                              AND p_range = '2'
                              AND p_fm_date IS NOT NULL
                              AND p_to_date IS NOT NULL
                              AND TRUNC (expiry_date) >= TRUNC (p_fm_date)
                              AND TRUNC (expiry_date) <= TRUNC (p_to_date)
                             )
                          OR (    --p_range_type = 'EXACT' --marco - 08.29.2014 - replaced
                              --AND p_range = 'BYMONTH'
                              p_range_type = '2'
                              AND p_range = '1'
                              AND p_fm_mon IS NOT NULL
                              AND p_to_mon IS NOT NULL
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'), 'MM-YYYY') >=
                                     TO_DATE (   LTRIM (LPAD (p_fm_mon, 2, '0')) || '-'
                                              || LTRIM (TO_CHAR (p_fm_year, '0999')), 'MM-YYYY'
                                             )
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'), 'MM-YYYY') <=
                                     TO_DATE (   LTRIM (LPAD (p_to_mon, 2, '0')) || '-'
                                              || LTRIM (TO_CHAR (p_to_year, '0999')), 'MM-YYYY'
                                             )
                             )
                          OR (    --p_range_type <> 'EXACT' --marco - 08.29.2014 - replaced
                              --AND p_range = 'BYDATE'
                              p_range_type <> '2'
                              AND p_range = '2'
                              AND p_fm_date IS NOT NULL
                              AND TRUNC (expiry_date) <= TRUNC (p_fm_date)
                             )
                          OR (    --p_range_type <> 'EXACT' --marco - 08.29.2014 - replaced
                              --AND p_range = 'BYMONTH'
                              p_range_type <> '2'
                              AND p_range = '1'
                              AND p_fm_mon IS NOT NULL
                              AND p_fm_year IS NOT NULL
                              AND TO_CHAR (expiry_date, 'MM-YYYY') <=
                                        LTRIM (LPAD (p_fm_mon, 2, '0')) || '-'
                                     || LTRIM (TO_CHAR (p_fm_year, '0999'))
                             )
                          OR (    p_fm_date IS NULL
                              AND p_to_date IS NULL
                              AND p_fm_mon IS NULL
                              AND p_to_mon IS NULL
                              AND p_fm_year IS NULL
                              AND p_to_year IS NULL
                             )
                         )  --joanne end
                ORDER BY line_cd,
                      subline_cd,
                      iss_cd,
                      expiry_date)
      LOOP
         v_expiries.policy_id := dt.policy_id;
         v_expiries.expiry_date := dt.expiry_date;
         v_expiries.renew_flag := dt.renew_flag;
         v_expiries.line_cd := dt.line_cd;
         v_expiries.subline_cd := dt.subline_cd;
         v_expiries.same_polno_sw := dt.same_polno_sw;
         v_expiries.cpi_rec_no := dt.cpi_rec_no;
         v_expiries.cpi_branch_cd := dt.cpi_branch_cd;
         v_expiries.iss_cd := dt.iss_cd;
         v_expiries.post_flag := dt.post_flag;
         v_expiries.balance_flag := dt.balance_flag;
         v_expiries.claim_flag := dt.claim_flag;
         v_expiries.extract_user := dt.extract_user;
         v_expiries.processor := dt.processor;
         v_expiries.extract_date := dt.extract_date;
         v_expiries.user_id := dt.user_id;
         v_expiries.last_update := dt.last_update;
         v_expiries.date_printed := dt.date_printed;
         v_expiries.no_of_copies := dt.no_of_copies;
         v_expiries.auto_renew_flag := dt.auto_renew_flag;
         v_expiries.update_flag := dt.update_flag;
         v_expiries.tsi_amt := dt.tsi_amt;
         v_expiries.prem_amt := dt.prem_amt;
         v_expiries.ren_tsi_amt := dt.ren_tsi_amt;
         v_expiries.ren_prem_amt := dt.ren_prem_amt;
         v_expiries.summary_sw := dt.summary_sw;
         v_expiries.incept_date := dt.incept_date;
         v_expiries.assd_no := dt.assd_no;
         v_expiries.auto_sw := dt.auto_sw;
         v_expiries.tax_amt := dt.tax_amt;
         v_expiries.policy_tax_amt := dt.policy_tax_amt;
         v_expiries.issue_yy := dt.issue_yy;
         v_expiries.pol_seq_no := dt.pol_seq_no;
         v_expiries.renew_no := dt.renew_no;
         v_expiries.color := dt.color;
         v_expiries.motor_no := dt.motor_no;
         v_expiries.model_year := dt.model_year;
         v_expiries.make := dt.make;
         v_expiries.serialno := dt.serialno;
         v_expiries.plate_no := dt.plate_no;
         v_expiries.ren_notice_cnt := dt.ren_notice_cnt;
         v_expiries.ren_notice_date := dt.ren_notice_date;
         v_expiries.item_title := dt.item_title;
         v_expiries.loc_risk1 := dt.loc_risk1;
         v_expiries.loc_risk2 := dt.loc_risk2;
         v_expiries.loc_risk3 := dt.loc_risk3;
         v_expiries.car_company := dt.car_company;
         v_expiries.intm_no := dt.intm_no;
         v_expiries.remarks := dt.remarks;
         v_expiries.orig_tsi_amt := dt.orig_tsi_amt;
         v_expiries.sms_flag := dt.sms_flag;
         v_expiries.renewal_id := dt.renewal_id;
         v_expiries.reg_policy_sw := dt.reg_policy_sw;
         v_expiries.assd_sms := dt.assd_sms;
         v_expiries.intm_sms := dt.intm_sms;
         v_expiries.email_doc := dt.email_doc;
         v_expiries.email_sw := dt.email_sw;
         v_expiries.email_stat := dt.email_stat;
         v_expiries.assd_email := dt.assd_email;
         v_expiries.intm_email := dt.intm_email;
         v_expiries.non_ren_reason := dt.non_ren_reason;
         v_expiries.coc_serial_no := dt.coc_serial_no;
         v_expiries.non_ren_reason_cd := dt.non_ren_reason_cd;
         v_expiries.pack_policy_id := dt.pack_policy_id;
         v_expiries.is_package := dt.is_package;
         giex_expiries_v_pkg.get_dist_sw (dt.is_package,
                                          dt.policy_id,
                                          v_expiries.dist_sw);

         BEGIN
            DECLARE
               CURSOR C
               IS
                  SELECT    a.line_cd
                         || ' - '
                         || a.subline_cd
                         || ' - '
                         || a.iss_cd
                         || ' - '
                         || TO_CHAR (a.issue_yy, '09')
                         || ' - '
                         || TO_CHAR (a.pol_seq_no, '0999999')
                         || ' - '
                         || TO_CHAR (a.renew_no, '09')
                            policy_no
                    FROM GIPI_POLBASIC a
                   WHERE a.policy_id = dt.policy_id AND dt.is_package = 'N'
                  UNION ALL
                  SELECT    a.line_cd
                         || ' - '
                         || a.subline_cd
                         || ' - '
                         || a.iss_cd
                         || ' - '
                         || TO_CHAR (a.issue_yy, '09')
                         || ' - '
                         || TO_CHAR (a.pol_seq_no, '0999999')
                         || ' - '
                         || TO_CHAR (a.renew_no, '09')
                            policy_no
                    FROM GIPI_PACK_POLBASIC a
                   WHERE     a.pack_policy_id = dt.policy_id
                         AND dt.is_package = 'Y';
            BEGIN
               OPEN C;

               FETCH C INTO v_expiries.policy_no;

               IF C%NOTFOUND
               THEN
                  RAISE NO_DATA_FOUND;
               END IF;

               CLOSE C;
            END;
         END;

         BEGIN
            DECLARE
               v_tsi_amt    gipi_itmperil.tsi_amt%TYPE := 0;
               v_prem_amt   gipi_itmperil.prem_amt%TYPE := 0;
               v_dep_pct    NUMBER (3, 2) := Giisp.n ('MC_DEP_PCT') / 100;
               v_ren_tsi_amt  giex_expiry.ren_tsi_amt%TYPE;  --benjo 11.24.2016 SR-5278
               v_ren_prem_amt giex_expiry.ren_prem_amt%TYPE; --benjo 11.24.2016 SR-5278
            BEGIN
               IF dt.is_package = 'Y'
               THEN
                  FOR A IN (SELECT ann_prem_amt,
                                   ann_tsi_amt,
                                   prem_amt,
                                   tsi_amt
                              FROM gipi_pack_polbasic
                             WHERE pack_policy_id = dt.policy_id)
                  LOOP
                     IF NVL (dt.summary_sw, 'N') = 'N'
                     THEN
                        v_expiries.dsp_prem := NVL (a.ann_prem_amt, 0);
                        v_expiries.dsp_tsi := a.ann_tsi_amt;
                        v_expiries.dsp_orig_prem := NVL (a.prem_amt, 0);
                        v_expiries.dsp_orig_tsi := a.tsi_amt;
                     ELSE
                        v_expiries.dsp_prem := dt.ren_prem_amt;
                        v_expiries.dsp_tsi := dt.ren_tsi_amt;
                        v_expiries.dsp_orig_prem := dt.prem_amt;
                        v_expiries.dsp_orig_tsi := dt.tsi_amt;
                     END IF;

                     EXIT;
                  END LOOP;
               ELSE
                  FOR A IN (SELECT line_cd,
                                   subline_cd,
                                   iss_cd,
                                   issue_yy,
                                   pol_seq_no,
                                   renew_no,
                                   par_id,
                                   ann_prem_amt,
                                   ann_tsi_amt,
                                   prem_amt,
                                   tsi_amt
                              FROM gipi_polbasic
                             WHERE policy_id = dt.policy_id)
                  LOOP
                     IF NVL (dt.summary_sw, 'N') = 'N'
                     THEN
                        v_expiries.dsp_prem := NVL (a.ann_prem_amt, 0);
                        v_expiries.dsp_tsi := a.ann_tsi_amt;
                        v_expiries.dsp_orig_prem := NVL (a.prem_amt, 0);
                        v_expiries.dsp_orig_tsi := a.tsi_amt;
                     ELSE
                        v_expiries.dsp_prem := dt.ren_prem_amt;
                        v_expiries.dsp_tsi := dt.ren_tsi_amt;
                        v_expiries.dsp_orig_prem := dt.prem_amt;
                        v_expiries.dsp_orig_tsi := dt.tsi_amt;
                     END IF;

                     EXIT;
                  END LOOP;

                  FOR a IN (SELECT '1'
                              FROM gipi_polbasic
                             WHERE policy_id = dt.policy_id)
                  LOOP
                     FOR a
                        IN (SELECT tsi_amt,
                                   prem_amt,
                                   tsi_amt AS ren_tsi_amt,
                                   ann_prem_amt AS ren_prem_amt,
                                   peril_type,
                                   gi.line_cd AS line_cd,
                                   gi.peril_cd AS peril_cd,
                                   prem_rt,
                                   item_no --benjo 11.24.2016 SR-5278
                              FROM gipi_itmperil gi, giis_peril gp
                             WHERE     gi.line_cd = gp.line_cd
                                   AND gi.peril_cd = gp.peril_cd
                                   AND gi.policy_id = dt.policy_id)
                     LOOP
                        /*FOR b
                           IN (SELECT '1'
                                 FROM giex_dep_perl b
                                WHERE     b.line_cd = a.line_cd
                                      AND b.peril_cd = a.peril_cd
                                      AND Giisp.v ('AUTO_COMPUTE_MC_DEP') =
                                             'Y')
                        LOOP
                           a.ren_tsi_amt :=
                              a.ren_tsi_amt - (a.ren_tsi_amt * v_dep_pct);
                           a.ren_prem_amt :=
                              a.ren_prem_amt - (a.ren_prem_amt * v_dep_pct);
                        END LOOP;*/
                        
                        /* benjo 11.24.2016 SR-5278 */
                        v_ren_tsi_amt:= a.ren_tsi_amt;
                        compute_depreciation_amounts (dt.policy_id, a.item_no, a.line_cd, a.peril_cd, v_ren_tsi_amt);
                        v_ren_prem_amt := v_ren_tsi_amt * (a.prem_rt/100);
                        /* end SR-5278 */

                        IF a.peril_type = 'B'
                        THEN
                           v_tsi_amt := NVL (v_ren_tsi_amt, 0) + v_tsi_amt;/*NVL (a.ren_tsi_amt, 0) + v_tsi_amt;*/ --benjo 11.24.2016 SR-5278
                        END IF;

                        v_prem_amt := NVL (v_ren_prem_amt, 0) + v_prem_amt;/*NVL (a.ren_prem_amt, 0) + v_prem_amt;*/ --benjo 11.24.2016 SR-5278
                     END LOOP;

                     IF NVL (dt.summary_sw, 'N') = 'N'
                     THEN
                        v_expiries.dsp_prem := v_prem_amt;
                        v_expiries.dsp_tsi := v_tsi_amt;
                     END IF;
                  END LOOP;
               END IF;
            END;
         END;

         PIPE ROW (v_expiries);
      END LOOP;
    END get_expired_policies2;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 09.21.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   */
   PROCEDURE giexs004_post_query (
      p_count                  OUT NUMBER,
      p_pack_policy_id      IN     giex_expiries_v.pack_policy_id%TYPE,
      p_policy_id           IN     giex_expiries_v.policy_id%TYPE,
      p_from_post_query        OUT VARCHAR2,
      p_balance_flag           OUT giex_expiries_v.balance_flag%TYPE,
      p_non_ren_reason         OUT giex_expiries_v.non_ren_reason%TYPE,
      p_non_ren_reason_cd      OUT giex_expiries_v.non_ren_reason_cd%TYPE,
      p_remarks                OUT giex_expiries_v.remarks%TYPE,
      p_is_package          IN     giex_expiries_v.is_package%TYPE,
      p_nbt_line_cd            OUT gipi_pack_polbasic.line_cd%TYPE,
      p_nbt_subline_cd         OUT gipi_pack_polbasic.subline_cd%TYPE,
      p_nbt_iss_cd             OUT gipi_pack_polbasic.iss_cd%TYPE,
      p_nbt_issue_yy           OUT gipi_pack_polbasic.issue_yy%TYPE,
      p_nbt_pol_seq_no         OUT gipi_pack_polbasic.pol_seq_no%TYPE,
      p_nbt_renew_no           OUT gipi_pack_polbasic.renew_no%TYPE,
      p_pol_prem               OUT gipi_pack_polbasic.ann_prem_amt%TYPE,
      p_orig_pol_prem          OUT gipi_pack_polbasic.prem_amt%TYPE,
      p_par_id                 OUT gipi_pack_parlist.pack_par_id%TYPE,
      p_line_cd                OUT gipi_pack_parlist.line_cd%TYPE,
      p_iss_cd                 OUT gipi_pack_parlist.iss_cd%TYPE,
      p_par_yy                 OUT gipi_pack_parlist.par_yy%TYPE,
      p_par_seq_no             OUT gipi_pack_parlist.par_seq_no%TYPE,
      p_quote_seq_no           OUT gipi_pack_parlist.quote_seq_no%TYPE,
      p_par_type               OUT gipi_pack_parlist.par_type%TYPE,
      p_assd_no                OUT gipi_pack_parlist.assd_no%TYPE,
      p_dist_sw                OUT VARCHAR2,
      p_dsp_renew_flag         OUT VARCHAR2,
      p_pol_tsi                OUT gipi_itmperil.tsi_amt%TYPE,
      p_orig_pol_tsi           OUT gipi_itmperil.tsi_amt%TYPE,
      p_user_id                OUT giex_pack_expiry.user_id%TYPE,
      p_processor              OUT giex_expiry.processor%TYPE,
      p_last_update            OUT giex_pack_expiry.last_update%TYPE,
      p_nbt_email_status       OUT VARCHAR2,
      p_nbt_sms_status         OUT VARCHAR2,
      p_itmperil_exist         OUT VARCHAR2)
   IS
      x_count           NUMBER;
      v_dep_pct         NUMBER (3, 2) := Giisp.n ('MC_DEP_PCT') / 100;
      v_tsi_amt         gipi_itmperil.tsi_amt%TYPE := 0;
      v_prem_amt        gipi_itmperil.prem_amt%TYPE := 0;
      v_orig_tsi_amt    gipi_itmperil.tsi_amt%TYPE := 0;
      v_orig_prem_amt   gipi_itmperil.prem_amt%TYPE := 0;
      v_email_stat      VARCHAR2 (1);
      v_email_doc       VARCHAR2 (50);
      v_exist           VARCHAR2 (1) := 'N';
      v_received        DATE;
      v_sent            DATE;
      v_renew_flag      giex_expiries_v.renew_flag%TYPE;
      v_ren_tsi_amt     giex_expiry.ren_tsi_amt%TYPE;  --benjo 11.24.2016 SR-5278
      v_ren_prem_amt    giex_expiry.ren_prem_amt%TYPE; --benjo 11.24.2016 SR-5278
   BEGIN
      SELECT COUNT (old_policy_id) INTO x_count FROM GIIS_RENEWAL;

      p_count := x_count;

      FOR pack_j
         IN (SELECT balance_flag,
                    claim_flag,
                    non_ren_reason,
                    non_ren_reason_cd,
                    reg_policy_sw,
                    remarks,
                    renew_flag,
                    same_polno_sw,
                    summary_sw,
                    update_flag,
                    prem_amt,
                    tsi_amt,
                    processor
               FROM giex_expiries_v
              WHERE     policy_id = p_policy_id
                    AND pack_policy_id = p_pack_policy_id)
      LOOP
         p_from_post_query := 'Y';
         p_balance_flag := pack_j.balance_flag;
         p_non_ren_reason := pack_j.non_ren_reason;
         p_non_ren_reason_cd := pack_j.non_ren_reason_cd;
         p_remarks := pack_j.remarks;
         v_renew_flag := pack_j.renew_flag;
         p_processor := pack_j.processor;
      END LOOP;

      IF p_is_package = 'Y'
      THEN
         FOR A IN (SELECT line_cd,
                          subline_cd,
                          iss_cd,
                          issue_yy,
                          pol_seq_no,
                          renew_no,
                          pack_par_id,
                          ann_prem_amt,
                          ann_tsi_amt,
                          prem_amt,
                          tsi_amt
                     FROM gipi_pack_polbasic
                    WHERE pack_policy_id = p_policy_id)
         LOOP
            p_nbt_line_cd := a.line_cd;
            p_nbt_subline_cd := a.subline_cd;
            p_nbt_iss_cd := a.iss_cd;
            p_nbt_issue_yy := a.issue_yy;
            p_nbt_pol_seq_no := a.pol_seq_no;
            p_nbt_renew_no := a.renew_no;
            p_pol_prem := a.ann_prem_amt;
            p_orig_pol_prem := a.prem_amt;
            p_par_id := a.pack_par_id;
            EXIT;
         END LOOP;

         FOR B IN (SELECT pack_par_id,
                          line_cd,
                          iss_cd,
                          par_yy,
                          par_seq_no,
                          quote_seq_no,
                          par_type,
                          assd_no
                     FROM gipi_pack_parlist
                    WHERE pack_par_id = p_par_id)
         LOOP
            p_par_id := b.pack_par_id;
            p_line_cd := b.line_cd;
            p_iss_cd := b.iss_cd;
            p_par_yy := b.par_yy;
            p_par_seq_no := b.par_seq_no;
            p_quote_seq_no := b.quote_seq_no;
            p_par_type := b.par_type;
            p_assd_no := b.assd_no;
            EXIT;
         END LOOP;

         p_dist_sw := 'Y';

         FOR A
            IN (SELECT '1'
                  FROM gipi_polbasic a, gipi_pack_polbasic b
                 WHERE     a.pack_policy_id = b.pack_policy_id
                       AND a.pol_flag IN ('1', '2', '3')
                       AND NVL (a.endt_type, 'A') <> 'N'
                       AND a.dist_flag <> '3'
                       AND b.line_cd = p_nbt_line_cd
                       AND b.subline_cd = p_nbt_subline_cd
                       AND b.iss_cd = p_nbt_iss_cd
                       AND b.issue_yy = p_nbt_issue_yy
                       AND b.pol_seq_no = p_nbt_pol_seq_no
                       AND b.renew_no = p_nbt_renew_no)
         LOOP
            p_dist_sw := 'N';
            EXIT;
         END LOOP;

         p_dsp_renew_flag := v_renew_flag;

         FOR a1 IN (SELECT policy_id
                      FROM gipi_polbasic
                     WHERE pack_policy_id = p_policy_id)
         LOOP
            FOR a2
               IN (SELECT tsi_amt,
                          prem_amt,
                          tsi_amt AS ren_tsi_amt,
                          ann_prem_amt AS ren_prem_amt,
                          peril_type,
                          gi.line_cd AS line_cd,
                          gi.peril_cd AS peril_cd,
                          prem_rt,
                          item_no --benjo 11.24.2016 SR-5278
                     FROM gipi_itmperil gi, giis_peril gp
                    WHERE     gi.line_cd = gp.line_cd
                          AND gi.peril_cd = gp.peril_cd
                          AND gi.policy_id = a1.policy_id)
            LOOP
               /*FOR b
                  IN (SELECT '1'
                        FROM giex_dep_perl b
                       WHERE     b.line_cd = a2.line_cd
                             AND b.peril_cd = a2.peril_cd
                             AND Giisp.v ('AUTO_COMPUTE_MC_DEP') = 'Y')
               LOOP
                  a2.ren_tsi_amt :=
                     a2.ren_tsi_amt - (a2.ren_tsi_amt * v_dep_pct);
                  a2.ren_prem_amt :=
                     a2.ren_prem_amt - (a2.ren_prem_amt * v_dep_pct);
               END LOOP;*/ --benjo 11.24.2016 SR-5278 comment out
               
               /* benjo 11.24.2016 SR-5278 */
               v_ren_tsi_amt:= a2.ren_tsi_amt;
               compute_depreciation_amounts (a1.policy_id, a2.item_no, a2.line_cd, a2.peril_cd, v_ren_tsi_amt);
               v_ren_prem_amt := v_ren_tsi_amt * (a2.prem_rt/100);
               /* end SR-5278 */

               IF a2.peril_type = 'B'
               THEN
                  v_tsi_amt := NVL (v_ren_tsi_amt, 0) + v_tsi_amt;/*NVL (a2.ren_tsi_amt, 0) + v_tsi_amt;*/ --benjo 11.24.2016 SR-5278
                  v_orig_tsi_amt := NVL (a2.tsi_amt, 0) + v_orig_tsi_amt;
               END IF;

               v_prem_amt := NVL (v_ren_prem_amt, 0) + v_prem_amt;/*NVL (a2.ren_prem_amt, 0) + v_prem_amt;*/ --benjo 11.24.2016 SR-5278
               v_orig_prem_amt := NVL (a2.prem_amt, 0) + v_orig_prem_amt;
            END LOOP;

            p_pol_prem := v_prem_amt;
            p_pol_tsi := v_tsi_amt;
            p_orig_pol_prem := v_orig_prem_amt;
            p_orig_pol_tsi := v_orig_tsi_amt;
         END LOOP;

         v_tsi_amt := 0;
         v_prem_amt := 0;
         v_orig_tsi_amt := 0;
         v_orig_prem_amt := 0;
         v_ren_tsi_amt := 0;  --benjo 11.24.2016 SR-5278
         v_ren_prem_amt := 0; --benjo 11.24.2016 SR-5278

         FOR j IN (SELECT email_stat,
                          email_doc,
                          user_id,
                          last_update
                     FROM giex_pack_expiry
                    WHERE pack_policy_id = p_policy_id)
         LOOP
            v_email_stat := j.email_stat;
            v_email_doc := j.email_doc;
            p_user_id := j.user_id;
            p_last_update := j.last_update;
            EXIT;
         END LOOP;

         IF v_email_stat = 'S'
         THEN
            p_nbt_email_status := 'Email Notice Successfully Sent';
         ELSIF v_email_stat = 'E'
         THEN
            p_nbt_email_status := 'Error in Sending';
         ELSIF v_email_stat = 'C'
         THEN
            p_nbt_email_status := 'Cancelled';
         ELSIF v_email_stat IS NULL AND v_email_doc IS NOT NULL
         THEN
            p_nbt_email_status := 'Notice Generated';
         ELSIF v_email_stat IS NULL AND v_email_doc IS NULL
         THEN
            p_nbt_email_status := 'Not Yet Processed';
         END IF;

         FOR j IN (SELECT date_received, date_sent
                     FROM giex_sms_dtl
                    WHERE policy_id = p_policy_id)
         LOOP
            v_exist := 'Y';
            v_received := j.date_received;
            v_sent := j.date_sent;
            EXIT;
         END LOOP;

         IF v_exist = 'Y' AND v_received IS NOT NULL
         THEN
            p_nbt_sms_status := 'SMS Received';
         ELSIF v_exist = 'Y' AND v_sent IS NOT NULL
         THEN
            p_nbt_sms_status := 'SMS Sent';
         ELSIF     v_exist = 'Y'
               AND v_received IS NOT NULL
               AND v_sent IS NOT NULL
         THEN
            p_nbt_sms_status := 'SMS Sent and Received';
         ELSE
            p_nbt_sms_status := 'SMS Not Yet Processed';
         END IF;
      ELSE                                                       --non package
         FOR A IN (SELECT line_cd,
                          subline_cd,
                          iss_cd,
                          issue_yy,
                          pol_seq_no,
                          renew_no,
                          par_id,
                          ann_prem_amt,
                          ann_tsi_amt,
                          prem_amt,
                          tsi_amt
                     FROM gipi_polbasic
                    WHERE policy_id = p_policy_id)
         LOOP
            p_nbt_line_cd := a.line_cd;
            p_nbt_subline_cd := a.subline_cd;
            p_nbt_iss_cd := a.iss_cd;
            p_nbt_issue_yy := a.issue_yy;
            p_nbt_pol_seq_no := a.pol_seq_no;
            p_nbt_renew_no := a.renew_no;
            p_pol_prem := a.ann_prem_amt;
            p_orig_pol_prem := a.prem_amt;
            p_par_id := a.par_id;
            EXIT;
         END LOOP;

         FOR B IN (SELECT par_id,
                          line_cd,
                          iss_cd,
                          par_yy,
                          par_seq_no,
                          quote_seq_no,
                          par_type,
                          assd_no
                     FROM gipi_parlist
                    WHERE par_id = p_par_id)
         LOOP
            p_par_id := b.par_id;
            p_line_cd := b.line_cd;
            p_iss_cd := b.iss_cd;
            p_par_yy := b.par_yy;
            p_par_seq_no := b.par_seq_no;
            p_quote_seq_no := b.quote_seq_no;
            p_par_type := b.par_type;
            p_assd_no := b.assd_no;
            EXIT;
         END LOOP;

         p_dist_sw := 'Y';

         FOR A
            IN (SELECT '1'
                  FROM gipi_polbasic
                 WHERE     line_cd = p_nbt_line_cd
                       AND subline_cd = p_nbt_subline_cd
                       AND iss_cd = p_nbt_iss_cd
                       AND issue_yy = p_nbt_issue_yy
                       AND pol_seq_no = p_nbt_pol_seq_no
                       AND renew_no = p_nbt_renew_no
                       AND pol_flag IN ('1', '2', '3')
                       AND NVL (endt_type, 'A') <> 'N'
                       AND dist_flag <> '3')
         LOOP
            p_dist_sw := 'N';
            EXIT;
         END LOOP;

         p_dsp_renew_flag := v_renew_flag;

         FOR a IN (SELECT '1'
                     FROM gipi_polbasic
                    WHERE policy_id = p_policy_id)
         LOOP
            FOR a
               IN (SELECT tsi_amt,
                          prem_amt,
                          tsi_amt AS ren_tsi_amt,
                          ann_prem_amt AS ren_prem_amt,
                          peril_type,
                          gi.line_cd AS line_cd,
                          gi.peril_cd AS peril_cd,
                          prem_rt,
                          item_no --benjo 11.24.2016 SR-5278
                     FROM gipi_itmperil gi, giis_peril gp
                    WHERE     gi.line_cd = gp.line_cd
                          AND gi.peril_cd = gp.peril_cd
                          AND gi.policy_id = p_policy_id)
            LOOP
               /*FOR b
                  IN (SELECT '1'
                        FROM giex_dep_perl b
                       WHERE     b.line_cd = a.line_cd
                             AND b.peril_cd = a.peril_cd
                             AND Giisp.v ('AUTO_COMPUTE_MC_DEP') = 'Y')
               LOOP
                  a.ren_tsi_amt := a.ren_tsi_amt - (a.ren_tsi_amt * v_dep_pct);
                  a.ren_prem_amt :=
                     a.ren_prem_amt - (a.ren_prem_amt * v_dep_pct);
               END LOOP;*/ --benjo 11.24.2016 SR-5278 comment out
               
               /* benjo 11.24.2016 SR-5278 */
               v_ren_tsi_amt:= a.ren_tsi_amt;
               compute_depreciation_amounts (p_policy_id, a.item_no, a.line_cd, a.peril_cd, v_ren_tsi_amt);
               v_ren_prem_amt := v_ren_tsi_amt * (a.prem_rt/100);
               /* end SR-5278 */

               IF a.peril_type = 'B'
               THEN
                  v_tsi_amt := NVL (v_ren_tsi_amt, 0) + v_tsi_amt;/*NVL (a.ren_tsi_amt, 0) + v_tsi_amt;*/ --benjo 11.24.2016 SR-5278
                  v_orig_tsi_amt := NVL (a.tsi_amt, 0) + v_orig_tsi_amt;
               END IF;

               v_prem_amt := NVL (v_ren_prem_amt, 0) + v_prem_amt;/*NVL (a.ren_prem_amt, 0) + v_prem_amt;*/ --benjo 11.24.2016 SR-5278
               v_orig_prem_amt := NVL (a.prem_amt, 0) + v_orig_prem_amt;
            END LOOP;

            p_pol_prem := v_prem_amt;
            p_pol_tsi := v_tsi_amt;
            p_orig_pol_prem := v_orig_prem_amt;
            p_orig_pol_tsi := v_orig_tsi_amt;

            v_tsi_amt := 0;
            v_prem_amt := 0;
            v_orig_tsi_amt := 0;
            v_orig_prem_amt := 0;
            v_ren_tsi_amt := 0;  --benjo 11.24.2016 SR-5278
            v_ren_prem_amt := 0; --benjo 11.24.2016 SR-5278
         END LOOP;

         FOR j IN (SELECT email_stat,
                          email_doc,
                          user_id,
                          processor,
                          last_update
                     FROM giex_expiry
                    WHERE policy_id = p_policy_id)
         LOOP
            v_email_stat := j.email_stat;
            v_email_doc := j.email_doc;
            p_user_id := j.user_id;
            p_processor := j.processor;
            p_last_update := j.last_update;
            EXIT;
         END LOOP;

         IF v_email_stat = 'S'
         THEN
            p_nbt_email_status := 'Email Notice Successfully Sent';
         ELSIF v_email_stat = 'E'
         THEN
            p_nbt_email_status := 'Error in Sending';
         ELSIF v_email_stat = 'C'
         THEN
            p_nbt_email_status := 'Cancelled';
         ELSIF v_email_stat IS NULL AND v_email_doc IS NOT NULL
         THEN
            p_nbt_email_status := 'Notice Generated';
         ELSIF v_email_stat IS NULL AND v_email_doc IS NULL
         THEN
            p_nbt_email_status := 'Not Yet Processed';
         END IF;

         FOR j IN (SELECT date_received, date_sent
                     FROM giex_sms_dtl
                    WHERE policy_id = p_policy_id)
         LOOP
            v_exist := 'Y';
            v_received := j.date_received;
            v_sent := j.date_sent;
            EXIT;
         END LOOP;

         IF v_exist = 'Y' AND v_received IS NOT NULL
         THEN
            p_nbt_sms_status := 'SMS Received';
         ELSIF v_exist = 'Y' AND v_sent IS NOT NULL
         THEN
            p_nbt_sms_status := 'SMS Sent';
         ELSIF     v_exist = 'Y'
               AND v_received IS NOT NULL
               AND v_sent IS NOT NULL
         THEN
            p_nbt_sms_status := 'SMS Sent and Received';
         ELSE
            p_nbt_sms_status := 'SMS Not Yet Processed';
         END IF;
      END IF;

      /*added by: joanne
      **date: 02.10.14
      **description: to check for package*/
      IF p_is_package = 'Y' THEN
        FOR l IN (SELECT policy_id
                    FROM giex_expiry
                   WHERE pack_policy_id = p_policy_id)
        LOOP
           FOR k IN (SELECT '1' exist
                      FROM giex_itmperil
                     WHERE policy_id = l.policy_id)
          LOOP
             p_itmperil_exist := k.exist;
             EXIT;
          END LOOP;
        END LOOP;
      ELSE
          FOR k IN (SELECT '1' exist
                      FROM giex_itmperil
                     WHERE policy_id = p_policy_id)
          LOOP
             p_itmperil_exist := k.exist;
             EXIT;
          END LOOP;
      END IF;
   END giexs004_post_query;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 10.05.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   **  Description      : when renew flag checkbox change
   */
   PROCEDURE check_renew_flag (
      p_renew_flag    IN     giex_expiries_v.renew_flag%TYPE,
      p_policy_id     IN     giex_expiries_v.policy_id%TYPE,
      p_module        IN     giac_modules.module_name%TYPE,
      p_user          IN     giis_posting_limit.posting_user%TYPE,
      p_dsp_line_cd   IN     giis_posting_limit.line_cd%TYPE,
      p_dsp_iss_cd    IN     giis_posting_limit.iss_cd%TYPE,
      p_proceed          OUT VARCHAR2,
      p_msg              OUT VARCHAR2)
   IS
      --alert_id       ALERT;
      --alert_but      NUMBER;
      --v_alert_msg    varchar2(500);
      v_status        giis_parameters.param_value_v%TYPE;
      v_share_cd      NUMBER;
      OVERRIDE_AR     BOOLEAN
         := CHECK_USER_OVERRIDE_FUNCTION (p_user, p_module, 'AR'); --vin added 8.26.2010
      OVERRIDE_RB     BOOLEAN
         := CHECK_USER_OVERRIDE_FUNCTION (p_user, p_module, 'RB'); --vin added 9.22.2010
      --vin 9.23.2010
      v_post_limit    giis_posting_limit.post_limit%TYPE;
      v_all_amt_sw    giis_posting_limit.all_amt_sw%TYPE;
      v_ann_tsi_amt   gipi_polbasic.ann_tsi_amt%TYPE;
   BEGIN
      /*IF :f000.renew_flag = '3' THEN
           IF variables.old_renew_flag IS NOT NULL THEN
              :f000.renew_flag := variables.old_renew_flag;
              variables.old_renew_flag := NULL;
           ELSE
                 :f000.renew_flag := :f000.dsp_renew_flag ;
           END IF;
           :f000.renew_flag := :f000.dsp_renew_flag;
         MSG_ALERT('Automatic renewal to Policy is temporarily disabled ...','I',TRUE);
      END IF;*/

      /*IF :f000.renew_flag <> '1' THEN
             set_item_property('f000.non_ren_reason_cd', enabled, property_false);
             set_item_property('f000.non_ren_reason', enabled, property_false);
        ELSE
             set_item_property('f000.non_ren_reason_cd', enabled, property_true);
             set_item_property('f000.non_ren_reason_cd', updateable, property_true);
             set_item_property('f000.non_ren_reason_cd', navigable, property_true);
             set_item_property('f000.non_ren_reason', enabled, property_true);
             set_item_property('f000.non_ren_reason', updateable, property_true);
             set_item_property('f000.non_ren_reason', navigable, property_true);
        END IF;*/

      -- vin 9.21.2010    added  to disable/enable auto renewal radio button based on the parameter ALLOW_AUTO_RENEW_WITH_DIST
      -- and also if it's full retention or not.
      --------------------------------------------------------------------------------------
      IF     p_renew_flag = '3'
         AND NVL (giisp.v ('ALLOW_AUTO_RENEW_WITH_DIST'), 'N') = 'N'
      THEN
         --MSG_ALERT('Automatic renewal to Policy is temporarily disabled ...','I',false);
         --:f000.renew_flag := '2';
         --SET_RADIO_BUTTON_PROPERTY('f000.RENEW_FLAG', 'AUTO_RENEWAL', enabled, property_false);
         p_msg := 1;
         RETURN;
      ELSIF     p_renew_flag = '3'
            AND NVL (giisp.v ('ALLOW_AUTO_RENEW_WITH_DIST'), 'N') = 'Y'
      THEN
         DECLARE
            v_share_cd   NUMBER;
         BEGIN
            /*FOR share_cd IN (SELECT share_cd FROM GIUW_POLICYDS_DTL A, GIUW_POL_DIST B, GIEX_EXPIRIES_V C
                                    WHERE A.DIST_NO=B.DIST_NO
                                      AND B.POLICY_ID=C.POLICY_ID
                                      AND b.policy_id = p_policy_id
                                    ORDER BY share_cd)
            LOOP
                    v_share_cd := share_cd.share_cd;
            END LOOP;*/
            -- replaced by: Nica 07.03.2012

            v_share_cd := validate_renewal.check_dist (p_policy_id);

            IF v_share_cd <> 1
            THEN
               --MSG_ALERT('Only policy(s) with 100% net retention distribution is allowed in auto-renew.','I',FALSE);
               --:f000.renew_flag := '2';
               p_proceed := 'N';
               --SET_RADIO_BUTTON_PROPERTY('f000.RENEW_FLAG', 'AUTO_RENEWAL', enabled, property_false);
               p_msg := 2;
               RETURN;
            ELSE
               p_proceed := 'Y';
            --:f000.renew_flag := '3';
            --SET_RADIO_BUTTON_PROPERTY('f000.RENEW_FLAG', 'AUTO_RENEWAL', enabled, property_true);
            --p_msg := 3;
            --RETURN;
            END IF;
         END;
      END IF;

      --------------------------------------------------------------------------------------

      -- vin 9.23.2010 added for posting limit
      ----------------------------------------------------------------
      IF p_renew_flag = '3' AND p_proceed = 'Y'
      THEN
         BEGIN
            SELECT post_limit, all_amt_sw
              INTO v_post_limit, v_all_amt_sw
              FROM giis_posting_limit
             WHERE     line_cd = p_dsp_line_cd
                   AND iss_cd = p_dsp_iss_cd
                   AND UPPER (posting_user) = p_user;
         EXCEPTION
            WHEN NO_DATA_FOUND
            THEN
               --msg_alert('User has no authority to post a policy. Reassign the PAR to another user or set-up the posting limit of user '||USER||'.','E',TRUE);
               p_msg := 4;
               RETURN;
         END;

         IF v_all_amt_sw IS NULL OR v_all_amt_sw = 'N'
         THEN                                               --unchecked or 'N'
            IF v_post_limit IS NULL OR v_post_limit = 0
            THEN
               --msg_alert('User has no authority to post a policy. Reassign the PAR to another user or set-up the posting limit of user '||USER||'.','E',TRUE);
               p_msg := 5;
               RETURN;
            ELSIF v_post_limit IS NOT NULL OR v_post_limit <> 0
            THEN
               --A.R.C. 11.23.2006
               --FOR p1 IN (SELECT item_no, ann_tsi_amt
               FOR p1 IN (SELECT SUM (ann_tsi_amt * currency_rt) ann_tsi_amt
                            FROM gipi_item
                           WHERE policy_id = p_policy_id)
               LOOP
                  --v_item_no := p1.item_no;
                  v_ann_tsi_amt := p1.ann_tsi_amt;

                  IF NVL (v_ann_tsi_amt, 0) > NVL (v_post_limit, 0)
                  THEN
                     --A.R.C. 11.23.2006
                     --msg_alert('Total TSI amount of item number '||v_item_no||' exceeds the allowable TSI amount of the user '||USER||'. Reassign the PAR to another user with higher authority.','E',FALSE);
                     --:F000.RENEW_FLAG := '2';
                     --:f000.update_flag := 'N';
                     p_proceed := 'N';
                     --msg_alert('Total TSI amount exceeds the allowable TSI amount of the user '||USER||'. Reassign the PAR to another user with higher authority.','E',FALSE);
                     p_msg := 6;
                     RETURN;
                  END IF;
               END LOOP;
            END IF;
         END IF;
      END IF;

      ----------------------------------------------------------------

      -- vin 9.22.2010 added for validation if user is authorized to auto renew or not
      --------------------------------------------------------------------------------------

      --MSG_ALERT('1','i',FALSE);
      IF p_RENEW_FLAG = '3' AND OVERRIDE_AR = FALSE AND p_proceed = 'Y'
      THEN
         /*alert_id := Find_Alert('OVERRIDE');
         alert_but := Show_Alert(alert_id);
         IF alert_but = ALERT_BUTTON1 THEN
             variables.v_function_cd := 'AR';
             variables.v_proceed := 'N';
             go_item('CG$CTRL.user_name');
             animate_overide_popup('OVERIDE_WINDOW', 'Overide User', 'OVERIDE_CANVAS', 'CG$CTRL','SHOW');
         ELSE
             :F000.RENEW_FLAG := '2';
         :F000.update_flag := 'N';
             variables.v_proceed := 'N';
             MSG_ALERT('User is not allowed to auto renew.','I',true);
         END IF;*/
         p_msg := 7;
         RETURN;
      ELSIF p_RENEW_FLAG = '3' AND OVERRIDE_AR = TRUE AND p_proceed = 'Y'
      THEN
         --verify_override_rb;
         p_msg := 8;
         RETURN;
      END IF;
   --------------------------------------------------------------------------------------

   END check_renew_flag;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 10.05.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   **  Description      : verify_override_rb program unit
   */
   PROCEDURE verify_override_rb (
      p_user               giis_posting_limit.posting_user%TYPE,
      p_policy_id          giex_expiries_v.policy_id%TYPE,
      p_renew_flag         giex_expiries_v.renew_flag%TYPE,
      p_auto_sw            giex_expiries_v.auto_sw%TYPE,
      p_balance_flag       giex_expiries_v.balance_flag%TYPE,
      p_claim_flag         giex_expiries_v.claim_flag%TYPE,
      p_dist_sw            VARCHAR2,
      p_msg            OUT VARCHAR2,
      p_alert_msg      OUT VARCHAR2)
   IS
      --alert_id       ALERT;
      --alert_but      NUMBER;
      --v_alert_msg    varchar2(500);
      v_share_cd    NUMBER;
      OVERRIDE_RB   BOOLEAN
         := CHECK_USER_OVERRIDE_FUNCTION (p_user, 'GIEXS004', 'RB'); --vin added 9.22.2010
      v_sw          VARCHAR2 (1) := 'N';
   BEGIN
      FOR share_cd
         IN (  SELECT share_cd
                 FROM GIUW_PERILDS_DTL A, GIUW_POL_DIST B, GIEX_EXPIRIES_V C
                WHERE     a.dist_no = b.dist_no
                      AND b.policy_id = c.policy_id
                      AND b.policy_id = p_policy_id
             ORDER BY share_cd)
      LOOP
         v_share_cd := share_cd.share_cd; --Lemuel 121109 to get share_cd for checking if auto renewal is allowed...
      END LOOP;

      IF p_renew_flag = '3'
      THEN
         IF NVL (p_auto_sw, 'N') = 'N'
         THEN
            --p_renew_flag := '2';
            --:f000.same_polno_sw := 'Y'; commented by gmi.. FPAC request 103007
            p_msg := 1;
            p_alert_msg :=
               'Policy with endorsement(s) cannot be auto-renewed.';
            RETURN;
         --ELSIF nvl(:f000.claim_flag,'N') = 'Y' THEN
         ELSIF     NVL (p_balance_flag, 'N') = 'N'
               AND NVL (p_claim_flag, 'N') = 'Y'
         THEN                               --added balance_flag vin 9.22.2010
            --:f000.renew_flag := '2'; --commented out and transferred below vin 9.22.2010
            --:f000.same_polno_sw := 'Y'; commented by gmi.. FPAC request 103007
            --MSG_ALERT('Policy with pending claims cannot be auto-renewed.','I',true);
            -- vin 9.22.2010
            --OVERRIDE_RB := CHECK_USER_OVERRIDE_FUNCTION(USER, :CG$CTRL.MODULE, 'RB');
            IF OVERRIDE_RB = FALSE
            THEN
               p_msg := 2;
               p_alert_msg :=
                  'Policy has claim(s). Cannot process policy for renewal. Would you like to override?';
               RETURN;
            /*alert_id := FIND_ALERT('CHECK_BAL_DUE');
            SET_ALERT_PROPERTY(alert_id,ALERT_MESSAGE_TEXT,v_alert_msg);
            alert_but := SHOW_ALERT(alert_id);
            IF alert_but = alert_button1 THEN
                variables.v_function_cd := 'RB';
                variables.v_proceed := 'N';
                v_sw := 'Y';
                go_item('CG$CTRL.USER_NAME');
                animate_overide_popup('OVERIDE_WINDOW', 'Overide User', 'OVERIDE_CANVAS', 'CG$CTRL','show');
            ELSE
                 :f000.renew_flag := '2';
                 :f000.update_flag := 'N';
                 variables.v_proceed := 'N';
            END IF;*/
            ELSE                              --user has authotiry to override
               p_msg := 3;
               p_alert_msg :=
                  'Policy has claim(s). Would you like to continue?';
               RETURN;
            /*alert_id := FIND_ALERT('CHECK_BAL_DUE');
             SET_ALERT_PROPERTY(alert_id,ALERT_MESSAGE_TEXT,v_alert_msg);
             alert_but := SHOW_ALERT(alert_id);
             IF alert_but = alert_butTON1 THEN
                  NULL;
             ELSE
                  :f000.renew_flag := '2';
                  :f000.update_flag := 'N';
                  variables.v_proceed := 'N';
             END IF;*/
            END IF;
         -- end of added statement for override vin 9.22.2010
         --ELSIF NVL(:f000.balance_flag,'N') = 'Y' THEN --vin 9.22.2010 commented out and replaced by the if statement below
         ELSIF     NVL (p_balance_flag, 'N') = 'Y'
               AND NVL (p_claim_flag, 'N') = 'N'
         THEN                                 --added claim_flag vin 9.22.2010
            --:f000.renew_flag := '2'; --commented out and transferred under else statement vin 9.22.2010
            --:f000.same_polno_sw := 'Y'; commented by gmi.. FPAC request 103007
            -- vin 9.22.2010 added for override

            IF OVERRIDE_RB = FALSE
            THEN
               p_msg := 4;
               p_alert_msg :=
                  'Policy has an outstanding premium balance. Cannot process policy for renewal. Would you like to override?';
               RETURN;
            /* alert_id := FIND_ALERT('CHECK_BAL_DUE');
             SET_ALERT_PROPERTY(alert_id,ALERT_MESSAGE_TEXT,v_alert_msg);
             alert_but := SHOW_ALERT(alert_id);
             IF alert_but = alert_butTON1 THEN
                 variables.v_function_cd := 'RB';
                 variables.v_proceed := 'N';
                 go_item('CG$CTRL.USER_NAME');
                 v_sw := 'Y';
                 animate_overide_popup('OVERIDE_WINDOW', 'Overide User', 'OVERIDE_CANVAS', 'CG$CTRL','show');
             ELSE
                  :f000.renew_flag := '2';
                  :f000.update_flag := 'N';
                  variables.v_proceed := 'N';
             END IF;*/
            ELSE                              --user has authotiry to override
               p_msg := 5;
               p_alert_msg :=
                  'Policy has an outstanding premium balance. Would you like to continue?';
               RETURN;
            /*alert_id := FIND_ALERT('CHECK_BAL_DUE');
             SET_ALERT_PROPERTY(alert_id,ALERT_MESSAGE_TEXT,v_alert_msg);
             alert_but := SHOW_ALERT(alert_id);
             IF alert_but = alert_butTON1 THEN
                  NULL;
             ELSE
                  :f000.renew_flag := '2';
                  :f000.update_flag := 'N';
                  variables.v_proceed := 'N';
             END IF;*/
            END IF;
         -- end of added statement for override vin 9.22.2010
         ELSIF NVL (p_dist_sw, 'Y') = 'N'
         THEN
            --:f000.renew_flag := '2';
            --:f000.same_polno_sw := 'Y'; commented by gmi.. FPAC request 103007
            p_msg := 6;
            p_alert_msg :=
               'Policy cannot be auto-renewed , policy or it''s endorsement is not yet distributed.';
            RETURN;
         ELSIF v_share_cd <> 1
         THEN
            --:f000.renew_flag := '2';
            --MSG_ALERT('Policy cannot be auto-renewed , policy is distributed with facul.','I',true);
            -- VIN 8.26.2010
            p_msg := 7;
            p_alert_msg :=
               'Only policy(s) with 100% net retention distribution is allowed in auto-renew.';
            RETURN;
         ELSE --vin 10.7.2010 added to go the last validation if it passes the validations above
            p_msg := 8;
            RETURN;
         --ar_validation;
         END IF;
      END IF;
   END verify_override_rb;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 10.05.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   **  Description      : gets the value of dist_sw
   */
   PROCEDURE get_dist_sw (
      p_is_package   IN     giex_expiries_v.is_package%TYPE,
      p_policy_id    IN     giex_expiries_v.policy_id%TYPE,
      p_dist_sw         OUT VARCHAR2)
   IS
      v_nbt_line_cd      gipi_polbasic.line_cd%TYPE;
      v_nbt_subline_cd   gipi_polbasic.subline_cd%TYPE;
      v_nbt_iss_cd       gipi_polbasic.iss_cd%TYPE;
      v_nbt_issue_yy     gipi_polbasic.issue_yy%TYPE;
      v_nbt_pol_seq_no   gipi_polbasic.pol_seq_no%TYPE;
      v_nbt_renew_no     gipi_polbasic.renew_no%TYPE;
   BEGIN
      IF p_is_package = 'Y'
      THEN
         FOR A IN (SELECT line_cd,
                          subline_cd,
                          iss_cd,
                          issue_yy,
                          pol_seq_no,
                          renew_no,
                          pack_par_id,
                          ann_prem_amt,
                          ann_tsi_amt,
                          prem_amt,
                          tsi_amt
                     FROM gipi_pack_polbasic
                    WHERE pack_policy_id = p_policy_id)
         LOOP
            v_nbt_line_cd := a.line_cd;
            v_nbt_subline_cd := a.subline_cd;
            v_nbt_iss_cd := a.iss_cd;
            v_nbt_issue_yy := a.issue_yy;
            v_nbt_pol_seq_no := a.pol_seq_no;
            v_nbt_renew_no := a.renew_no;
            EXIT;
         END LOOP;

         p_dist_sw := 'Y';

         FOR B
            IN (SELECT '1'
                  FROM gipi_polbasic a, gipi_pack_polbasic b
                 WHERE     a.pack_policy_id = b.pack_policy_id
                       AND a.pol_flag IN ('1', '2', '3')
                       AND NVL (a.endt_type, 'A') <> 'N'
                       AND a.dist_flag <> '3'
                       AND b.line_cd = v_nbt_line_cd
                       AND b.subline_cd = v_nbt_subline_cd
                       AND b.iss_cd = v_nbt_iss_cd
                       AND b.issue_yy = v_nbt_issue_yy
                       AND b.pol_seq_no = v_nbt_pol_seq_no
                       AND b.renew_no = v_nbt_renew_no)
         LOOP
            p_dist_sw := 'N';
            EXIT;
         END LOOP;
      ELSE
         FOR A IN (SELECT line_cd,
                          subline_cd,
                          iss_cd,
                          issue_yy,
                          pol_seq_no,
                          renew_no,
                          par_id,
                          ann_prem_amt,
                          ann_tsi_amt,
                          prem_amt,
                          tsi_amt
                     FROM gipi_polbasic
                    WHERE policy_id = p_policy_id)
         LOOP
            v_nbt_line_cd := a.line_cd;
            v_nbt_subline_cd := a.subline_cd;
            v_nbt_iss_cd := a.iss_cd;
            v_nbt_issue_yy := a.issue_yy;
            v_nbt_pol_seq_no := a.pol_seq_no;
            v_nbt_renew_no := a.renew_no;
            EXIT;
         END LOOP;

         p_dist_sw := 'Y';

         FOR B
            IN (SELECT '1'
                  FROM gipi_polbasic
                 WHERE     line_cd = v_nbt_line_cd
                       AND subline_cd = v_nbt_subline_cd
                       AND iss_cd = v_nbt_iss_cd
                       AND issue_yy = v_nbt_issue_yy
                       AND pol_seq_no = v_nbt_pol_seq_no
                       AND renew_no = v_nbt_renew_no
                       AND pol_flag IN ('1', '2', '3')
                       AND NVL (endt_type, 'A') <> 'N'
                       AND dist_flag <> '3')
         LOOP
            p_dist_sw := 'N';
            EXIT;
         END LOOP;
      END IF;
   END get_dist_sw;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 11.08.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   */
   FUNCTION get_queried_expired_policies (
      p_user_id            giex_expiries_v.extract_user%TYPE,
      p_all_user           giis_users.all_user_sw%TYPE,
      p_dsp_intm_no        giex_expiries_v.intm_no%TYPE,
      p_dsp_intm_name      giis_intermediary.intm_name%TYPE,
      p_claim_sw           giex_expiries_v.claim_flag%TYPE,
      p_balance_sw         giex_expiries_v.balance_flag%TYPE,
      p_range_type         VARCHAR2,
      p_range              VARCHAR2,
      p_fm_date            VARCHAR2,
      p_to_date            VARCHAR2,
      p_fm_mon             VARCHAR2,
      p_fm_year            NUMBER,
      p_to_mon             VARCHAR2,
      p_to_year            NUMBER,
      p_dsp_line_cd2       gipi_polbasic.line_cd%TYPE,
      p_dsp_subline_cd2    gipi_polbasic.subline_cd%TYPE,
      p_dsp_iss_cd2        gipi_polbasic.iss_cd%TYPE,
      p_dsp_issue_yy2      gipi_polbasic.issue_yy%TYPE,
      p_dsp_pol_seq_no2    gipi_polbasic.pol_seq_no%TYPE,
      p_dsp_renew_no2      gipi_polbasic.renew_no%TYPE,
      p_order_by          VARCHAR2,      --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      p_asc_desc_flag     VARCHAR2,      --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      p_first_row         NUMBER,        --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      p_last_row          NUMBER         --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      )
      RETURN giex_expiries_v_tab
      PIPELINED
   IS
      v_expiries     giex_expiries_v_type;
      v_stmt_str     VARCHAR2 (/*2000*/32767); --modified by pjsantos @pcpc 10/13/2016, for optimization GENQA 5685
      v_params       VARCHAR2 (2000);

      TYPE exp_cur_type IS REF CURSOR;

      v_exp_cursor   exp_cur_type;
      exp_record     giex_expiries_v%ROWTYPE;
      v_all_user     VARCHAR2(1)    := 'N'; --added by joanne 06.25.14, default all_user_sw is N
      /*Added by pjsantos 10/13/2016, for optimization GENQA 5685*/
      v_tsi_amt    gipi_itmperil.tsi_amt%TYPE := 0;
      v_prem_amt   gipi_itmperil.prem_amt%TYPE := 0;
      v_dep_pct    NUMBER (3, 2) := Giisp.n ('MC_DEP_PCT') / 100;     
      /*pjsantos end*/
   BEGIN
      SELECT all_user_sw
        INTO v_all_user
        FROM giis_users
       WHERE user_id = p_user_id;
   
      v_stmt_str :='SELECT  mainsql.*
                   FROM (
                    SELECT COUNT (1) OVER () count_, outersql.* 
                      FROM (
                            SELECT ROWNUM rownum_, innersql.*                             
                                FROM ( SELECT  POLICY_ID, EXPIRY_DATE, RENEW_FLAG, LINE_CD, SUBLINE_CD, SAME_POLNO_SW, CPI_REC_NO,
                                        CPI_BRANCH_CD,ISS_CD,POST_FLAG,BALANCE_FLAG,CLAIM_FLAG, EXTRACT_USER, EXTRACT_DATE,
                                        PROCESSOR,USER_ID,LAST_UPDATE,DATE_PRINTED, NO_OF_COPIES,AUTO_RENEW_FLAG,UPDATE_FLAG,
                                        TSI_AMT,PREM_AMT,REN_TSI_AMT,REN_PREM_AMT,SUMMARY_SW,INCEPT_DATE,ASSD_NO,ASSD_NAME,
                                        AUTO_SW,TAX_AMT, POLICY_TAX_AMT,ISSUE_YY, POL_SEQ_NO,RENEW_NO,COLOR,MOTOR_NO,MODEL_YEAR,
                                        MAKE,SERIALNO,PLATE_NO,REN_NOTICE_CNT,REN_NOTICE_DATE,ITEM_TITLE,LOC_RISK1,LOC_RISK2,
                                        LOC_RISK3,CAR_COMPANY,INTM_NO,REMARKS,ORIG_TSI_AMT,SMS_FLAG,RENEWAL_ID,REG_POLICY_SW,
                                        ASSD_SMS,INTM_SMS,EMAIL_DOC,EMAIL_SW,EMAIL_STAT,ASSD_EMAIL,INTM_EMAIL,NON_REN_REASON,
                                        COC_SERIAL_NO,NON_REN_REASON_CD,PACK_POLICY_ID,IS_PACKAGE, REF_POL_NO,
                                        (SELECT    a.line_cd
                         || ''-''
                         || a.subline_cd
                         || ''-''
                         || a.iss_cd
                         || ''-''
                         || TRIM(TO_CHAR (a.issue_yy, ''09''))
                         || ''-''
                         || TRIM(TO_CHAR (a.pol_seq_no, ''0999999''))
                         || ''-''
                         || TRIM(TO_CHAR (a.renew_no, ''09''))
                            policy_no
                    FROM GIPI_POLBASIC a
                   WHERE     a.policy_id = gev.policy_id
                         AND gev.is_package = ''N''
                  UNION ALL
                  SELECT    a.line_cd
                         || ''-''
                         || a.subline_cd
                         || ''-''
                         || a.iss_cd
                         || ''-''
                         || TRIM(TO_CHAR (a.issue_yy, ''09''))
                         || ''-''
                         || TRIM(TO_CHAR (a.pol_seq_no, ''0999999''))
                         || ''-''
                         || TRIM(TO_CHAR (a.renew_no, ''09''))
                            policy_no
                    FROM GIPI_PACK_POLBASIC a
                   WHERE     a.pack_policy_id = gev.policy_id
                         AND gev.is_package = ''Y'') policy_no,
                         (SELECT cred_branch
                    FROM GIPI_POLBASIC a
                   WHERE     a.policy_id = gev.policy_id
                         AND gev.is_package = ''N''
                  UNION ALL
                  SELECT cred_branch
                    FROM GIPI_PACK_POLBASIC a
                   WHERE     a.pack_policy_id = gev.policy_id
                         AND gev.is_package = ''Y'') cred_branch,
                         prem_amt dsp_prem, tsi_amt dsp_tsi, prem_amt dsp_orig_prem, tsi_amt dsp_orig_tsi
                    FROM giex_expiries_v gev
                              WHERE NVL(post_flag, ''N'') <> ''Y'' 
                              AND extract_user = decode(:v_all_user,''Y'', extract_user, :p_user_id)
                              AND (line_cd, iss_cd) IN (SELECT line_cd, branch_cd FROM TABLE(security_access.get_branch_line(''UW'', ''GIEXS004'', :p_user_id)))';
         /*   ' SELECT * FROM giex_expiries_v  '
         || ' WHERE NVL(post_flag, ''N'') <> ''Y'' '
         --|| ' AND decode(:p_all_user,''Y'',:p_user_id, extract_user) = :p_user_id'  joanne 06.25.14
         || ' AND extract_user = decode(:v_all_user,''Y'', extract_user, :p_user_id)'
         || ' AND (line_cd, iss_cd) IN (SELECT line_cd, branch_cd FROM TABLE(security_access.get_branch_line(''UW'', ''GIEXS004'', :p_user_id)))';
         --|| ' AND line_cd = DECODE(check_user_per_line2(line_cd, iss_cd, ''GIEXS004'', :p_user_id),1,line_cd,NULL)'; --modified by robert 01.09.2013
        --comment out by pjsantos 10/13/2016, replaced by codes below GENQA 5683 
       */
     IF p_dsp_intm_no IS NOT NULL
      THEN
         v_stmt_str :=
               v_stmt_str
            || ' AND intm_no = :dsp_intm_no '
            || ' AND (1=1 OR :dsp_intm_name IS NULL)';
      ELSIF p_dsp_intm_name IS NOT NULL AND p_dsp_intm_no IS NULL
      THEN
         v_stmt_str :=
               v_stmt_str
            || ' AND (1=1 OR :dsp_intm_no IS NULL)'
            || ' AND intm_no IN (SELECT intm_no
                                                            FROM giis_intermediary
                                                            WHERE intm_name like :dsp_intm_name)';
      ELSE
         v_stmt_str :=
               v_stmt_str
            || ' AND (1=1 OR :dsp_intm_no IS NULL)'
            || ' AND (1=1 OR :dsp_intm_name IS NULL)';
      END IF;

      IF NVL (p_claim_sw, 'N') = 'Y'
      THEN
         v_stmt_str := v_stmt_str || ' AND claim_flag = ''Y'' ';
      END IF;

      IF NVL (p_balance_sw, 'N') = 'Y'
      THEN
         v_stmt_str := v_stmt_str || ' AND balance_flag = ''Y'' ';
      END IF;

      IF p_range_type = '2'
      THEN
         IF p_range = '2' AND p_fm_date IS NOT NULL AND p_to_date IS NOT NULL
         THEN
            v_stmt_str :=
                  v_stmt_str
               || ' AND TRUNC(expiry_date) >= TRUNC(TO_DATE(:fm_date, ''MM/DD/YYYY'')) '
               || ' AND TRUNC(expiry_date) <= TRUNC(TO_DATE(:to_date, ''MM/DD/YYYY'')) '
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)'
               || ' AND (1=1 OR :to_mon IS NULL)'
               || ' AND (1=1 OR :to_year IS NULL)'
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)';
         ELSIF     p_range = '1'
               AND p_fm_mon IS NOT NULL
               AND p_fm_year IS NOT NULL
               AND p_to_mon IS NOT NULL
               AND p_to_year IS NOT NULL
         THEN
            v_stmt_str :=
                  v_stmt_str
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :to_date IS NULL)'
               || ' AND TO_DATE(TO_CHAR(expiry_date,''MM-YYYY''),''MM-YYYY'') '
               || ' >= TO_DATE(LTRIM(LPAD(:fm_mon,2,''0''))||''-''|| '
               || ' LTRIM(TO_CHAR(:fm_year,''0999'')),''MM-YYYY'') '
               || ' AND  TO_DATE(TO_CHAR(expiry_date,''MM-YYYY''),''MM-YYYY'') '
               || ' <= TO_DATE(LTRIM(LPAD(:to_mon,2,''0''))||''-''|| '
               || ' LTRIM(TO_CHAR(:to_year,''0999'')),''MM-YYYY'') '
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)';
         ELSE
            v_stmt_str :=
                  v_stmt_str
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :to_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)'
               || ' AND (1=1 OR :to_mon IS NULL)'
               || ' AND (1=1 OR :to_year IS NULL)'
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)';
         END IF;
      ELSIF p_range_type = '1'
      THEN
         IF p_range = '2' AND p_fm_date IS NOT NULL
         THEN
            v_stmt_str :=
                  v_stmt_str
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :to_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)'
               || ' AND (1=1 OR :to_mon IS NULL)'
               || ' AND (1=1 OR :to_year IS NULL)'
               || ' AND TRUNC(expiry_date) <= TRUNC(TO_DATE(:fm_date, ''MM/DD/YYYY''))'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)';
         ELSIF     p_range = '1'
               AND p_fm_mon IS NOT NULL
               AND p_fm_year IS NOT NULL
         THEN
            v_stmt_str :=
                  v_stmt_str
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :to_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)'
               || ' AND (1=1 OR :to_mon IS NULL)'
               || ' AND (1=1 OR :to_year IS NULL)'
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND TO_CHAR(expiry_date,''MM-YYYY'') '
               || '  <= LTRIM(LPAD(:fm_mon,2,''0''))||''-''||'
               || '  LTRIM(TO_CHAR(:fm_year,''0999'')) ';
         ELSE
            v_stmt_str :=
                  v_stmt_str
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :to_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)'
               || ' AND (1=1 OR :to_mon IS NULL)'
               || ' AND (1=1 OR :to_year IS NULL)'
               || ' AND (1=1 OR :fm_date IS NULL)'
               || ' AND (1=1 OR :fm_mon IS NULL)'
               || ' AND (1=1 OR :fm_year IS NULL)';
         END IF;
      ELSE
         v_stmt_str :=
               v_stmt_str
            || ' AND (1=1 OR :fm_date IS NULL)'
            || ' AND (1=1 OR :to_date IS NULL)'
            || ' AND (1=1 OR :fm_mon IS NULL)'
            || ' AND (1=1 OR :fm_year IS NULL)'
            || ' AND (1=1 OR :to_mon IS NULL)'
            || ' AND (1=1 OR :to_year IS NULL)'
            || ' AND (1=1 OR :fm_date IS NULL)'
            || ' AND (1=1 OR :fm_mon IS NULL)'
            || ' AND (1=1 OR :fm_year IS NULL)';
      END IF;

      --msg_alert(:qpolno.dsp_line_cd2||' :qpolno.dsp_line_cd2','I',FALSE);
      IF    p_dsp_line_cd2 IS NOT NULL
         OR p_dsp_subline_cd2 IS NOT NULL
         OR p_dsp_iss_cd2 IS NOT NULL
         OR p_dsp_issue_yy2 IS NOT NULL
         OR p_dsp_pol_seq_no2 IS NOT NULL
         OR p_dsp_renew_no2 IS NOT NULL
      THEN
         v_stmt_str :=
               v_stmt_str
            || ' AND ((policy_id  in (SELECT policy_id '
            || ' FROM gipi_polbasic '
            || ' WHERE line_cd = NVL(:dsp_line_cd2, line_cd) '
            || ' AND subline_cd = NVL(:dsp_subline_cd2, subline_cd) '
            || ' AND iss_cd = NVL(:dsp_iss_cd2, iss_cd) '
            || ' AND issue_yy = NVL(:dsp_issue_yy2, issue_yy) '
            || ' AND pol_seq_no = NVL(:dsp_pol_seq_no2, pol_seq_no) '
            || ' AND renew_no   = NVL(:dsp_renew_no2, renew_no)  '
            || ' AND NVL(endt_seq_no,0) = 0)  '
            || ' AND NVL(pack_policy_id,0) = 0)'
            ||                         --' AND NVL(pack_policy_id,0) = 0 )' ||
               /* added by gmi to consider package policies*/
               ' OR (pack_policy_id  in (SELECT pack_policy_id '
            || ' FROM gipi_pack_polbasic '
            || ' WHERE line_cd = NVL(:dsp_line_cd2, line_cd) '
            || ' AND subline_cd = NVL(:dsp_subline_cd2, subline_cd) '
            || ' AND iss_cd = NVL(:dsp_iss_cd2, iss_cd) '
            || ' AND issue_yy = NVL(:dsp_issue_yy2, issue_yy) '
            || ' AND pol_seq_no = NVL(:dsp_pol_seq_no2, pol_seq_no) '
            || ' AND renew_no   = NVL(:dsp_renew_no2, renew_no)  '
            || ' AND NVL(endt_seq_no,0) = 0 ) '
            || ' AND NVL(pack_policy_id,0) <> 0)) ';
      ELSE
         v_stmt_str :=
               v_stmt_str
            || ' AND (1=1 OR :dsp_line_cd2 IS NULL)'
            || ' AND (1=1 OR :dsp_subline_cd2 IS NULL)'
            || ' AND (1=1 OR :dsp_iss_cd2 IS NULL)'
            || ' AND (1=1 OR :dsp_issue_yy2 IS NULL)'
            || ' AND (1=1 OR :dsp_pol_seq_no2 IS NULL)'
            || ' AND (1=1 OR :dsp_renew_no2 IS NULL)'
            || ' AND (1=1 OR :dsp_line_cd2 IS NULL)'
            || ' AND (1=1 OR :dsp_subline_cd2 IS NULL)'
            || ' AND (1=1 OR :dsp_iss_cd2 IS NULL)'
            || ' AND (1=1 OR :dsp_issue_yy2 IS NULL)'
            || ' AND (1=1 OR :dsp_pol_seq_no2 IS NULL)'
            || ' AND (1=1 OR :dsp_renew_no2 IS NULL)';
      END IF;
     
--      v_stmt_str := v_stmt_str || ')innersql ';
      IF p_order_by IS NOT NULL
      THEN
        IF p_order_by = 'expiryDate'
         THEN        
          v_stmt_str := v_stmt_str || ' ORDER BY expiry_date ';
        ELSIF  p_order_by = 'dspPrem'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY prem_amt ';
        ELSIF  p_order_by = 'dspTsi'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY tsi_amt ';
        ELSIF  p_order_by = 'premAmt'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY prem_amt ';  
        ELSIF  p_order_by = 'tsiAmt'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY tsi_amt ';     
        ELSIF  p_order_by = 'extractUser'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY extract_user ';   
        ELSIF  p_order_by = 'processor'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY processor ';  
        ELSIF  p_order_by = 'credBranch'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY cred_branch ';       
        ELSIF  p_order_by = 'policyNo'
         THEN
          v_stmt_str := v_stmt_str || ' ORDER BY policy_no ';
        END IF;
        
        IF p_asc_desc_flag IS NOT NULL
        THEN
           v_stmt_str := v_stmt_str || p_asc_desc_flag; 
        ELSE
           v_stmt_str := v_stmt_str || ' ASC';
        END IF; 
    END IF;
--    raise_application_error(-20001, 'p_order_by: '||p_order_by||' p_asc_desc_flag: '||p_asc_desc_flag);
      /*v_stmt_str :=
         v_stmt_str || ' ORDER BY line_cd, subline_cd, iss_cd, expiry_date ';*/ --comment out by pjsantos 10/13/2016, GENQA 5685
        
        v_stmt_str := v_stmt_str || ')innersql ) outersql ) mainsql WHERE rownum_ BETWEEN '|| p_first_row ||' AND ' || p_last_row ;

      OPEN v_exp_cursor FOR v_stmt_str
         USING v_all_user, --p_all_user, joanne 06.25.14
               p_user_id,
               p_user_id,
               p_dsp_intm_no,
               p_dsp_intm_name,
               p_fm_date,
               p_to_date,
               p_fm_mon,
               p_fm_year,
               p_to_mon,
               p_to_year,
               p_fm_date,
               p_fm_mon,
               p_fm_year,
               p_dsp_line_cd2,
               p_dsp_subline_cd2,
               p_dsp_iss_cd2,
               p_dsp_issue_yy2,
               p_dsp_pol_seq_no2,
               p_dsp_renew_no2,
               p_dsp_line_cd2,
               p_dsp_subline_cd2,
               p_dsp_iss_cd2,
               p_dsp_issue_yy2,
               p_dsp_pol_seq_no2,
               p_dsp_renew_no2;    

      LOOP

         FETCH v_exp_cursor INTO/* exp_record;*/--modified by pjsantos 10/13/2016, for optimization GENQA 5685
         v_expiries.count_, --:= exp_record.count_;
         v_expiries.rownum_, --:= exp_record.rownum_;
         v_expiries.policy_id,--:= exp_record.policy_id;
         v_expiries.expiry_date, --:= exp_record.expiry_date;
         v_expiries.renew_flag, --:= exp_record.renew_flag;
         v_expiries.line_cd, --:= exp_record.line_cd;
         v_expiries.subline_cd, --:= exp_record.subline_cd;
         v_expiries.same_polno_sw, --:= exp_record.same_polno_sw;
         v_expiries.cpi_rec_no, --:= exp_record.cpi_rec_no;
         v_expiries.cpi_branch_cd, --:= exp_record.cpi_branch_cd;
         v_expiries.iss_cd, --:= exp_record.iss_cd;
         v_expiries.post_flag, --:= exp_record.post_flag;
         v_expiries.balance_flag, --:= exp_record.balance_flag;
         v_expiries.claim_flag, --:= exp_record.claim_flag;
         v_expiries.extract_user, --:= exp_record.extract_user;
         v_expiries.extract_date, --:= exp_record.extract_date;
         v_expiries.processor,
         v_expiries.user_id, --:= exp_record.user_id;        
         v_expiries.last_update, --:= exp_record.last_update;
         v_expiries.date_printed, --:= exp_record.date_printed;
         v_expiries.no_of_copies, --:= exp_record.no_of_copies;
         v_expiries.auto_renew_flag, --:= exp_record.auto_renew_flag;
         v_expiries.update_flag, --:= exp_record.update_flag;
         v_expiries.tsi_amt, --:= exp_record.tsi_amt;
         v_expiries.prem_amt, --:= exp_record.prem_amt; 
         v_expiries.ren_tsi_amt, --:= exp_record.ren_tsi_amt;
         v_expiries.ren_prem_amt, --:= exp_record.ren_prem_amt;       
         v_expiries.summary_sw, --:= exp_record.summary_sw;
         v_expiries.incept_date, --:= exp_record.incept_date;
         v_expiries.assd_no, --:= exp_record.assd_no;
         v_expiries.assd_name,
         v_expiries.auto_sw, --:= exp_record.auto_sw;
         v_expiries.tax_amt, --:= exp_record.tax_amt;
         v_expiries.policy_tax_amt, --:= exp_record.policy_tax_amt;
         v_expiries.issue_yy, --:= exp_record.issue_yy;
         v_expiries.pol_seq_no, --:= exp_record.pol_seq_no;
         v_expiries.renew_no, --:= exp_record.renew_no;
         v_expiries.color, --:= exp_record.color;
         v_expiries.motor_no, --:= exp_record.motor_no;
         v_expiries.model_year, --:= exp_record.model_year;
         v_expiries.make, --:= exp_record.make;
         v_expiries.serialno, --:= exp_record.serialno;
         v_expiries.plate_no, --:= exp_record.plate_no;
         v_expiries.ren_notice_cnt, --:= exp_record.ren_notice_cnt;
         v_expiries.ren_notice_date, --:= exp_record.ren_notice_date;
         v_expiries.item_title, --:= exp_record.item_title;
         v_expiries.loc_risk1, --:= exp_record.loc_risk1;
         v_expiries.loc_risk2, --:= exp_record.loc_risk2;
         v_expiries.loc_risk3, --:= exp_record.loc_risk3;
         v_expiries.car_company, --:= exp_record.car_company;
         v_expiries.intm_no, --:= exp_record.intm_no;
         v_expiries.remarks, --:= exp_record.remarks;
         v_expiries.orig_tsi_amt, --:= exp_record.orig_tsi_amt;
         v_expiries.sms_flag, --:= exp_record.sms_flag;
         v_expiries.renewal_id,--:= exp_record.renewal_id;
         v_expiries.reg_policy_sw, --:= exp_record.reg_policy_sw;
         v_expiries.assd_sms, --:= exp_record.assd_sms;
         v_expiries.intm_sms ,--:= exp_record.intm_sms;
         v_expiries.email_doc, --:= exp_record.email_doc;
         v_expiries.email_sw, --:= exp_record.email_sw;
         v_expiries.email_stat, --:= exp_record.email_stat;
         v_expiries.assd_email, --:= exp_record.assd_email;
         v_expiries.intm_email, --:= exp_record.intm_email;
         v_expiries.non_ren_reason, --:= exp_record.non_ren_reason;
         v_expiries.coc_serial_no, --:= exp_record.coc_serial_no;
         v_expiries.non_ren_reason_cd, --:= exp_record.non_ren_reason_cd;         
         v_expiries.pack_policy_id, --:= exp_record.pack_policy_id;
         v_expiries.is_package, --:= exp_record.is_package;
         v_expiries.ref_pol_no,
         v_expiries.policy_no,
         v_expiries.cred_branch,
         v_expiries.dsp_prem,
         v_expiries.dsp_tsi,
         v_expiries.dsp_orig_prem,
         v_expiries.dsp_orig_tsi;         
         giex_expiries_v_pkg.get_dist_sw (exp_record.is_package,
                                          exp_record.policy_id,
                                          v_expiries.dist_sw); 

 /*        BEGIN
            DECLARE
               CURSOR C
               IS
                  SELECT    a.line_cd
                         || ' - '
                         || a.subline_cd
                         || ' - '
                         || a.iss_cd
                         || ' - '
                         || TO_CHAR (a.issue_yy, '09')
                         || ' - '
                         || TO_CHAR (a.pol_seq_no, '0999999')
                         || ' - '
                         || TO_CHAR (a.renew_no, '09')
                            policy_no, cred_branch
                    FROM GIPI_POLBASIC a
                   WHERE     a.policy_id = exp_record.policy_id
                         AND exp_record.is_package = 'N'
                  UNION ALL
                  SELECT    a.line_cd
                         || ' - '
                         || a.subline_cd
                         || ' - '
                         || a.iss_cd
                         || ' - '
                         || TO_CHAR (a.issue_yy, '09')
                         || ' - '
                         || TO_CHAR (a.pol_seq_no, '0999999')
                         || ' - '
                         || TO_CHAR (a.renew_no, '09')
                            policy_no, cred_branch
                    FROM GIPI_PACK_POLBASIC a
                   WHERE     a.pack_policy_id = exp_record.policy_id
                         AND exp_record.is_package = 'Y';
            BEGIN
               OPEN C;

               FETCH C INTO v_expiries.policy_no, v_expiries.cred_branch;

               IF C%NOTFOUND
               THEN
                  RAISE NO_DATA_FOUND;
               END IF;

               CLOSE C;
            END;
         END;*/

         /*BEGIN
            DECLARE
               v_tsi_amt    gipi_itmperil.tsi_amt%TYPE := 0;
               v_prem_amt   gipi_itmperil.prem_amt%TYPE := 0;
          --   v_dep_pct    NUMBER (3, 2) := Giisp.n ('MC_DEP_PCT') / 100; comment out by pjsantos 10/13/2016 moved on top for optimization, GENQA 5685
           
            BEGIN
               IF /*exp_record*//*v_expiries.is_package = 'Y'
               THEN
                  FOR A IN (SELECT ann_prem_amt,
                                   ann_tsi_amt,
                                   prem_amt,
                                   tsi_amt
                              FROM gipi_pack_polbasic
                             WHERE pack_policy_id = /*exp_record*//*v_expiries.policy_id)
                  LOOP
                     IF NVL (/*exp_record*//*v_expiries.summary_sw, 'N') = 'N'
                     THEN
                        v_expiries.dsp_prem := NVL (a.ann_prem_amt, 0);
                        v_expiries.dsp_tsi := a.ann_tsi_amt;
                        v_expiries.dsp_orig_prem := NVL (a.prem_amt, 0);
                        v_expiries.dsp_orig_tsi := a.tsi_amt;
                     ELSE
                        v_expiries.dsp_prem := /*exp_record*//*v_expiries.ren_prem_amt;
                        v_expiries.dsp_tsi := /*exp_record*//*v_expiries.ren_tsi_amt;
                        v_expiries.dsp_orig_prem := /*exp_record*//*_expiries.prem_amt;
                        v_expiries.dsp_orig_tsi := /*exp_record*//*V_expiries.tsi_amt;
                     END IF;

                     EXIT;
                  END LOOP;
               ELSE
                  FOR A IN (SELECT line_cd,
                                   subline_cd,
                                   iss_cd,
                                   issue_yy,
                                   pol_seq_no,
                                   renew_no,
                                   par_id,
                                   ann_prem_amt,
                                   ann_tsi_amt,
                                   prem_amt,
                                   tsi_amt
                              FROM gipi_polbasic
                             WHERE policy_id = /*exp_record*//*v_expiries.policy_id)
                  LOOP
                     IF NVL (/*exp_record*//*v_expiries.summary_sw, 'N') = 'N'
                     THEN
                        v_expiries.dsp_prem := NVL (a.ann_prem_amt, 0);
                        v_expiries.dsp_tsi := a.ann_tsi_amt;
                        v_expiries.dsp_orig_prem := NVL (a.prem_amt, 0);
                        v_expiries.dsp_orig_tsi := a.tsi_amt;
                     ELSE
                        v_expiries.dsp_prem := /*exp_record*//*v_expiries.ren_prem_amt;
                        v_expiries.dsp_tsi := /*exp_record*//*v_expiries.ren_tsi_amt;
                        v_expiries.dsp_orig_prem := /*exp_record*//*v_expiries.prem_amt;
                        v_expiries.dsp_orig_tsi := /*exp_record*//*v_expiries.tsi_amt;
                     END IF;

                     EXIT;
                  END LOOP;

                  FOR a IN (SELECT '1'
                              FROM gipi_polbasic
                             WHERE policy_id = /*exp_record*//*v_expiries.policy_id)
                  LOOP
                     FOR a
                        IN (SELECT tsi_amt,
                                   prem_amt,
                                   tsi_amt AS ren_tsi_amt,
                                   ann_prem_amt AS ren_prem_amt,
                                   peril_type,
                                   gi.line_cd AS line_cd,
                                   gi.peril_cd AS peril_cd,
                                   prem_rt
                              FROM gipi_itmperil gi, giis_peril gp
                             WHERE     gi.line_cd = gp.line_cd
                                   AND gi.peril_cd = gp.peril_cd
                                   AND gi.policy_id = /*exp_record*//*v_expiries.policy_id)
                     LOOP                     
                        FOR b
                           IN (SELECT '1'
                                 FROM giex_dep_perl b
                                WHERE     b.line_cd = a.line_cd
                                      AND b.peril_cd = a.peril_cd
                                      AND /*Giisp.v ('AUTO_COMPUTE_MC_DEP')*//* v_auto_compute_mc_dep =
                                             'Y')--modified by pjsantos 10/13/2016, for optimization GENQA 5685
                        LOOP
                           a.ren_tsi_amt :=
                              a.ren_tsi_amt - (a.ren_tsi_amt * v_dep_pct);
                           a.ren_prem_amt :=
                              a.ren_prem_amt - (a.ren_prem_amt * v_dep_pct);
                        END LOOP;

                        IF a.peril_type = 'B'
                        THEN
                           v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                        END IF;

                        v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                     END LOOP;

                     IF NVL (/*exp_record*//*v_expiries.summary_sw, 'N') = 'N'
                     THEN
                        v_expiries.dsp_prem := v_prem_amt;
                        v_expiries.dsp_tsi := v_tsi_amt;
                     END IF;
                  END LOOP;
               END IF; 
            END;
         END; removed recomputation for optimization amounts will be base on giex_expiries_v, pjsantos GENQA 5685, */
 
           
         
         EXIT WHEN v_exp_cursor%NOTFOUND;
         PIPE ROW (v_expiries);--moved here by pjsantos 10/18/2016 to prevent duplicate of record when querying a specific record, GENQA 5685.
      END LOOP;

      CLOSE v_exp_cursor;
   END get_queried_expired_policies;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 11.08.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   **  Description      : tags/untags records which can be processed
   */
   PROCEDURE save_process_tag (
      p_user_id            giex_expiries_v.extract_user%TYPE,
      p_all_user           giis_users.all_user_sw%TYPE,
      p_dsp_intm_no        giex_expiries_v.intm_no%TYPE,
      p_dsp_intm_name      giis_intermediary.intm_name%TYPE,
      p_claim_sw           giex_expiries_v.claim_flag%TYPE,
      p_balance_sw         giex_expiries_v.balance_flag%TYPE,
      p_range_type         VARCHAR2,
      p_range              VARCHAR2,
      p_fm_date            VARCHAR2,
      p_to_date            VARCHAR2,
      p_fm_mon             VARCHAR2,
      p_fm_year            NUMBER,
      p_to_mon             VARCHAR2,
      p_to_year            NUMBER,
      p_dsp_line_cd2       gipi_polbasic.line_cd%TYPE,
      p_dsp_subline_cd2    gipi_polbasic.subline_cd%TYPE,
      p_dsp_iss_cd2        gipi_polbasic.iss_cd%TYPE,
      p_dsp_issue_yy2      gipi_polbasic.issue_yy%TYPE,
      p_dsp_pol_seq_no2    gipi_polbasic.pol_seq_no%TYPE,
      p_dsp_renew_no2      gipi_polbasic.renew_no%TYPE,
      p_process            VARCHAR2,
      p_order_by           VARCHAR2,      --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      p_asc_desc_flag      VARCHAR2,      --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      p_first_row          NUMBER,        --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      p_last_row           NUMBER         --added by pjsantos @pcic 10/13/2016, for optimization GENQA 5685
      )
   IS
      v_param   giis_parameters.param_value_v%TYPE;
      v_all_user    VARCHAR2(1):= 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
   
      FOR A IN (SELECT param_value_v
                  FROM giis_parameters
                 WHERE param_name = 'EXPIRY_ALLOW_UNDIST')
      LOOP
         v_param := a.param_value_v;
         EXIT;
      END LOOP;

      FOR i IN (SELECT *
                  FROM TABLE (giex_expiries_v_pkg.get_queried_expired_policies (
                                 p_user_id,
                                 v_all_user, --p_all_user, joanne 06.25.14
                                 p_dsp_intm_no,
                                 p_dsp_intm_name,
                                 p_claim_sw,
                                 p_balance_sw,
                                 p_range_type,
                                 p_range,
                                 p_fm_date,
                                 p_to_date,
                                 p_fm_mon,
                                 p_fm_year,
                                 p_to_mon,
                                 p_to_year,
                                 p_dsp_line_cd2,
                                 p_dsp_subline_cd2,
                                 p_dsp_iss_cd2,
                                 p_dsp_issue_yy2,
                                 p_dsp_pol_seq_no2,
                                 p_dsp_renew_no2,
                                 p_order_by,
                                 p_asc_desc_flag,
                                 p_first_row,
                                 p_last_row)))
      LOOP
         IF p_process = 'T'
         THEN
            IF i.dist_sw = 'Y' OR (i.dist_sw = 'N' AND v_param = 'Y')
            THEN
               IF i.is_package = 'Y'
               THEN
                  UPDATE giex_pack_expiry
                     SET update_flag = 'Y'
                   WHERE pack_policy_id = i.policy_id;

                  UPDATE giex_expiry
                     SET update_flag = 'Y'
                   WHERE pack_policy_id = i.policy_id;
               ELSE
                  UPDATE giex_expiry
                     SET update_flag = 'Y'
                   WHERE policy_id = i.policy_id;
               END IF;
            END IF;
         ELSE
            IF i.is_package = 'Y'
            THEN
               UPDATE giex_pack_expiry
                  SET update_flag = 'N'
                WHERE pack_policy_id = i.policy_id;

               UPDATE giex_expiry
                  SET update_flag = 'N'
                WHERE pack_policy_id = i.policy_id;
            ELSE
               UPDATE giex_expiry
                  SET update_flag = 'N'
                WHERE policy_id = i.policy_id;
            END IF;
         END IF;
      END LOOP;
   END save_process_tag;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 11.29.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   **  Description      : get the policy id of the records which are set to be processed
   */
   FUNCTION get_policy_id_for_process (
      p_user       IN giex_expiries_v.extract_user%TYPE,
      p_all_user   IN giis_users.all_user_sw%TYPE,
      p_line_cd       giex_expiries_v.line_cd%TYPE, --joanne
      p_subline_cd    giex_expiries_v.subline_cd%TYPE,
      p_iss_cd        giex_expiries_v.iss_cd%TYPE,
      p_issue_yy      giex_expiries_v.issue_yy%TYPE,
      p_pol_seq_no    giex_expiries_v.pol_seq_no%TYPE,
      p_renew_no      giex_expiries_v.renew_no%TYPE,
      p_claim_sw      giex_expiries_v.claim_flag%TYPE,
      p_balance_sw    giex_expiries_v.balance_flag%TYPE,
      p_intm_name     giis_intermediary.intm_name%TYPE,
      p_intm_no       giex_expiries_v.intm_no%TYPE,
      p_range_type    VARCHAR2,
      p_range         VARCHAR2,
      p_fm_date       DATE,
      p_to_date       DATE,
      p_fm_mon        NUMBER, --marco - 08.29.2014 - changed types from DATE
      p_to_mon        NUMBER, --
      p_fm_year       NUMBER, --
      p_to_year       NUMBER )/*joanne*/
      RETURN giex_expiries_v_tab
      PIPELINED
   IS
      v_expiries   giex_expiries_v_type;
      v_all_user   VARCHAR2(1)  := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
       BEGIN
         SELECT a.all_user_sw
           INTO v_all_user
           FROM giis_users a          
          WHERE a.user_id = p_user;
       END;
      
      FOR i IN (SELECT *
                  FROM TABLE (
                          giex_expiries_v_pkg.get_expired_policies2 (
                                p_user,
                                v_all_user,
                                p_line_cd,
                                p_subline_cd,
                                p_iss_cd,
                                p_issue_yy,
                                p_pol_seq_no,
                                p_renew_no,
                                p_claim_sw,
                                p_balance_sw,
                                p_intm_name,
                                p_intm_no,
                                p_range_type,
                                p_range,
                                p_fm_date,
                                p_to_date,
                                p_fm_mon,
                                p_to_mon,
                                p_fm_year,
                                p_to_year))
                 WHERE update_flag = 'Y')
      LOOP
         v_expiries.policy_id := i.policy_id;
         PIPE ROW (v_expiries);
      END LOOP;
   END get_policy_id_for_process;

   /*
   **  Created by       : Robert John Virrey
   **  Date Created     : 11.29.2011
   **  Reference By     : (GIEXS004 - Tag Expired Policies for Renewal)
   **  Description      : get the lists of processed policy no and its renewed par
   */
   FUNCTION display_renewals (p_policy_ids VARCHAR2)
      RETURN renewals_tab
      PIPELINED
   IS
      v_renewals     renewals_type;
      v_stmt_str     VARCHAR2 (2000);

      TYPE exp_cur_type IS REF CURSOR;

      v_exp_cursor   exp_cur_type;
      exp_record     renewals_type;
   BEGIN
      v_stmt_str :=
            'WITH values_tab1 AS '
         || ' ( SELECT :p_policy_ids '
         || ' , LEVEL AS pos '
         || ' , SUBSTR(:p_policy_ids,ROWNUM,1) AS ch '
         || ' , COUNT(CASE WHEN SUBSTR(:p_policy_ids,ROWNUM,1) = '','' THEN ''#'' END) '
         || '   OVER (ORDER BY LEVEL) AS section '
         || ' FROM   dual CONNECT BY LEVEL <= LENGTH(:p_policy_ids) ) '
         || ' , values_tab2 AS '
         || ' ( SELECT SUBSTR(:p_policy_ids,MIN(pos), 1 + MAX(pos) - MIN(pos)) AS val '
         || ' FROM   values_tab1 '
         || ' WHERE  ch <> '','' '
         || ' GROUP BY :p_policy_ids,section ) '
         || ' SELECT c.line_cd||'' - ''||c.subline_cd||'' - ''||c.iss_cd||'' - ''||TO_CHAR(c.issue_yy, ''09'')||'' - ''||TO_CHAR(c.pol_seq_no, ''0999999'')||'' - ''||TO_CHAR(c.renew_no, ''09'') policy_no, '
         || ' c.policy_id par_no '
         || ' FROM gipi_polbasic c '
         || ' WHERE c.policy_id IN ( SELECT val
                                        FROM   values_tab2 ) ';

      OPEN v_exp_cursor FOR v_stmt_str
         USING p_policy_ids,
               p_policy_ids,
               p_policy_ids,
               p_policy_ids,
               p_policy_ids,
               p_policy_ids;

      LOOP
         FETCH v_exp_cursor INTO exp_record;

         v_renewals.policy_no := exp_record.policy_no;
         v_renewals.par_no :=
            giex_expiries_v_pkg.get_par_no (exp_record.par_no);
         PIPE ROW (v_renewals);
         EXIT WHEN v_exp_cursor%NOTFOUND;
      END LOOP;

      CLOSE v_exp_cursor;
   END display_renewals;

   /*
   ** Created by    : Marco Paolo Rebong
   ** Created date  : March 19, 2012
   ** Referenced by : (GIEXS003 - Purge Extract Table)
   ** Description   : Retrieves the extracted policies to be purged
   */
  FUNCTION get_extracted_policies (
      p_user_id        GIEX_EXPIRIES_V.user_id%TYPE,
      p_all_user       GIIS_USERS.all_user_sw%TYPE,
      p_intm_no        GIEX_EXPIRIES_V.intm_no%TYPE,
      p_policy_no      VARCHAR2,
      p_line_cd        GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd     GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd         GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy       GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no     GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no       GIEX_EXPIRIES_V.renew_no%TYPE,
      p_tsi_amt        GIEX_EXPIRIES_V.tsi_amt%TYPE,
      p_prem_amt       GIEX_EXPIRIES_V.prem_amt%TYPE,
      p_expiry_date    VARCHAR2, --GIEX_EXPIRIES_V.expiry_date%TYPE, -- marco - 02.07.2013 - changed type
      p_from_month     VARCHAR2,
      p_from_year      VARCHAR2,
      p_to_month       VARCHAR2,
      p_to_year        VARCHAR2,
      p_from_date      VARCHAR2,
      p_to_date        VARCHAR2,
      p_range          VARCHAR2,
      p_order_by          VARCHAR2,                     --added by pjsantos 10/11/2016, GENQA 5688
      p_asc_desc_flag     VARCHAR2,                     --added by pjsantos 10/11/2016, GENQA 5688
      p_first_row         NUMBER,                       --added by pjsantos 10/11/2016, GENQA 5688
      p_last_row          NUMBER)                       --added by pjsantos 10/11/2016, GENQA 5688
      RETURN extracted_policies_tab
      PIPELINED
   IS
      v_extracted             extracted_policies_type;
      v_all_user              VARCHAR2 (1) := 'N'; --added by joanne 06.25.14, default all_user_sw is N
      v_round_off             giis_parameters.param_value_n%TYPE; --Added by pjsantos 10/10/2016, GENQA 5688
      v_auto_compute_mc_dep   giis_parameters.param_value_v%TYPE
                                 := Giisp.v ('AUTO_COMPUTE_MC_DEP'); --added by pjsantos  09/20/2016, for optimization GENQA 5688
      v_sql                   VARCHAR2 (32767); --added by pjsantos  09/20/2016, for optimization GENQA 5688

      TYPE cur_type IS REF CURSOR; --added by pjsantos  09/20/2016, for optimization GENQA 5688

      c                       cur_type; --added by pjsantos  09/20/2016, for optimization GENQA 5688
   BEGIN
      v_all_user := p_all_user;                     -- SR-5557 JET JUL-07-2016

      BEGIN        --Added by pjsantos 10/10/2016,for optimization GENQA 5688.
         SELECT DECODE (param_value_n,
                        10, -1,
                        100, -2,
                        1000, -3,
                        10000, -4,
                        100000, -5,
                        1000000, -6,
                        9)
           INTO v_round_off
           FROM giis_parameters
          WHERE param_name = 'ROUND_OFF_PLACE';
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            v_round_off := 9;
      END;

      --added by pjsantos 10/10/2016, GENQA 5688

      /* FOR i
          IN (  SELECT distinct a.* FROM (SELECT --CPI.get_policy_no (policy_id) policy_no, -- marco - 02.07.2013 - added CPI schema to call correct function
                         line_cd --koks 11.25.2013 remove get_policy_no to populate package records
                      || '-'
                      || subline_cd
                      || '-'
                      || iss_cd
                      || '-'
                      || LTRIM (TO_CHAR (issue_yy, '09'))
                      || '-'
                      || LTRIM (TO_CHAR (pol_seq_no, '0999999'))
                      || '-'
                      || LTRIM (TO_CHAR (renew_no, '09'))
                             policy_no,
                       line_cd,
                       subline_cd,
                       iss_cd,
                       issue_yy,
                       pol_seq_no,
                       renew_no,
                       ren_tsi_amt tsi_amt, --joanne 06.27.14, should retrieve depreciated amt
                       ren_prem_amt prem_amt, --joanne 06.27.14, should retrieve depreciated amt
                       TRUNC (expiry_date) expiry_date,
                       NVL (post_flag, 'N') post_flag,
                       --added by joanne 06.27.14
                       policy_id,
                       is_package,
                       summary_sw  --end
                  FROM GIEX_EXPIRIES_V gev
                 WHERE   DECODE (v_all_user p_all_user joanne 06.25.14 'Y', extract_user, p_user_id) =
                             extract_user
                       /*AND line_cd =
                              DECODE (
                                 check_user_per_line2 (line_cd,
                                                      UPPER (iss_cd),
                                                      'GIEXS003', p_user_id),
                                 1, line_cd,
                                 NULL)
                       AND iss_cd =
                              DECODE (
                                 check_user_per_iss_cd2 (UPPER (line_cd),
                                                        iss_cd,
                                                        'GIEXS003', p_user_id),
                                 1, iss_cd,
                                 NULL)
                       AND EXISTS (SELECT 'X'
                                  FROM TABLE (security_access.get_branch_line ('UW', 'GIEXS003', p_user_id))
                                 WHERE branch_cd = iss_cd)--added by pjsantos 10/10/2016, for optimization GENQA 5688.
                       AND (   NVL (p_range, 'range') <> 'onBeforeMonth'
                            OR TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                        'MM-YYYY') <=
                                  TO_DATE (
                                        LTRIM (
                                           LPAD (
                                              DECODE (
                                                 p_from_month,
                                                 NULL, TO_CHAR (expiry_date,
                                                                'MON'),
                                                 p_from_month),
                                              3,
                                              '0'))
                                     || '-'
                                     || LTRIM (
                                           TO_CHAR (
                                              DECODE (
                                                 p_from_year,
                                                 NULL, TO_CHAR (expiry_date,
                                                                'YYYY'),
                                                 p_from_year),
                                              '0999')),
                                     'MM-YYYY'))
                       AND (   NVL (p_range, 'range') <> 'onBeforeDate'
                            OR TRUNC (expiry_date) <=
                                  TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy')))
                       AND (   NVL (p_range, 'range') <> 'exactMonth'
                            OR (    TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                             'MM-YYYY') >=
                                       TO_DATE (
                                             LTRIM (
                                                LPAD (
                                                   DECODE (
                                                      p_from_month,
                                                      NULL, TO_CHAR (
                                                               expiry_date,
                                                               'MON'),
                                                      p_from_month),
                                                   3,
                                                   '0'))
                                          || '-'
                                          || LTRIM (
                                                TO_CHAR (
                                                   DECODE (
                                                      p_from_year,
                                                      NULL, TO_CHAR (
                                                               expiry_date,
                                                               'YYYY'),
                                                      p_from_year),
                                                   '0999')),
                                          'MM-YYYY')
                                AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                             'MM-YYYY') <=
                                       TO_DATE (
                                             LTRIM (
                                                LPAD (
                                                   DECODE (
                                                      p_to_month,
                                                      NULL, TO_CHAR (
                                                               expiry_date,
                                                               'MON'),
                                                      p_to_month),
                                                   3,
                                                   '0'))
                                          || '-'
                                          || LTRIM (
                                                TO_CHAR (
                                                   DECODE (
                                                      p_to_year,
                                                      NULL, TO_CHAR (
                                                               expiry_date,
                                                               'YYYY'),
                                                      p_to_year),
                                                   '0999')),
                                          'MM-YYYY')))
                       AND (   NVL (p_range, 'range') <> 'exactDate'
                            OR (    TRUNC (expiry_date) >=
                                       TRUNC (
                                          TO_DATE (DECODE(p_from_date, NULL, TO_CHAR(expiry_date, 'mm/dd/yyyy'), p_from_date), 'mm/dd/yyyy')) -- andrew - 02.9.2013 - added decode
                                AND TRUNC (expiry_date) <=
                                       TRUNC (TO_DATE (DECODE(p_to_date, NULL, TO_CHAR(expiry_date, 'mm/dd/yyyy'), p_to_date), 'mm/dd/yyyy')))) -- andrew - 02.9.2013 - added decode
 --                      AND NVL (intm_no, 1) =
 --                             NVL (p_intm_no,
 --                                  DECODE (intm_no, NULL, 1, intm_no))
                       AND UPPER (line_cd) LIKE UPPER (NVL (p_line_cd, line_cd))
                       AND UPPER (subline_cd) LIKE
                              UPPER (NVL (p_subline_cd, subline_cd))
                       AND UPPER (iss_cd) LIKE UPPER (NVL (p_iss_cd, iss_cd))
                                           -- uncommented by Kris Felipe 01.28.2013:
                                           -- uncommented the where statements for issue_yy, pol_seq_no, and renew_no
                                           AND issue_yy LIKE NVL(p_issue_yy, issue_yy)
                                           AND pol_seq_no LIKE NVL(p_pol_seq_no, pol_seq_no)
                                           AND renew_no LIKE NVL(p_renew_no, renew_no)
                       AND NVL (tsi_amt, 1) = NVL (p_tsi_amt, NVL (tsi_amt, 1))
                       AND NVL (prem_amt, 1) =
                              NVL (p_prem_amt, NVL (prem_amt, 1))
                       AND NVL (     line_cd --koks 11.25.2013 remove get_policy_no to populate package records
                                  || '-'
                                  || subline_cd
                                  || '-'
                                  || iss_cd
                                  || '-'
                                  || LTRIM (TO_CHAR (issue_yy, '09'))
                                  || '-'
                                  || LTRIM (TO_CHAR (pol_seq_no, '0999999'))
                                  || '-'
                                  || LTRIM (TO_CHAR (renew_no, '09'))

                       , '%') LIKE -- marco - 02.07.2013 - added CPI schema to call correct function
                              UPPER (
                                 NVL (p_policy_no,
                                      NVL (      line_cd --koks 11.25.2013 remove get_policy_no to populate package records
                                              || '-'
                                              || subline_cd
                                              || '-'
                                              || iss_cd
                                              || '-'
                                              || LTRIM (TO_CHAR (issue_yy, '09'))
                                              || '-'
                                              || LTRIM (TO_CHAR (pol_seq_no, '0999999'))
                                              || '-'
                                              || LTRIM (TO_CHAR (renew_no, '09'))

                                      , '%'))--) -- marco - 02.07.2013 - added CPI schema to call correct function modified by pjsantos 10/10/2016, GENQA 5688
                       --AND TO_CHAR (expiry_date, 'mm-dd-yyyy') LIKE
                       --       NVL (TO_CHAR (p_expiry_date, 'mm-dd-yyyy'),
                       --            TO_CHAR (expiry_date, 'mm-dd-yyyy'))
                       AND TRUNC(expiry_date) = TRUNC(NVL(TO_DATE(p_expiry_date, 'mm-dd-yyyy'), expiry_date)) -- marco - 02.07.2013 - modified filter
              ORDER BY line_cd, subline_cd, iss_cd) a, gipi_comm_invoice b
              where a.policy_id = b.policy_id
              AND NVL (b.INTRMDRY_INTM_NO, 1) =
                              NVL (p_intm_no,
                                   DECODE (b.INTRMDRY_INTM_NO, NULL, 1, b.INTRMDRY_INTM_NO)))*/
      --Comment out by pjsantos 10/10/2016, GENQA 5688

      v_sql :=
         'SELECT mainsql.*
                   FROM (
                    SELECT COUNT (1) OVER () count_, outersql.* 
                      FROM (
                            SELECT ROWNUM rownum_, innersql.*
                              FROM (SELECT distinct a.* FROM (SELECT 
                        line_cd 
                     || ''-''
                     || subline_cd
                     || ''-''
                     || iss_cd
                     || ''-''
                     || LTRIM (TO_CHAR (issue_yy, ''09''))
                     || ''-''
                     || LTRIM (TO_CHAR (pol_seq_no, ''0999999''))
                     || ''-''
                     || LTRIM (TO_CHAR (renew_no, ''09''))
                            policy_no,
                      line_cd,
                      subline_cd,
                      iss_cd,
                      issue_yy,
                      pol_seq_no,
                      renew_no, 
                      ren_tsi_amt tsi_amt,
                      ren_prem_amt prem_amt,
                     TRUNC (expiry_date) expiry_date,
                      NVL (post_flag, ''N'') post_flag,
                      policy_id,
                      is_package,
                      summary_sw   
                 FROM GIEX_EXPIRIES_V gev
                WHERE   DECODE (:v_all_user , ''Y'', extract_user, :p_user_id) =
                            extract_user                     
                      AND EXISTS (SELECT ''X''
                                 FROM TABLE (security_access.get_branch_line (''UW'', ''GIEXS003'', :p_user_id))
                                WHERE branch_cd = iss_cd)                      
             ORDER BY line_cd, subline_cd, iss_cd) a, gipi_comm_invoice b
             where a.policy_id = b.policy_id
             AND NVL (b.INTRMDRY_INTM_NO, 1) =
                             NVL (:p_intm_no,
                                  DECODE (b.INTRMDRY_INTM_NO, NULL, 1, b.INTRMDRY_INTM_NO)) 
                AND (   NVL (:p_range, ''range'') <> ''onBeforeMonth''
                           OR TO_DATE (TO_CHAR (expiry_date, ''MM-YYYY''),
                                       ''MM-YYYY'') <=
                                 TO_DATE (
                                       LTRIM (
                                          LPAD (
                                             DECODE (
                                                :p_from_month,
                                                NULL, TO_CHAR (expiry_date,
                                                               ''MON''),
                                                :p_from_month),
                                             3,
                                             ''0''))
                                    || ''-''
                                    || LTRIM (
                                          TO_CHAR (
                                             DECODE (
                                                :p_from_year,
                                                NULL, TO_CHAR (expiry_date,
                                                               ''YYYY''),
                                                :p_from_year),
                                             ''0999'')),
                                    ''MM-YYYY''))
                      AND (   NVL (:p_range, ''range'') <> ''onBeforeDate''
                           OR TRUNC (expiry_date) <=
                                 TRUNC (TO_DATE (:p_from_date, ''mm/dd/yyyy'')))
                      AND (   NVL (:p_range, ''range'') <> ''exactMonth''
                           OR (    TO_DATE (TO_CHAR (expiry_date, ''MM-YYYY''),
                                            ''MM-YYYY'') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (
                                                  DECODE (
                                                     :p_from_month,
                                                     NULL, TO_CHAR (
                                                              expiry_date,
                                                              ''MON''),
                                                     :p_from_month),
                                                  3,
                                                  ''0''))
                                         || ''-''
                                         || LTRIM (
                                               TO_CHAR (
                                                  DECODE (
                                                     :p_from_year,
                                                     NULL, TO_CHAR (
                                                              expiry_date,
                                                              ''YYYY''),
                                                     :p_from_year),
                                                  ''0999'')),
                                         ''MM-YYYY'')
                               AND TO_DATE (TO_CHAR (expiry_date, ''MM-YYYY''),
                                            ''MM-YYYY'') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (
                                                  DECODE (
                                                     :p_to_month,
                                                     NULL, TO_CHAR (
                                                              expiry_date,
                                                              ''MON''),
                                                     :p_to_month),
                                                  3,
                                                  ''0''))
                                         || ''-''
                                         || LTRIM (
                                               TO_CHAR (
                                                  DECODE (
                                                     :p_to_year,
                                                     NULL, TO_CHAR (
                                                              expiry_date,
                                                              ''YYYY''),
                                                     :p_to_year),
                                                  ''0999'')),
                                         ''MM-YYYY'')))
                      AND (   NVL (:p_range, ''range'') <> ''exactDate''
                           OR (    TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (DECODE(:p_from_date, NULL, TO_CHAR(expiry_date, ''mm/dd/yyyy''), :p_from_date), ''mm/dd/yyyy'')) 
                                     AND TRUNC (expiry_date) <= TRUNC (TO_DATE (DECODE(:p_to_date, NULL, TO_CHAR(expiry_date, ''mm/dd/yyyy''), :p_to_date), ''mm/dd/yyyy''))))';
      

      IF p_line_cd IS NOT NULL
      THEN
      
         v_sql :=
               v_sql
            || 'AND UPPER (line_cd) LIKE UPPER (NVL ('||''''||p_line_cd||''''||', line_cd)) ';
      END IF;

      IF p_subline_cd IS NOT NULL
      THEN
         v_sql :=
               v_sql
            || 'AND UPPER (subline_cd) LIKE
                             UPPER (NVL ('||''''||p_subline_cd||''''||', subline_cd)) ';
      END IF;

      IF p_iss_cd IS NOT NULL
      THEN
         v_sql :=
               v_sql
            || 
            'AND UPPER (a.iss_cd) LIKE UPPER (NVL ('||''''||p_iss_cd||''''||', a.iss_cd)) ';
      END IF;

      IF p_issue_yy IS NOT NULL
      THEN
         v_sql := v_sql || 'AND issue_yy LIKE NVL('||p_issue_yy||', issue_yy) ';
      END IF;

      IF p_pol_seq_no IS NOT NULL
      THEN
         v_sql :=
            v_sql || 'AND pol_seq_no LIKE NVL('||p_pol_seq_no||', pol_seq_no) ';
      END IF;

      IF p_renew_no IS NOT NULL
      THEN
         v_sql := v_sql || ' AND renew_no LIKE NVL('||p_renew_no||', renew_no) ';
      END IF;

      IF p_tsi_amt IS NOT NULL
      THEN
         v_sql :=
               v_sql
            || ' AND NVL (tsi_amt, 1) = NVL ('||p_tsi_amt||', NVL (tsi_amt, 1)) ';
      END IF;


      IF p_prem_amt IS NOT NULL
      THEN
         v_sql :=
               v_sql
            || ' AND NVL (prem_amt, 1) =
                             NVL ('||p_prem_amt||', NVL (prem_amt, 1)) ';
      END IF;

    IF p_policy_no IS NOT NULL
      THEN
         v_sql :=
               v_sql
            ||
            ' AND NVL (     line_cd
                                 || ''-''
                                 || subline_cd
                                 || ''-''
                                 || a.iss_cd
                                 || ''-''
                                 || LTRIM (TO_CHAR (issue_yy, ''09''))
                                 || ''-''
                                 || LTRIM (TO_CHAR (pol_seq_no, ''0999999''))
                                 || ''-''
                                 || LTRIM (TO_CHAR (renew_no, ''09''))

                      , ''%'') LIKE
                             UPPER (
                                NVL ('||''''||p_policy_no||''''||', ''%'')) ';
      END IF;

      IF p_expiry_date IS NOT NULL
      THEN
         v_sql :=
               v_sql
            || 
            ' AND TRUNC(expiry_date) =  NVL(TO_DATE('||''''||'2016-10-10'||''''||', ''RRRR-MM-DD''), expiry_date)  ';
      END IF;
      
       IF p_order_by IS NOT NULL
      THEN
        IF p_order_by = 'policyNo'
         THEN        
          v_sql := v_sql || ' ORDER BY policy_no ';
        ELSIF  p_order_by = 'tsiAmt'
         THEN
          v_sql := v_sql || ' ORDER BY tsi_amt ';
        ELSIF  p_order_by = 'premAmt'
         THEN
          v_sql := v_sql || ' ORDER BY prem_amt ';
        ELSIF  p_order_by = 'expiryDate'
         THEN
          v_sql := v_sql || ' ORDER BY expiry_date ';                 
        END IF;
        
        IF p_asc_desc_flag IS NOT NULL
        THEN
           v_sql := v_sql || p_asc_desc_flag;
        ELSE
           v_sql := v_sql || ' ASC';
        END IF; 
    END IF;
      
      v_sql := v_sql || ') innersql) outersql) mainsql WHERE rownum_ BETWEEN '|| p_first_row ||' AND ' || p_last_row;
      OPEN C FOR v_sql
         USING          
               v_all_user,
               p_user_id,
               p_user_id,
               p_intm_no,
               p_range,
               p_from_month,
               p_from_month,
               p_from_year,
               p_from_year,
               p_range,
               p_from_date,
               p_range,
               p_from_month,
               p_from_month,
               p_from_year,
               p_from_year,
               p_to_month,
               p_to_month,
               p_to_year,
               p_to_year,
               p_range,
               p_from_date,
               p_from_date,
               p_to_date,
               p_to_date;

       LOOP       
         FETCH c INTO         
         v_extracted.count_,
         v_extracted.rownum_,
         v_extracted.policy_no,
         v_extracted.line_cd,
         v_extracted.subline_cd, 
         v_extracted.iss_cd,
         v_extracted.issue_yy,
         v_extracted.pol_seq_no,
         v_extracted.renew_no, 
         v_extracted.tsi_amt, 
         v_extracted.prem_amt, 
         v_extracted.expiry_date_temp,
         v_extracted.post_flag,
         v_extracted.policy_id,
         v_extracted.is_package,
         v_extracted.summary_sw; 
         
        IF TRUNC (/*i.expiry_date*/v_extracted.expiry_date_temp) <= TRUNC (SYSDATE) --modified by pjsantos 10/11/2016, for optimization GENQA 5688
         THEN
            v_extracted.expiry_flag := 'true';
         ELSE
            v_extracted.expiry_flag := 'false';
         END IF;

         IF /*i.post_flag*/v_extracted.post_flag = 'Y'
         THEN
            v_extracted.post_flag := 'true';
         ELSE
            v_extracted.post_flag := 'false';
         END IF;
         
         
         DECLARE
           v_tsi_amt    gipi_itmperil.tsi_amt%TYPE := 0;
           v_prem_amt   gipi_itmperil.prem_amt%TYPE := 0;
           v_exist      VARCHAR2(1);
           v_currency   giex_itmperil.currency_rt%TYPE;
           v_ren_tsi_amt  giex_expiry.ren_tsi_amt%TYPE;
           v_ren_prem_amt giex_expiry.ren_prem_amt%TYPE;
           --v_round_off    giis_parameters.param_value_n%TYPE; removed by pjsantos 10/10/2016 for optimization, GENQA 5688
        BEGIN
           -- get the round off parameter value
           BEGIN
              SELECT DECODE (param_value_n,
                             10, -1,
                             100, -2,
                             1000, -3,
                             10000, -4,
                             100000, -5,
                             1000000, -6,
                             9
                            )
                INTO v_round_off
                FROM giis_parameters
               WHERE param_name = 'ROUND_OFF_PLACE';
           EXCEPTION
              WHEN NO_DATA_FOUND
              THEN
                 v_round_off := 9;
           END;--Moved to top by  pjsantos 10/10/2016 for optimization, GENQA 5688

           IF /*i.is_package*/v_extracted.is_package = 'Y'
           THEN
              FOR A IN (SELECT ann_prem_amt,
                               ann_tsi_amt,
                               prem_amt,
                               tsi_amt
                          FROM gipi_pack_polbasic
                         WHERE pack_policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
              LOOP
                 IF NVL (/*i.summary_sw*/v_extracted.summary_sw, 'Y') = 'N'--'N') = 'N', default is 'Y'
                 THEN
                    v_extracted.prem_amt := NVL (a.ann_prem_amt, 0);
                    v_extracted.tsi_amt := a.ann_tsi_amt;
                 ELSE
                    v_extracted.prem_amt := /*i.prem_amt*/v_extracted.prem_amt;--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                    v_extracted.tsi_amt := /*i.tsi_amt*/v_extracted.tsi_amt;--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                 END IF;

                 EXIT;
              END LOOP;
           ELSE
              FOR A IN (SELECT line_cd,
                               subline_cd,
                               iss_cd,
                               issue_yy,
                               pol_seq_no,
                               renew_no,
                               par_id,
                               ann_prem_amt,
                               ann_tsi_amt,
                               prem_amt,
                               tsi_amt
                          FROM gipi_polbasic
                         WHERE policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
              LOOP
                 IF NVL (/*i.summary_sw*/v_extracted.summary_sw, 'Y') = 'N'--'N') = 'N', default is 'Y'
                 THEN
                    v_extracted.prem_amt := NVL (a.ann_prem_amt, 0);
                    v_extracted.tsi_amt := a.ann_tsi_amt;
                 ELSE
                    v_extracted.prem_amt := /*i.prem_atm*/v_extracted.prem_amt;--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                    v_extracted.tsi_amt := /*i.tsi_amt*/v_extracted.tsi_amt;--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                 END IF;

                 EXIT;
              END LOOP;

             /*   FOR curr IN (SELECT DISTINCT NVL(currency_rt, 1) currency_rt
                              FROM giex_old_group_itmperil
                             WHERE policy_id = i.policy_id)
                LOOP
                    v_currency := curr.currency_rt;
                END LOOP;*/

              IF NVL (/*i.summary_sw*/v_extracted.summary_sw, 'Y') = 'N' THEN
                  FOR x IN (SELECT '1'
                              FROM gipi_polbasic
                             WHERE policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                  LOOP
                    FOR gi IN (SELECT '1'
                              FROM giex_new_group_peril
                             WHERE policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                    LOOP
                        v_exist := 'Y';
                        EXIT;
                    END LOOP;

                    IF  v_exist = 'Y' THEN   --for policy edited in GIEXS007
                         FOR a
                            IN (SELECT tsi_amt AS ren_tsi_amt,
                                       prem_amt AS ren_prem_amt,
                                       peril_type,
                                       gi.line_cd AS line_cd,
                                       gi.peril_cd AS peril_cd
                                  FROM giex_new_group_peril gi,
                                       giis_peril gp
                                 WHERE     gi.line_cd = gp.line_cd
                                       AND gi.peril_cd = gp.peril_cd
                                       AND gi.policy_id = /*i.policy_id*/V_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                         LOOP
                            IF a.peril_type = 'B'
                            THEN
                               v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                            END IF;

                            v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                         END LOOP;
                    ELSE
                         FOR a
                            IN (SELECT gi.tsi_amt,                          --modified by pjsantos 10/10/2016, GENQA 2016
                                       gi.prem_amt,                         --modified by pjsantos 10/10/2016, GENQA 2016
                                       gi.tsi_amt AS ren_tsi_amt,           --modified by pjsantos 10/10/2016, GENQA 2016
                                       gi.ann_prem_amt AS ren_prem_amt,     --modified by pjsantos 10/10/2016, GENQA 2016
                                       peril_type,
                                       gi.line_cd AS line_cd,
                                       gi.peril_cd AS peril_cd,
                                       gi.prem_rt,                          --modified by pjsantos 10/10/2016, GENQA 2016
                                       gogi.currency_rt,                    --added by pjsantos 10/10/2016, GENQA 5688
                                       gi.item_no                           --benjo 11.24.2016 SR-5278
                                  FROM gipi_itmperil gi, giis_peril gp, giex_old_group_itmperil gogi --added by pjsantos 10/10/2016, GENQA 5688
                                 WHERE     gi.line_cd = gp.line_cd
                                       AND gi.peril_cd = gp.peril_cd
                                       AND gi.policy_id = /*i.policy_id*/ v_extracted.policy_id--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                                       AND gi.peril_cd = gogi.peril_cd  --added by pjsantos 10/10/2016, GENQA 5688
                                       AND gi.policy_id = gogi.policy_id--added by pjsantos 10/10/2016, GENQA 5688
                                       AND gi.item_no = gogi.item_no)   --added by pjsantos 10/10/2016, GENQA 5688
                         LOOP
--                            FOR b
--                               IN (SELECT NVL (rate, 0) rate
--                                     FROM giex_dep_perl b
--                                    WHERE     b.line_cd = a.line_cd
--                                          AND b.peril_cd = a.peril_cd
--                                          AND /*Giisp.v ('AUTO_COMPUTE_MC_DEP')*/v_auto_compute_mc_dep =
--                                                 'Y')--modified by pjsantos 10/10/2016 for optimization GENQA 5688
--                            LOOP
--                               IF b.rate <> 0 THEN
--                                   v_ren_tsi_amt:=
--                                      ROUND((a.ren_tsi_amt - (a.ren_tsi_amt * (b.rate / 100))), v_round_off) * /*v_*/a.currency_rt;--modified by pjsantos 10/11/2016, for optimization GENQA 5688
--                                   v_ren_prem_amt :=
--                                      ((ROUND((a.ren_tsi_amt - (a.ren_tsi_amt * (b.rate / 100))), v_round_off)) * (a.prem_rt / 100) ) * /*v_*/a.currency_rt;--modified by pjsantos 10/11/2016, for optimization GENQA 5688
--                               END IF;
--                            END LOOP; --benjo 11.24.2016 SR-5278 comment out
                            
                            /* benjo 11.24.2016 SR-5278 */
                            v_ren_tsi_amt:= a.ren_tsi_amt * a.currency_rt;
                            compute_depreciation_amounts (v_extracted.policy_id, a.item_no, a.line_cd, a.peril_cd, v_ren_tsi_amt);
                            v_ren_prem_amt := v_ren_tsi_amt * (a.prem_rt/100);
                            /* end SR-5278 */

                            IF a.peril_type = 'B'
                            THEN
                               v_tsi_amt := v_tsi_amt + NVL(v_ren_tsi_amt, 0);
                            END IF;

                            v_prem_amt := v_prem_amt + NVL (v_ren_prem_amt, 0);
                         END LOOP;
                     END IF;
                     v_extracted.prem_amt := v_prem_amt;
                     v_extracted.tsi_amt := v_tsi_amt;
                  END LOOP;
              ELSE
                 FOR x IN (SELECT '1'
                              FROM giex_expiry
                             WHERE policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                 LOOP
                    FOR gi IN (SELECT '1'
                              FROM giex_new_group_peril
                             WHERE policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                    LOOP
                        v_exist := 'Y';
                        EXIT;
                    END LOOP;

                    IF  v_exist = 'Y' THEN   --for policy edited in GIEXS007
                         FOR a
                            IN (SELECT tsi_amt AS ren_tsi_amt,
                                       prem_amt AS ren_prem_amt,
                                       peril_type,
                                       gi.line_cd AS line_cd,
                                       gi.peril_cd AS peril_cd
                                  FROM giex_new_group_peril gi,
                                       giis_peril gp
                                 WHERE     gi.line_cd = gp.line_cd
                                       AND gi.peril_cd = gp.peril_cd
                                       AND gi.policy_id = /*i.policy_id*/ v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                         LOOP
                            IF a.peril_type = 'B'
                            THEN
                               v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                            END IF;

                            v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                         END LOOP;
                    ELSE
                        FOR a
                            IN (SELECT gi.tsi_amt AS ren_tsi_amt,
                                       gi.prem_amt AS ren_prem_amt,
                                       gp.peril_type,
                                       gi.line_cd AS line_cd,
                                       gi.peril_cd AS peril_cd
                                  FROM giex_old_group_peril gi,
                                        giis_peril gp
                                 WHERE     gi.line_cd = gp.line_cd
                                       AND gi.peril_cd = gp.peril_cd
                                       AND gi.policy_id = /*i.policy_id*/v_extracted.policy_id)--modified by pjsantos 10/11/2016, for optimization GENQA 5688
                         LOOP
                            IF a.peril_type = 'B'
                            THEN
                               v_tsi_amt := NVL (a.ren_tsi_amt, 0) + v_tsi_amt;
                            END IF;

                            v_prem_amt := NVL (a.ren_prem_amt, 0) + v_prem_amt;
                         END LOOP;
                    END IF;
                        v_extracted.prem_amt := v_prem_amt;
                        v_extracted.tsi_amt := v_tsi_amt;
                 END LOOP; 
              END IF;
           END IF;
        END;     
        v_extracted.expiry_date := TO_CHAR(v_extracted.expiry_date_temp,'MM-DD-YYYY'); --added by pjsantos 10/11/2016, for optimization GENQA 5688
 
        
         EXIT WHEN c%NOTFOUND;
         PIPE ROW (v_extracted);
      END LOOP;
      
      CLOSE c;
     RETURN;
   END;

   /*
   ** Created by    : Marco Paolo Rebong
   ** Created date  : March 20, 2012
   ** Referenced by : (GIEXS003 - Purge Extract Table)
   ** Description   : Purges Extracted Policies (no parameters)
   */
   PROCEDURE purge_based_not_param (
      p_user_id         GIIS_USERS.user_id%TYPE,
      p_all_user        GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw          GIIS_USERS.mis_sw%TYPE,
      p_all_exp_proc    VARCHAR2,
      p_all_unproc      VARCHAR2)
   IS
      v_all_user        VARCHAR2(1)             := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
   v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_all_unproc = 'Y'
      THEN
         DELETE FROM giex_rn_no a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));
         DELETE FROM giex_old_group_peril a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_new_group_peril a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_old_group_deductibles a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_new_group_deductibles a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_old_group_tax a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_new_group_tax a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_itmperil a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_itmperil_grouped a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

        --joanne 112813
         DELETE FROM giex_auto_ren_group_tax a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                                AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));

         DELETE FROM giex_old_group_itmperil a
               WHERE EXISTS
                        (SELECT '1'
                           FROM giex_expiry b
                          WHERE     a.policy_id = b.policy_id
                                AND b.pack_policy_id IS NULL
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL));
        --end joanne 112813

         DELETE FROM giex_expiry
               WHERE     NVL (post_flag, 'N') = 'N'
                     AND policy_id > 0
                     AND pack_policy_id IS NULL
                     AND DECODE (v_all_user/*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                            extract_user
                     AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                            p_user_id
                     AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

         -------------PACKAGE DELETION--------------
         DELETE FROM giex_rn_no x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_old_group_peril x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_new_group_peril x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_old_group_deductibles x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_new_group_deductibles x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_old_group_tax x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_new_group_tax x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_itmperil x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_itmperil_grouped x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

        --joanne 112813
         DELETE FROM giex_auto_ren_group_tax x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                               AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         DELETE FROM giex_old_group_itmperil x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a, giex_expiry b
                          WHERE     a.pack_policy_id = b.pack_policy_id
                                AND x.policy_id = b.policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                               AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
        --end joanne 112813

         DELETE FROM giex_expiry x
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry a
                          WHERE     a.pack_policy_id = x.pack_policy_id
                                AND NVL (a.post_flag, 'N') = 'N'
                                AND a.pack_policy_id > 0
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', a.extract_user,
                                            p_user_id) = a.extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            a.extract_user) = p_user_id
                                            AND a.line_cd = DECODE(check_user_per_line2(a.line_cd, UPPER(a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                               AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

         -------------PACKAGE DELETION END----------

         DELETE FROM giex_pack_rn_no a
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry b
                          WHERE     1 = 1
                                AND a.pack_policy_id = b.pack_policy_id
                                AND NVL (post_flag, 'N') = 'N'
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                            AND b.line_cd = DECODE(check_user_per_line2(b.line_cd, UPPER(b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                               AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

         DELETE FROM giex_pack_expiry
               WHERE     NVL (post_flag, 'N') = 'N'
                     AND pack_policy_id > 0
                     AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                            extract_user
                     AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                            p_user_id
                     AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                     AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

      END IF;

      IF p_all_exp_proc = 'Y'
      THEN
         FOR A1
            IN (SELECT policy_id
                  FROM giex_expiry
                 WHERE     NVL (post_flag, 'N') = 'Y'
                       AND pack_policy_id IS NULL
                       AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                       AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                              extract_user
                       AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                              p_user_id
                       AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                     AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL))
         LOOP
            FOR A2
               IN (SELECT line_cd,
                          subline_cd,
                          iss_cd,
                          issue_yy,
                          pol_seq_no,
                          renew_no
                     FROM gipi_polbasic
                    WHERE policy_id = a1.policy_id AND pack_policy_id IS NULL)
            LOOP
               UPDATE gipi_polbasic
                  SET pol_flag = 'X'
                WHERE     line_cd = a2.line_cd
                      AND subline_cd = a2.subline_cd
                      AND iss_cd = a2.iss_cd
                      AND issue_yy = a2.issue_yy
                      AND pol_seq_no = a2.pol_seq_no
                      AND renew_no = a2.renew_no
                      AND pol_flag IN ('1', '2', '3')
                      AND pack_policy_id IS NULL;
            END LOOP;

            DELETE FROM giex_rn_no
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_old_group_peril
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_new_group_peril
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_old_group_deductibles
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_new_group_deductibles
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_old_group_tax
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_new_group_tax
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_itmperil
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_itmperil_grouped
                  WHERE policy_id = a1.policy_id;

            --joanne 112813
            DELETE FROM giex_auto_ren_group_tax
                  WHERE policy_id = a1.policy_id;

            DELETE FROM giex_old_group_itmperil
                  WHERE policy_id = a1.policy_id;
            --end joanne 112813
         END LOOP;

         DELETE FROM giex_expiry
               WHERE     NVL (post_flag, 'N') = 'Y'
                     AND pack_policy_id IS NULL
                     AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                     AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                            extract_user
                     AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                            p_user_id
                     AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                     AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

         FOR pack_dtls
            IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                  FROM giex_pack_expiry a, giex_expiry b
                 WHERE     a.pack_policy_id = b.pack_policy_id
                       AND NVL (a.post_flag, 'N') = 'Y'
                       AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                       AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                   'Y', a.extract_user,
                                   p_user_id) = a.extract_user
                       AND DECODE (p_mis_sw, 'Y', p_user_id, a.extract_user) =
                              p_user_id
                       AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                      AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
         LOOP
            FOR A2 IN (SELECT line_cd,
                              subline_cd,
                              iss_cd,
                              issue_yy,
                              pol_seq_no,
                              renew_no
                         FROM gipi_pack_polbasic
                        WHERE pack_policy_id = pack_dtls.pack_policy_id)
            LOOP
               UPDATE gipi_pack_polbasic
                  SET pol_flag = 'X'
                WHERE     line_cd = a2.line_cd
                      AND subline_cd = a2.subline_cd
                      AND iss_cd = a2.iss_cd
                      AND issue_yy = a2.issue_yy
                      AND pol_seq_no = a2.pol_seq_no
                      AND renew_no = a2.renew_no
                      AND pol_flag IN ('1', '2', '3');
            END LOOP;

            -------------PACKAGE_DELETION---------------
            DELETE giex_rn_no x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_old_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_new_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_old_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_new_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_old_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_new_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_itmperil_grouped x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            --joanne 112813
            DELETE giex_old_group_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);

            DELETE giex_auto_ren_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND b.pack_policy_id = pack_dtls.pack_policy_id);
            --end joanne 112813

            DELETE giex_expiry x
             WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
         -------------PACKAGE_DELETION---------------

         END LOOP;

         DELETE FROM giex_pack_rn_no a
               WHERE EXISTS
                        (SELECT 1
                           FROM giex_pack_expiry b
                          WHERE     1 = 1
                                AND a.pack_policy_id = b.pack_policy_id
                                AND NVL (post_flag, 'N') = 'Y'
                                AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                            'Y', extract_user,
                                            p_user_id) = extract_user
                                AND DECODE (p_mis_sw,
                                            'Y', p_user_id,
                                            extract_user) = p_user_id
                                AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

         DELETE FROM giex_pack_expiry
               WHERE     NVL (post_flag, 'N') = 'Y'
                     AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                     AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                            extract_user
                     AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                            p_user_id
                      AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                      AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
      END IF;
   END;

   PROCEDURE purge_based_not_time (
      p_user_id         GIIS_USERS.user_id%TYPE,
      p_all_user        GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw          GIIS_USERS.mis_sw%TYPE,
      p_all_exp_proc    VARCHAR2,
      p_all_unproc      VARCHAR2,
      p_line_cd         GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd      GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd          GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy        GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no      GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no        GIEX_EXPIRIES_V.renew_no%TYPE,
      p_intm_no         GIEX_EXPIRIES_V.intm_no%TYPE)
   IS
      v_all_user        VARCHAR2(1) := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
   v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_all_unproc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --joanne 112813
            DELETE giex_auto_ren_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end joanne 112813

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'N'
                        AND a.pack_policy_id IS NULL
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                        AND a.intm_no in (SELECT a.intm_no
                                                FROM gipi_comm_invoice b
                                               WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            ------------------------PACKAGE DELETION----------------------------
            DELETE giex_rn_no x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil_grouped x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --joanne 112813
            DELETE giex_auto_ren_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --end joanne 112813

            DELETE giex_expiry x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            ------------------------PACKAGE DELETION----------------------------
            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         --AND extract_user = :CG$CTRL.CGU$p_user_id;
         ELSE
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            -------------------------------------------------------------------------------------------------------------
            --added by totel
            --4/3/2007
            --edited this module(GIEXS003 6/27/2006) at FGIC
            --this will delete records on table giex_itmperil
            --in order to delete records from table giex_expiry due to referential key EXPIRY_ITMPERIL_FK of table giex_itmperil
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            -------------------------------------------------------------------------------------------------------------

            --joanne 112813
            DELETE giex_auto_ren_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end joanne 112813
            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND pack_policy_id IS NULL
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            /* added by gmi*/
            ------------------------PACKAGE DELETION----------------------------
            DELETE giex_rn_no x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil_grouped x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --joanne 112813
            DELETE giex_auto_ren_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end joanne 112813

            DELETE giex_expiry x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     a.pack_policy_id = b.pack_policy_id
                              AND b.policy_id = x.policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            ------------------------PACKAGE DELETION----------------------------
            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         --AND extract_user = :CG$CTRL.CGU$p_user_id;
         END IF;
      END IF;

      IF p_all_exp_proc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            FOR A1
               IN (SELECT a.policy_id
                     FROM giex_expiry a
                    WHERE     NVL (a.post_flag, 'N') = 'Y'
                          AND a.pack_policy_id IS NULL
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                          AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.2015
                          AND a.intm_no in (SELECT a.intm_no
                                              FROM gipi_comm_invoice b
                                             WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

               --joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --end joanne 112813
            END LOOP;

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'Y'
                        AND a.pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.2015
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            /*added by gmi        */
            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id            --, b.policy_id
                     FROM giex_pack_expiry a                 --, giex_expiry b
                    WHERE     1 = 1      --a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

              --joanne 112813
               DELETE giex_auto_ren_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
              --end joanne 112813

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         --AND extract_user = :CG$CTRL.CGU$p_user_id;
         ELSE
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry
                    WHERE     NVL (post_flag, 'N') = 'Y'
                          AND pack_policy_id IS NULL
                          AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                          AND line_cd = NVL (p_line_cd, line_cd)
                          AND subline_cd = NVL (p_subline_cd, subline_cd)
                          AND iss_cd = NVL (p_iss_cd, iss_cd)
                          AND    line_cd
                              || subline_cd
                              || iss_cd
                              || issue_yy
                              || pol_seq_no
                              || renew_no =
                                    NVL (p_line_cd, line_cd)
                                 || NVL (p_subline_cd, subline_cd)
                                 || NVL (p_iss_cd, iss_cd)
                                 || NVL (p_issue_yy, issue_yy)
                                 || NVL (p_pol_seq_no, pol_seq_no)
                                 || NVL (p_renew_no, renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

               --joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --end joanne 112813
            END LOOP;

            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            /*added by gmi */
            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id            --, b.policy_id
                     FROM giex_pack_expiry a                 --, giex_expiry b
                    WHERE     1 = 1      --a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND    a.line_cd
                              || a.subline_cd
                              || a.iss_cd
                              || a.issue_yy
                              || a.pol_seq_no
                              || a.renew_no =
                                    NVL (p_line_cd, a.line_cd)
                                 || NVL (p_subline_cd, a.subline_cd)
                                 || NVL (p_iss_cd, a.iss_cd)
                                 || NVL (p_issue_yy, a.issue_yy)
                                 || NVL (p_pol_seq_no, a.pol_seq_no)
                                 || NVL (p_renew_no, a.renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               --joanne 112813
               DELETE giex_auto_ren_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
               --end joanne 112813

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;
   END;

   PROCEDURE purge_based_on_before_month (
      p_user_id         GIIS_USERS.user_id%TYPE,
      p_all_user        GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw          GIIS_USERS.mis_sw%TYPE,
      p_all_exp_proc    VARCHAR2,
      p_all_unproc      VARCHAR2,
      p_line_cd         GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd      GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd          GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy        GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no      GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no        GIEX_EXPIRIES_V.renew_no%TYPE,
      p_intm_no         GIEX_EXPIRIES_V.intm_no%TYPE,
      p_from_month      VARCHAR2,
      p_from_year       VARCHAR2)
   IS
      v_all_user        VARCHAR2(1)             := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
   v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_all_unproc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --delete_on_purge_onbefore(1,p_all_user, p_mis_sw, p_line_cd, p_subline_cd, p_iss_cd,
            --                        p_issue_yy, p_pol_seq_no, p_renew_no, p_intm_no, p_from_month, p_from_year,p_user_id); -- added by joanne 112813
            --Added by Joanne, 010914
            DELETE giex_auto_ren_group_tax a
               WHERE EXISTS ( SELECT '1'
                                   FROM giex_expiry b
                             WHERE a.policy_id = b.policy_id AND b.pack_policy_id IS NULL
                            AND NVL(post_flag, 'N') = 'N'
                                    AND TO_DATE(TO_CHAR(expiry_date,'MM-YYYY'),'MM-YYYY')
                                          <= TO_DATE(LTRIM(LPAD(p_from_month,2,'0'))||'-'||
                                          LTRIM(TO_CHAR(p_from_year,'0999')),'MM-YYYY')
                              AND b.line_cd = NVL(p_line_cd, b.line_cd)
                              AND b.subline_cd = NVL(p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL(p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            DELETE giex_old_group_itmperil a
               WHERE EXISTS ( SELECT '1'
                                   FROM giex_expiry b
                             WHERE a.policy_id = b.policy_id AND b.pack_policy_id IS NULL
                            AND NVL(post_flag, 'N') = 'N'
                                    AND TO_DATE(TO_CHAR(expiry_date,'MM-YYYY'),'MM-YYYY')
                                          <= TO_DATE(LTRIM(LPAD(p_from_month,2,'0'))||'-'||
                                          LTRIM(TO_CHAR(p_from_year,'0999')),'MM-YYYY')
                              AND b.line_cd = NVL(p_line_cd, b.line_cd)
                              AND b.subline_cd = NVL(p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL(p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)

                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end by Joanne, 010914

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'N'
                        AND a.pack_policy_id IS NULL
                        AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)

                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            -------------PACKAGE_DELETION---------------
            DELETE giex_rn_no x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil_grouped x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

             --delete_on_purge_onbefore(2,p_all_user, p_mis_sw, p_line_cd, p_subline_cd, p_iss_cd,
             --                       p_issue_yy, p_pol_seq_no, p_renew_no, p_intm_no, p_from_month, p_from_year,p_user_id); -- added by joanne 112813
            --Added by Joanne, 010914
            DELETE      giex_auto_ren_group_tax x
                  WHERE EXISTS (
                           SELECT '1'
                             FROM giex_pack_expiry a, giex_expiry b
                            WHERE x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'), 'MM-YYYY') <=
                                     TO_DATE (   LTRIM (LPAD (p_from_month, 2, '0'))
                                              || '-'
                                              || LTRIM (TO_CHAR (p_from_year, '0999')),
                                              'MM-YYYY'
                                             )
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            DELETE      giex_old_group_itmperil x
                  WHERE EXISTS (
                           SELECT '1'
                             FROM giex_pack_expiry a, giex_expiry b
                            WHERE x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'), 'MM-YYYY') <=
                                     TO_DATE (   LTRIM (LPAD (p_from_month, 2, '0'))
                                              || '-'
                                              || LTRIM (TO_CHAR (p_from_year, '0999')),
                                              'MM-YYYY'
                                             )
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end by joanne 010914

            DELETE giex_expiry x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND a.intm_no = p_intm_no
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE_DELETION---------------
            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            -- delete_on_purge_onbefore(3,p_all_user, p_mis_sw, p_line_cd, p_subline_cd, p_iss_cd,
            --                        p_issue_yy, p_pol_seq_no, p_renew_no, p_intm_no, p_from_month, p_from_year,p_user_id); -- added by joanne 112813
            --Added by Joanne, 010914
            DELETE giex_auto_ren_group_tax a
              WHERE EXISTS ( SELECT '1'
                               FROM giex_expiry b
                         WHERE a.policy_id = b.policy_id AND b.pack_policy_id IS NULL
                           AND NVL(post_flag, 'N') = 'N'
                                    AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (
                                          LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (
                                          TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                           AND b.line_cd = NVL(p_line_cd, b.line_cd)
                           AND b.subline_cd = NVL(p_subline_cd, b.subline_cd)
                           AND b.iss_cd = NVL(p_iss_cd, b.iss_cd)
                                              AND b.line_cd || b.subline_cd || b.iss_cd || b.issue_yy ||
                                                       b.pol_seq_no || b.renew_no = NVL(p_line_cd,line_cd)
                                                  || NVL(p_subline_cd,subline_cd)
                                                || NVL(p_iss_cd,iss_cd)
                                                || NVL(p_issue_yy,issue_yy)
                                                || NVL(p_pol_seq_no,pol_seq_no)
                                                || NVL(p_renew_no,renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_itmperil a
              WHERE EXISTS ( SELECT '1'
                               FROM giex_expiry b
                         WHERE a.policy_id = b.policy_id AND b.pack_policy_id IS NULL
                           AND NVL(post_flag, 'N') = 'N'
                                    AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (
                                          LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (
                                          TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                           AND b.line_cd = NVL(p_line_cd, b.line_cd)
                           AND b.subline_cd = NVL(p_subline_cd, b.subline_cd)
                           AND b.iss_cd = NVL(p_iss_cd, b.iss_cd)
                                              AND b.line_cd || b.subline_cd || b.iss_cd || b.issue_yy ||
                                                       b.pol_seq_no || b.renew_no = NVL(p_line_cd,line_cd)
                                                  || NVL(p_subline_cd,subline_cd)
                                                || NVL(p_iss_cd,iss_cd)
                                                || NVL(p_issue_yy,issue_yy)
                                                || NVL(p_pol_seq_no,pol_seq_no)
                                                || NVL(p_renew_no,renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end by joanne, 010914

            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND pack_policy_id IS NULL
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            -------------PACKAGE_DELETION---------------
            DELETE giex_rn_no x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_peril x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_deductibles x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_old_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_new_group_tax x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE giex_itmperil_grouped x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -- delete_on_purge_onbefore(4,p_all_user, p_mis_sw, p_line_cd, p_subline_cd, p_iss_cd,
            --                        p_issue_yy, p_pol_seq_no, p_renew_no, p_intm_no, p_from_month, p_from_year,p_user_id); -- added by joanne 112813
            --Added by Joanne, 010914
            DELETE      giex_auto_ren_group_tax x
                  WHERE EXISTS (
                           SELECT '1'
                             FROM giex_pack_expiry a, giex_expiry b
                            WHERE x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND TO_DATE (
                                 TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                 'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (
                                          LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (
                                          TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            DELETE      giex_old_group_itmperil x
                  WHERE EXISTS (
                           SELECT '1'
                             FROM giex_pack_expiry a, giex_expiry b
                            WHERE x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                 TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                 'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (
                                          LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (
                                          TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end by joanne 010914

            DELETE giex_expiry x
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE     x.policy_id = b.policy_id
                              AND a.pack_policy_id = b.pack_policy_id
                              AND NVL (a.post_flag, 'N') = 'N'
                              AND TO_DATE (
                                     TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND a.line_cd = NVL (p_line_cd, a.line_cd)
                              AND a.subline_cd =
                                     NVL (p_subline_cd, a.subline_cd)
                              AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                              AND    a.line_cd
                                  || a.subline_cd
                                  || a.iss_cd
                                  || a.issue_yy
                                  || a.pol_seq_no
                                  || a.renew_no =
                                        NVL (p_line_cd, a.line_cd)
                                     || NVL (p_subline_cd, a.subline_cd)
                                     || NVL (p_iss_cd, a.iss_cd)
                                     || NVL (p_issue_yy, a.issue_yy)
                                     || NVL (p_pol_seq_no, a.pol_seq_no)
                                     || NVL (p_renew_no, a.renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', a.extract_user,
                                          p_user_id) = a.extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          a.extract_user) = p_user_id
                              AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                              AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE_DELETION---------------
            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;

      IF p_all_exp_proc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry a
                    WHERE     NVL (a.post_flag, 'N') = 'Y'
                          AND a.pack_policy_id IS NULL
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                          AND intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                          AND a.intm_no in (SELECT a.intm_no
                                              FROM gipi_comm_invoice b
                                             WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

                --added joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --ended ejoanne 112813
            END LOOP;

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'Y'
                        AND a.pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.2015
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;

              --added joanne 112813
                DELETE giex_auto_ren_group_tax x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

                DELETE giex_old_group_itmperil x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
                --ended joanne 112813
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

         ELSE
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry
                    WHERE     NVL (post_flag, 'N') = 'Y'
                          AND pack_policy_id IS NULL
                          AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND line_cd = NVL (p_line_cd, line_cd)
                          AND subline_cd = NVL (p_subline_cd, subline_cd)
                          AND iss_cd = NVL (p_iss_cd, iss_cd)
                          AND    line_cd
                              || subline_cd
                              || iss_cd
                              || issue_yy
                              || pol_seq_no
                              || renew_no =
                                    NVL (p_line_cd, line_cd)
                                 || NVL (p_subline_cd, subline_cd)
                                 || NVL (p_iss_cd, iss_cd)
                                 || NVL (p_issue_yy, issue_yy)
                                 || NVL (p_pol_seq_no, pol_seq_no)
                                 || NVL (p_renew_no, renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                          AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL))
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

               --added joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --ended joanne 112813
            END LOOP;

            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND    a.line_cd
                              || a.subline_cd
                              || a.iss_cd
                              || a.issue_yy
                              || a.pol_seq_no
                              || a.renew_no =
                                    NVL (p_line_cd, a.line_cd)
                                 || NVL (p_subline_cd, a.subline_cd)
                                 || NVL (p_iss_cd, a.iss_cd)
                                 || NVL (p_issue_yy, a.issue_yy)
                                 || NVL (p_pol_seq_no, a.pol_seq_no)
                                 || NVL (p_renew_no, a.renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

              --added joanne 112813
                DELETE giex_auto_ren_group_tax x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

                DELETE giex_old_group_itmperil x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
                --ended joanne 112813

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;
   END;

   PROCEDURE purge_based_on_before_date (
      p_user_id         GIIS_USERS.user_id%TYPE,
      p_all_user        GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw          GIIS_USERS.mis_sw%TYPE,
      p_all_exp_proc    VARCHAR2,
      p_all_unproc      VARCHAR2,
      p_line_cd         GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd      GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd          GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy        GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no      GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no        GIEX_EXPIRIES_V.renew_no%TYPE,
      p_intm_no         GIEX_EXPIRIES_V.intm_no%TYPE,
      p_from_date       VARCHAR2)
   IS
      v_all_user        VARCHAR2(1)             := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
   v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_all_unproc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND intm_no = p_intm_no
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --added by joanne 112813
            DELETE giex_auto_ren_group_tax a
              WHERE EXISTS (
                       SELECT '1'
                         FROM giex_expiry b
                        WHERE a.policy_id = b.policy_id
                          AND b.pack_policy_id IS NULL
                          AND NVL (post_flag, 'N') = 'N'
                          AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND b.line_cd = NVL (p_line_cd, b.line_cd)
                          AND b.subline_cd = NVL (p_subline_cd, b.subline_cd)
                          AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                          AND b.intm_no in (SELECT b.intm_no
                                              FROM gipi_comm_invoice c
                                             WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                          AND decode(p_mis_sw,'Y',p_user_id,decode(v_all_user /*p_all_user joanne 06.25.14*/,'Y',p_user_id,extract_user)) = p_user_id
                          AND check_user_per_iss_cd2 (b.line_cd,
                                                     b.iss_cd,
                                                     'GIEXS003',p_user_id
                                                    ) = 1);
            DELETE giex_old_group_itmperil a
              WHERE EXISTS (
                       SELECT '1'
                         FROM giex_expiry b
                        WHERE a.policy_id = b.policy_id
                          AND b.pack_policy_id IS NULL
                          AND NVL (post_flag, 'N') = 'N'
                          AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND b.line_cd = NVL (p_line_cd, b.line_cd)
                          AND b.subline_cd = NVL (p_subline_cd, b.subline_cd)
                          AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                          AND b.intm_no in (SELECT b.intm_no
                                              FROM gipi_comm_invoice c
                                             WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                          AND decode(p_mis_sw,'Y',p_user_id,decode(v_all_user /*p_all_user joanne 06.25.14*/,'Y',p_user_id,extract_user)) = p_user_id
                          AND check_user_per_iss_cd2 (b.line_cd,
                                                     b.iss_cd,
                                                     'GIEXS003',p_user_id
                                                    ) = 1);
            --end by joanne 112813

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'N'
                        AND pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.215
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            -------------PACKAGE DELETION--------------
            DELETE FROM giex_rn_no x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil_grouped x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --added by joanne 112813
            DELETE FROM giex_auto_ren_group_tax x
              WHERE EXISTS (
                       SELECT 1
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE a.pack_policy_id = b.pack_policy_id
                          AND x.policy_id = b.policy_id
                          AND NVL (a.post_flag, 'N') = 'N'
                          AND TRUNC (a.expiry_date) <=
                                                 TRUNC (
                                                    TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND decode(p_mis_sw,'Y',p_user_id,decode(v_all_user /*p_all_user joanne 06.25.14*/,'Y',p_user_id,a.extract_user)) = p_user_id
                          AND check_user_per_iss_cd2 (a.line_cd, a.iss_cd, 'GIEXS003', p_user_id) = 1);  --marco - 09.02.2014 - from USER to p_user_id

            DELETE FROM giex_old_group_itmperil x
              WHERE EXISTS (
                       SELECT 1
                         FROM giex_pack_expiry a, giex_expiry b
                        WHERE a.pack_policy_id = b.pack_policy_id
                          AND x.policy_id = b.policy_id
                          AND NVL (a.post_flag, 'N') = 'N'
                          AND TRUNC (a.expiry_date) <=
                                                 TRUNC (
                                                    TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND decode(p_mis_sw,'Y',p_user_id,decode(v_all_user /*p_all_user joanne 06.25.14*/,'Y',p_user_id,a.extract_user)) = p_user_id
                          AND check_user_per_iss_cd2 (a.line_cd, a.iss_cd, 'GIEXS003', p_user_id) = 1); --marco - 09.02.2014 - from USER to p_user_id
            --end joanne 112813

            DELETE FROM giex_expiry x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a
                             WHERE     a.pack_policy_id = x.pack_policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE DELETION END----------
            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --added by joanne 112813
            DELETE giex_auto_ren_group_tax a
              WHERE EXISTS
                (SELECT '1'
                     FROM giex_expiry b
                    WHERE     a.policy_id = b.policy_id
                          AND b.pack_policy_id IS NULL
                          AND NVL (post_flag, 'N') = 'N'
                          AND TRUNC (expiry_date) <=
                                 TRUNC (
                                    TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND b.line_cd = NVL (p_line_cd, b.line_cd)
                          AND b.subline_cd =
                                 NVL (p_subline_cd, b.subline_cd)
                          AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                          AND    b.line_cd
                              || b.subline_cd
                              || b.iss_cd
                              || b.issue_yy
                              || b.pol_seq_no
                              || b.renew_no =
                                    NVL (p_line_cd, line_cd)
                                 || NVL (p_subline_cd, subline_cd)
                                 || NVL (p_iss_cd, iss_cd)
                                 || NVL (p_issue_yy, issue_yy)
                                 || NVL (p_pol_seq_no, pol_seq_no)
                                 || NVL (p_renew_no, renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      extract_user) = p_user_id
                          AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                          AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_itmperil a
              WHERE EXISTS
                (SELECT '1'
                     FROM giex_expiry b
                    WHERE     a.policy_id = b.policy_id
                          AND b.pack_policy_id IS NULL
                          AND NVL (post_flag, 'N') = 'N'
                          AND TRUNC (expiry_date) <=
                                 TRUNC (
                                    TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND b.line_cd = NVL (p_line_cd, b.line_cd)
                          AND b.subline_cd =
                                 NVL (p_subline_cd, b.subline_cd)
                          AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                          AND    b.line_cd
                              || b.subline_cd
                              || b.iss_cd
                              || b.issue_yy
                              || b.pol_seq_no
                              || b.renew_no =
                                    NVL (p_line_cd, line_cd)
                                 || NVL (p_subline_cd, subline_cd)
                                 || NVL (p_iss_cd, iss_cd)
                                 || NVL (p_issue_yy, issue_yy)
                                 || NVL (p_pol_seq_no, pol_seq_no)
                                 || NVL (p_renew_no, renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      extract_user) = p_user_id
                          AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                          AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end by joanne 112813
            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            -------------PACKAGE DELETION--------------
            DELETE FROM giex_rn_no x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil_grouped x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --added by joanne 112913
            DELETE FROM giex_auto_ren_group_tax x
              WHERE EXISTS
              (SELECT 1
                      FROM giex_pack_expiry a, giex_expiry b
                     WHERE     a.pack_policy_id = b.pack_policy_id
                           AND x.policy_id = b.policy_id
                           AND NVL (a.post_flag, 'N') = 'N'
                           AND TRUNC (a.expiry_date) <=
                                  TRUNC (
                                     TO_DATE (p_from_date,
                                              'mm/dd/yyyy'))
                           AND a.line_cd = NVL (p_line_cd, a.line_cd)
                           AND a.subline_cd =
                                  NVL (p_subline_cd, a.subline_cd)
                           AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                           AND    a.line_cd
                               || a.subline_cd
                               || a.iss_cd
                               || a.issue_yy
                               || a.pol_seq_no
                               || a.renew_no =
                                     NVL (p_line_cd, a.line_cd)
                                  || NVL (p_subline_cd, a.subline_cd)
                                  || NVL (p_iss_cd, a.iss_cd)
                                  || NVL (p_issue_yy, a.issue_yy)
                                  || NVL (p_pol_seq_no, a.pol_seq_no)
                                  || NVL (p_renew_no, a.renew_no)
                           AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                       'Y', a.extract_user,
                                       p_user_id) = a.extract_user
                           AND DECODE (p_mis_sw,
                                       'Y', p_user_id,
                                       a.extract_user) = p_user_id
                           AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                           AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_itmperil x
              WHERE EXISTS
                (SELECT 1
                      FROM giex_pack_expiry a, giex_expiry b
                     WHERE     a.pack_policy_id = b.pack_policy_id
                           AND x.policy_id = b.policy_id
                           AND NVL (a.post_flag, 'N') = 'N'
                           AND TRUNC (a.expiry_date) <=
                                  TRUNC (
                                     TO_DATE (p_from_date,
                                              'mm/dd/yyyy'))
                           AND a.line_cd = NVL (p_line_cd, a.line_cd)
                           AND a.subline_cd =
                                  NVL (p_subline_cd, a.subline_cd)
                           AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                           AND    a.line_cd
                               || a.subline_cd
                               || a.iss_cd
                               || a.issue_yy
                               || a.pol_seq_no
                               || a.renew_no =
                                     NVL (p_line_cd, a.line_cd)
                                  || NVL (p_subline_cd, a.subline_cd)
                                  || NVL (p_iss_cd, a.iss_cd)
                                  || NVL (p_issue_yy, a.issue_yy)
                                  || NVL (p_pol_seq_no, a.pol_seq_no)
                                  || NVL (p_renew_no, a.renew_no)
                           AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                       'Y', a.extract_user,
                                       p_user_id) = a.extract_user
                           AND DECODE (p_mis_sw,
                                       'Y', p_user_id,
                                       a.extract_user) = p_user_id
                           AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                           AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end by joanne 112813

            DELETE FROM giex_expiry x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a
                             WHERE     a.pack_policy_id = x.pack_policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE DELETION END----------
            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;


      IF p_all_exp_proc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry a
                    WHERE     NVL (a.post_flag, 'N') = 'Y'
                          AND a.pack_policy_id IS NULL
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (a.expiry_date) <=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd,a. iss_cd)
--                          AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.215
                          AND a.intm_no in (SELECT a.intm_no
                                              FROM gipi_comm_invoice b
                                             WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

               --added joane 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --ended joanne 112813
            END LOOP;

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'Y'
                        AND a.pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (a.expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.215
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (a.expiry_date) <=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
              --joanne 112813
               DELETE giex_auto_ren_group_tax x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

                DELETE giex_old_group_itmperil x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
                --end joanne 112813
               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry
                    WHERE     NVL (post_flag, 'N') = 'Y'
                          AND pack_policy_id IS NULL
                          AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (expiry_date) <=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND line_cd = NVL (p_line_cd, line_cd)
                          AND subline_cd = NVL (p_subline_cd, subline_cd)
                          AND iss_cd = NVL (p_iss_cd, iss_cd)
                          AND    line_cd
                              || subline_cd
                              || iss_cd
                              || issue_yy
                              || pol_seq_no
                              || renew_no =
                                    NVL (p_line_cd, line_cd)
                                 || NVL (p_subline_cd, subline_cd)
                                 || NVL (p_iss_cd, iss_cd)
                                 || NVL (p_issue_yy, issue_yy)
                                 || NVL (p_pol_seq_no, pol_seq_no)
                                 || NVL (p_renew_no, renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                          AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

                --added joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --ended joanne 112813
            END LOOP;

            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (a.expiry_date) <=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND    a.line_cd
                              || a.subline_cd
                              || a.iss_cd
                              || a.issue_yy
                              || a.pol_seq_no
                              || a.renew_no =
                                    NVL (p_line_cd, a.line_cd)
                                 || NVL (p_subline_cd, a.subline_cd)
                                 || NVL (p_iss_cd, a.iss_cd)
                                 || NVL (p_issue_yy, a.issue_yy)
                                 || NVL (p_pol_seq_no, a.pol_seq_no)
                                 || NVL (p_renew_no, a.renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

              --joanne 112813
                DELETE giex_auto_ren_group_tax x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

                DELETE giex_old_group_itmperil x
                 WHERE EXISTS (SELECT '1'
                                 FROM giex_expiry b
                                WHERE x.policy_id = b.policy_id
                                  AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
                --end joanne 112813
               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            ------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;
   END;

   PROCEDURE check_no_of_records_to_purge (
      p_user_id              GIEX_EXPIRIES_V.user_id%TYPE,
      p_all_user             GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw               VARCHAR2,
      p_based_on_param       VARCHAR2,
      p_all_exp_proc         VARCHAR2,
      p_all_unproc           VARCHAR2,
      p_line_cd              GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd           GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd               GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy             GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no           GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no             GIEX_EXPIRIES_V.renew_no%TYPE,
      p_intm_no              GIEX_EXPIRIES_V.intm_no%TYPE,
      p_from_month           VARCHAR2,
      p_from_year            VARCHAR2,
      p_to_month             VARCHAR2,
      p_to_year              VARCHAR2,
      p_from_date            VARCHAR2,
      p_to_date              VARCHAR2,
      p_range_type           VARCHAR2,
      p_range                VARCHAR2,
      v_cnt_proc         OUT NUMBER,
      v_cnt_unproc       OUT NUMBER,
      v_cnt_proc_all     OUT NUMBER)
   IS
      v_all_user    VARCHAR2(1):= 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
    v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_based_on_param = 'Y'
      THEN
         IF     p_from_date IS NULL
            AND p_to_date IS NULL
            AND p_from_month IS NULL
            AND p_from_year IS NULL
            AND p_to_month IS NULL
            AND p_to_year IS NULL
         THEN
            IF p_all_unproc = 'Y'
            THEN
               IF p_intm_no IS NOT NULL
               THEN
                  SELECT COUNT ('1')
                    INTO v_cnt_unproc
                    FROM giex_expiries_v                         --giex_expiry
                   WHERE     NVL (post_flag, 'N') = 'N'
                         AND line_cd = NVL (p_line_cd, line_cd)
                         AND subline_cd = NVL (p_subline_cd, subline_cd)
                         AND iss_cd = NVL (p_iss_cd, iss_cd)
--                         AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                         AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                         AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                     'Y', extract_user,
                                     p_user_id) = extract_user
                         AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                p_user_id
                         AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                         AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
               ELSE
                  SELECT COUNT ('1')
                    INTO v_cnt_unproc
                    FROM giex_expiries_v                         --giex_expiry
                   WHERE     NVL (post_flag, 'N') = 'N'
                         AND line_cd = NVL (p_line_cd, line_cd)
                         AND subline_cd = NVL (p_subline_cd, subline_cd)
                         AND iss_cd = NVL (p_iss_cd, iss_cd)
                         AND    line_cd
                             || subline_cd
                             || iss_cd
                             || issue_yy
                             || pol_seq_no
                             || renew_no =
                                   NVL (p_line_cd, line_cd)
                                || NVL (p_subline_cd, subline_cd)
                                || NVL (p_iss_cd, iss_cd)
                                || NVL (p_issue_yy, issue_yy)
                                || NVL (p_pol_seq_no, pol_seq_no)
                                || NVL (p_renew_no, renew_no)
                         AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                     'Y', extract_user,
                                     p_user_id) = extract_user
                         AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                p_user_id
                         AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                         AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
               END IF;
            END IF;

            /* added by gmi */
            IF p_all_exp_proc = 'allProcessed'
            THEN
               IF p_intm_no IS NOT NULL
               THEN
                  SELECT COUNT ('1')
                    INTO v_cnt_proc_all
                    FROM giex_expiries_v                         --giex_expiry
                   WHERE     NVL (post_flag, 'N') = 'Y'
                         AND line_cd = NVL (p_line_cd, line_cd)
                         AND subline_cd = NVL (p_subline_cd, subline_cd)
                         AND iss_cd = NVL (p_iss_cd, iss_cd)
                         AND intm_no = p_intm_no
--                         AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                         AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                         AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                     'Y', extract_user,
                                     p_user_id) = extract_user
                         AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                p_user_id
                         AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                         AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
               ELSE
                  SELECT COUNT ('1')
                    INTO v_cnt_proc_all
                    FROM giex_expiries_v                         --giex_expiry
                   WHERE     NVL (post_flag, 'N') = 'Y'
                         AND line_cd = NVL (p_line_cd, line_cd)
                         AND subline_cd = NVL (p_subline_cd, subline_cd)
                         AND iss_cd = NVL (p_iss_cd, iss_cd)
                         AND    line_cd
                             || subline_cd
                             || iss_cd
                             || issue_yy
                             || pol_seq_no
                             || renew_no =
                                   NVL (p_line_cd, line_cd)
                                || NVL (p_subline_cd, subline_cd)
                                || NVL (p_iss_cd, iss_cd)
                                || NVL (p_issue_yy, issue_yy)
                                || NVL (p_pol_seq_no, pol_seq_no)
                                || NVL (p_renew_no, renew_no)
                         AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                     'Y', extract_user,
                                     p_user_id) = extract_user
                         AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                p_user_id
                         AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                         AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
               END IF;
            END IF;

            /* end by gmi*/
            IF p_all_exp_proc = 'Y'
            THEN
               IF p_intm_no IS NOT NULL
               THEN
                  SELECT COUNT ('1')
                    INTO v_cnt_proc
                    FROM giex_expiries_v                         --giex_expiry
                   WHERE     NVL (post_flag, 'N') = 'Y'
                         AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                         AND line_cd = NVL (p_line_cd, line_cd)
                         AND subline_cd = NVL (p_subline_cd, subline_cd)
                         AND iss_cd = NVL (p_iss_cd, iss_cd)
--                         AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                         AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                         AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                     'Y', extract_user,
                                     p_user_id) = extract_user
                         AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                p_user_id
                         AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                         AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
               ELSE
                  SELECT COUNT ('1')
                    INTO v_cnt_proc
                    FROM giex_expiries_v                         --giex_expiry
                   WHERE     NVL (post_flag, 'N') = 'Y'
                         AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                         AND line_cd = NVL (p_line_cd, line_cd)
                         AND subline_cd = NVL (p_subline_cd, subline_cd)
                         AND iss_cd = NVL (p_iss_cd, iss_cd)
                         AND    line_cd
                             || subline_cd
                             || iss_cd
                             || issue_yy
                             || pol_seq_no
                             || renew_no =
                                   NVL (p_line_cd, line_cd)
                                || NVL (p_subline_cd, subline_cd)
                                || NVL (p_iss_cd, iss_cd)
                                || NVL (p_issue_yy, issue_yy)
                                || NVL (p_pol_seq_no, pol_seq_no)
                                || NVL (p_renew_no, renew_no)
                         AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                     'Y', extract_user,
                                     p_user_id) = extract_user
                         AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                p_user_id
                         AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                         AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
        --comment by VJ 062711; prf 7041 resolve for early renewal processing
               /* SELECT COUNT('1')
    INTO v_cnt_proc
    FROM giex_expiries_v --giex_expiry
   WHERE NVL(post_flag, 'N') = 'Y'
     AND (TRUNC(expiry_date) <= TRUNC(SYSDATE)
                 OR (line_cd = NVL(p_line_cd, line_cd)
                         AND subline_cd = NVL(p_subline_cd, subline_cd)
                         AND iss_cd = NVL(p_iss_cd, iss_cd)
                         AND line_cd || subline_cd || iss_cd || issue_yy || pol_seq_no || renew_no
                     = NVL(p_line_cd,line_cd) || NVL(p_subline_cd,subline_cd) ||
                       NVL(p_iss_cd,iss_cd) || NVL(p_issue_yy,issue_yy) ||
                       NVL(p_pol_seq_no,pol_seq_no) || NVL(p_renew_no,renew_no)))
     AND decode(p_mis_sw,'Y',p_user_id,extract_user) = p_user_id; */

               END IF;
            END IF;
         ELSE
            IF p_range_type = 'onOrBefore'
            THEN
               IF     p_range = 'byMonthYear'
                  AND p_from_month IS NOT NULL
                  AND p_from_year IS NOT NULL
               THEN
                  IF p_all_unproc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /* added by gmi */
                  IF p_all_unproc = 'allProcessed'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /* end by gmi*/
                  IF p_all_exp_proc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;
               ELSIF p_range = 'byDate' AND p_from_date IS NOT NULL
               THEN
                  IF p_all_unproc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joann 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /*gmi start*/
                  IF p_all_exp_proc = 'allProcessed'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /*gmi end*/
                  IF p_all_exp_proc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;
               END IF;
            ELSIF p_range_type = 'exactRange'
            THEN
               IF     p_range = 'byMonthYear'
                  AND p_from_month IS NOT NULL
                  AND p_from_year IS NOT NULL
                  AND p_to_month IS NOT NULL
                  AND p_to_year IS NOT NULL
               THEN
                  IF p_all_unproc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (LPAD (p_to_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_to_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (LPAD (p_to_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_to_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /* gmi start*/
                  IF p_all_exp_proc = 'allProcessed'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (LPAD (p_to_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_to_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (LPAD (p_to_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_to_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /* gmi end*/
                  IF p_all_exp_proc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (LPAD (p_to_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_to_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') >=
                                      TO_DATE (
                                            LTRIM (
                                               LPAD (p_from_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_from_year, '0999')),
                                         'MM-YYYY')
                               AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                            'MM-YYYY') <=
                                      TO_DATE (
                                            LTRIM (LPAD (p_to_month, 3, '0'))
                                         || '-'
                                         || LTRIM (
                                               TO_CHAR (p_to_year, '0999')),
                                         'MM-YYYY')
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;
               ELSIF     p_range = 'byDate'
                     AND p_from_date IS NOT NULL
                     AND p_to_date IS NOT NULL
               THEN
                  IF p_all_unproc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_to_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_unproc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'N'
                               AND TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_to_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /* start gmi*/
                  IF p_all_exp_proc = 'allProcessed'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_to_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc_all
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_to_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;

                  /* end gmi*/
                  IF p_all_exp_proc = 'Y'
                  THEN
                     IF p_intm_no IS NOT NULL
                     THEN
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_to_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
--                               AND intm_no = p_intm_no    --changed by Kenneth SR 3957  6.30.215
                               AND intm_no in (SELECT a.intm_no
                                           FROM giex_expiries_v a, gipi_comm_invoice b
                                          WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     ELSE
                        SELECT COUNT ('1')
                          INTO v_cnt_proc
                          FROM giex_expiries_v                   --giex_expiry
                         WHERE     NVL (post_flag, 'N') = 'Y'
                               AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                               AND TRUNC (expiry_date) >=
                                      TRUNC (
                                         TO_DATE (p_from_date, 'mm/dd/yyyy'))
                               AND TRUNC (expiry_date) <=
                                      TRUNC (
                                         TO_DATE (p_to_date, 'mm/dd/yyyy'))
                               AND line_cd = NVL (p_line_cd, line_cd)
                               AND subline_cd =
                                      NVL (p_subline_cd, subline_cd)
                               AND iss_cd = NVL (p_iss_cd, iss_cd)
                               AND    line_cd
                                   || subline_cd
                                   || iss_cd
                                   || issue_yy
                                   || pol_seq_no
                                   || renew_no =
                                         NVL (p_line_cd, line_cd)
                                      || NVL (p_subline_cd, subline_cd)
                                      || NVL (p_iss_cd, iss_cd)
                                      || NVL (p_issue_yy, issue_yy)
                                      || NVL (p_pol_seq_no, pol_seq_no)
                                      || NVL (p_renew_no, renew_no)
                               AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                           'Y', extract_user,
                                           p_user_id) = extract_user
                               AND DECODE (p_mis_sw,
                                           'Y', p_user_id,
                                           extract_user) = p_user_id
                               AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                               AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
                     END IF;
                  END IF;
               END IF;
            END IF;
         END IF;
      ELSE
         IF p_all_unproc = 'Y'
         THEN
            SELECT COUNT ('1')
              INTO v_cnt_unproc
              FROM giex_expiries_v                               --giex_expiry
             WHERE     NVL (post_flag, 'N') = 'N'
                   AND DECODE (v_all_user/*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                          extract_user
                   AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                          p_user_id
                   AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                   AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;

         IF p_all_exp_proc = 'allProcessed'
         THEN
            SELECT COUNT ('1')
              INTO v_cnt_proc_all
              FROM giex_expiries_v                               --giex_expiry
             WHERE     NVL (post_flag, 'N') = 'Y'
                   AND DECODE (v_all_user/*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                          extract_user
                   AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                          p_user_id
                   AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                   AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;

         IF p_all_exp_proc = 'Y'
         THEN
            SELECT COUNT ('1')
              INTO v_cnt_proc
              FROM giex_expiries_v                               --giex_expiry
             WHERE     NVL (post_flag, 'N') = 'Y'
                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                   AND DECODE (v_all_user/*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                          extract_user
                   AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                          p_user_id
                   AND line_cd = DECODE(check_user_per_line2(line_cd, UPPER(iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                   AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;

      IF v_cnt_proc IS NULL
      THEN
         v_cnt_proc := 0;
      END IF;

      IF v_cnt_unproc IS NULL
      THEN
         v_cnt_unproc := 0;
      END IF;

      IF v_cnt_proc_all IS NULL
      THEN
         v_cnt_proc_all := 0;
      END IF;
   END;

   PROCEDURE purge_based_exact_month (
      p_user_id         GIIS_USERS.user_id%TYPE,
      p_all_user        GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw          GIIS_USERS.mis_sw%TYPE,
      p_all_exp_proc    VARCHAR2,
      p_all_unproc      VARCHAR2,
      p_line_cd         GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd      GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd          GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy        GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no      GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no        GIEX_EXPIRIES_V.renew_no%TYPE,
      p_intm_no         GIEX_EXPIRIES_V.intm_no%TYPE,
      p_from_month      VARCHAR2,
      p_from_year       VARCHAR2,
      p_to_month        VARCHAR2,
      p_to_year         VARCHAR2)
   IS
      v_all_user        VARCHAR2(1)             := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
    v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_all_unproc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --joanne 112813
            DELETE giex_auto_ren_group_tax a
              WHERE EXISTS (
                       SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            DELETE giex_old_group_itmperil a
              WHERE EXISTS (
                      SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end joanne 112813
            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'N'
                        AND a.pack_policy_id IS NULL
                        AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                         AND a.intm_no in (SELECT a.intm_no
                                             FROM gipi_comm_invoice b
                                            WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            -------------PACKAGE DELETION--------------
            DELETE FROM giex_rn_no x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil_grouped x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --joanne 112813
            DELETE FROM giex_auto_ren_group_tax x
              WHERE EXISTS
                   (SELECT 1
                      FROM giex_pack_expiry a, giex_expiry b
                     WHERE     a.pack_policy_id = b.pack_policy_id
                           AND x.policy_id = b.policy_id
                           AND NVL (a.post_flag, 'N') = 'N'
                           AND TO_DATE (
                                  TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                  'MM-YYYY') >=
                                  TO_DATE (
                                        LTRIM (
                                           LPAD (p_from_month,
                                                 3,
                                                 '0'))
                                     || '-'
                                     || LTRIM (
                                           TO_CHAR (p_from_year,
                                                    '0999')),
                                     'MM-YYYY')
                           AND TO_DATE (
                                  TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                  'MM-YYYY') <=
                                  TO_DATE (
                                        LTRIM (
                                           LPAD (p_to_month, 3, '0'))
                                     || '-'
                                     || LTRIM (
                                           TO_CHAR (p_to_year,
                                                    '0999')),
                                     'MM-YYYY')
                           AND a.line_cd = NVL (p_line_cd, a.line_cd)
                           AND a.subline_cd =
                                  NVL (p_subline_cd, a.subline_cd)
                           AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                           AND a.intm_no = p_intm_no
                           AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                       'Y', a.extract_user,
                                       p_user_id) = a.extract_user
                           AND DECODE (p_mis_sw,
                                       'Y', p_user_id,
                                       a.extract_user) = p_user_id
                           AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                           AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_itmperil x
              WHERE EXISTS
                   (SELECT 1
                      FROM giex_pack_expiry a, giex_expiry b
                     WHERE     a.pack_policy_id = b.pack_policy_id
                           AND x.policy_id = b.policy_id
                           AND NVL (a.post_flag, 'N') = 'N'
                           AND TO_DATE (
                                  TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                  'MM-YYYY') >=
                                  TO_DATE (
                                        LTRIM (
                                           LPAD (p_from_month,
                                                 3,
                                                 '0'))
                                     || '-'
                                     || LTRIM (
                                           TO_CHAR (p_from_year,
                                                    '0999')),
                                     'MM-YYYY')
                           AND TO_DATE (
                                  TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                  'MM-YYYY') <=
                                  TO_DATE (
                                        LTRIM (
                                           LPAD (p_to_month, 3, '0'))
                                     || '-'
                                     || LTRIM (
                                           TO_CHAR (p_to_year,
                                                    '0999')),
                                     'MM-YYYY')
                           AND a.line_cd = NVL (p_line_cd, a.line_cd)
                           AND a.subline_cd =
                                  NVL (p_subline_cd, a.subline_cd)
                           AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                           AND a.intm_no = p_intm_no
                           AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                       'Y', a.extract_user,
                                       p_user_id) = a.extract_user
                           AND DECODE (p_mis_sw,
                                       'Y', p_user_id,
                                       a.extract_user) = p_user_id
                           AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                           AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end joanne 112813

            DELETE FROM giex_expiry x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a
                             WHERE     a.pack_policy_id = x.pack_policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE DELETION END----------

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND decode(p_mis_sw,'Y',p_user_id,extract_user) = p_user_id);
            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

          --added by joanne 112813
          DELETE giex_auto_ren_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

          DELETE giex_old_group_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') >=
                                     TO_DATE (
                                           LTRIM (
                                              LPAD (p_from_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_from_year, '0999')),
                                        'MM-YYYY')
                              AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                           'MM-YYYY') <=
                                     TO_DATE (
                                           LTRIM (LPAD (p_to_month, 3, '0'))
                                        || '-'
                                        || LTRIM (
                                              TO_CHAR (p_to_year, '0999')),
                                        'MM-YYYY')
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
          --end by joanne 112813

          --AND decode(p_mis_sw,'Y',p_user_id,extract_user) = p_user_id);
            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND pack_policy_id IS NULL
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            -------------PACKAGE DELETION--------------
            DELETE FROM giex_rn_no x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil_grouped x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --joanne 112813
            DELETE FROM giex_auto_ren_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

             DELETE FROM giex_old_group_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end joanne 112813

            DELETE FROM giex_expiry x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a
                             WHERE     a.pack_policy_id = x.pack_policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE DELETION END----------

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;


      IF p_all_exp_proc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry a
                    WHERE     NVL (a.post_flag, 'N') = 'Y'
                          AND a.pack_policy_id IS NULL
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') >=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_to_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_to_year, '0999')),
                                    'MM-YYYY')
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                          AND intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.215
                          AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

              --joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
              --ended joanne 112813
            END LOOP;

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'Y'
                        AND a.pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no  --changed by Kenneth SR 3957  6.30.215
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') >=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_to_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_to_year, '0999')),
                                    'MM-YYYY')
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
               --joanne 112813
               DELETE giex_auto_ren_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

                --end joanne 112813
               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry
                    WHERE     NVL (post_flag, 'N') = 'Y'
                          AND pack_policy_id IS NULL
                          AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') >=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_to_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_to_year, '0999')),
                                    'MM-YYYY')
                          AND line_cd = NVL (p_line_cd, line_cd)
                          AND subline_cd = NVL (p_subline_cd, subline_cd)
                          AND iss_cd = NVL (p_iss_cd, iss_cd)
                          AND    line_cd
                              || subline_cd
                              || iss_cd
                              || issue_yy
                              || pol_seq_no
                              || renew_no =
                                    NVL (p_line_cd, line_cd)
                                 || NVL (p_subline_cd, subline_cd)
                                 || NVL (p_iss_cd, iss_cd)
                                 || NVL (p_issue_yy, issue_yy)
                                 || NVL (p_pol_seq_no, pol_seq_no)
                                 || NVL (p_renew_no, renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                          AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;
               --joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
                --end joanne 112813
            END LOOP;

            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') >=
                                 TO_DATE (
                                       LTRIM (LPAD (p_from_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_from_year, '0999')),
                                    'MM-YYYY')
                          AND TO_DATE (TO_CHAR (a.expiry_date, 'MM-YYYY'),
                                       'MM-YYYY') <=
                                 TO_DATE (
                                       LTRIM (LPAD (p_to_month, 3, '0'))
                                    || '-'
                                    || LTRIM (TO_CHAR (p_to_year, '0999')),
                                    'MM-YYYY')
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND    a.line_cd
                              || a.subline_cd
                              || a.iss_cd
                              || a.issue_yy
                              || a.pol_seq_no
                              || a.renew_no =
                                    NVL (p_line_cd, a.line_cd)
                                 || NVL (p_subline_cd, a.subline_cd)
                                 || NVL (p_iss_cd, a.iss_cd)
                                 || NVL (p_issue_yy, a.issue_yy)
                                 || NVL (p_pol_seq_no, a.pol_seq_no)
                                 || NVL (p_renew_no, a.renew_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
               --joanne 112813
               DELETE giex_auto_ren_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
               --end joanne 112813

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') >=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_from_month,
                                                         3,
                                                         '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_from_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND TO_DATE (
                                          TO_CHAR (expiry_date, 'MM-YYYY'),
                                          'MM-YYYY') <=
                                          TO_DATE (
                                                LTRIM (
                                                   LPAD (p_to_month, 3, '0'))
                                             || '-'
                                             || LTRIM (
                                                   TO_CHAR (p_to_year,
                                                            '0999')),
                                             'MM-YYYY')
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') >=
                               TO_DATE (
                                     LTRIM (LPAD (p_from_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_from_year, '0999')),
                                  'MM-YYYY')
                        AND TO_DATE (TO_CHAR (expiry_date, 'MM-YYYY'),
                                     'MM-YYYY') <=
                               TO_DATE (
                                     LTRIM (LPAD (p_to_month, 3, '0'))
                                  || '-'
                                  || LTRIM (TO_CHAR (p_to_year, '0999')),
                                  'MM-YYYY')
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;
   END;

   PROCEDURE purge_based_exact_date (
      p_user_id         GIIS_USERS.user_id%TYPE,
      p_all_user        GIIS_USERS.all_user_sw%TYPE,
      p_mis_sw          GIIS_USERS.mis_sw%TYPE,
      p_all_exp_proc    VARCHAR2,
      p_all_unproc      VARCHAR2,
      p_line_cd         GIEX_EXPIRIES_V.line_cd%TYPE,
      p_subline_cd      GIEX_EXPIRIES_V.subline_cd%TYPE,
      p_iss_cd          GIEX_EXPIRIES_V.iss_cd%TYPE,
      p_issue_yy        GIEX_EXPIRIES_V.issue_yy%TYPE,
      p_pol_seq_no      GIEX_EXPIRIES_V.pol_seq_no%TYPE,
      p_renew_no        GIEX_EXPIRIES_V.renew_no%TYPE,
      p_intm_no         GIEX_EXPIRIES_V.intm_no%TYPE,
      p_from_date       VARCHAR2,
      p_to_date         VARCHAR2)
   IS
      v_all_user        VARCHAR2(1)             := 'N'; --added by joanne 06.25.14, default all_user_sw is N
   BEGIN
    v_all_user := p_all_user;      ----Added by pjsantos 10/10/2016, GENQA 5688
      IF p_all_unproc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

             --joanne 112813
            DELETE giex_auto_ren_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
--                              AND b.intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                              AND b.intm_no in (SELECT b.intm_no
                                                  FROM gipi_comm_invoice c
                                                 WHERE c.policy_id = b.policy_id AND c.intrmdry_intm_no = p_intm_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end joanne 112813
            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'N'
                        AND a.pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (a.expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.iss_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            -------------PACKAGE DELETION--------------
            DELETE FROM giex_rn_no x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil_grouped x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --joanne 112813
            DELETE FROM giex_auto_ren_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end joanne 112813

            DELETE FROM giex_expiry x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a
                             WHERE     a.pack_policy_id = x.pack_policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND a.intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE DELETION END----------

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TRUNC (expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TRUNC (expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            DELETE giex_rn_no a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE giex_old_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_peril a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_new_group_deductibles a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_itmperil_grouped a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --joanne 112813
            DELETE giex_auto_ren_group_tax a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE giex_old_group_itmperil a
             WHERE EXISTS
                      (SELECT '1'
                         FROM giex_expiry b
                        WHERE     a.policy_id = b.policy_id
                              AND b.pack_policy_id IS NULL
                              AND NVL (post_flag, 'N') = 'N'
                              AND TRUNC (b.expiry_date) >=
                                     TRUNC (
                                        TO_DATE (p_from_date, 'mm/dd/yyyy'))
                              AND TRUNC (b.expiry_date) <=
                                     TRUNC (
                                        TO_DATE (p_to_date, 'mm/dd/yyyy'))
                              AND b.line_cd = NVL (p_line_cd, b.line_cd)
                              AND b.subline_cd =
                                     NVL (p_subline_cd, b.subline_cd)
                              AND b.iss_cd = NVL (p_iss_cd, b.iss_cd)
                              AND    b.line_cd
                                  || b.subline_cd
                                  || b.iss_cd
                                  || b.issue_yy
                                  || b.pol_seq_no
                                  || b.renew_no =
                                        NVL (p_line_cd, line_cd)
                                     || NVL (p_subline_cd, subline_cd)
                                     || NVL (p_iss_cd, iss_cd)
                                     || NVL (p_issue_yy, issue_yy)
                                     || NVL (p_pol_seq_no, pol_seq_no)
                                     || NVL (p_renew_no, renew_no)
                              AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                          'Y', extract_user,
                                          p_user_id) = extract_user
                              AND DECODE (p_mis_sw,
                                          'Y', p_user_id,
                                          extract_user) = p_user_id
                              AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                              AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));
            --end joanne 112813

            --AND extract_user = :CG$CTRL.CGU$p_user_id);
            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            --AND extract_user = :CG$CTRL.CGU$p_user_id;
            -------------PACKAGE DELETION--------------
            DELETE FROM giex_rn_no x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_peril x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_deductibles x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_new_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_itmperil_grouped x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            --joanne 112813
            DELETE FROM giex_auto_ren_group_tax x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            DELETE FROM giex_old_group_itmperil x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a, giex_expiry b
                             WHERE     a.pack_policy_id = b.pack_policy_id
                                   AND x.policy_id = b.policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));
            --end joanne 112813

            DELETE FROM giex_expiry x
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry a
                             WHERE     a.pack_policy_id = x.pack_policy_id
                                   AND NVL (a.post_flag, 'N') = 'N'
                                   AND TRUNC (a.expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (a.expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND a.line_cd = NVL (p_line_cd, a.line_cd)
                                   AND a.subline_cd =
                                          NVL (p_subline_cd, a.subline_cd)
                                   AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                                   AND    a.line_cd
                                       || a.subline_cd
                                       || a.iss_cd
                                       || a.issue_yy
                                       || a.pol_seq_no
                                       || a.renew_no =
                                             NVL (p_line_cd, a.line_cd)
                                          || NVL (p_subline_cd, a.subline_cd)
                                          || NVL (p_iss_cd, a.iss_cd)
                                          || NVL (p_issue_yy, a.issue_yy)
                                          || NVL (p_pol_seq_no, a.pol_seq_no)
                                          || NVL (p_renew_no, a.renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', a.extract_user,
                                               p_user_id) = a.extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               a.extract_user) = p_user_id
                                   AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                                   AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL));

            -------------PACKAGE DELETION END----------

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'N'
                                   AND TRUNC (expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND    line_cd
                                       || subline_cd
                                       || iss_cd
                                       || issue_yy
                                       || pol_seq_no
                                       || renew_no =
                                             NVL (p_line_cd, line_cd)
                                          || NVL (p_subline_cd, subline_cd)
                                          || NVL (p_iss_cd, iss_cd)
                                          || NVL (p_issue_yy, issue_yy)
                                          || NVL (p_pol_seq_no, pol_seq_no)
                                          || NVL (p_renew_no, renew_no)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'N'
                        AND TRUNC (expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND    line_cd
                            || subline_cd
                            || iss_cd
                            || issue_yy
                            || pol_seq_no
                            || renew_no =
                                  NVL (p_line_cd, line_cd)
                               || NVL (p_subline_cd, subline_cd)
                               || NVL (p_iss_cd, iss_cd)
                               || NVL (p_issue_yy, issue_yy)
                               || NVL (p_pol_seq_no, pol_seq_no)
                               || NVL (p_renew_no, renew_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;

      IF p_all_exp_proc = 'Y'
      THEN
         IF p_intm_no IS NOT NULL
         THEN
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry  a
                    WHERE     NVL (a.post_flag, 'N') = 'Y'
                          AND a.pack_policy_id IS NULL
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (a.expiry_date) >=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND TRUNC (a.expiry_date) <=
                                 TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                          AND intm_no = p_intm_no   --changed by Kenneth SR 3957  6.30.2015
                          AND a.intm_no in (SELECT a.intm_no
                                              FROM gipi_comm_invoice b
                                             WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

               --joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --end joanne 112813
            END LOOP;

            DELETE FROM giex_expiry a
                  WHERE     NVL (a.post_flag, 'N') = 'Y'
                        AND a.pack_policy_id IS NULL
                        AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (a.expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (a.expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND a.line_cd = NVL (p_line_cd, a.line_cd)
                        AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                        AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
--                        AND intm_no = p_intm_no--changed by Kenneth SR 3957  6.30.2015
                        AND a.intm_no in (SELECT a.intm_no
                                            FROM gipi_comm_invoice b
                                           WHERE a.policy_id = b.policy_id AND b.intrmdry_intm_no = p_intm_no)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                        AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL);

            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (a.expiry_date) >=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND TRUNC (a.expiry_date) <=
                                 TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND a.intm_no = p_intm_no
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

              --joanne 112813
               DELETE giex_auto_ren_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
              --end joanne 112813

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TRUNC (expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND intm_no = p_intm_no
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND intm_no = p_intm_no
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         ELSE
            FOR A1
               IN (SELECT policy_id
                     FROM giex_expiry
                    WHERE     NVL (post_flag, 'N') = 'Y'
                          AND pack_policy_id IS NULL
                          AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (expiry_date) >=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND TRUNC (expiry_date) <=
                                 TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                          AND line_cd = NVL (p_line_cd, line_cd)
                          AND subline_cd = NVL (p_subline_cd, subline_cd)
                          AND iss_cd = NVL (p_iss_cd, iss_cd)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', extract_user,
                                      p_user_id) = extract_user
                          AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                                 p_user_id
                          AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                          AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL))
            --AND extract_user = :CG$CTRL.CGU$p_user_id)
            LOOP
               FOR A2
                  IN (SELECT line_cd,
                             subline_cd,
                             iss_cd,
                             issue_yy,
                             pol_seq_no,
                             renew_no
                        FROM gipi_polbasic
                       WHERE     policy_id = a1.policy_id
                             AND pack_policy_id IS NULL)
               LOOP
                  UPDATE gipi_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3')
                         AND pack_policy_id IS NULL;
               END LOOP;

               DELETE giex_rn_no
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_peril
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_deductibles
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_new_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil
                WHERE policy_id = a1.policy_id;

               DELETE giex_itmperil_grouped
                WHERE policy_id = a1.policy_id;

               --joanne 112813
               DELETE giex_auto_ren_group_tax
                WHERE policy_id = a1.policy_id;

               DELETE giex_old_group_itmperil
                WHERE policy_id = a1.policy_id;
               --end joanne 112813
            END LOOP;

            DELETE FROM giex_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND pack_policy_id IS NULL
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);

            FOR pack_dtls
               IN (SELECT DISTINCT a.pack_policy_id, b.policy_id
                     FROM giex_pack_expiry a, giex_expiry b
                    WHERE     a.pack_policy_id = b.pack_policy_id
                          AND NVL (a.post_flag, 'N') = 'Y'
                          AND TRUNC (a.expiry_date) <= TRUNC (SYSDATE)
                          AND TRUNC (a.expiry_date) >=
                                 TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                          AND TRUNC (a.expiry_date) <=
                                 TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                          AND a.line_cd = NVL (p_line_cd, a.line_cd)
                          AND a.subline_cd = NVL (p_subline_cd, a.subline_cd)
                          AND a.iss_cd = NVL (p_iss_cd, a.iss_cd)
                          AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                      'Y', a.extract_user,
                                      p_user_id) = a.extract_user
                          AND DECODE (p_mis_sw,
                                      'Y', p_user_id,
                                      a.extract_user) = p_user_id
                          AND a.line_cd = DECODE(check_user_per_line2(a.line_cd,UPPER (a.iss_cd), 'GIEXS003', p_user_id), 1, a.line_cd, NULL)
                          AND a.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(a.line_cd), a.iss_cd, 'GIEXS003', p_user_id), 1, a.iss_cd, NULL))
            LOOP
               FOR A2 IN (SELECT line_cd,
                                 subline_cd,
                                 iss_cd,
                                 issue_yy,
                                 pol_seq_no,
                                 renew_no
                            FROM gipi_pack_polbasic
                           WHERE pack_policy_id = pack_dtls.pack_policy_id)
               LOOP
                  UPDATE gipi_pack_polbasic
                     SET pol_flag = 'X'
                   WHERE     line_cd = a2.line_cd
                         AND subline_cd = a2.subline_cd
                         AND iss_cd = a2.iss_cd
                         AND issue_yy = a2.issue_yy
                         AND pol_seq_no = a2.pol_seq_no
                         AND renew_no = a2.renew_no
                         AND pol_flag IN ('1', '2', '3');
               END LOOP;

               -------------PACKAGE_DELETION---------------
               DELETE giex_rn_no x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_peril x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_deductibles x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_new_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_itmperil_grouped x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               --joanne 112813
               DELETE giex_auto_ren_group_tax x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);

               DELETE giex_old_group_itmperil x
                WHERE EXISTS
                         (SELECT '1'
                            FROM giex_expiry b
                           WHERE     x.policy_id = b.policy_id
                                 AND b.pack_policy_id =
                                        pack_dtls.pack_policy_id);
               --end joanne 112813

               DELETE giex_expiry x
                WHERE x.pack_policy_id = pack_dtls.pack_policy_id;
            -------------PACKAGE_DELETION---------------
            END LOOP;

            DELETE FROM giex_pack_rn_no a
                  WHERE EXISTS
                           (SELECT 1
                              FROM giex_pack_expiry b
                             WHERE     1 = 1
                                   AND a.pack_policy_id = b.pack_policy_id
                                   AND NVL (post_flag, 'N') = 'Y'
                                   AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                                   AND TRUNC (expiry_date) >=
                                          TRUNC (
                                             TO_DATE (p_from_date,
                                                      'mm/dd/yyyy'))
                                   AND TRUNC (expiry_date) <=
                                          TRUNC (
                                             TO_DATE (p_to_date,
                                                      'mm/dd/yyyy'))
                                   AND line_cd = NVL (p_line_cd, line_cd)
                                   AND subline_cd =
                                          NVL (p_subline_cd, subline_cd)
                                   AND iss_cd = NVL (p_iss_cd, iss_cd)
                                   AND DECODE (v_all_user, --p_all_user, joanne 06.25.14
                                               'Y', extract_user,
                                               p_user_id) = extract_user
                                   AND DECODE (p_mis_sw,
                                               'Y', p_user_id,
                                               extract_user) = p_user_id
                                   AND b.line_cd = DECODE(check_user_per_line2(b.line_cd,UPPER (b.iss_cd), 'GIEXS003', p_user_id), 1, b.line_cd, NULL)
                                   AND b.iss_cd = DECODE(check_user_per_iss_cd2(UPPER(b.line_cd), b.iss_cd, 'GIEXS003', p_user_id), 1, b.iss_cd, NULL));

            DELETE FROM giex_pack_expiry
                  WHERE     NVL (post_flag, 'N') = 'Y'
                        AND TRUNC (expiry_date) <= TRUNC (SYSDATE)
                        AND TRUNC (expiry_date) >=
                               TRUNC (TO_DATE (p_from_date, 'mm/dd/yyyy'))
                        AND TRUNC (expiry_date) <=
                               TRUNC (TO_DATE (p_to_date, 'mm/dd/yyyy'))
                        AND line_cd = NVL (p_line_cd, line_cd)
                        AND subline_cd = NVL (p_subline_cd, subline_cd)
                        AND iss_cd = NVL (p_iss_cd, iss_cd)
                        AND DECODE (v_all_user /*p_all_user joanne 06.25.14*/, 'Y', extract_user, p_user_id) =
                               extract_user
                        AND DECODE (p_mis_sw, 'Y', p_user_id, extract_user) =
                               p_user_id
                        AND line_cd = DECODE(check_user_per_line2(line_cd,UPPER (iss_cd), 'GIEXS003', p_user_id), 1, line_cd, NULL)
                        AND iss_cd = DECODE(check_user_per_iss_cd2(UPPER(line_cd), iss_cd, 'GIEXS003', p_user_id), 1, iss_cd, NULL);
         END IF;
      END IF;
   END;

   FUNCTION get_policy_id_giexs006 (
      p_fr_rn_seq_no      giex_rn_no.rn_seq_no%TYPE,
      p_to_rn_seq_no      giex_rn_no.rn_seq_no%TYPE,
      p_assd_no           giex_expiry.assd_no%TYPE,
      p_intm_no           giex_expiry.intm_no%TYPE,
      p_iss_cd            giex_expiry.iss_cd%TYPE,
      p_subline_cd        giex_expiry.subline_cd%TYPE,
      p_line_cd           giex_expiry.line_cd%TYPE,
      p_start_date        giex_expiry.expiry_date%TYPE,
      p_end_date          giex_expiry.expiry_date%TYPE,
      p_user_id           giis_users.user_id%TYPE,
      p_renew_flag        giex_expiry.renew_flag%TYPE,
      p_req_renewal_no    VARCHAR2)
      RETURN policy_id_giexs006_tab
      PIPELINED
   IS
      v_policy_id   policy_id_giexs006_type;
   BEGIN
      IF p_req_renewal_no = 'Y'
      THEN
         FOR i
            IN (SELECT a.policy_id
                  FROM giex_expiries_v a, giex_rn_no b
                 WHERE     a.renew_flag = p_renew_flag
                       AND a.policy_id = b.policy_id
                       AND b.rn_seq_no BETWEEN NVL (p_fr_rn_seq_no,
                                                    b.rn_seq_no)
                                           AND NVL (p_to_rn_seq_no,
                                                    b.rn_seq_no)
                       --AND a.policy_id = NVL(:fblock.dsp_policy_id, a.policy_id)
                       AND a.assd_no = NVL (p_assd_no, a.assd_no)
                       AND NVL (a.intm_no, 0) =
                              NVL (p_intm_no, NVL (a.intm_no, 0))
                       AND UPPER (a.iss_cd) =
                              NVL (UPPER (p_iss_cd), UPPER (a.iss_cd))
                       AND UPPER (a.subline_cd) =
                              NVL (UPPER (p_subline_cd),
                                   UPPER (a.subline_cd))
                       AND UPPER (a.line_cd) =
                              NVL (UPPER (p_line_cd), UPPER (a.line_cd))
                       AND TRUNC (a.expiry_date) <=
                              TRUNC (
                                 NVL (p_end_date,
                                      NVL (p_start_date, a.expiry_date)))
                       AND TRUNC (a.expiry_date) >=
                              DECODE (
                                 p_end_date,
                                 NULL, TRUNC (a.expiry_date),
                                 TRUNC (NVL (p_start_date, a.expiry_date)))
                       AND a.extract_user = p_user_id)
         LOOP
            v_policy_id.policy_id := i.policy_id;
            PIPE ROW (v_policy_id);
         END LOOP;
      ELSIF p_req_renewal_no = 'N'
      THEN
         FOR j
            IN (SELECT b.policy_id
                  FROM giex_expiries_v b
                 WHERE     b.renew_flag = p_renew_flag
                       --AND b.policy_id = NVL(p_policy_id, b.policy_id)
                       AND b.assd_no = NVL (p_assd_no, b.assd_no)
                       AND NVL (b.intm_no, 0) =
                              NVL (p_intm_no, NVL (b.intm_no, 0))
                       AND UPPER (b.iss_cd) =
                              NVL (UPPER (p_iss_cd), UPPER (b.iss_cd))
                       AND UPPER (b.subline_cd) =
                              NVL (UPPER (p_subline_cd),
                                   UPPER (b.subline_cd))
                       AND UPPER (b.line_cd) =
                              NVL (UPPER (p_line_cd), UPPER (b.line_cd))
                       AND TRUNC (b.expiry_date) <=
                              TRUNC (
                                 NVL (p_end_date,
                                      NVL (p_start_date, b.expiry_date)))
                       AND TRUNC (b.expiry_date) >=
                              DECODE (
                                 p_end_date,
                                 NULL, TRUNC (b.expiry_date),
                                 TRUNC (NVL (p_start_date, b.expiry_date)))
                       AND b.extract_user = p_user_id)
         LOOP
            v_policy_id.policy_id := j.policy_id;
            PIPE ROW (v_policy_id);
         END LOOP;
      END IF;
   END get_policy_id_giexs006;

   FUNCTION get_POLICY_no (p_policy_id gipi_polbasic.policy_id%TYPE)
      RETURN CHAR
   IS
      v_pOL_NO   VARCHAR (100);
   BEGIN
      BEGIN
         SELECT     C.line_cd
                       || ' - '
                       || C.subline_cd
                       || ' - '
                       || C.iss_cd
                       || ' - '
                       || TO_CHAR (C.issue_yy, '09')
                       || ' - '
                       || TO_CHAR (C.pol_seq_no, '0999999')
                       || ' - '
                       || TO_CHAR (C.renew_no, '09') POL_NO
           INTO v_pOL_NO
           FROM gipi_parlist a,
                gipi_polnrep b,
                gipi_polbasic c,
                giex_expiries_v d
          WHERE     a.par_id = b.par_id
                AND c.policy_id = b.old_policy_id
                AND c.policy_id = d.policy_id
                AND c.policy_id = p_policy_id;
      EXCEPTION
         WHEN NO_DATA_FOUND OR TOO_MANY_ROWS
         THEN
            NULL;
      END;

      RETURN v_pOL_NO;
   END;

   FUNCTION get_par_no (p_policy_id gipi_polbasic.policy_id%TYPE)
      RETURN CHAR
      IS
          v_parno   VARCHAR (30);
   BEGIN
       BEGIN
         SELECT    a.line_cd
                || '-'
                || a.iss_cd
                || '-'
                || TO_CHAR (a.par_yy, '09')
                || '-'
                || TO_CHAR (a.par_seq_no, '0999999')
                   par_no
           INTO v_parno
           FROM gipi_parlist a,
                gipi_wpolnrep b,
                gipi_polbasic c,
                giex_expiries_v d
          WHERE     a.par_id = b.par_id
                AND c.policy_id = b.old_policy_id
                AND c.policy_id = d.policy_id
                AND c.policy_id = p_policy_id;
      EXCEPTION
         WHEN NO_DATA_FOUND OR TOO_MANY_ROWS
         THEN
            NULL;
      END;

      RETURN v_parno;
END;

   FUNCTION get_initial_variables
      RETURN variables_tab
      PIPELINED
   IS
      v_var   variables_type;
   BEGIN
      FOR i IN (SELECT param_value_v
                  FROM giis_parameters
                 WHERE param_name LIKE 'OVERRIDE_RENEWAL')
      LOOP
         v_var.vOverrideRenewal := i.param_value_v;
      END LOOP;

      --**Check parameter whether to require reason for non-renewal or not*/
      FOR a IN (SELECT param_value_v
                  FROM giis_parameters
                 WHERE param_name LIKE 'REQUIRE_NON_RENEW_REASON')
      LOOP
         v_var.vrequirenrreason := a.param_value_v;
      END LOOP;

      /**Check parameter whether to allow auto renewal and auto renewal with distribution or not*/
      BEGIN
         SELECT param_value_v
           INTO v_var.vallowar
           FROM giis_parameters
          WHERE param_name LIKE 'ALLOW_AUTO_RENEW';
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            v_var.vallowar := 'N';
      END;

      BEGIN
         SELECT param_value_v
           INTO v_var.vallowarwdist
           FROM giis_parameters
          WHERE param_name LIKE 'ALLOW_AUTO_RENEW_WITH_DIST';
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            v_var.vallowarwdist := 'N';
      END;

      FOR A IN (SELECT param_value_v
                  FROM giis_parameters
                 WHERE param_name = 'EXPIRY_ALLOW_UNDIST')
      LOOP
         v_var.vExpiryAllowUndist := a.param_value_v;
         EXIT;
      END LOOP;

      BEGIN
         SELECT param_value_v
           INTO v_var.allow_renewal_other_user
           FROM giis_parameters
          WHERE param_name LIKE 'ALLOW_RENEWAL_OTHER_USER';
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            v_var.allow_renewal_other_user := 'N';
      END;
      
      /* benjo 11.24.2016 SR-5621 */
      BEGIN
         SELECT param_value_v
           INTO v_var.validate_mc_fmv
           FROM giis_parameters
          WHERE param_name = 'VALIDATE_MC_FMV';
      EXCEPTION
         WHEN NO_DATA_FOUND
         THEN
            v_var.validate_mc_fmv := '1';
      END;

      PIPE ROW (v_var);
   END;


   /*
    Created By: Irwin C. tabisora
    Date: 8.23.2012
    Description: Get the renewed list of policies and their respective par or policy_no
   **/
   FUNCTION get_renewed_list (p_policy_ids VARCHAR2)
      RETURN renewals_tab PIPELINED
   IS
      str_array         string_fnc.t_array;
      v_renewals        renewals_type;
      v_policy_id       gipi_polbasic.policy_id%TYPE;
      v_new_policy_id   gipi_polbasic.policy_id%TYPE;
      v_is_pack         giex_expiries_v.is_package%TYPE;
   BEGIN
      str_array := string_fnc.SPLIT (p_policy_ids, ',');

      FOR i IN 1 .. str_array.COUNT
      LOOP
         v_policy_id := TO_NUMBER (str_array (i));

         -- check the renew_flag and check if the policy is pack
         FOR gx IN (SELECT is_package, renew_flag, same_polno_sw
                      FROM giex_expiries_v
                     WHERE policy_id = v_policy_id)
         LOOP
              v_renewals.same_polno_sw := gx.same_polno_sw;
            FOR pol                                       -- get pol no first
                   IN (SELECT    a.line_cd
                              || ' - '
                              || a.subline_cd
                              || ' - '
                              || a.iss_cd
                              || ' - '
                              || TO_CHAR (a.issue_yy, '09')
                              || ' - '
                              || TO_CHAR (a.pol_seq_no, '0999999')
                              || ' - '
                              || TO_CHAR (a.renew_no, '09') policy_no
                         FROM gipi_polbasic a
                        WHERE a.policy_id = v_policy_id
                          AND gx.is_package = 'N'
                       UNION ALL
                       SELECT    a.line_cd
                              || ' - '
                              || a.subline_cd
                              || ' - '
                              || a.iss_cd
                              || ' - '
                              || TO_CHAR (a.issue_yy, '09')
                              || ' - '
                              || TO_CHAR (a.pol_seq_no, '0999999')
                              || ' - '
                              || TO_CHAR (a.renew_no, '09') policy_no
                         FROM gipi_pack_polbasic a
                        WHERE a.pack_policy_id = v_policy_id
                          AND gx.is_package = 'Y')
            LOOP
               v_renewals.policy_no := pol.policy_no;
            END LOOP;

            IF (gx.renew_flag = 1)                               -- No renewal
            THEN
               v_renewals.par_no := '';
            ELSIF (gx.renew_flag = 2)                        -- RENEWAL TO PAR
            THEN
               IF NVL (gx.is_package, 'N') = 'Y'
               THEN
                  BEGIN
                     SELECT    a.line_cd
                            || '-'
                            || a.iss_cd
                            || '-'
                            || TO_CHAR (a.par_yy, '09')
                            || '-'
                            || TO_CHAR (a.par_seq_no, '0999999') par_no
                       INTO v_renewals.par_no
                       FROM gipi_pack_parlist a,
                            gipi_pack_wpolnrep b,
                            --gipi_polbasic c,  -- marco - 04.09.2013 - changed table to pack
                            gipi_pack_polbasic c,
                            giex_expiries_v d
                      WHERE a.pack_par_id = b.pack_par_id
                        --AND c.policy_id = b.old_pack_policy_id  -- marco - 04.09.2013 - modified conditions for pack
                        --AND c.policy_id = d.policy_id
                        --AND c.policy_id = v_policy_id;
                        AND c.pack_policy_id = b.old_pack_policy_id
                        AND c.pack_policy_id = d.pack_policy_id
                        AND c.pack_policy_id = v_policy_id;
                  EXCEPTION
                     WHEN NO_DATA_FOUND OR TOO_MANY_ROWS
                     THEN
                        NULL;
                        end;
               ELSE

                  v_renewals.par_no :=
                                 giex_expiries_v_pkg.get_par_no (v_policy_id);
               END IF;
            ELSIF (gx.renew_flag = 3)                -- AUTO RENEWAL TO POLICY
            THEN
               /*   IF NVL (gx.is_package, 'N') = 'Y'
                    THEN
                       NULL;
                    ELSE*/
               BEGIN
                  SELECT av.new_policy_id
                    INTO v_new_policy_id
                    FROM gipi_polnrep av
                    where old_policy_id = v_policy_id
                    ;

               EXCEPTION
                  WHEN NO_DATA_FOUND
                  THEN
                     v_new_policy_id := '';
               END;

               BEGIN
                                 SELECT    line_cd
                             || '-'
                             || subline_cd
                             || '-'
                             || iss_cd
                             || '-'
                             || LTRIM (TO_CHAR (issue_yy, '09'))
                             || '-'
                             || LTRIM (TO_CHAR (pol_seq_no, '0999999'))
                             || '-'
                             || LTRIM (TO_CHAR (renew_no, '09'))
                             || DECODE (
                                   NVL (endt_seq_no, 0),
                                   0, '',
                                      ' / '
                                   || endt_iss_cd
                                   || '-'
                                   || LTRIM (TO_CHAR (endt_yy, '09'))
                                   || '-'
                                   || LTRIM (TO_CHAR (endt_seq_no, '0999999'))
                                ) policy INTO v_renewals.par_no
                        FROM gipi_polbasic
                       WHERE policy_id = v_new_policy_id;

               EXCEPTION
                  WHEN NO_DATA_FOUND
                  THEN
                     v_renewals.par_no  := '';
               END;

            END IF;

         END LOOP;

         -- v_renewals.par_no := str_array (i);
         PIPE ROW (v_renewals);
      END LOOP;
   END;
END giex_expiries_v_pkg;
/


