CREATE OR REPLACE PACKAGE BODY CPI.GIACB004_PKG
AS

   /*
   **  Created by   : Steven Ramirez
   **  Date Created : 04.15.2013
   **  Reference By : GIACB004 use in GIACB000 - Batch Accounting Entry
   **  Description  : 
   */
    PROCEDURE get_ruls_on_incl (p_prod_date            IN       DATE,
                                p_iss_cd               IN OUT   VARCHAR2,
                                p_prod_tk_up           IN OUT   NUMBER,
                                p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                                p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                                p_exclude_special      IN OUT   giac_parameters.param_value_v%TYPE,
                                p_user_id              IN       GIIS_USERS.user_id%type,
                                p_msg                  IN OUT   VARCHAR2)
    IS
       v_tran_id                GIAC_ACCTRANS.tran_id%type;
       v_fund_cd                GIAC_ACCTRANS.gfun_fund_cd%type;
       v_branch_cd              GIAC_ACCTRANS.gibr_branch_cd%type;
       v_gl_code                VARCHAR2(500);
       v_prod_take_up           giac_parameters.param_value_n%TYPE;
       v_dummy                  NUMBER                               := 0;
       v_dummy1                 NUMBER                               := 0;
       v_and                    VARCHAR2 (1000);
       v_tran_flag              giac_acctrans.tran_flag%TYPE;
       v_outputvat_item_no		GIAC_MODULE_ENTRIES.item_no%type;  -- for take-up of output vat
       v_inputvat_item_no       GIAC_MODULE_ENTRIES.item_no%type;  -- for take-up of input vat 
       v_rule                   VARCHAR2(30);
       v_line_cd                VARCHAR(30);
       v_item_no                NUMBER(30);  
       v_gross_prem             VARCHAR(30);
       v_due_frm_ced            VARCHAR(30);
       v_comm_exp               VARCHAR(30);
       v_year                   NUMBER;
       v_month                  NUMBER;
       v_gen_type               GIAC_MODULES.generation_type%type;
       v_acct_line_cd           giis_line.acct_line_cd%type;
       v_gl_acct_id             giac_chart_of_accts.gl_acct_id%type;
       v_module_item_no_Inc_adj GIAC_MODULE_ENTRIES.item_no%type:= 4;
       v_module_item_no_Exp_adj GIAC_MODULE_ENTRIES.item_no%type:= 5;
       v_balance                giac_acct_entries.credit_amt%TYPE;
       v_module_name            giac_modules.module_name%TYPE := 'GIACB004';
       v_neg_incl               VARCHAR2(1);
    BEGIN
       giis_users_pkg.app_user := p_user_id; 
       v_neg_incl := '';
       
       BEGIN
         --Checking if there are INF transactions that have been posted...

          SELECT tran_flag
            INTO v_tran_flag
            FROM giac_acctrans
           WHERE tran_class = 'INF'
             AND tran_flag = 'P'
             AND TRUNC (tran_date) = TRUNC (p_prod_date);
       EXCEPTION
          WHEN NO_DATA_FOUND
          THEN
             BEGIN                                                 -- outer begin
                --Updating GIPI_POLBASIC... setting acct_ent_date to null whose acct_ent_date is the production date...

                UPDATE gipi_polbasic
                   SET acct_ent_date = NULL
                 WHERE policy_id IN (SELECT policy_id
                                       FROM giri_inpolbas)
                   AND spld_acct_ent_date IS NULL
                   AND TRUNC (acct_ent_date) = TRUNC (p_prod_date);

                /* judyann 07142008; for rerun, update acct_ent_date per invoice */
                UPDATE gipi_invoice
                   SET acct_ent_date = NULL
                 WHERE policy_id IN (SELECT policy_id
                                       FROM giri_inpolbas)
                   AND spoiled_acct_ent_date IS NULL
                   AND TRUNC (acct_ent_date) = TRUNC (p_prod_date);

                --Updating GIPI_POLBASIC... setting spld_acct_ent_date to null whose spld_acct_ent_date is the production date...

                UPDATE gipi_polbasic
                   SET spld_acct_ent_date = NULL
                 WHERE policy_id IN (SELECT policy_id
                                       FROM giri_inpolbas)
                   AND TRUNC (spld_acct_ent_date) = TRUNC (p_prod_date)
                   AND TRUNC (acct_ent_date) != TRUNC (p_prod_date);

                /* judyann 07142008; for rerun, update spoiled_acct_ent_date per invoice */
                UPDATE gipi_invoice
                   SET spoiled_acct_ent_date = NULL
                 WHERE policy_id IN (SELECT policy_id
                                       FROM giri_inpolbas)
                   AND TRUNC (spoiled_acct_ent_date) = TRUNC (p_prod_date)
                   AND TRUNC (acct_ent_date) != TRUNC (p_prod_date);

                --Updating GIAC_ACCTRANS... setting tran_flag to D for INF...

                UPDATE giac_acctrans
                   SET tran_flag = 'D'
                 WHERE tran_class = 'INF'
                   AND TRUNC (tran_date) = TRUNC (p_prod_date);
             END;                                                  --  outer begin
       END;

       --Generating acounting entries for INF...

       BEGIN
          -- modified by judyann 04082008; to handle take-up of long-term policies
          FOR rec IN
             (SELECT DISTINCT NVL (b.cred_branch, b.iss_cd) iss_cd
                         FROM giri_inpolbas a, gipi_polbasic b, gipi_invoice c
                        WHERE a.policy_id = b.policy_id
                          AND b.policy_id = c.policy_id
                          AND b.line_cd != 'BB'
                          /*
                          AND ((TO_DATE(SUBSTR(UPPER(b.booking_mth), 1, 3)||TO_CHAR(B.BOOKING_YEAR), 'MONYYYY') <= TRUNC(:nbt.p_date))
                            OR
                              (TRUNC(DECODE(GREATEST(B.ISSUE_DATE, B.INCEPT_DATE), B.ISSUE_DATE, B.ISSUE_DATE,
                                             B.INCEPT_DATE, B.INCEPT_DATE, B.ISSUE_DATE))  <= TRUNC(:nbt.p_date)
                               AND b.booking_mth IS NULL))
                          AND ((B.POL_FLAG != '5'
                               AND B.ACCT_ENT_DATE IS NULL)
                            OR
                              (B.POL_FLAG = '5'
                               AND B.SPLD_ACCT_ENT_DATE IS NULL
                               AND TRUNC(B.ACCT_ENT_DATE) < TRUNC(:nbt.p_date))))
                          */
                          AND (   (TO_DATE (   SUBSTR (UPPER (c.multi_booking_mm),
                                                       1,
                                                       3
                                                      )
                                            || TO_CHAR (c.multi_booking_yy),
                                            'MONYYYY'
                                           ) <= TRUNC (p_prod_date)
                                  )
                               OR (    TRUNC (DECODE (GREATEST (b.issue_date,
                                                                b.incept_date
                                                               ),
                                                      b.issue_date, b.issue_date,
                                                      b.incept_date, b.incept_date,
                                                      b.issue_date
                                                     )
                                             ) <= TRUNC (p_prod_date)
                                   AND c.multi_booking_mm IS NULL
                                  )
                              )
                          AND (   (b.pol_flag != '5' AND b.acct_ent_date IS NULL
                                  )
                               OR (    b.pol_flag = '5'
                                   AND b.spld_acct_ent_date IS NULL
                                   AND TRUNC (b.acct_ent_date) <
                                                               TRUNC (p_prod_date)
                                  )
                              ))
          LOOP
             BEGIN
                v_dummy := 1;
                p_v_iss_cd := rec.iss_cd;

                SELECT param_value_v
                  INTO p_prem_rec_gross_tag
                  FROM giac_parameters
                 WHERE param_name = 'PREM_REC_GROSS_TAG';

                SELECT param_value_n
                  INTO v_prod_take_up
                  FROM giac_parameters
                 WHERE UPPER (param_name) = 'BATCH_TAKE_UP';

                p_iss_cd := p_v_iss_cd;
                p_prod_tk_up := v_prod_take_up;

                IF p_exclude_special = 'N'
                THEN
                   --Take up all policies...
                   IF v_prod_take_up = 1
                   THEN
                      GIACB004_PKG.prod_tk_up_1(p_prod_date,
                                                v_outputvat_item_no,
                                                v_inputvat_item_no,
                                                p_v_iss_cd,
                                                v_neg_incl,
                                                v_branch_cd,
                                                v_fund_cd,
                                                v_tran_id,
                                                p_prem_rec_gross_tag,
                                                v_rule,
                                                v_line_cd,
                                                v_item_no,
                                                v_gross_prem,
                                                v_due_frm_ced,
                                                v_comm_exp,
                                                v_year,
                                                v_month,
                                                v_gen_type,
                                                v_gl_code,
                                                p_msg);
                   ELSIF v_prod_take_up = 2
                   THEN
                      GIACB004_PKG.prod_tk_up_2(p_prod_date,
                                                v_outputvat_item_no,
                                                v_inputvat_item_no,
                                                p_v_iss_cd,
                                                v_neg_incl,
                                                v_branch_cd,
                                                v_fund_cd,
                                                v_tran_id,
                                                p_prem_rec_gross_tag,
                                                v_rule,
                                                v_line_cd,
                                                v_item_no,
                                                v_gross_prem,
                                                v_due_frm_ced,
                                                v_comm_exp,
                                                v_year,
                                                v_month,
                                                v_gen_type,
                                                v_gl_code, 
                                                p_msg);
                   ELSIF v_prod_take_up = 3
                   THEN
                      GIACB004_PKG.prod_tk_up_3(p_prod_date,
                                                v_outputvat_item_no,
                                                v_inputvat_item_no,
                                                p_v_iss_cd,
                                                v_neg_incl,
                                                v_branch_cd,
                                                v_fund_cd,
                                                v_tran_id,
                                                p_prem_rec_gross_tag,
                                                v_rule,
                                                v_line_cd,
                                                v_item_no,
                                                v_gross_prem,
                                                v_due_frm_ced,
                                                v_comm_exp,
                                                v_year,
                                                v_month,
                                                v_gen_type,
                                                v_gl_code, 
                                                p_msg);
                   ELSIF v_prod_take_up = 4
                   THEN
                      GIACB004_PKG.prod_tk_up_4(p_prod_date,
                                                v_outputvat_item_no,
                                                v_inputvat_item_no,
                                                p_v_iss_cd,
                                                v_neg_incl,
                                                v_branch_cd,
                                                v_fund_cd,
                                                v_tran_id,
                                                p_prem_rec_gross_tag,
                                                v_rule,
                                                v_line_cd,
                                                v_item_no,
                                                v_gross_prem,
                                                v_due_frm_ced,
                                                v_comm_exp,
                                                v_year,
                                                v_month,
                                                v_gen_type,
                                                v_gl_code, 
                                                p_msg);
                   ELSIF v_prod_take_up = 5
                   THEN
                      GIACB004_PKG.prod_tk_up_5(p_prod_date,
                                                v_outputvat_item_no,
                                                v_inputvat_item_no,
                                                p_v_iss_cd,
                                                v_neg_incl,
                                                v_branch_cd,
                                                v_fund_cd,
                                                v_tran_id,
                                                p_prem_rec_gross_tag,
                                                v_rule,
                                                v_line_cd,
                                                v_item_no,
                                                v_gross_prem,
                                                v_due_frm_ced,
                                                v_comm_exp,
                                                v_year,
                                                v_month,
                                                v_gen_type,
                                                v_gl_code, 
                                                p_msg,
                                                v_acct_line_cd,
                                                v_gl_acct_id);
                   END IF;
                ELSIF p_exclude_special = 'Y'
                THEN
                   --Take up regular policies...
                   IF v_prod_take_up = 1
                   THEN
                      GIACB004_PKG.prod_tk_up_1_reg(p_prod_date,
                                                    v_outputvat_item_no,
                                                    v_inputvat_item_no,
                                                    p_v_iss_cd,
                                                    v_neg_incl,
                                                    v_branch_cd,
                                                    v_fund_cd,
                                                    v_tran_id,
                                                    p_prem_rec_gross_tag,
                                                    v_rule,
                                                    v_line_cd,
                                                    v_item_no,
                                                    v_gross_prem,
                                                    v_due_frm_ced,
                                                    v_comm_exp,
                                                    v_year,
                                                    v_month,
                                                    v_gen_type,
                                                    v_gl_code, 
                                                    p_msg);
                   ELSIF v_prod_take_up = 2
                   THEN
                      GIACB004_PKG.prod_tk_up_2_reg(p_prod_date,
                                                    v_outputvat_item_no,
                                                    v_inputvat_item_no,
                                                    p_v_iss_cd,
                                                    v_neg_incl,
                                                    v_branch_cd,
                                                    v_fund_cd,
                                                    v_tran_id,
                                                    p_prem_rec_gross_tag,
                                                    v_rule,
                                                    v_line_cd,
                                                    v_item_no,
                                                    v_gross_prem,
                                                    v_due_frm_ced,
                                                    v_comm_exp,
                                                    v_year,
                                                    v_month,
                                                    v_gen_type,
                                                    v_gl_code, 
                                                    p_msg);
                   ELSIF v_prod_take_up = 3
                   THEN
                      GIACB004_PKG.prod_tk_up_3_reg(p_prod_date,
                                                    v_outputvat_item_no,
                                                    v_inputvat_item_no,
                                                    p_v_iss_cd,
                                                    v_neg_incl,
                                                    v_branch_cd,
                                                    v_fund_cd,
                                                    v_tran_id,
                                                    p_prem_rec_gross_tag,
                                                    v_rule,
                                                    v_line_cd,
                                                    v_item_no,
                                                    v_gross_prem,
                                                    v_due_frm_ced,
                                                    v_comm_exp,
                                                    v_year,
                                                    v_month,
                                                    v_gen_type,
                                                    v_gl_code, 
                                                    p_msg);
                   ELSIF v_prod_take_up = 4
                   THEN
                      GIACB004_PKG.prod_tk_up_4_reg(p_prod_date,
                                                    v_outputvat_item_no,
                                                    v_inputvat_item_no,
                                                    p_v_iss_cd,
                                                    v_neg_incl,
                                                    v_branch_cd,
                                                    v_fund_cd,
                                                    v_tran_id,
                                                    p_prem_rec_gross_tag,
                                                    v_rule,
                                                    v_line_cd,
                                                    v_item_no,
                                                    v_gross_prem,
                                                    v_due_frm_ced,
                                                    v_comm_exp,
                                                    v_year,
                                                    v_month,
                                                    v_gen_type,
                                                    v_gl_code, 
                                                    p_msg);
                   ELSIF v_prod_take_up = 5
                   THEN
                      GIACB004_PKG.prod_tk_up_5_reg(p_prod_date,
                                                    v_outputvat_item_no,
                                                    v_inputvat_item_no,
                                                    p_v_iss_cd,
                                                    v_neg_incl,
                                                    v_branch_cd,
                                                    v_fund_cd,
                                                    v_tran_id,
                                                    p_prem_rec_gross_tag,
                                                    v_rule,
                                                    v_line_cd,
                                                    v_item_no,
                                                    v_gross_prem,
                                                    v_due_frm_ced,
                                                    v_comm_exp,
                                                    v_year,
                                                    v_month,
                                                    v_gen_type,
                                                    v_gl_code, 
                                                    p_msg,
                                                    v_acct_line_cd,
                                                    v_gl_acct_id);
                   END IF;
                END IF;
             END;
          END LOOP;

          IF v_dummy = 0
          THEN
             p_msg := p_msg||'#No record/s available for batch accounting generation.';
          ELSE
             GIACB004_PKG.check_debit_credit_amounts(p_prod_date,
                                                     v_module_item_no_Inc_adj,
                                                     v_module_item_no_Exp_adj,
                                                     v_module_name,
                                                     v_fund_Cd,
                                                     v_balance,
                                                     p_msg);
          END IF;
       END;
    END;
    
    PROCEDURE prod_tk_up_1 (p_prod_date            IN       DATE,
                            p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                            p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                            p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                            p_v_neg_incl           IN OUT   VARCHAR2,
                            p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                            p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                            p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                            p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                            p_rule                 IN OUT   VARCHAR2,
                            p_line_cd              IN OUT   VARCHAR2,
                            p_item_no              IN OUT   NUMBER,
                            p_gross_prem           IN OUT   VARCHAR2,
                            p_due_frm_ced          IN OUT   VARCHAR2,
                            p_comm_exp             IN OUT   VARCHAR2,
                            p_v_year               IN OUT   NUMBER,
                            p_v_month              IN OUT   NUMBER,
                            p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                            p_gl_code              IN OUT   VARCHAR2,
                            p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
       --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
       --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;
       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd,
                            b.pol_flag,                         --B.ACCT_ENT_DATE
                                       d.acct_ent_date, d.iss_cd, d.prem_seq_no,
                            
                            -- judyann 04082008
                            c.local_foreign_sw                -- judyann 01062006
                       FROM giri_inpolbas a,
                            gipi_polbasic b,
                            gipi_invoice d,
                            giis_reinsurer c
                      WHERE a.policy_id = b.policy_id
                        AND b.policy_id = d.policy_id
                        /*
                        and ((b.pol_flag != '5' and b.acct_ent_date is null) or
                             (b.pol_flag = '5' and b.acct_ent_date is not null and
                              trunc(b.acct_ent_date) <> trunc(p_prod_date)))
                        */
                        AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                             OR (    b.pol_flag = '5'
                                 AND d.acct_ent_date IS NOT NULL
                                 AND TRUNC (d.acct_ent_date) <>
                                                               TRUNC (p_prod_date)
                                )
                            )
                        AND TRUNC (b.issue_date) <=
                                                NVL (TRUNC (p_prod_date), SYSDATE)
                        AND b.iss_cd = p_v_iss_cd
                        AND a.ri_cd = c.ri_cd
                   ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
                --      else
                --        /* do not process the current record */
                --        variables.v_neg_incl := '';
                --        :nbt.rule := '';
                --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := GIACB004_PKG.get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     GIACB004_PKG.get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level (rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                    );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                          );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                         GROUP BY  B.line_cd, B.peril_cd, a.currency_rt)

                                              LOOP
                                              */
                            FOR rec3 IN (SELECT   SUM (d.prem_amt * a.currency_rt
                                                      ) prem_amt,
                                                  b.line_cd, b.peril_cd
                                             FROM gipi_item a,
                                                  gipi_itmperil b,
                                                  gipi_invoice c,
                                                  gipi_invperil d
                                            WHERE a.policy_id = b.policy_id
                                              AND a.item_no = b.item_no
                                              AND a.policy_id = c.policy_id
                                              AND c.iss_cd = d.iss_cd
                                              AND c.prem_seq_no = d.prem_seq_no
                                              AND b.peril_cd = d.peril_cd
                                              AND a.policy_id = rec.policy_id
                                              AND d.iss_cd = rec.iss_cd
                                              AND d.prem_seq_no = rec.prem_seq_no
                                         /* judyann; get premiums per invoice */
                                         GROUP BY b.line_cd,
                                                  b.peril_cd,
                                                  a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/  --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                        AND gacc_gfun_fund_cd = p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                              /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                         GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN (SELECT   SUM (d.prem_amt * a.currency_rt
                                                      ) prem_amt,
                                                  b.line_cd
                                             FROM gipi_item a,
                                                  gipi_itmperil b,
                                                  gipi_invoice c,
                                                  gipi_invperil d
                                            WHERE a.policy_id = b.policy_id
                                              AND a.item_no = b.item_no
                                              AND a.policy_id = c.policy_id
                                              AND c.iss_cd = d.iss_cd
                                              AND c.prem_seq_no = d.prem_seq_no
                                              AND b.peril_cd = d.peril_cd
                                              AND a.policy_id = rec.policy_id
                                              AND d.iss_cd = rec.iss_cd
                                              AND d.prem_seq_no = rec.prem_seq_no
                                         /* judyann; get premiums per invoice */
                                         GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                        AND gacc_gfun_fund_cd = p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                            -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                           p_v_branch_cd,
                                                           p_v_fund_cd,
                                                           p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                               /*
                                             FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                            FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                           WHERE A.POLICY_ID = B.POLICY_ID
                                                             AND A.ITEM_NO   = B.ITEM_NO
                                                             AND A.POLICY_ID = REC.POLICY_ID
                            --                                 and LINE_CD   = REC.LINE_CD)
                                                           GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                             LOOP
                                             */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no = rec.prem_seq_no
                                /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.21.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.21.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                        AND gacc_gfun_fund_cd = p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                /*
                                             FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                            FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                           WHERE A.POLICY_ID = B.POLICY_ID
                                                             AND A.ITEM_NO   = B.ITEM_NO
                                                             AND A.POLICY_ID = REC.POLICY_ID
                            --                                 and LINE_CD   = REC.LINE_CD)
                                                           GROUP BY B.line_cd, a.currency_rt)

                                             loop
                                             */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no = rec.prem_seq_no
                                /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                        AND gacc_gfun_fund_cd = p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;
                                       /* rec2.item_no = 3 */
                            /* added by judyann 01042006;
                            ** to generate accounting entries for VAT on RI premiums and commissions
                            */
                            /* judyann 07182008
                            ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                            */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no = p_outputvat_item_no
                            /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no = rec.prem_seq_no
                                      /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                           AND gacc_gfun_fund_cd = p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no = p_inputvat_item_no
                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no = rec.prem_seq_no
                                   /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                           AND gacc_gfun_fund_cd = p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no = p_outputvat_item_no
                         /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no = rec.prem_seq_no
                                      /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                           AND gacc_gfun_fund_cd = p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no = p_inputvat_item_no
                         /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no = rec.prem_seq_no
                                   /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd = p_v_branch_cd
                                           AND gacc_gfun_fund_cd = p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                     raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                  p_v_branch_cd,
                                                  p_v_fund_cd,
                                                  p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE create_gacc_record (p_prod_date     IN       DATE,
                                  p_v_tran_id     IN OUT   giac_acctrans.tran_id%TYPE,
                                  p_v_year        IN OUT   NUMBER,
                                  p_v_month       IN OUT   NUMBER,
                                  p_v_fund_cd     IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                                  p_v_iss_cd      IN OUT   gipi_polbasic.iss_cd%TYPE,
                                  p_v_branch_cd   IN OUT   giac_acctrans.gibr_branch_cd%TYPE)
    IS
       v_tran_seq_no     giac_acctrans.tran_seq_no%TYPE;
       v_tran_class_no   giac_acctrans.tran_class_no%TYPE;
    BEGIN
       --Creating records in GIAC_ACCTRANS...
       SELECT acctran_tran_id_s.NEXTVAL
         INTO p_v_tran_id
         FROM DUAL;

       p_v_year := TO_NUMBER (TO_CHAR (p_prod_date, 'YYYY'));
       p_v_month := TO_NUMBER (TO_CHAR (p_prod_date, 'MM'));

       SELECT param_value_v
         INTO p_v_fund_cd
         FROM giac_parameters
        WHERE UPPER (param_name) = 'FUND_CD';

       IF UPPER (p_v_iss_cd) = 'RI'
       THEN
          SELECT param_value_v
            INTO p_v_branch_cd
            FROM giac_parameters
           WHERE param_name = 'RI_ISS_CD';

          IF p_v_branch_cd = 'RI'
          THEN
             SELECT param_value_v
               INTO p_v_branch_cd
               FROM giac_parameters
              WHERE param_name = 'BRANCH_CD';
          END IF;
       ELSE
          SELECT branch_cd
            INTO p_v_branch_cd
            FROM giis_issource a, giac_branches b
           WHERE a.acct_iss_cd = b.acct_branch_cd
             AND b.gfun_fund_cd = p_v_fund_cd
             AND a.iss_cd = p_v_iss_cd;
       END IF;

       v_tran_seq_no :=
          giac_sequence_generation (p_v_fund_cd,
                                    p_v_branch_cd,
                                    'TRAN_SEQ_NO',
                                    p_v_year,
                                    0
                                   );
       v_tran_class_no :=
          giac_sequence_generation (p_v_fund_cd,
                                    p_v_branch_cd,
                                    'INF',
                                    p_v_year,
                                    p_v_month
                                   );

       INSERT INTO giac_acctrans
                   (tran_id, gfun_fund_cd, gibr_branch_cd,
                    tran_year,
                    tran_month, tran_seq_no,
                    tran_date, tran_flag, tran_class, tran_class_no,
                    particulars,
                    user_id, last_update
                   )
            VALUES (p_v_tran_id, p_v_fund_cd, p_v_branch_cd,
                    TO_NUMBER (TO_CHAR (p_prod_date, 'yyyy')),
                    TO_NUMBER (TO_CHAR (p_prod_date, 'mm')), v_tran_seq_no,
                    p_prod_date, 'C', 'INF', v_tran_class_no,
                       'Production take up of Inward Reinsurance for '
                    || TO_CHAR (p_prod_date, 'fmMonth YYYY'),                -- ||
                    --                           '(LINE : variables.bae_line_cd)',
                    giis_users_pkg.app_user, SYSDATE
                   );
    END;
    
    PROCEDURE baeg_delete_acct_entries (p_gen_type    IN   giac_modules.generation_type%TYPE,
                                        p_v_tran_id   IN   giac_acctrans.tran_id%TYPE)
    IS
       dummy   VARCHAR2 (1);

       CURSOR ae
       IS
          SELECT '1'
            FROM giac_acct_entries
           WHERE gacc_tran_id = p_v_tran_id AND generation_type = p_gen_type;
    BEGIN
       OPEN ae;

       FETCH ae
        INTO dummy;

       IF SQL%FOUND
       THEN
          /**************************************************************************
          *
          * Delete all records existing in GIAC_ACCT_ENTRIES table having the same
          * tran_id as p_v_tran_id.
          *
          **************************************************************************/
          DELETE FROM giac_acct_entries
                WHERE gacc_tran_id = p_v_tran_id AND generation_type = p_gen_type;
       END IF;
    END;
    
    FUNCTION get_line_cd (p_line_cd VARCHAR2)
       RETURN NUMBER
    IS
       CURSOR c1
       IS
          SELECT acct_line_cd
            FROM giis_line
           WHERE line_cd = p_line_cd;

       v_line   NUMBER := '';                  --GIIS_LINE.acct_line_cd%type:='';
    BEGIN
       OPEN c1;
       FETCH c1
        INTO v_line;
       IF c1%NOTFOUND
       THEN
          NULL;
       END IF;
       CLOSE c1;
       RETURN v_line;
    END;
    
    FUNCTION get_subline_cd (p_line_cd VARCHAR2, p_subline_cd VARCHAR2)
       RETURN NUMBER
    IS
       CURSOR c1
       IS
          SELECT acct_subline_cd
            FROM giis_subline
           WHERE line_cd = p_line_cd AND subline_cd = p_subline_cd;

       v_subline   NUMBER := '';         --GIIS_SUBLINE.acct_subline_cd%type:='';
    BEGIN
       OPEN c1;
       FETCH c1
        INTO v_subline;
       IF c1%NOTFOUND
       THEN
          NULL;
       END IF;
       CLOSE c1;
       RETURN v_subline;
    END;
    
    /**************************************************************************
    *                                                                         *
    * This procedure determines the GL Account code that will handle the      *
    * line number, intermediary number and old/new account code.              *
    *                                                                         *
    **************************************************************************/

    PROCEDURE baeg_check_level (cl_level       IN       NUMBER,
                                cl_value       IN       NUMBER,
                                cl_sub_acct1   IN OUT   NUMBER,
                                cl_sub_acct2   IN OUT   NUMBER,
                                cl_sub_acct3   IN OUT   NUMBER,
                                cl_sub_acct4   IN OUT   NUMBER,
                                cl_sub_acct5   IN OUT   NUMBER,
                                cl_sub_acct6   IN OUT   NUMBER,
                                cl_sub_acct7   IN OUT   NUMBER)
    IS
    BEGIN
    --msg_alert('AEG CHECK LEVEL...','I',FALSE);
       IF cl_level = 1
       THEN
          cl_sub_acct1 := cl_value;
       ELSIF cl_level = 2
       THEN
          cl_sub_acct2 := cl_value;
       ELSIF cl_level = 3
       THEN
          cl_sub_acct3 := cl_value;
       ELSIF cl_level = 4
       THEN
          cl_sub_acct4 := cl_value;
       ELSIF cl_level = 5
       THEN
          cl_sub_acct5 := cl_value;
       ELSIF cl_level = 6
       THEN
          cl_sub_acct6 := cl_value;
       ELSIF cl_level = 7
       THEN
          cl_sub_acct7 := cl_value;
       END IF;
    END;
    
    /******************************************************
    *                                                     *
    *  This procedure checks the existence of GL codes    *
    *  in GIAC_CHART_OF_ACCTS.                            *
    *                                                     *
    ******************************************************/

    PROCEDURE baeg_check_chart_of_accts (cca_gl_acct_category            giac_acct_entries.gl_acct_category%TYPE,
                                         cca_gl_control_acct             giac_acct_entries.gl_control_acct%TYPE,
                                         cca_gl_sub_acct_1               giac_acct_entries.gl_sub_acct_1%TYPE,
                                         cca_gl_sub_acct_2               giac_acct_entries.gl_sub_acct_2%TYPE,
                                         cca_gl_sub_acct_3               giac_acct_entries.gl_sub_acct_3%TYPE,
                                         cca_gl_sub_acct_4               giac_acct_entries.gl_sub_acct_4%TYPE,
                                         cca_gl_sub_acct_5               giac_acct_entries.gl_sub_acct_5%TYPE,
                                         cca_gl_sub_acct_6               giac_acct_entries.gl_sub_acct_6%TYPE,
                                         cca_gl_sub_acct_7               giac_acct_entries.gl_sub_acct_7%TYPE,
                                         cca_gl_acct_id         IN OUT   giac_chart_of_accts.gl_acct_id%TYPE,
                                         p_gl_code              IN OUT   VARCHAR2,
                                         p_v_tran_id                     giac_acctrans.tran_id%TYPE,
                                         p_msg                           VARCHAR2)
    IS
    BEGIN
       SELECT DISTINCT (gl_acct_id)
                  INTO cca_gl_acct_id
                  FROM giac_chart_of_accts
                 WHERE gl_acct_category = cca_gl_acct_category
                   AND gl_control_acct = cca_gl_control_acct
                   AND gl_sub_acct_1 = cca_gl_sub_acct_1
                   AND gl_sub_acct_2 = cca_gl_sub_acct_2
                   AND gl_sub_acct_3 = cca_gl_sub_acct_3
                   AND gl_sub_acct_4 = cca_gl_sub_acct_4
                   AND gl_sub_acct_5 = cca_gl_sub_acct_5
                   AND gl_sub_acct_6 = cca_gl_sub_acct_6
                   AND gl_sub_acct_7 = cca_gl_sub_acct_7;

       p_gl_code :=
             TO_CHAR (p_v_tran_id)
          || '--'
          || TO_CHAR (cca_gl_acct_category)
          || '-'
          || TO_CHAR (cca_gl_control_acct, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_1, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_2, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_3, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_4, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_5, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_6, '09')
          || '-'
          || TO_CHAR (cca_gl_sub_acct_7, '09');
    EXCEPTION
       WHEN NO_DATA_FOUND
       THEN
        raise_application_error(-20001,p_msg||'#Geniisys Exception#GL account code '
                                 || TO_CHAR (cca_gl_acct_category)
                                 || '-'
                                 || TO_CHAR (cca_gl_control_acct, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_1, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_2, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_3, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_4, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_5, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_6, '09')
                                 || '-'
                                 || TO_CHAR (cca_gl_sub_acct_7, '09')
                                 || ' does not exist in Chart of Accounts (Giac_Acctrans).');
    END;
    
    /*****************************************************************************
    *                                                                            *
    * This procedure determines whether the records will be updated or inserted  *
    * in GIAC_ACCT_ENTRIES.                                                      *
    *                                                                            *
    *****************************************************************************/
    PROCEDURE baeg_insert_update_acct_entry (iuae_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE,
                                             iuae_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE,
                                             iuae_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE,
                                             iuae_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE,
                                             iuae_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE,
                                             iuae_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE,
                                             iuae_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE,
                                             iuae_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE,
                                             iuae_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE,
                                             iuae_generation_type    giac_acct_entries.generation_type%TYPE,
                                             iuae_gl_acct_id         giac_chart_of_accts.gl_acct_id%TYPE,
                                             iuae_sl_cd              giac_acct_entries.sl_cd%TYPE,
                                             iuae_debit_amt          giac_acct_entries.debit_amt%TYPE,
                                             iuae_credit_amt         giac_acct_entries.credit_amt%TYPE,
                                             iuae_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE,
                                             p_v_branch_cd          GIAC_ACCTRANS.gibr_branch_cd%type,
                                             p_v_fund_cd            GIAC_ACCTRANS.gfun_fund_cd%type,
                                             p_v_tran_id            GIAC_ACCTRANS.tran_id%type)
    IS
       iuae_acct_entry_id   giac_acct_entries.acct_entry_id%TYPE;
    BEGIN
       SELECT NVL (MAX (acct_entry_id), 0) acct_entry_id
         INTO iuae_acct_entry_id
         FROM giac_acct_entries
        WHERE gacc_gibr_branch_cd = p_v_branch_cd
          AND gacc_gfun_fund_cd = p_v_fund_cd
          AND gacc_tran_id = p_v_tran_id
          AND gl_acct_id = iuae_gl_acct_id
          AND gl_acct_category = iuae_gl_acct_category
          AND gl_control_acct = iuae_gl_control_acct
          AND gl_sub_acct_1 = iuae_gl_sub_acct_1
          AND gl_sub_acct_2 = iuae_gl_sub_acct_2
          AND gl_sub_acct_3 = iuae_gl_sub_acct_3
          AND gl_sub_acct_4 = iuae_gl_sub_acct_4
          AND gl_sub_acct_5 = iuae_gl_sub_acct_5
          AND gl_sub_acct_6 = iuae_gl_sub_acct_6
          AND gl_sub_acct_7 = iuae_gl_sub_acct_7
          AND sl_cd = iuae_sl_cd;

       --msg_alert('iuae_ACCT_ENTRY_ID'||to_char(iuae_ACCT_ENTRY_ID),'I',FALSE);
       IF NVL (iuae_acct_entry_id, 0) = 0
       THEN
          iuae_acct_entry_id := NVL (iuae_acct_entry_id, 0) + 1;

          --msg_alert('insert...','I',FALSE);
          INSERT INTO giac_acct_entries
                      (gacc_tran_id, gacc_gfun_fund_cd,
                       gacc_gibr_branch_cd, acct_entry_id,
                       gl_acct_id, gl_acct_category,
                       gl_control_acct, gl_sub_acct_1,
                       gl_sub_acct_2, gl_sub_acct_3,
                       gl_sub_acct_4, gl_sub_acct_5,
                       gl_sub_acct_6, gl_sub_acct_7, debit_amt,
                       credit_amt, generation_type, sl_cd,
                       sl_type_cd, sl_source_cd, user_id, last_update
                      )
               VALUES (p_v_tran_id, p_v_fund_cd,
                       p_v_branch_cd, iuae_acct_entry_id,
                       iuae_gl_acct_id, iuae_gl_acct_category,
                       iuae_gl_control_acct, iuae_gl_sub_acct_1,
                       iuae_gl_sub_acct_2, iuae_gl_sub_acct_3,
                       iuae_gl_sub_acct_4, iuae_gl_sub_acct_5,
                       iuae_gl_sub_acct_6, iuae_gl_sub_acct_7, iuae_debit_amt,
                       iuae_credit_amt, iuae_generation_type, iuae_sl_cd,
                       iuae_sl_type_cd, 1, giis_users_pkg.app_user, SYSDATE
                      );
       ELSE
          UPDATE giac_acct_entries
             SET debit_amt = debit_amt + iuae_debit_amt,
                 credit_amt = credit_amt + iuae_credit_amt
           WHERE gacc_gibr_branch_cd = p_v_branch_cd
             AND gacc_gfun_fund_cd = p_v_fund_cd
             AND gacc_tran_id = p_v_tran_id
             AND gl_acct_id = iuae_gl_acct_id
             AND gl_acct_category = iuae_gl_acct_category
             AND gl_control_acct = iuae_gl_control_acct
             AND gl_sub_acct_1 = iuae_gl_sub_acct_1
             AND gl_sub_acct_2 = iuae_gl_sub_acct_2
             AND gl_sub_acct_3 = iuae_gl_sub_acct_3
             AND gl_sub_acct_4 = iuae_gl_sub_acct_4
             AND gl_sub_acct_5 = iuae_gl_sub_acct_5
             AND gl_sub_acct_6 = iuae_gl_sub_acct_6
             AND gl_sub_acct_7 = iuae_gl_sub_acct_7
             AND sl_cd = iuae_sl_cd;
       END IF;
    END;
    
    PROCEDURE prod_tk_up_2(p_prod_date            IN       DATE,
                           p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                           p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                           p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                           p_v_neg_incl           IN OUT   VARCHAR2,
                           p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                           p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                           p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                           p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                           p_rule                 IN OUT   VARCHAR2,
                           p_line_cd              IN OUT   VARCHAR2,
                           p_item_no              IN OUT   NUMBER,
                           p_gross_prem           IN OUT   VARCHAR2,
                           p_due_frm_ced          IN OUT   VARCHAR2,
                           p_comm_exp             IN OUT   VARCHAR2,
                           p_v_year               IN OUT   NUMBER,
                           p_v_month              IN OUT   NUMBER,
                           p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                           p_gl_code              IN OUT   VARCHAR2,
                           p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;

       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd,
                            b.pol_flag,                         --B.ACCT_ENT_DATE
                                       d.acct_ent_date, d.iss_cd, d.prem_seq_no,
                                                              -- judyann 04082008
                            c.local_foreign_sw                -- judyann 01062006
                       FROM giri_inpolbas a,
                            gipi_polbasic b,
                            gipi_invoice d,
                            giis_reinsurer c
                      WHERE a.policy_id = b.policy_id
                        AND b.policy_id = d.policy_id
                        AND TRUNC (DECODE (GREATEST (b.issue_date, b.incept_date),
                                           b.issue_date, b.issue_date,
                                           b.incept_date, b.incept_date,
                                           b.issue_date
                                          )
                                  ) <= TRUNC (p_prod_date)
                        /*
                        and ((b.pol_flag != '5' and b.acct_ent_date is null) or
                             (b.pol_flag = '5' and b.acct_ent_date is not null and
                              trunc(b.acct_ent_date) <> trunc(p_prod_date)))
                        */
                        AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                             OR (    b.pol_flag = '5'
                                 AND d.acct_ent_date IS NOT NULL
                                 AND TRUNC (d.acct_ent_date) <>
                                                               TRUNC (p_prod_date)
                                )
                            )
                        AND b.iss_cd = p_v_iss_cd
                        AND b.reg_policy_sw =
                                            'Y'
                                               /* take up regular policies only */
                        AND a.ri_cd = c.ri_cd
                   ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
    --      else
    --        /* do not process the current record */
    --        p_v_neg_incl := '';
    --        p_rule := '';
    --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                        v_acct_line_cd,
                                        v_gl_sub_acct_1,
                                        v_gl_sub_acct_2,
                                        v_gl_sub_acct_3,
                                        v_gl_sub_acct_4,
                                        v_gl_sub_acct_5,
                                        v_gl_sub_acct_6,
                                        v_gl_sub_acct_7
                                       );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                              v_gl_control_acct,
                                              v_gl_sub_acct_1,
                                              v_gl_sub_acct_2,
                                              v_gl_sub_acct_3,
                                              v_gl_sub_acct_4,
                                              v_gl_sub_acct_5,
                                              v_gl_sub_acct_6,
                                              v_gl_sub_acct_7,
                                              v_gl_acct_id,
                                              p_gl_code,
                                              p_v_tran_id,
                                              p_msg
                                             );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF PROD_TK_UP.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                           p_v_branch_cd,
                                                           p_v_fund_cd,
                                                           p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF PROD_TK_UP.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                  p_v_branch_cd,
                                                  p_v_fund_cd,
                                                  p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_3(p_prod_date            IN       DATE,
                           p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                           p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                           p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                           p_v_neg_incl           IN OUT   VARCHAR2,
                           p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                           p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                           p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                           p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                           p_rule                 IN OUT   VARCHAR2,
                           p_line_cd              IN OUT   VARCHAR2,
                           p_item_no              IN OUT   NUMBER,
                           p_gross_prem           IN OUT   VARCHAR2,
                           p_due_frm_ced          IN OUT   VARCHAR2,
                           p_comm_exp             IN OUT   VARCHAR2,
                           p_v_year               IN OUT   NUMBER,
                           p_v_month              IN OUT   NUMBER,
                           p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                           p_gl_code              IN OUT   VARCHAR2,
                           p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;
       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN
          (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd, b.pol_flag,
                                                                --B.ACCT_ENT_DATE
                    d.acct_ent_date, d.iss_cd, d.prem_seq_no, -- judyann 04082008
                    c.local_foreign_sw                        -- judyann 01062006
               FROM giri_inpolbas a,
                    gipi_polbasic b,
                    gipi_invoice d,
                    giis_reinsurer c
              WHERE a.policy_id = b.policy_id
                AND b.policy_id = d.policy_id
                AND b.dist_flag = 3
                AND b.reg_policy_sw =
                       'Y'                     /* take up regular policies only */
      /*
      and ((b.pol_flag != '5' and b.acct_ent_date is null) or
           (b.pol_flag = '5' and b.acct_ent_date is not null and
            trunc(b.acct_ent_date) <> trunc(p_prod_date)))
      */
                AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                     OR (    b.pol_flag = '5'
                         AND d.acct_ent_date IS NOT NULL
                         AND TRUNC (d.acct_ent_date) <> TRUNC (p_prod_date)
                        )
                    )
                AND TRUNC (b.issue_date) <= TRUNC (p_prod_date)
                AND b.iss_cd = p_v_iss_cd
                AND a.ri_cd = c.ri_cd
           ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
                --      else
                --        /* do not process the current record */
                --        p_v_neg_incl := '';
                --        p_rule := '';
                --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN
                (SELECT   gl_acct_category, gl_control_acct, gl_sub_acct_1,
                          gl_sub_acct_2, gl_sub_acct_3, gl_sub_acct_4,
                          gl_sub_acct_5, gl_sub_acct_6, gl_sub_acct_7,
                          intm_type_level, line_dependency_level,
                          old_new_acct_level, dr_cr_tag, generation_type,
                          sl_type_cd, item_no
                     FROM giac_module_entries a, giac_modules b
                    WHERE a.module_id = b.module_id
                      AND module_name = 'GIACB004'
                      AND a.item_no IN
                             (1, 2, 3)
                               --to prevent the loop from generating items 4 and 5
                 ORDER BY item_no)   --which is for the allocation of misc amounts
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                        v_acct_line_cd,
                                        v_gl_sub_acct_1,
                                        v_gl_sub_acct_2,
                                        v_gl_sub_acct_3,
                                        v_gl_sub_acct_4,
                                        v_gl_sub_acct_5,
                                        v_gl_sub_acct_6,
                                        v_gl_sub_acct_7
                                       );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                          );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                   raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                  p_v_branch_cd,
                                                  p_v_fund_cd,
                                                  p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_4(p_prod_date            IN       DATE,
                           p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                           p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                           p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                           p_v_neg_incl           IN OUT   VARCHAR2,
                           p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                           p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                           p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                           p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                           p_rule                 IN OUT   VARCHAR2,
                           p_line_cd              IN OUT   VARCHAR2,
                           p_item_no              IN OUT   NUMBER,
                           p_gross_prem           IN OUT   VARCHAR2,
                           p_due_frm_ced          IN OUT   VARCHAR2,
                           p_comm_exp             IN OUT   VARCHAR2,
                           p_v_year               IN OUT   NUMBER,
                           p_v_month              IN OUT   NUMBER,
                           p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                           p_gl_code              IN OUT   VARCHAR2,
                           p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       /* for regular policies only */
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;
       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN
          (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd, b.pol_flag,
                                                                --B.ACCT_ENT_DATE
                    d.acct_ent_date, d.iss_cd, d.prem_seq_no, -- judyann 04082008
                    c.local_foreign_sw                        -- judyann 01062006
               FROM giri_inpolbas a,
                    gipi_polbasic b,
                    gipi_invoice d,
                    giis_reinsurer c
              WHERE a.policy_id = b.policy_id
                AND b.policy_id = d.policy_id
                AND b.dist_flag = 3
                AND b.reg_policy_sw =
                       'Y'                     /* take up regular policies only */
    /*
    and ((b.pol_flag != '5' and b.acct_ent_date is null) or
         (b.pol_flag = '5' and b.acct_ent_date is not null and
          trunc(b.acct_ent_date) <> trunc(p_prod_date)))
    */
                AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                     OR (    b.pol_flag = '5'
                         AND d.acct_ent_date IS NOT NULL
                         AND TRUNC (d.acct_ent_date) <> TRUNC (p_prod_date)
                        )
                    )
                AND TRUNC (DECODE (GREATEST (b.issue_date, b.incept_date),
                                   b.issue_date, b.issue_date,
                                   b.incept_date, b.incept_date,
                                   b.issue_date
                                  )
                          ) <= TRUNC (p_prod_date)
                AND b.iss_cd = p_v_iss_cd
                AND a.ri_cd = c.ri_cd
           ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
    --      else
    --        /* do not process the current record */
    --        p_v_neg_incl := '';
    --        p_rule := '';
    --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

    		 
             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                          );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                                       v_gl_control_acct,
                                                                       v_gl_sub_acct_1,
                                                                       v_gl_sub_acct_2,
                                                                       v_gl_sub_acct_3,
                                                                       v_gl_sub_acct_4,
                                                                       v_gl_sub_acct_5,
                                                                       v_gl_sub_acct_6,
                                                                       v_gl_sub_acct_7,
                                                                       v_gen_type,
                                                                       v_gl_acct_id,
                                                                       v_sl_cd,
                                                                       v_debit_amt,
                                                                       v_credit_amt,
                                                                       v_sl_type_cd,
                                                                       p_v_branch_cd,
                                                                       p_v_fund_cd,
                                                                       p_v_tran_id
                                                                        );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY  B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                              var_gl_control_acct,
                                                              var_gl_sub_acct_1,
                                                              var_gl_sub_acct_2,
                                                              var_gl_sub_acct_3,
                                                              var_gl_sub_acct_4,
                                                              var_gl_sub_acct_5,
                                                              var_gl_sub_acct_6,
                                                              var_gl_sub_acct_7,
                                                              NULL,
                                                              var_gl_acct_id,
                                                              var_sl_cd,
                                                              var_debit_amt,
                                                              var_credit_amt,
                                                              var_sl_type_cd,
                                                              p_v_branch_cd,
                                                              p_v_fund_cd,
                                                              p_v_tran_id
                                                             );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

    --         COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    PROCEDURE prod_tk_up_5(p_prod_date            IN       DATE,
                           p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                           p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                           p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                           p_v_neg_incl           IN OUT   VARCHAR2,
                           p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                           p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                           p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                           p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                           p_rule                 IN OUT   VARCHAR2,
                           p_line_cd              IN OUT   VARCHAR2,
                           p_item_no              IN OUT   NUMBER,
                           p_gross_prem           IN OUT   VARCHAR2,
                           p_due_frm_ced          IN OUT   VARCHAR2,
                           p_comm_exp             IN OUT   VARCHAR2,
                           p_v_year               IN OUT   NUMBER,
                           p_v_month              IN OUT   NUMBER,
                           p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                           p_gl_code              IN OUT   VARCHAR2,
                           p_msg                  IN OUT   VARCHAR2,
                           p_acct_line_cd         IN OUT   giis_line.acct_line_cd%type,
                           p_gl_acct_id           IN OUT   giac_chart_of_accts.gl_acct_id%type)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       --  v_prem_amt            number:= 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       /* added by judyann 01102006
    ** to determine the applicable GL account to be used
    ** for the take-up of output vat and input vat
    */
      /*FOR param IN (SELECT DECODE(GIACP.V('DEF_RI_VAT_ENTRY'),'Y',6,8) output,
                           DECODE(GIACP.V('DEF_RI_VAT_ENTRY'),'Y',7,9) input
                      FROM DUAL)
      LOOP
          p_outputvat_item_no := param.output;
        p_inputvat_item_no := param.input;
      END LOOP;*/ --commented by lina 08052006
                  -- item #8 and 9 were deleted from giac_module_entries
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;

    /*
      FOR rec IN (SELECT B.POLICY_ID, B.LINE_CD, B.SUBLINE_CD, A.RI_CD, B.POL_FLAG, B.ACCT_ENT_DATE,
                         C.LOCAL_FOREIGN_SW                                 -- judyann 01062006
                    FROM GIRI_INPOLBAS A, GIPI_POLBASIC B, GIIS_REINSURER C
                   WHERE A.POLICY_ID = B.POLICY_ID
                     AND b.line_cd  != 'BB'
                     AND B.ISS_CD    = p_v_iss_cd
                     AND B.reg_policy_sw = 'Y'         -- include only regular policies --
      -- for positive inclusion --
                     AND ((b.pol_flag != '5'
                          AND b.acct_ent_date IS NULL
                          AND b.DIST_FLAG = 3
                          AND ((to_date(substr(upper(b.booking_mth), 1, 3)||TO_CHAR(B.BOOKING_YEAR,'0000'), 'MONYYYY')
                               <= trunc(p_prod_date))
                           OR (trunc(decode(greatest(B.ISSUE_DATE, B.INCEPT_DATE), B.ISSUE_DATE, B.ISSUE_DATE, B.INCEPT_DATE))
                               <= trunc(p_prod_date)
                          AND b.booking_mth IS NULL)))
                      OR
      -- for negative inclusion --
                         (b.pol_flag  = '5'
                          AND b.spld_acct_ent_date IS NULL
                          AND b.acct_ent_date IS NOT NULL
                          AND ((to_date(substr(upper(b.booking_mth), 1, 3)||TO_CHAR(B.BOOKING_YEAR,'0000'), 'MONYYYY')
                               <= trunc(p_prod_date))
                           OR (trunc(decode(greatest(B.ISSUE_DATE, B.INCEPT_DATE), B.ISSUE_DATE, B.ISSUE_DATE, B.INCEPT_DATE))
                               <= trunc(p_prod_date)
                          AND b.booking_mth IS NULL))))
                     AND A.RI_CD = C.RI_CD
                   ORDER BY B.LINE_CD, B.SUBLINE_CD)
    */
    -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN
          (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd, b.pol_flag,
                                                               --b.acct_ent_date,
                    d.acct_ent_date, d.iss_cd, d.prem_seq_no, -- judyann 04082008
                    c.local_foreign_sw                        -- judyann 01062006
               FROM giri_inpolbas a,
                    gipi_polbasic b,
                    gipi_invoice d,
                    giis_reinsurer c
              WHERE a.policy_id = b.policy_id
                AND b.policy_id = d.policy_id
                AND b.line_cd != 'BB'
                AND b.iss_cd = 'RI'
                -- for positive inclusion --
                AND (   (    b.pol_flag != '5'
                         AND d.acct_ent_date IS NULL
                         AND b.dist_flag = 3
                         --AND TO_DATE(d.multi_booking_mm||'-'||d.multi_booking_yy,'FMMONTH-YYYY') <= p_prod_date)
                         AND (   (TO_DATE (   SUBSTR (UPPER (d.multi_booking_mm),
                                                      1,
                                                      3
                                                     )
                                           || TO_CHAR (d.multi_booking_yy, '0000'),
                                           'MONYYYY'
                                          ) <= TRUNC (p_prod_date)
                                 )
                              OR (    TRUNC (DECODE (GREATEST (b.issue_date,
                                                               b.incept_date
                                                              ),
                                                     b.issue_date, b.issue_date,
                                                     b.incept_date
                                                    )
                                            ) <= TRUNC (p_prod_date)
                                  AND d.multi_booking_mm IS NULL
                                 )
                             )
                        )
                     -- for negative inclusion --
                     OR (    b.pol_flag = '5'
                         AND d.spoiled_acct_ent_date IS NULL
                         AND d.acct_ent_date IS NOT NULL
                         --AND TO_DATE(d.multi_booking_mm||'-'||d.multi_booking_yy,'FMMONTH-YYYY') <= p_prod_date))
                         AND (   (TO_DATE (   SUBSTR (UPPER (d.multi_booking_mm),
                                                      1,
                                                      3
                                                     )
                                           || TO_CHAR (d.multi_booking_yy, '0000'),
                                           'MONYYYY'
                                          ) <= TRUNC (p_prod_date)
                                 )
                              OR (    TRUNC (DECODE (GREATEST (b.issue_date,
                                                               b.incept_date
                                                              ),
                                                     b.issue_date, b.issue_date,
                                                     b.incept_date
                                                    )
                                            ) <= TRUNC (p_prod_date)
                                  AND d.multi_booking_mm IS NULL
                                 )
                             )
                        )
                    )
                AND a.ri_cd = c.ri_cd
           ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF rec.pol_flag = '5' AND rec.acct_ent_date IS NOT NULL
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   /* check if line dependent */
                   --
                   IF NVL (v_line_dep_level, 0) != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                         );
                   p_acct_line_cd := v_acct_line_cd;
                   p_gl_acct_id := v_gl_acct_id;

                   IF rec2.item_no = 1
                   THEN                                  /* RI PREMIUMS ASSUMED */
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                            /*
                            FOR rec3 IN (SELECT NVL(SUM(B.PREM_AMT*A.CURRENCY_RT),0) PREM_AMT ,
                                                B.peril_cd
                                           FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                          WHERE A.POLICY_ID   = B.POLICY_ID
                                            AND A.ITEM_NO     = B.ITEM_NO
                                            AND A.POLICY_ID   = REC.POLICY_ID
                                          GROUP BY B.peril_cd, a.currency_rt)
                            LOOP
                            */
                            FOR rec3 IN
                               (SELECT   NVL (SUM (b.prem_amt * a.currency_rt),
                                              0
                                             ) prem_amt,
                                         b.peril_cd
                                    FROM gipi_invoice a, gipi_invperil b
                                   WHERE a.iss_cd = b.iss_cd
                                     AND a.prem_seq_no = b.prem_seq_no
                                     AND a.policy_id = rec.policy_id
                                     AND b.iss_cd = rec.iss_cd
                                     AND b.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*LTRIM (TO_CHAR (v_acct_line_cd, '00'))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, '00'))
                                     || LTRIM (TO_CHAR (rec3.peril_cd, '00'));*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = p_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                           (v_gl_acct_category,
                                                            v_gl_control_acct,
                                                            v_gl_sub_acct_1,
                                                            v_gl_sub_acct_2,
                                                            v_gl_sub_acct_3,
                                                            v_gl_sub_acct_4,
                                                            v_gl_sub_acct_5,
                                                            v_gl_sub_acct_6,
                                                            v_gl_sub_acct_7,
                                                            v_gen_type,
                                                            p_gl_acct_id,
                                                            v_sl_cd,
                                                            v_debit_amt,
                                                            v_credit_amt,
                                                            v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                           );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN   /* line-subline*/
    /*
    FOR rec4 IN (SELECT NVL(SUM(B.PREM_AMT*A.CURRENCY_RT),0) PREM_AMT --, B.line_cd
                   FROM GIPI_ITEM A, GIPI_ITMPERIL B
                  WHERE A.POLICY_ID   = B.POLICY_ID
                    AND A.ITEM_NO     = B.ITEM_NO
                    AND A.POLICY_ID   = REC.POLICY_ID)
    LOOP
    */
                            FOR rec4 IN
                               (SELECT NVL (SUM (b.prem_amt * a.currency_rt),
                                            0
                                           ) prem_amt               --, B.line_cd
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                           /* judyann; get premiums per invoice */
                            LOOP
                               BEGIN
                                  /* check  prem_amt = item.prem_amt , pass policy_id ,
                                  ** if not equal then change prem_amt to item.prem_amt
                                  ** else don't change
                                  */
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        LTRIM (TO_CHAR (v_acct_line_cd, '00'))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, '00'))
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         ELSIF (v_sl_type_cd = 2 OR v_sl_type_cd IS NULL)
                         THEN        /* reinsurer or null */   -- judyann 07032009
                            /*
                            FOR rec7 IN (SELECT NVL(SUM(B.PREM_AMT*A.CURRENCY_RT),0) PREM_AMT
                                           FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                          WHERE A.POLICY_ID = B.POLICY_ID
                                            AND A.ITEM_NO   = B.ITEM_NO
                                            AND A.POLICY_ID = REC.POLICY_ID)
                            LOOP
                            */
                            FOR rec7 IN
                               (SELECT NVL (SUM (b.prem_amt * a.currency_rt),
                                            0
                                           ) prem_amt
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                           /* judyann; get premiums per invoice */
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec7.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec7.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;

                                  IF v_sl_type_cd = 2
                                  THEN
                                     v_sl_cd := rec.ri_cd;
                                  ELSIF v_sl_type_cd IS NULL
                                  THEN
                                     v_sl_cd := NULL;
                                  END IF;

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = p_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                           (v_gl_acct_category,
                                                            v_gl_control_acct,
                                                            v_gl_sub_acct_1,
                                                            v_gl_sub_acct_2,
                                                            v_gl_sub_acct_3,
                                                            v_gl_sub_acct_4,
                                                            v_gl_sub_acct_5,
                                                            v_gl_sub_acct_6,
                                                            v_gl_sub_acct_7,
                                                            v_gen_type,
                                                            p_gl_acct_id,
                                                            v_sl_cd,
                                                            v_debit_amt,
                                                            v_credit_amt,
                                                            v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                           );
                                  END IF;
                               END;
                            END LOOP;                              /* rec7 loop */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN                    /* PREMIUM DUE FROM CEDING COMPANIES */
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         /*  this is to determine if due from ceding is net of commission or not */
                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF (   rec2.item_no = 3
                          OR (    rec2.item_no = 8
                              AND (   v_gl_acct_category IS NOT NULL
                                   OR v_gl_acct_category <> 0
                                  )
                             )
                         )
                   THEN                     /* COMMISSION EXPENSE ON RI ASSUMED */
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN                            /* line-subline-peril */
                            FOR rec5 IN
                               (
    /*SELECT NVL(SUM(B.RI_COMM_AMT*A.CURRENCY_RT),0) RI_COMM_AMT , B.peril_cd -- , B.line_cd
      FROM GIPI_ITEM A, GIPI_ITMPERIL B
     WHERE A.POLICY_ID = B.POLICY_ID
       AND A.ITEM_NO   = B.ITEM_NO
       AND A.POLICY_ID = REC.POLICY_ID
     GROUP BY B.peril_cd, a.currency_rt*/
    --VJ 063007 month end prod ng FPAC sabi ni ms.J dapat daw isunod sa invoice ang amounts
                                SELECT   NVL (SUM (b.ri_comm_amt * a.currency_rt),
                                              0
                                             ) ri_comm_amt,
                                         b.peril_cd                -- , B.line_cd
                                    FROM gipi_invoice a, gipi_invperil b
                                   WHERE a.iss_cd = b.iss_cd
                                     AND a.prem_seq_no = b.prem_seq_no
                                     AND a.policy_id = rec.policy_id
                                     AND b.iss_cd = rec.iss_cd
                                     AND b.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*LTRIM (TO_CHAR (v_acct_line_cd, '00'))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, 'fm09'))
                                     || LTRIM (TO_CHAR (rec5.peril_cd, 'fm09'));*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN                                   /* line-subline */
                            FOR rec6 IN
                               (
       /*SELECT NVL(SUM(B.RI_COMM_AMT*A.CURRENCY_RT),0) RI_COMM_AMT --, B.line_cd
         FROM GIPI_ITEM A, GIPI_ITMPERIL B
        WHERE A.POLICY_ID = B.POLICY_ID
          AND A.ITEM_NO   = B.ITEM_NO
          AND A.POLICY_ID = REC.POLICY_ID*/
                                           --VJ 063007
                                SELECT NVL (SUM (b.ri_comm_amt * a.currency_rt),
                                            0
                                           ) ri_comm_amt
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                        /* judyann; get commissions per invoice */
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        LTRIM (TO_CHAR (v_acct_line_cd))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, 'fm09'))
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         ELSIF (v_sl_type_cd = 2 OR v_sl_type_cd IS NULL)
                         THEN        /* reinsurer or null */   -- judyann 12112006
                            FOR rec8 IN
                               (
       /*SELECT NVL(SUM(B.RI_COMM_AMT*A.CURRENCY_RT),0) RI_COMM_AMT --, B.line_cd
         FROM GIPI_ITEM A, GIPI_ITMPERIL B
        WHERE A.POLICY_ID = B.POLICY_ID
          AND A.ITEM_NO   = B.ITEM_NO
          AND A.POLICY_ID = REC.POLICY_ID*/
                                           --VJ 063007
                                SELECT NVL (SUM (b.ri_comm_amt * a.currency_rt),
                                            0
                                           ) ri_comm_amt
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                        /* judyann; get commissions per invoice */
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec8.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec8.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;

                                  IF v_sl_type_cd = 2
                                  THEN
                                     v_sl_cd := rec.ri_cd;
                                  ELSIF v_sl_type_cd IS NULL
                                  THEN
                                     v_sl_cd := NULL;
                                  END IF;

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec8 loop */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   END IF;                                           /* item_no */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             IF p_v_neg_incl = 'N'
             THEN
                UPDATE gipi_polbasic
                   SET acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id;

                UPDATE gipi_invoice
                   SET acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id
                   AND iss_cd = rec.iss_cd
                   AND prem_seq_no = rec.prem_seq_no;
             ELSE
                UPDATE gipi_polbasic
                   SET spld_acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id;

                UPDATE gipi_invoice
                   SET spoiled_acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id
                   AND iss_cd = rec.iss_cd
                   AND prem_seq_no = rec.prem_seq_no;
             END IF;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_1_reg(p_prod_date            IN       DATE,
                               p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                               p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                               p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                               p_v_neg_incl           IN OUT   VARCHAR2,
                               p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                               p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                               p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                               p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                               p_rule                 IN OUT   VARCHAR2,
                               p_line_cd              IN OUT   VARCHAR2,
                               p_item_no              IN OUT   NUMBER,
                               p_gross_prem           IN OUT   VARCHAR2,
                               p_due_frm_ced          IN OUT   VARCHAR2,
                               p_comm_exp             IN OUT   VARCHAR2,
                               p_v_year               IN OUT   NUMBER,
                               p_v_month              IN OUT   NUMBER,
                               p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                               p_gl_code              IN OUT   VARCHAR2,
                               p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;

    BEGIN
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;

       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd,
                            b.pol_flag,                         --B.ACCT_ENT_DATE
                                       d.acct_ent_date, d.iss_cd, d.prem_seq_no,
                                                              -- judyann 04082008
                            c.local_foreign_sw                -- judyann 01062006
                       FROM giri_inpolbas a,
                            gipi_polbasic b,
                            gipi_invoice d,
                            giis_reinsurer c
                      WHERE a.policy_id = b.policy_id
                        AND b.policy_id = d.policy_id
                        /*
                        and ((b.pol_flag != '5' and b.acct_ent_date is null) or
                             (b.pol_flag = '5' and b.acct_ent_date is not null and
                              trunc(b.acct_ent_date) <> trunc(p_prod_date)))
                        */
                        AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                             OR (    b.pol_flag = '5'
                                 AND d.acct_ent_date IS NOT NULL
                                 AND TRUNC (d.acct_ent_date) <>
                                                               TRUNC (p_prod_date)
                                )
                            )
                        AND TRUNC (b.issue_date) <=
                                                NVL (TRUNC (p_prod_date), SYSDATE)
                        AND b.iss_cd = p_v_iss_cd
                        AND b.reg_policy_sw =
                                            'Y'
                                               /* take up regular policies only */
                        AND a.ri_cd = c.ri_cd
                   ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
                --      else
                --        /* do not process the current record */
                --        p_v_neg_incl := '';
                --        p_rule := '';
                --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                         );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                         GROUP BY  B.line_cd, B.peril_cd, a.currency_rt)

                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/--comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                              /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                         GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                               /*
                                             FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                            FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                           WHERE A.POLICY_ID = B.POLICY_ID
                                                             AND A.ITEM_NO   = B.ITEM_NO
                                                             AND A.POLICY_ID = REC.POLICY_ID
                            --                                 and LINE_CD   = REC.LINE_CD)
                                                           GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                             LOOP
                                             */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                /*
                                             FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                            FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                           WHERE A.POLICY_ID = B.POLICY_ID
                                                             AND A.ITEM_NO   = B.ITEM_NO
                                                             AND A.POLICY_ID = REC.POLICY_ID
                            --                                 and LINE_CD   = REC.LINE_CD)
                                                           GROUP BY B.line_cd, a.currency_rt)

                                             loop
                                             */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_2_reg(p_prod_date            IN       DATE,
                               p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                               p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                               p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                               p_v_neg_incl           IN OUT   VARCHAR2,
                               p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                               p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                               p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                               p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                               p_rule                 IN OUT   VARCHAR2,
                               p_line_cd              IN OUT   VARCHAR2,
                               p_item_no              IN OUT   NUMBER,
                               p_gross_prem           IN OUT   VARCHAR2,
                               p_due_frm_ced          IN OUT   VARCHAR2,
                               p_comm_exp             IN OUT   VARCHAR2,
                               p_v_year               IN OUT   NUMBER,
                               p_v_month              IN OUT   NUMBER,
                               p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                               p_gl_code              IN OUT   VARCHAR2,
                               p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;

       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd,
                            b.pol_flag,                         --B.ACCT_ENT_DATE
                                       d.acct_ent_date, d.iss_cd, d.prem_seq_no,
                                                              -- judyann 04082008
                            c.local_foreign_sw                -- judyann 01062006
                       FROM giri_inpolbas a,
                            gipi_polbasic b,
                            gipi_invoice d,
                            giis_reinsurer c
                      WHERE a.policy_id = b.policy_id
                        AND b.policy_id = d.policy_id
                        AND TRUNC (DECODE (GREATEST (b.issue_date, b.incept_date),
                                           b.issue_date, b.issue_date,
                                           b.incept_date, b.incept_date,
                                           b.issue_date
                                          )
                                  ) <= TRUNC (p_prod_date)
                        /*
                        and ((b.pol_flag != '5' and b.acct_ent_date is null) or
                             (b.pol_flag = '5' and b.acct_ent_date is not null and
                              trunc(b.acct_ent_date) <> trunc(p_prod_date)))
                        */
                        AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                             OR (    b.pol_flag = '5'
                                 AND d.acct_ent_date IS NOT NULL
                                 AND TRUNC (d.acct_ent_date) <>
                                                               TRUNC (p_prod_date)
                                )
                            )
                        AND b.iss_cd = p_v_iss_cd
                        AND b.reg_policy_sw =
                                            'Y'
                                               /* take up regular policies only */
                        AND a.ri_cd = c.ri_cd
                   ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
    --      else
    --        /* do not process the current record */
    --        p_v_neg_incl := '';
    --        p_rule := '';
    --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                         );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/  --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_3_reg(p_prod_date            IN       DATE,
                               p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                               p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                               p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                               p_v_neg_incl           IN OUT   VARCHAR2,
                               p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                               p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                               p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                               p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                               p_rule                 IN OUT   VARCHAR2,
                               p_line_cd              IN OUT   VARCHAR2,
                               p_item_no              IN OUT   NUMBER,
                               p_gross_prem           IN OUT   VARCHAR2,
                               p_due_frm_ced          IN OUT   VARCHAR2,
                               p_comm_exp             IN OUT   VARCHAR2,
                               p_v_year               IN OUT   NUMBER,
                               p_v_month              IN OUT   NUMBER,
                               p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                               p_gl_code              IN OUT   VARCHAR2,
                               p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;

       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN
          (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd, b.pol_flag,
                                                                --B.ACCT_ENT_DATE
                    d.acct_ent_date, d.iss_cd, d.prem_seq_no, -- judyann 04082008
                    c.local_foreign_sw                        -- judyann 01062006
               FROM giri_inpolbas a,
                    gipi_polbasic b,
                    gipi_invoice d,
                    giis_reinsurer c
              WHERE a.policy_id = b.policy_id
                AND b.policy_id = d.policy_id
                AND b.dist_flag = 3
                AND b.reg_policy_sw =
                       'Y'                     /* take up regular policies only */
      /*
      and ((b.pol_flag != '5' and b.acct_ent_date is null) or
           (b.pol_flag = '5' and b.acct_ent_date is not null and
            trunc(b.acct_ent_date) <> trunc(p_prod_date)))
      */
                AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                     OR (    b.pol_flag = '5'
                         AND d.acct_ent_date IS NOT NULL
                         AND TRUNC (d.acct_ent_date) <> TRUNC (p_prod_date)
                        )
                    )
                AND TRUNC (b.issue_date) <= TRUNC (p_prod_date)
                AND b.iss_cd = p_v_iss_cd
                AND a.ri_cd = c.ri_cd
           ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
                --      else
                --        /* do not process the current record */
                --        p_v_neg_incl := '';
                --        p_rule := '';
                --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN
                (SELECT   gl_acct_category, gl_control_acct, gl_sub_acct_1,
                          gl_sub_acct_2, gl_sub_acct_3, gl_sub_acct_4,
                          gl_sub_acct_5, gl_sub_acct_6, gl_sub_acct_7,
                          intm_type_level, line_dependency_level,
                          old_new_acct_level, dr_cr_tag, generation_type,
                          sl_type_cd, item_no
                     FROM giac_module_entries a, giac_modules b
                    WHERE a.module_id = b.module_id
                      AND module_name = 'GIACB004'
                      AND a.item_no IN
                             (1, 2, 3)
                               --to prevent the loop from generating items 4 and 5
                 ORDER BY item_no)   --which is for the allocation of misc amounts
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   --
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level(rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                         );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                   raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

    --         COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_4_reg(p_prod_date            IN       DATE,
                               p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                               p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                               p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                               p_v_neg_incl           IN OUT   VARCHAR2,
                               p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                               p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                               p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                               p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                               p_rule                 IN OUT   VARCHAR2,
                               p_line_cd              IN OUT   VARCHAR2,
                               p_item_no              IN OUT   NUMBER,
                               p_gross_prem           IN OUT   VARCHAR2,
                               p_due_frm_ced          IN OUT   VARCHAR2,
                               p_comm_exp             IN OUT   VARCHAR2,
                               p_v_year               IN OUT   NUMBER,
                               p_v_month              IN OUT   NUMBER,
                               p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                               p_gl_code              IN OUT   VARCHAR2,
                               p_msg                  IN OUT   VARCHAR2)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       v_prem_amt             NUMBER                                         := 0;
       v_pos                  NUMBER                                         := 0;
       v_neg                  NUMBER                                         := 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
    BEGIN
       /* for regular policies only */
       v_pos := 0;
       v_neg := 0;
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;
       -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN
          (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd, b.pol_flag,
                                                                --B.ACCT_ENT_DATE
                    d.acct_ent_date, d.iss_cd, d.prem_seq_no, -- judyann 04082008
                    c.local_foreign_sw                        -- judyann 01062006
               FROM giri_inpolbas a,
                    gipi_polbasic b,
                    gipi_invoice d,
                    giis_reinsurer c
              WHERE a.policy_id = b.policy_id
                AND b.policy_id = d.policy_id
                AND b.dist_flag = 3
                AND b.reg_policy_sw =
                       'Y'                     /* take up regular policies only */
    /*
    and ((b.pol_flag != '5' and b.acct_ent_date is null) or
         (b.pol_flag = '5' and b.acct_ent_date is not null and
          trunc(b.acct_ent_date) <> trunc(p_prod_date)))
    */
                AND (   (b.pol_flag != '5' AND d.acct_ent_date IS NULL)
                     OR (    b.pol_flag = '5'
                         AND d.acct_ent_date IS NOT NULL
                         AND TRUNC (d.acct_ent_date) <> TRUNC (p_prod_date)
                        )
                    )
                AND TRUNC (DECODE (GREATEST (b.issue_date, b.incept_date),
                                   b.issue_date, b.issue_date,
                                   b.incept_date, b.incept_date,
                                   b.issue_date
                                  )
                          ) <= TRUNC (p_prod_date)
                AND b.iss_cd = p_v_iss_cd
                AND a.ri_cd = c.ri_cd
           ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF     rec.pol_flag = '5'
                   AND rec.acct_ent_date IS NOT NULL
                   AND TRUNC (rec.acct_ent_date) <> TRUNC (p_prod_date)
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
                --      else
                --        /* do not process the current record */
                --        p_v_neg_incl := '';
                --        p_rule := '';
                --        goto KLIP;
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   /* check if line dependent */
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   IF v_line_dep_level != 0
                   THEN
                      GIACB004_PKG.baeg_check_level (rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                         );

                   IF rec2.item_no = 1
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec3 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec3 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec3.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec4 IN (SELECT SUM(B.PREM_AMT*A.CURRENCY_RT) PREM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec4 IN
                               (SELECT   SUM (d.prem_amt * a.currency_rt)
                                                                        prem_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                       p_v_branch_cd,
                                                       p_v_fund_cd,
                                                       p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF rec2.item_no = 3
                   THEN
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                                                 /*
                                              FOR rec5 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd, B.peril_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY  B.line_cd, B.peril_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec5 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd, b.peril_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || TO_CHAR (rec5.peril_cd, 'fm09');*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN
                                                 /*
                                              FOR rec6 IN (SELECT SUM(B.RI_COMM_AMT*A.CURRENCY_RT) RI_COMM_AMT, B.line_cd
                                                             FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                                            WHERE A.POLICY_ID = B.POLICY_ID
                                                              AND A.ITEM_NO   = B.ITEM_NO
                                                              AND A.POLICY_ID = REC.POLICY_ID
                            --                                  and LINE_CD   = REC.LINE_CD)
                                                            GROUP BY B.line_cd, a.currency_rt)
                                              LOOP
                                              */
                            FOR rec6 IN
                               (SELECT   SUM (d.ri_comm_amt * a.currency_rt
                                             ) ri_comm_amt,
                                         b.line_cd
                                    FROM gipi_item a,
                                         gipi_itmperil b,
                                         gipi_invoice c,
                                         gipi_invperil d
                                   WHERE a.policy_id = b.policy_id
                                     AND a.item_no = b.item_no
                                     AND a.policy_id = c.policy_id
                                     AND c.iss_cd = d.iss_cd
                                     AND c.prem_seq_no = d.prem_seq_no
                                     AND b.peril_cd = d.peril_cd
                                     AND a.policy_id = rec.policy_id
                                     AND d.iss_cd = rec.iss_cd
                                     AND d.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.line_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        TO_CHAR (v_acct_line_cd)
                                     || TO_CHAR (v_acct_subline_cd, 'fm09')
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   ELSE
                      GOTO klip;
                   END IF;                                  /* item_no          */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             UPDATE gipi_polbasic
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id;

             UPDATE gipi_invoice
                SET acct_ent_date = p_prod_date
              WHERE policy_id = rec.policy_id
                AND iss_cd = rec.iss_cd
                AND prem_seq_no = rec.prem_seq_no;

    --         COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE prod_tk_up_5_reg(p_prod_date            IN       DATE,
                               p_outputvat_item_no    IN OUT   giac_module_entries.item_no%TYPE,
                               p_inputvat_item_no     IN OUT   giac_module_entries.item_no%TYPE,
                               p_v_iss_cd             IN OUT   gipi_polbasic.iss_cd%TYPE,
                               p_v_neg_incl           IN OUT   VARCHAR2,
                               p_v_branch_cd          IN OUT   giac_acctrans.gibr_branch_cd%TYPE,
                               p_v_fund_cd            IN OUT   giac_acctrans.gfun_fund_cd%TYPE,
                               p_v_tran_id            IN OUT   giac_acctrans.tran_id%TYPE,
                               p_prem_rec_gross_tag   IN OUT   giac_parameters.param_value_v%TYPE,
                               p_rule                 IN OUT   VARCHAR2,
                               p_line_cd              IN OUT   VARCHAR2,
                               p_item_no              IN OUT   NUMBER,
                               p_gross_prem           IN OUT   VARCHAR2,
                               p_due_frm_ced          IN OUT   VARCHAR2,
                               p_comm_exp             IN OUT   VARCHAR2,
                               p_v_year               IN OUT   NUMBER,
                               p_v_month              IN OUT   NUMBER,
                               p_gen_type             IN OUT   GIAC_MODULES.generation_type%type,
                               p_gl_code              IN OUT   VARCHAR2,
                               p_msg                  IN OUT   VARCHAR2,
                               p_acct_line_cd         IN OUT   giis_line.acct_line_cd%type,
                               p_gl_acct_id           IN OUT   giac_chart_of_accts.gl_acct_id%type)
    IS
       v_acct_line_cd         giis_line.acct_line_cd%TYPE;
       v_acct_subline_cd      giis_subline.acct_subline_cd%TYPE;
       v_gl_acct_category     giac_module_entries.gl_acct_category%TYPE;
       v_gl_control_acct      giac_module_entries.gl_control_acct%TYPE;
       v_gl_sub_acct_1        giac_module_entries.gl_sub_acct_1%TYPE;
       v_gl_sub_acct_2        giac_module_entries.gl_sub_acct_2%TYPE;
       v_gl_sub_acct_3        giac_module_entries.gl_sub_acct_3%TYPE;
       v_gl_sub_acct_4        giac_module_entries.gl_sub_acct_4%TYPE;
       v_gl_sub_acct_5        giac_module_entries.gl_sub_acct_5%TYPE;
       v_gl_sub_acct_6        giac_module_entries.gl_sub_acct_6%TYPE;
       v_gl_sub_acct_7        giac_module_entries.gl_sub_acct_7%TYPE;
       v_intm_type_level      giac_module_entries.intm_type_level%TYPE;
       v_line_dep_level       giac_module_entries.line_dependency_level%TYPE;
       v_old_new_acct_level   giac_module_entries.old_new_acct_level%TYPE;
       v_dr_cr_tag            giac_module_entries.dr_cr_tag%TYPE;
       v_gen_type             giac_modules.generation_type%TYPE;
       v_gl_acct_id           giac_acct_entries.gl_acct_id%TYPE;
       v_sl_type_cd           giac_module_entries.sl_type_cd%TYPE;
       v_dummy                VARCHAR2 (1);
       v_debit_amt            NUMBER                                         := 0;
       v_credit_amt           NUMBER                                         := 0;
       --  v_prem_amt            number:= 0;
       v_item_no              giac_module_entries.item_no%TYPE;
       v_sl_cd                NUMBER (12);        -- GIAC_ACCT_ENTRIES.sl_cd%type; --mikel 03.22.2016 AUII 5467
       v_inv_amt              NUMBER                                         := 0;
       v_intm_ri_amt          NUMBER                                         := 0;
       v_due_from_ced         NUMBER                                         := 0;
       v_gross_amt            NUMBER                                         := 0;
       v_due_amt              NUMBER                                         := 0;
       v_comm_amt             NUMBER                                         := 0;
       v_tax_amt              NUMBER                                         := 0;
                                      --judyann 01042006; for evat on RI premiums
       v_input_vat            NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       v_comm_inputvat        NUMBER                                         := 0;
                              --judyann 01042006; for input vat on RI commissions
       /* judyann 07182008; for the taxes accounting entries */
       var_gl_acct_category   giac_acct_entries.gl_acct_category%TYPE;
       var_gl_control_acct    giac_acct_entries.gl_control_acct%TYPE;
       var_gl_acct_id         giac_acct_entries.gl_acct_id%TYPE;
       var_gl_sub_acct_1      giac_acct_entries.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2      giac_acct_entries.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3      giac_acct_entries.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4      giac_acct_entries.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5      giac_acct_entries.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6      giac_acct_entries.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7      giac_acct_entries.gl_sub_acct_7%TYPE;
       var_dr_cr_tag          giac_module_entries.dr_cr_tag%TYPE;
       var_credit_amt         giac_acct_entries.credit_amt%TYPE;
       var_debit_amt          giac_acct_entries.debit_amt%TYPE;
       var_sl_cd              giac_acct_entries.sl_cd%TYPE;
       var_tax_amt            gipi_inv_tax.tax_amt%TYPE;
       var_sl_type_cd         giac_acct_entries.sl_type_cd%TYPE;
       v_cnt                  NUMBER := 1;
       
       v_inwprem_take_up      NUMBER := NVL(giacp.v ('INWPREM_TAKE_UP'), 1); --mikel 08.22.2016; PFIC SR 5596 
    BEGIN
       /* added by judyann 01102006
    ** to determine the applicable GL account to be used
    ** for the take-up of output vat and input vat
    */
      /*FOR param IN (SELECT DECODE(GIACP.V('DEF_RI_VAT_ENTRY'),'Y',6,8) output,
                           DECODE(GIACP.V('DEF_RI_VAT_ENTRY'),'Y',7,9) input
                      FROM DUAL)
      LOOP
          p_outputvat_item_no := param.output;
        p_inputvat_item_no := param.input;
      END LOOP;*/ --commented by lina 08052006
                  -- item #8 and 9 were deleted from giac_module_entries
       p_outputvat_item_no := 6;
       p_inputvat_item_no := 7;

    /*
      FOR rec IN (SELECT B.POLICY_ID, B.LINE_CD, B.SUBLINE_CD, A.RI_CD, B.POL_FLAG, B.ACCT_ENT_DATE,
                         C.LOCAL_FOREIGN_SW                                 -- judyann 01062006
                    FROM GIRI_INPOLBAS A, GIPI_POLBASIC B, GIIS_REINSURER C
                   WHERE A.POLICY_ID = B.POLICY_ID
                     AND b.line_cd  != 'BB'
                     AND B.ISS_CD    = p_v_iss_cd
                     AND B.reg_policy_sw = 'Y'         -- include only regular policies --
      -- for positive inclusion --
                     AND ((b.pol_flag != '5'
                          AND b.acct_ent_date IS NULL
                          AND b.DIST_FLAG = 3
                          AND ((to_date(substr(upper(b.booking_mth), 1, 3)||TO_CHAR(B.BOOKING_YEAR,'0000'), 'MONYYYY')
                               <= trunc(p_prod_date))
                           OR (trunc(decode(greatest(B.ISSUE_DATE, B.INCEPT_DATE), B.ISSUE_DATE, B.ISSUE_DATE, B.INCEPT_DATE))
                               <= trunc(p_prod_date)
                          AND b.booking_mth IS NULL)))
                      OR
      -- for negative inclusion --
                         (b.pol_flag  = '5'
                          AND b.spld_acct_ent_date IS NULL
                          AND b.acct_ent_date IS NOT NULL
                          AND ((to_date(substr(upper(b.booking_mth), 1, 3)||TO_CHAR(B.BOOKING_YEAR,'0000'), 'MONYYYY')
                               <= trunc(p_prod_date))
                           OR (trunc(decode(greatest(B.ISSUE_DATE, B.INCEPT_DATE), B.ISSUE_DATE, B.ISSUE_DATE, B.INCEPT_DATE))
                               <= trunc(p_prod_date)
                          AND b.booking_mth IS NULL))))
                     AND A.RI_CD = C.RI_CD
                   ORDER BY B.LINE_CD, B.SUBLINE_CD)
    */
    -- modified by judyann 04082008; to handle take-up of long-term policies
       FOR rec IN
          (SELECT   b.policy_id, b.line_cd, b.subline_cd, a.ri_cd, b.pol_flag,
                                                               --b.acct_ent_date,
                    d.acct_ent_date, d.iss_cd, d.prem_seq_no, -- judyann 04082008
                    c.local_foreign_sw                        -- judyann 01062006
                    ,d.prem_amt, d.currency_rt --mikel 08.22.2016; PFIC SR 5596
               FROM giri_inpolbas a,
                    gipi_polbasic b,
                    gipi_invoice d,
                    giis_reinsurer c
              WHERE a.policy_id = b.policy_id
                AND b.policy_id = d.policy_id
                AND b.line_cd != 'BB'
                AND b.iss_cd = 'RI'
                AND b.reg_policy_sw = 'Y'      /* include only regular policies */
                -- for positive inclusion --
                AND (   (    b.pol_flag != '5'
                         AND d.acct_ent_date IS NULL
                         AND b.dist_flag = 3
                         --AND TO_DATE(d.multi_booking_mm||'-'||d.multi_booking_yy,'FMMONTH-YYYY') <= p_prod_date)
                         AND (   (TO_DATE (   SUBSTR (UPPER (d.multi_booking_mm),
                                                      1,
                                                      3
                                                     )
                                           || TO_CHAR (d.multi_booking_yy, '0000'),
                                           'MONYYYY'
                                          ) <= TRUNC (p_prod_date)
                                 )
                              OR (    TRUNC (DECODE (GREATEST (b.issue_date,
                                                               b.incept_date
                                                              ),
                                                     b.issue_date, b.issue_date,
                                                     b.incept_date
                                                    )
                                            ) <= TRUNC (p_prod_date)
                                  AND d.multi_booking_mm IS NULL
                                 )
                             )
                        )
                     -- for negative inclusion --
                     OR (    b.pol_flag = '5'
                         AND d.spoiled_acct_ent_date IS NULL
                         AND d.acct_ent_date IS NOT NULL
                         --AND TO_DATE(d.multi_booking_mm||'-'||d.multi_booking_yy,'FMMONTH-YYYY') <= p_prod_date))
                         AND (   (TO_DATE (   SUBSTR (UPPER (d.multi_booking_mm),
                                                      1,
                                                      3
                                                     )
                                           || TO_CHAR (d.multi_booking_yy, '0000'),
                                           'MONYYYY'
                                          ) <= TRUNC (p_prod_date)
                                 )
                              OR (    TRUNC (DECODE (GREATEST (b.issue_date,
                                                               b.incept_date
                                                              ),
                                                     b.issue_date, b.issue_date,
                                                     b.incept_date
                                                    )
                                            ) <= TRUNC (p_prod_date)
                                  AND d.multi_booking_mm IS NULL
                                 )
                             )
                        )
                    )
                AND a.ri_cd = c.ri_cd
           ORDER BY b.line_cd, b.subline_cd)
       LOOP
          IF v_cnt = 1 THEN
             --Create record in GIAC_ACCTRANS
             GIACB004_PKG.create_gacc_record(p_prod_date,
                                             p_v_tran_id,
                                             p_v_year,
                                             p_v_month,
                                             p_v_fund_cd,
                                             p_v_iss_cd,
                                             p_v_branch_cd);
             --Call the deletion of accounting entry procedure.
             GIACB004_PKG.baeg_delete_acct_entries(p_gen_type,
                                                   p_v_tran_id);
            v_cnt := v_cnt + 1;
          END IF;
          
          BEGIN
             IF rec.pol_flag != '5' AND rec.acct_ent_date IS NULL
             THEN
                p_v_neg_incl := 'N';
                p_rule := 'Positive';
             ELSIF rec.pol_flag = '5' AND rec.acct_ent_date IS NOT NULL
             THEN
                p_v_neg_incl := 'Y';
                p_rule := 'Negative';
             END IF;

             p_line_cd := rec.line_cd;

             FOR rec2 IN (SELECT   gl_acct_category, gl_control_acct,
                                   gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                   gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                   gl_sub_acct_7, intm_type_level,
                                   line_dependency_level, old_new_acct_level,
                                   dr_cr_tag, generation_type, sl_type_cd,
                                   item_no
                              FROM giac_module_entries a, giac_modules b
                             WHERE a.module_id = b.module_id
                               AND module_name = 'GIACB004'
                               AND gl_acct_category != 0 --mikel 08.22.2016; PFIC  SR 5596
                          ORDER BY item_no)
             LOOP
                BEGIN
                   v_gl_acct_category := rec2.gl_acct_category;
                   v_gl_control_acct := rec2.gl_control_acct;
                   v_gl_sub_acct_1 := rec2.gl_sub_acct_1;
                   v_gl_sub_acct_2 := rec2.gl_sub_acct_2;
                   v_gl_sub_acct_3 := rec2.gl_sub_acct_3;
                   v_gl_sub_acct_4 := rec2.gl_sub_acct_4;
                   v_gl_sub_acct_5 := rec2.gl_sub_acct_5;
                   v_gl_sub_acct_6 := rec2.gl_sub_acct_6;
                   v_gl_sub_acct_7 := rec2.gl_sub_acct_7;
                   v_intm_type_level := rec2.intm_type_level;
                   v_line_dep_level := rec2.line_dependency_level;
                   v_old_new_acct_level := rec2.old_new_acct_level;
                   v_dr_cr_tag := rec2.dr_cr_tag;
                   v_gen_type := rec2.generation_type;
                   v_sl_type_cd := rec2.sl_type_cd;
                   v_item_no := rec2.item_no;
                   p_item_no := v_item_no;
                   v_acct_line_cd := get_line_cd (rec.line_cd);
                   v_acct_subline_cd :=
                                     get_subline_cd (rec.line_cd, rec.subline_cd);

                   /* check if line dependent */
                   --
                   IF NVL (v_line_dep_level, 0) != 0
                   THEN
                      GIACB004_PKG.baeg_check_level (rec2.line_dependency_level,
                                                    v_acct_line_cd,
                                                    v_gl_sub_acct_1,
                                                    v_gl_sub_acct_2,
                                                    v_gl_sub_acct_3,
                                                    v_gl_sub_acct_4,
                                                    v_gl_sub_acct_5,
                                                    v_gl_sub_acct_6,
                                                    v_gl_sub_acct_7
                                                   );
                   END IF;

                   GIACB004_PKG.baeg_check_chart_of_accts(v_gl_acct_category,
                                                          v_gl_control_acct,
                                                          v_gl_sub_acct_1,
                                                          v_gl_sub_acct_2,
                                                          v_gl_sub_acct_3,
                                                          v_gl_sub_acct_4,
                                                          v_gl_sub_acct_5,
                                                          v_gl_sub_acct_6,
                                                          v_gl_sub_acct_7,
                                                          v_gl_acct_id,
                                                          p_gl_code,
                                                          p_v_tran_id,
                                                          p_msg
                                                         );
                   p_acct_line_cd := v_acct_line_cd;
                   p_gl_acct_id := v_gl_acct_id;

                   IF rec2.item_no = 1
                   THEN                                  /* RI PREMIUMS ASSUMED */
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN
                            /*
                            FOR rec3 IN (SELECT NVL(SUM(B.PREM_AMT*A.CURRENCY_RT),0) PREM_AMT ,
                                                B.peril_cd
                                           FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                          WHERE A.POLICY_ID   = B.POLICY_ID
                                            AND A.ITEM_NO     = B.ITEM_NO
                                            AND A.POLICY_ID   = REC.POLICY_ID
                                          GROUP BY B.peril_cd, a.currency_rt)
                            LOOP
                            */
                            FOR rec3 IN
                               (SELECT   NVL (SUM (b.prem_amt * a.currency_rt),
                                              0
                                             ) prem_amt,
                                         b.peril_cd
                                    FROM gipi_invoice a, gipi_invperil b
                                   WHERE a.iss_cd = b.iss_cd
                                     AND a.prem_seq_no = b.prem_seq_no
                                     AND a.policy_id = rec.policy_id
                                     AND b.iss_cd = rec.iss_cd
                                     AND b.prem_seq_no =
                                            rec.prem_seq_no
                                           /* judyann; get premiums per invoice */
                                GROUP BY b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec3.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        /*LTRIM (TO_CHAR (v_acct_line_cd, '00'))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, '00'))
                                     || LTRIM (TO_CHAR (rec3.peril_cd, '00'));*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec3.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                               )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = p_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                           (v_gl_acct_category,
                                                            v_gl_control_acct,
                                                            v_gl_sub_acct_1,
                                                            v_gl_sub_acct_2,
                                                            v_gl_sub_acct_3,
                                                            v_gl_sub_acct_4,
                                                            v_gl_sub_acct_5,
                                                            v_gl_sub_acct_6,
                                                            v_gl_sub_acct_7,
                                                            v_gen_type,
                                                            p_gl_acct_id,
                                                            v_sl_cd,
                                                            v_debit_amt,
                                                            v_credit_amt,
                                                            v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                           );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN   /* line-subline*/
    /*
    FOR rec4 IN (SELECT NVL(SUM(B.PREM_AMT*A.CURRENCY_RT),0) PREM_AMT --, B.line_cd
                   FROM GIPI_ITEM A, GIPI_ITMPERIL B
                  WHERE A.POLICY_ID   = B.POLICY_ID
                    AND A.ITEM_NO     = B.ITEM_NO
                    AND A.POLICY_ID   = REC.POLICY_ID)
    LOOP
    */
                            FOR rec4 IN
                               (SELECT NVL (SUM (b.prem_amt * a.currency_rt),
                                            0
                                           ) prem_amt               --, B.line_cd
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                           /* judyann; get premiums per invoice */
                            LOOP
                               BEGIN
                                  /* check  prem_amt = item.prem_amt , pass policy_id ,
                                  ** if not equal then change prem_amt to item.prem_amt
                                  ** else don't change
                                  */
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec4.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;
                                  v_sl_cd :=
                                        LTRIM (TO_CHAR (v_acct_line_cd, '00'))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, '00'))
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec4 loop        */
                         ELSIF (v_sl_type_cd = 2 OR v_sl_type_cd IS NULL)
                         THEN         /* reinsurer or null*/   -- judyann 07032009
                            /*
                            FOR rec7 IN (SELECT NVL(SUM(B.PREM_AMT*A.CURRENCY_RT),0) PREM_AMT
                                           FROM GIPI_ITEM A, GIPI_ITMPERIL B
                                          WHERE A.POLICY_ID = B.POLICY_ID
                                            AND A.ITEM_NO   = B.ITEM_NO
                                            AND A.POLICY_ID = REC.POLICY_ID)
                            LOOP
                            */
                            FOR rec7 IN
                               (SELECT NVL (SUM (b.prem_amt * a.currency_rt),
                                            0
                                           ) prem_amt
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                           /* judyann; get premiums per invoice */
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec7.prem_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec7.prem_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_gross_amt :=
                                          v_debit_amt - v_credit_amt + v_gross_amt;

                                  IF v_sl_type_cd = 2
                                  THEN
                                     v_sl_cd := rec.ri_cd;
                                  ELSIF v_sl_type_cd IS NULL
                                  THEN
                                     v_sl_cd := NULL;
                                  END IF;

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = p_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                           (v_gl_acct_category,
                                                            v_gl_control_acct,
                                                            v_gl_sub_acct_1,
                                                            v_gl_sub_acct_2,
                                                            v_gl_sub_acct_3,
                                                            v_gl_sub_acct_4,
                                                            v_gl_sub_acct_5,
                                                            v_gl_sub_acct_6,
                                                            v_gl_sub_acct_7,
                                                            v_gen_type,
                                                            p_gl_acct_id,
                                                            v_sl_cd,
                                                            v_debit_amt,
                                                            v_credit_amt,
                                                            v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                           );
                                  END IF;
                               END;
                            END LOOP;                              /* rec7 loop */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 1 */
                   ELSIF rec2.item_no = 2
                   THEN                    /* PREMIUM DUE FROM CEDING COMPANIES */
                      BEGIN
                         /* judyann 01062006
                         ** added checking of type of reinsurer (local or foreign))
                         */
                         /* judyann 07182008
                         ** added parameter to handle different client set-ups for tax on premiums and commissions
                         */
                         IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                         THEN
                            IF rec.local_foreign_sw = 'L'
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount (rec.policy_id,
                                                             rec.iss_cd,
                                                             rec.prem_seq_no
                                                            );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_comm_inputvat :=
                                  prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                );
                                                               -- judyann 01042006
                               v_due_from_ced :=
                                    NVL (v_inv_amt, 0)
                                  - NVL (v_intm_ri_amt, 0)
                                  - NVL (v_comm_inputvat, 0);
                            ELSIF rec.local_foreign_sw IN ('A', 'F')
                            THEN
                               v_inv_amt :=
                                  prod_tk_up.get_inv_amount_f (rec.policy_id,
                                                               rec.iss_cd,
                                                               rec.prem_seq_no
                                                              );
                               v_intm_ri_amt :=
                                  prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                                 rec.iss_cd,
                                                                 rec.prem_seq_no
                                                                ); --rec.line_cd);
                               v_due_from_ced :=
                                        NVL (v_inv_amt, 0)
                                        - NVL (v_intm_ri_amt, 0);
                            END IF;
                         ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                         THEN
                            v_inv_amt :=
                               prod_tk_up.get_inv_amount (rec.policy_id,
                                                          rec.iss_cd,
                                                          rec.prem_seq_no
                                                         );
                            v_intm_ri_amt :=
                               prod_tk_up.get_intm_ri_amount (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );    --rec.line_cd);
                            v_comm_inputvat :=
                               prod_tk_up.get_comm_input_vat (rec.policy_id,
                                                              rec.iss_cd,
                                                              rec.prem_seq_no
                                                             );
                                                               -- judyann 01042006
                            v_due_from_ced :=
                                 NVL (v_inv_amt, 0)
                               - NVL (v_intm_ri_amt, 0)
                               - NVL (v_comm_inputvat, 0);
                         END IF;

                         /*  this is to determine if due from ceding is net of commission or not */
                         IF p_prem_rec_gross_tag = 'N'
                         THEN
                            v_due_from_ced := v_inv_amt;
                         END IF;
                         
                         --mikel 08.22.2016; PFIC SR 5596
                         IF v_inwprem_take_up = 2 THEN
                            v_due_from_ced := rec.prem_amt * rec.currency_rt;
                         END IF;    

                         IF p_v_neg_incl = 'N'
                         THEN
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_credit_amt,
                                          v_debit_amt
                                         );
                         ELSE
                            get_drcr_amt (v_dr_cr_tag,
                                          v_due_from_ced,
                                          v_debit_amt,
                                          v_credit_amt
                                         );
                         END IF;

                         v_due_amt := v_debit_amt - v_credit_amt + v_due_amt;
                         v_sl_cd := rec.ri_cd;

                         IF prod_tk_up.check_if_exist (v_gl_acct_category,
                                                       v_gl_control_acct,
                                                       v_gl_acct_id,
                                                       v_gl_sub_acct_1,
                                                       v_gl_sub_acct_2,
                                                       v_gl_sub_acct_3,
                                                       v_gl_sub_acct_4,
                                                       v_gl_sub_acct_5,
                                                       v_gl_sub_acct_6,
                                                       v_gl_sub_acct_7,
                                                       v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                      )
                         THEN
                            UPDATE giac_acct_entries
                               SET credit_amt =
                                        NVL (credit_amt, 0)
                                        + NVL (v_credit_amt, 0),
                                   debit_amt =
                                          NVL (debit_amt, 0)
                                          + NVL (v_debit_amt, 0)
                             WHERE gacc_gibr_branch_cd = p_v_branch_cd
                               AND gacc_gfun_fund_cd = p_v_fund_cd
                               AND gacc_tran_id = p_v_tran_id
                               AND gl_acct_category = v_gl_acct_category
                               AND gl_control_acct = v_gl_control_acct
                               AND gl_acct_id = v_gl_acct_id
                               AND gl_sub_acct_1 = v_gl_sub_acct_1
                               AND gl_sub_acct_2 = v_gl_sub_acct_2
                               AND gl_sub_acct_3 = v_gl_sub_acct_3
                               AND gl_sub_acct_4 = v_gl_sub_acct_4
                               AND gl_sub_acct_5 = v_gl_sub_acct_5
                               AND gl_sub_acct_6 = v_gl_sub_acct_6
                               AND gl_sub_acct_7 = v_gl_sub_acct_7
                               AND sl_cd = v_sl_cd;
                         ELSE
                            GIACB004_PKG.baeg_insert_update_acct_entry(v_gl_acct_category,
                                                           v_gl_control_acct,
                                                           v_gl_sub_acct_1,
                                                           v_gl_sub_acct_2,
                                                           v_gl_sub_acct_3,
                                                           v_gl_sub_acct_4,
                                                           v_gl_sub_acct_5,
                                                           v_gl_sub_acct_6,
                                                           v_gl_sub_acct_7,
                                                           v_gen_type,
                                                           v_gl_acct_id,
                                                           v_sl_cd,
                                                           v_debit_amt,
                                                           v_credit_amt,
                                                           v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                          );
                         END IF;
                      END;                                  /* rec2.item_no = 2 */
                   ELSIF (   rec2.item_no = 3
                          OR (    rec2.item_no = 8
                              AND (   v_gl_acct_category IS NOT NULL
                                   OR v_gl_acct_category <> 0
                                  )
                             )
                         )
                   THEN                     /* COMMISSION EXPENSE ON RI ASSUMED */
                      BEGIN
                         IF v_sl_type_cd = 6
                         THEN                            /* line-subline-peril */
                            FOR rec5 IN
                               (
    /*SELECT NVL(SUM(B.RI_COMM_AMT*A.CURRENCY_RT),0) RI_COMM_AMT , B.peril_cd -- , B.line_cd
      FROM GIPI_ITEM A, GIPI_ITMPERIL B
     WHERE A.POLICY_ID = B.POLICY_ID
       AND A.ITEM_NO   = B.ITEM_NO
       AND A.POLICY_ID = REC.POLICY_ID
     GROUP BY B.peril_cd, a.currency_rt*/
    --VJ 063007 month end prod ng FPAC sabi ni ms.J dapat daw isunod sa invoice ang amounts
                                SELECT   NVL (SUM (b.ri_comm_amt * a.currency_rt),
                                              0
                                             ) ri_comm_amt,
                                         b.peril_cd                -- , B.line_cd
                                    FROM gipi_invoice a, gipi_invperil b
                                   WHERE a.iss_cd = b.iss_cd
                                     AND a.prem_seq_no = b.prem_seq_no
                                     AND a.policy_id = rec.policy_id
                                     AND b.iss_cd = rec.iss_cd
                                     AND b.prem_seq_no =
                                            rec.prem_seq_no
                                        /* judyann; get commissions per invoice */
                                GROUP BY b.peril_cd, a.currency_rt)
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec5.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        /*LTRIM (TO_CHAR (v_acct_line_cd, '00'))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, 'fm09'))
                                     || LTRIM (TO_CHAR (rec5.peril_cd, 'fm09'));*/ --comment out and replaced by codes below mikel 03.22.2016 AUII 5467
                                        (v_acct_line_cd * 100000) + (v_acct_subline_cd * 1000) + rec5.peril_cd; --mikel 03.22.2016 AUII 5467

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec3 loop */
                         ELSIF v_sl_type_cd = 5
                         THEN                                   /* line-subline */
                            FOR rec6 IN
                               (
       /*SELECT NVL(SUM(B.RI_COMM_AMT*A.CURRENCY_RT),0) RI_COMM_AMT --, B.line_cd
         FROM GIPI_ITEM A, GIPI_ITMPERIL B
        WHERE A.POLICY_ID = B.POLICY_ID
          AND A.ITEM_NO   = B.ITEM_NO
          AND A.POLICY_ID = REC.POLICY_ID*/
                                           --VJ 063007
                                SELECT NVL (SUM (b.ri_comm_amt * a.currency_rt),
                                            0
                                           ) ri_comm_amt
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                        /* judyann; get commissions per invoice */
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec6.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;
                                  v_sl_cd :=
                                        LTRIM (TO_CHAR (v_acct_line_cd))
                                     || LTRIM (TO_CHAR (v_acct_subline_cd, 'fm09'))
                                     || '00';

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                       /* rec6 loop        */
                         ELSIF (v_sl_type_cd = 2 OR v_sl_type_cd IS NULL)
                         THEN        /* reinsurer or null */   -- judyann 12112006
                            FOR rec8 IN
                               (
       /*SELECT NVL(SUM(B.RI_COMM_AMT*A.CURRENCY_RT),0) RI_COMM_AMT --, B.line_cd
         FROM GIPI_ITEM A, GIPI_ITMPERIL B
        WHERE A.POLICY_ID = B.POLICY_ID
          AND A.ITEM_NO   = B.ITEM_NO
          AND A.POLICY_ID = REC.POLICY_ID*/
                                           --VJ 063007
                                SELECT NVL (SUM (b.ri_comm_amt * a.currency_rt),
                                            0
                                           ) ri_comm_amt
                                  FROM gipi_invoice a, gipi_invperil b
                                 WHERE a.iss_cd = b.iss_cd
                                   AND a.prem_seq_no = b.prem_seq_no
                                   AND a.policy_id = rec.policy_id
                                   AND b.iss_cd = rec.iss_cd
                                   AND b.prem_seq_no = rec.prem_seq_no)
                                        /* judyann; get commissions per invoice */
                            LOOP
                               BEGIN
                                  IF p_v_neg_incl = 'N'
                                  THEN
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec8.ri_comm_amt,
                                                   v_credit_amt,
                                                   v_debit_amt
                                                  );
                                  ELSE
                                     get_drcr_amt (v_dr_cr_tag,
                                                   rec8.ri_comm_amt,
                                                   v_debit_amt,
                                                   v_credit_amt
                                                  );
                                  END IF;

                                  v_comm_amt :=
                                           v_debit_amt - v_credit_amt + v_comm_amt;

                                  IF v_sl_type_cd = 2
                                  THEN
                                     v_sl_cd := rec.ri_cd;
                                  ELSIF v_sl_type_cd IS NULL
                                  THEN
                                     v_sl_cd := NULL;
                                  END IF;

                                  IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                  THEN
                                     UPDATE giac_acct_entries
                                        SET credit_amt =
                                                 NVL (credit_amt, 0)
                                               + NVL (v_credit_amt, 0),
                                            debit_amt =
                                                 NVL (debit_amt, 0)
                                               + NVL (v_debit_amt, 0)
                                      WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                        AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                        AND gacc_tran_id = p_v_tran_id
                                        AND gl_control_acct = v_gl_control_acct
                                        AND gl_acct_category = v_gl_acct_category
                                        AND gl_acct_id = v_gl_acct_id
                                        AND gl_sub_acct_1 = v_gl_sub_acct_1
                                        AND gl_sub_acct_2 = v_gl_sub_acct_2
                                        AND gl_sub_acct_3 = v_gl_sub_acct_3
                                        AND gl_sub_acct_4 = v_gl_sub_acct_4
                                        AND gl_sub_acct_5 = v_gl_sub_acct_5
                                        AND gl_sub_acct_6 = v_gl_sub_acct_6
                                        AND gl_sub_acct_7 = v_gl_sub_acct_7
                                        AND sl_cd = v_sl_cd;
                                  ELSE
                                     GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                  END IF;
                               END;
                            END LOOP;                              /* rec8 loop */
                         END IF;                            /* v_sl_type_cd     */
                      END;                                  /* rec2.item_no = 3 */
                   /* added by judyann 01042006;
                   ** to generate accounting entries for VAT on RI premiums and commissions
                   */
                   /* judyann 07182008
                   ** added parameter GEN_RI_VAT_FOREIGN to handle different client set-ups for tax on premiums and commissions
                   */
                   ELSIF NVL (giacp.v ('GEN_VAT_ON_RI'), 'Y') = 'Y'
                   THEN                               -- added by judyann 04172008
                      IF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'N'
                      THEN                                          -- local only
                         IF     rec2.item_no =
                                   p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                            AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                               FOR rec9 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec9.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                         v_debit_amt - v_credit_amt + rec9.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                           /* rec9 loop */
                            END;
                         ELSIF     rec2.item_no =
                                      p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                               AND rec.local_foreign_sw = 'L'
                         THEN
                            BEGIN
                                 /* modified by judyann 02172006
                                 ** vat on comm should be based on the rate upon policy issuance

                               FOR rec10 IN (SELECT NVL(SUM((B.RI_COMM_AMT*A.CURRENCY_RT)*
                                                        NVL(INPUT_VAT_RATE,0)/100),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_ITEM A, GIPI_ITMPERIL B, GIIS_REINSURER D
                                              WHERE A.POLICY_ID = B.POLICY_ID
                                                AND A.ITEM_NO   = B.ITEM_NO
                                                AND C.POLICY_ID = A.POLICY_ID
                                                AND C.RI_CD     = D.RI_CD
                                                AND A.POLICY_ID = REC.POLICY_ID
                                              GROUP BY c.ri_cd, a.currency_rt)
                               LOOP
                               */

                               /* modified by judyann 09062006
                               ** get vat on comm from policy issuance

                               FOR rec10 IN (SELECT NVL(SUM(D.COMM_VAT*B.CURRENCY_RT),0) INPUT_VAT,
                                                    c.ri_cd
                                               FROM GIRI_INPOLBAS C, GIPI_INVOICE B, --GIAC_AGING_RI_SOA_DETAILS D
                                                    (SELECT DISTINCT prem_seq_no, a180_ri_cd, comm_vat
                                                                         FROM GIAC_AGING_RI_SOA_DETAILS) D                -- judyann 03162006
                                                      WHERE C.POLICY_ID   = B.POLICY_ID
                                                        AND C.RI_CD       = D.A180_RI_CD
                                                        AND B.PREM_SEQ_NO = D.PREM_SEQ_NO
                                                        AND C.POLICY_ID   = REC.POLICY_ID
                                              GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                               */
                               FOR rec10 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec10.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec10.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec10.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec10 loop */
                            END;
                         /* added by judyann 01042006 */
                         END IF;
                      ELSIF NVL (giacp.v ('GEN_RI_VAT_FOREIGN'), 'N') = 'Y'
                      THEN                                    -- local and foreign
                         IF rec2.item_no =
                               p_outputvat_item_no
                                             /* DEFERRED OUTPUT VAT */  -- item 6
                         THEN
                            BEGIN
                               FOR rec11 IN
                                  (SELECT NVL (SUM (c.tax_amt * b.currency_rt),
                                               0
                                              ) tax_amt
                                     FROM gipi_invoice b, gipi_inv_tax c
                                    WHERE b.iss_cd = c.iss_cd
                                      AND b.prem_seq_no = c.prem_seq_no
                                      AND b.policy_id = rec.policy_id
                                      AND b.iss_cd = rec.iss_cd
                                      AND b.prem_seq_no =
                                             rec.prem_seq_no
                                         /* judyann; get tax amount per invoice */
                                      AND c.tax_cd = giacp.n ('EVAT'))
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec11.tax_amt,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_tax_amt :=
                                        v_debit_amt - v_credit_amt + rec11.tax_amt;

                                     IF v_sl_type_cd = 2
                                     THEN  /* reinsurer */     -- judyann 02022006
                                        v_sl_cd := rec.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec11 loop */
                            END;
                         ELSIF rec2.item_no =
                                 p_inputvat_item_no
                                               /* DEFERRED INPUT VAT */  -- item 7
                         THEN
                            BEGIN
                               FOR rec12 IN
                                  (SELECT   NVL (SUM (b.ri_comm_vat
                                                      * b.currency_rt
                                                     ),
                                                 0
                                                ) input_vat,
                                            c.ri_cd
                                       FROM giri_inpolbas c, gipi_invoice b
                                      WHERE c.policy_id = b.policy_id
                                        AND c.policy_id = rec.policy_id
                                        AND b.iss_cd = rec.iss_cd
                                        AND b.prem_seq_no =
                                               rec.prem_seq_no
                                        /* judyann; get vat on comm per invoice */
                                   GROUP BY c.ri_cd, b.currency_rt)
                               LOOP
                                  BEGIN
                                     IF p_v_neg_incl = 'N'
                                     THEN
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_credit_amt,
                                                      v_debit_amt
                                                     );
                                     ELSE
                                        get_drcr_amt (v_dr_cr_tag,
                                                      rec12.input_vat,
                                                      v_debit_amt,
                                                      v_credit_amt
                                                     );
                                     END IF;

                                     v_input_vat :=
                                        v_debit_amt - v_credit_amt
                                        + rec12.input_vat;

                                     IF v_sl_type_cd = 2
                                     THEN    /* reinsurer */   -- judyann 02022006
                                        v_sl_cd := rec12.ri_cd;
                                     END IF;

                                     IF prod_tk_up.check_if_exist
                                                              (v_gl_acct_category,
                                                               v_gl_control_acct,
                                                               v_gl_acct_id,
                                                               v_gl_sub_acct_1,
                                                               v_gl_sub_acct_2,
                                                               v_gl_sub_acct_3,
                                                               v_gl_sub_acct_4,
                                                               v_gl_sub_acct_5,
                                                               v_gl_sub_acct_6,
                                                               v_gl_sub_acct_7,
                                                               v_sl_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                              )
                                     THEN
                                        UPDATE giac_acct_entries
                                           SET credit_amt =
                                                    NVL (credit_amt, 0)
                                                  + NVL (v_credit_amt, 0),
                                               debit_amt =
                                                    NVL (debit_amt, 0)
                                                  + NVL (v_debit_amt, 0)
                                         WHERE gacc_gibr_branch_cd =
                                                             p_v_branch_cd
                                           AND gacc_gfun_fund_cd =
                                                               p_v_fund_cd
                                           AND gacc_tran_id = p_v_tran_id
                                           AND gl_control_acct = v_gl_control_acct
                                           AND gl_acct_category =
                                                                v_gl_acct_category
                                           AND gl_acct_id = v_gl_acct_id
                                           AND gl_sub_acct_1 = v_gl_sub_acct_1
                                           AND gl_sub_acct_2 = v_gl_sub_acct_2
                                           AND gl_sub_acct_3 = v_gl_sub_acct_3
                                           AND gl_sub_acct_4 = v_gl_sub_acct_4
                                           AND gl_sub_acct_5 = v_gl_sub_acct_5
                                           AND gl_sub_acct_6 = v_gl_sub_acct_6
                                           AND gl_sub_acct_7 = v_gl_sub_acct_7
                                           AND sl_cd = v_sl_cd;
                                     ELSE
                                        GIACB004_PKG.baeg_insert_update_acct_entry
                                                             (v_gl_acct_category,
                                                              v_gl_control_acct,
                                                              v_gl_sub_acct_1,
                                                              v_gl_sub_acct_2,
                                                              v_gl_sub_acct_3,
                                                              v_gl_sub_acct_4,
                                                              v_gl_sub_acct_5,
                                                              v_gl_sub_acct_6,
                                                              v_gl_sub_acct_7,
                                                              v_gen_type,
                                                              v_gl_acct_id,
                                                              v_sl_cd,
                                                              v_debit_amt,
                                                              v_credit_amt,
                                                              v_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                             );
                                     END IF;
                                  END;
                               END LOOP;                          /* rec12 loop */
                            END;
                         END IF;                   -- parameter GEN_RI_VAT_FOREIGN
                      END IF;                           -- parameter GEN_VAT_ON_RI
                   END IF;                                           /* item_no */
                END;                                               /* rec2 loop */
             END LOOP;                                             /* rec2 loop */

             /* added by judyann 07182008;
             ** to generate the accounting extries for the taxes (except evat)
             */
             FOR taxes IN (SELECT b.tax_cd, c.tax_name, b.tax_amt, a.currency_rt
                             FROM gipi_invoice a, gipi_inv_tax b, giac_taxes c
                            WHERE a.iss_cd = b.iss_cd
                              AND a.prem_seq_no = b.prem_seq_no
                              AND b.tax_cd = c.tax_cd
                              AND a.policy_id = rec.policy_id
                              AND b.iss_cd = rec.iss_cd
                              AND b.prem_seq_no = rec.prem_seq_no
                              AND b.tax_cd <> giacp.n ('EVAT'))
             LOOP
                BEGIN
                   IF p_v_neg_incl = 'N'
                   THEN
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_credit_amt,
                                    var_debit_amt
                                   );
                   ELSE
                      get_drcr_amt (var_dr_cr_tag,
                                    taxes.tax_amt,
                                    var_debit_amt,
                                    var_credit_amt
                                   );
                   END IF;

                   v_tax_amt := v_debit_amt - v_credit_amt + taxes.tax_amt;

                   FOR ent IN (SELECT gl_acct_category, gl_control_acct,
                                      gl_sub_acct_1, gl_sub_acct_2, gl_sub_acct_3,
                                      gl_sub_acct_4, gl_sub_acct_5, gl_sub_acct_6,
                                      gl_sub_acct_7, gl_acct_id
                                 FROM giac_taxes
                                WHERE fund_cd = p_v_fund_cd
                                  AND tax_cd = taxes.tax_cd)
                   LOOP
                      var_gl_acct_category := ent.gl_acct_category;
                      var_gl_control_acct := ent.gl_control_acct;
                      var_gl_sub_acct_1 := ent.gl_sub_acct_1;
                      var_gl_sub_acct_2 := ent.gl_sub_acct_2;
                      var_gl_sub_acct_3 := ent.gl_sub_acct_3;
                      var_gl_sub_acct_4 := ent.gl_sub_acct_4;
                      var_gl_sub_acct_5 := ent.gl_sub_acct_5;
                      var_gl_sub_acct_6 := ent.gl_sub_acct_6;
                      var_gl_sub_acct_7 := ent.gl_sub_acct_7;
                      var_gl_acct_id := ent.gl_acct_id;
                      EXIT;
                   END LOOP;
                END;

                IF var_gl_acct_category IS NULL
                THEN
                    raise_application_error(-20001,p_msg||'#Geniisys Exception#No GL set-up for taxes.');
                ELSE
                   GIACB004_PKG.baeg_insert_update_acct_entry(var_gl_acct_category,
                                                  var_gl_control_acct,
                                                  var_gl_sub_acct_1,
                                                  var_gl_sub_acct_2,
                                                  var_gl_sub_acct_3,
                                                  var_gl_sub_acct_4,
                                                  var_gl_sub_acct_5,
                                                  var_gl_sub_acct_6,
                                                  var_gl_sub_acct_7,
                                                  NULL,
                                                  var_gl_acct_id,
                                                  var_sl_cd,
                                                  var_debit_amt,
                                                  var_credit_amt,
                                                  var_sl_type_cd,
                                                               p_v_branch_cd,
                                                               p_v_fund_cd,
                                                               p_v_tran_id
                                                 );
                END IF;
             END LOOP;                                            /* taxes loop */

             IF p_v_neg_incl = 'N'
             THEN
                UPDATE gipi_polbasic
                   SET acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id;

                UPDATE gipi_invoice
                   SET acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id
                   AND iss_cd = rec.iss_cd
                   AND prem_seq_no = rec.prem_seq_no;
             ELSE
                UPDATE gipi_polbasic
                   SET spld_acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id;

                UPDATE gipi_invoice
                   SET spoiled_acct_ent_date = p_prod_date
                 WHERE policy_id = rec.policy_id
                   AND iss_cd = rec.iss_cd
                   AND prem_seq_no = rec.prem_seq_no;
             END IF;

--             COMMIT;

             <<klip>>
             NULL;
          END;                                                     /* rec  loop */
       END LOOP;                                                   /* rec  loop */

       p_gross_prem := TO_CHAR (v_gross_amt, '999,999,999,999.99');
       p_due_frm_ced := TO_CHAR (v_due_amt, '999,999,999,999.99');
       p_comm_exp := TO_CHAR (v_comm_amt, '999,999,999,999.99');
    END;
    
    PROCEDURE check_debit_credit_amounts(p_prod_date				IN DATE,
                                         p_module_item_no_Inc_adj   IN GIAC_MODULE_ENTRIES.item_no%type,
                                         p_module_item_no_Exp_adj   IN GIAC_MODULE_ENTRIES.item_no%type,
                                         p_module_name			    IN GIAC_MODULES.module_name%type,
                                         p_fund_Cd				    IN GIAC_ACCT_ENTRIES.gacc_gfun_fund_cd%type,
                                         p_balance					IN OUT NUMBER,
                                         p_msg						IN OUT VARCHAR2)
    IS
       v_debit        giac_acct_entries.debit_amt%TYPE;
       v_credit       giac_acct_entries.credit_amt%TYPE;
       v_tot_debit    giac_acct_entries.debit_amt%TYPE;
       v_tot_credit   giac_acct_entries.credit_amt%TYPE;
       v_balance      giac_acct_entries.credit_amt%TYPE;
       v_tran_id      giac_acct_entries.gacc_tran_id%TYPE;
    BEGIN
       --Loop through the values of the amounts of the OF prod
       FOR c IN (SELECT   a.tran_id, a.gibr_branch_cd, SUM (b.debit_amt) deb_amt,
                          SUM (b.credit_amt) cre_amt
                     FROM giac_acct_entries b, giac_acctrans a
                    WHERE 1 = 1
                      AND a.tran_id = b.gacc_tran_id
                      AND a.tran_flag = 'C'
                      AND a.tran_class = 'INF'
                      AND a.tran_date = p_prod_date
                 GROUP BY a.tran_id, a.gibr_branch_cd)
       LOOP
          v_balance := c.deb_amt - c.cre_amt;

          IF v_balance != 0
          THEN
             IF ABS (v_balance) > 10
             THEN
                p_msg := p_msg||'#Note: The miscellaenous amount being allocated is greater than 10.';
                
                IF v_balance > 0     -- added if-else : SR-4821 shan 08.04.2015
                   THEN
                      p_balance := v_balance;
                      adjust (c.tran_id,
                              p_module_item_no_inc_adj,
                              c.gibr_branch_cd,
                              p_module_item_no_exp_adj,
                              p_module_name,
                              p_fund_cd,
                              p_module_item_no_inc_adj,
                              p_balance
                             );
                   ELSIF v_balance < 0
                   THEN
                      p_balance := v_balance;
                      adjust (c.tran_id,
                              p_module_item_no_exp_adj,
                              c.gibr_branch_cd,
                              p_module_item_no_exp_adj,
                              p_module_name,
                              p_fund_cd,
                              p_module_item_no_inc_adj,
                              p_balance
                             );
                END IF;
             ELSIF ABS (v_balance) <= 10
             THEN
                p_balance := 0;

                IF v_balance != 0
                THEN
                   IF v_balance > 0
                   THEN
                      p_balance := v_balance;
                      adjust (c.tran_id,
                              p_module_item_no_inc_adj,
                              c.gibr_branch_cd,
                              p_module_item_no_exp_adj,
                              p_module_name,
                              p_fund_cd,
                              p_module_item_no_inc_adj,
                              p_balance
                             );
                   ELSIF v_balance < 0
                   THEN
                      p_balance := v_balance;
                      adjust (c.tran_id,
                              p_module_item_no_exp_adj,
                              c.gibr_branch_cd,
                              p_module_item_no_exp_adj,
                              p_module_name,
                              p_fund_cd,
                              p_module_item_no_inc_adj,
                              p_balance
                             );
                   END IF;
                END IF;
             END IF;
          END IF;
       END LOOP;
    END;
    
    PROCEDURE adjust (v_tran_id          			  giac_acctrans.tran_id%TYPE,
                      v_module_item_no   			  giac_module_entries.item_no%TYPE,
                      v_branch_cd        		      giac_acctrans.gibr_branch_cd%TYPE,
                      p_module_item_no_exp_adj   IN   giac_module_entries.item_no%TYPE,
                      p_module_name              IN   giac_modules.module_name%TYPE,
                      p_fund_cd                  IN   giac_acct_entries.gacc_gfun_fund_cd%TYPE,
                      p_module_item_no_inc_adj   IN   giac_module_entries.item_no%TYPE,
                      p_balance                  IN   NUMBER)
    IS
       v_entry_id                  giac_acct_entries.acct_entry_id%TYPE;
       var_gl_acct_id              giac_chart_of_accts.gl_acct_id%TYPE;
       var_gl_acct_category        giac_chart_of_accts.gl_acct_category%TYPE;
       var_gl_control_acct         giac_chart_of_accts.gl_control_acct%TYPE;
       var_gl_sub_acct_1           giac_chart_of_accts.gl_sub_acct_1%TYPE;
       var_gl_sub_acct_2           giac_chart_of_accts.gl_sub_acct_2%TYPE;
       var_gl_sub_acct_3           giac_chart_of_accts.gl_sub_acct_3%TYPE;
       var_gl_sub_acct_4           giac_chart_of_accts.gl_sub_acct_4%TYPE;
       var_gl_sub_acct_5           giac_chart_of_accts.gl_sub_acct_5%TYPE;
       var_gl_sub_acct_6           giac_chart_of_accts.gl_sub_acct_6%TYPE;
       var_gl_sub_acct_7           giac_chart_of_accts.gl_sub_acct_7%TYPE;
       var_dr_cr_tag               giac_chart_of_accts.dr_cr_tag%TYPE;
       var_credit_amt              giac_acct_entries.credit_amt%TYPE;
       var_debit_amt               giac_acct_entries.debit_amt%TYPE;
       var_intm_type_level         giac_module_entries.intm_type_level%TYPE;
       var_ca_treaty_type_level    giac_module_entries.ca_treaty_type_level%TYPE;
       var_line_dependency_level   giac_module_entries.line_dependency_level%TYPE;
       var_old_new_acct_level      giac_module_entries.old_new_acct_level%TYPE;
       var_sl_type_cd              giac_chart_of_accts.gslt_sl_type_cd%TYPE;
    BEGIN
       SELECT MAX (NVL (acct_entry_id, 0))
         INTO v_entry_id
         FROM giac_acct_entries
        WHERE gacc_tran_id = v_tran_id;

       IF v_module_item_no = p_module_item_no_exp_adj
       THEN
          bae_get_module_parameters (p_module_item_no_exp_adj,
                                     p_module_name,
                                     var_gl_acct_category,
                                     var_gl_control_acct,
                                     var_gl_sub_acct_1,
                                     var_gl_sub_acct_2,
                                     var_gl_sub_acct_3,
                                     var_gl_sub_acct_4,
                                     var_gl_sub_acct_5,
                                     var_gl_sub_acct_6,
                                     var_gl_sub_acct_7,
                                     var_intm_type_level,
                                     var_ca_treaty_type_level,
                                     var_line_dependency_level,
                                     var_old_new_acct_level,
                                     var_dr_cr_tag
                                    );
          bae_check_chart_of_accts (var_gl_acct_category,
                                    var_gl_control_acct,
                                    var_gl_sub_acct_1,
                                    var_gl_sub_acct_2,
                                    var_gl_sub_acct_3,
                                    var_gl_sub_acct_4,
                                    var_gl_sub_acct_5,
                                    var_gl_sub_acct_6,
                                    var_gl_sub_acct_7,
                                    var_gl_acct_id,
                                    var_sl_type_cd
                                   );

          /* INSERTS INTO MISCELLANEOUS UNDERWRITING EXPENSE */
          INSERT INTO giac_acct_entries                   --giac_temp_acct_entries
                      (gacc_tran_id, gacc_gfun_fund_cd, gacc_gibr_branch_cd,
                       acct_entry_id, gl_acct_id, gl_acct_category,
                       gl_control_acct, gl_sub_acct_1, gl_sub_acct_2,
                       gl_sub_acct_3, gl_sub_acct_4, gl_sub_acct_5,
                       gl_sub_acct_6, gl_sub_acct_7, user_id, last_update, sl_cd,
                       debit_amt, credit_amt, generation_type,
                       remarks
                      )
               VALUES (v_tran_id, p_fund_cd, v_branch_cd,
                       v_entry_id + 1, var_gl_acct_id, var_gl_acct_category,
                       var_gl_control_acct, var_gl_sub_acct_1, var_gl_sub_acct_2,
                       var_gl_sub_acct_3, var_gl_sub_acct_4, var_gl_sub_acct_5,
                       var_gl_sub_acct_6, var_gl_sub_acct_7, giis_users_pkg.app_user, SYSDATE, NULL,
                       ABS (p_balance), 0, NULL,
                       'to adjust currency conversion/rounding off differences during production take up.'
                      );
       ELSIF v_module_item_no = p_module_item_no_inc_adj
       THEN
          bae_get_module_parameters (p_module_item_no_inc_adj,
                                     p_module_name,
                                     var_gl_acct_category,
                                     var_gl_control_acct,
                                     var_gl_sub_acct_1,
                                     var_gl_sub_acct_2,
                                     var_gl_sub_acct_3,
                                     var_gl_sub_acct_4,
                                     var_gl_sub_acct_5,
                                     var_gl_sub_acct_6,
                                     var_gl_sub_acct_7,
                                     var_intm_type_level,
                                     var_ca_treaty_type_level,
                                     var_line_dependency_level,
                                     var_old_new_acct_level,
                                     var_dr_cr_tag
                                    );
          bae_check_chart_of_accts (var_gl_acct_category,
                                    var_gl_control_acct,
                                    var_gl_sub_acct_1,
                                    var_gl_sub_acct_2,
                                    var_gl_sub_acct_3,
                                    var_gl_sub_acct_4,
                                    var_gl_sub_acct_5,
                                    var_gl_sub_acct_6,
                                    var_gl_sub_acct_7,
                                    var_gl_acct_id,
                                    var_sl_type_cd
                                   );

          /* INSERTS INTO MISCELLANEOUS UNDERWRITING INCOME */
          INSERT INTO giac_acct_entries                   --giac_temp_acct_entries
                      (gacc_tran_id, gacc_gfun_fund_cd, gacc_gibr_branch_cd,
                       acct_entry_id, gl_acct_id, gl_acct_category,
                       gl_control_acct, gl_sub_acct_1, gl_sub_acct_2,
                       gl_sub_acct_3, gl_sub_acct_4, gl_sub_acct_5,
                       gl_sub_acct_6, gl_sub_acct_7, user_id, last_update, sl_cd,
                       debit_amt, credit_amt, generation_type,
                       remarks
                      )
               VALUES (v_tran_id, p_fund_cd, v_branch_cd,
                       v_entry_id + 1, var_gl_acct_id, var_gl_acct_category,
                       var_gl_control_acct, var_gl_sub_acct_1, var_gl_sub_acct_2,
                       var_gl_sub_acct_3, var_gl_sub_acct_4, var_gl_sub_acct_5,
                       var_gl_sub_acct_6, var_gl_sub_acct_7, giis_users_pkg.app_user, SYSDATE, NULL,
                       0, ABS (p_balance), NULL,
                       'to adjust currency conversion/rounding off differences during production take up.'
                      );
       END IF;

    --   COMMIT;                                                         -- 04072005
    END;
END;
/


