<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GICLBrdrxClmsRegister">

	<resultMap class="java.util.HashMap" id="whenNewFormInstanceGicls202Map">
		<result column="RI_ISS_CD"					property="riIssCd"/>
		<result column="CLM_LOSS_PAYEE_TYPE"		property="clmLossPayeeType"/>
		<result column="CLM_EXP_PAYEE_TYPE"			property="clmExpPayeeType"/>
		<result column="IMPL_SW"					property="implSw"/>
	</resultMap>

	<select id="whenNewFormInstanceGicls202" resultMap="whenNewFormInstanceGicls202Map">
		SELECT * FROM TABLE(gicls202_pkg.when_new_form_gicls202())
	</select>
          
	<resultMap class="java.util.HashMap" id="whenNewBlockE010Map">
		<result column="REP_NAME"					property="repName"/>
		<result column="BRDRX_TYPE"					property="brdrxType"/>
		<result column="BRDRX_DATE_OPTION"			property="brdrxDateOption"/>
		<result column="BRDRX_OPTION"				property="brdrxOption"/>
		<result column="DSP_GROSS_TAG"				property="dspGrossTag"/>
		<result column="PAID_DATE_OPTION"			property="paidDateOption"/>
		<result column="PER_INTERMEDIARY"			property="perIntermediary"/>
		<result column="PER_BUSS"					property="perBuss"/>
		<result column="PER_ISS"					property="perIss"/>
		<result column="PER_ISSOURCE"				property="perIssource"/>
		<result column="PER_LINE"					property="perLine"/>
		<result column="PER_LINE_SUBLINE"			property="perLineSubline"/>
		<result column="PER_LOSS_CAT"				property="perLossCat"/>
		<result column="DSP_FROM_DATE"				property="dspFromDate"/>
		<result column="DSP_TO_DATE"				property="dspToDate"/>
		<result column="DSP_AS_OF_DATE"				property="dspAsOfDate"/>
		<result column="BRANCH_OPTION"				property="branchOption"/>
		<result column="REG_BUTTON"					property="regButton"/>
		<result column="NET_RCVRY_CHKBX"			property="netRcvryChkbx"/>
		<result column="DSP_RCVRY_FROM_DATE"		property="dspRcvryFromDate"/>
		<result column="DSP_RCVRY_TO_DATE"			property="dspRcvryToDate"/>
		<result column="PER_ENROLLEE"				property="perEnrollee"/>
		<result column="PER_POLICY"					property="perPolicy"/>
		<result column="DATE_OPTION"				property="dateOption"/>
		<result column="ISS_CD"				    	property="issCd"/>
		<result column="LINE_CD"				    property="lineCd"/>
		<result column="INTM_NO"				    property="intmNo"/>
		<result column="PERIL_CD"				    property="perilCd"/>
		<result column="LOSS_CAT_CD"				property="lossCatCd"/>
		<result column="ENROLLEE"					property="enrollee"/>
		<result column="CONTROL_TYPE"				property="controlType"/>
		<result column="CONTROL_NUMBER"				property="controlNumber"/>
		<result column="POL_LINE_CD"				property="polLineCd"/>
		<result column="POL_SUBLINE_CD"				property="polSublineCd"/>
		<result column="POL_ISS_CD"					property="polIssCd"/>
		<result column="ISSUE_YY"					property="issueYy"/>
		<result column="POL_SEQ_NO"					property="polSeqNo"/>
		<result column="RENEW_NO"					property="renewNo"/>
		<result column="AS_OF_DATE"					property="asOfDate"/>
		<result column="PER_BUSS_PARAM"				property="perBussParam"/>
		<result column="PER_ISSOURCE_PARAM"			property="perIssourceParam"/>
		<result column="PER_LINE_SUBLINE_PARAM"		property="perLineSublineParam"/>
		<result column="PER_POLICY_PARAM"			property="perPolicyParam"/>
		<result column="PER_ENROLLEE_PARAM"			property="perEnrolleeParam"/>
		<result column="PER_LINE_PARAM"				property="perLineParam"/>
		<result column="PER_BRANCH_PARAM"			property="perBranchParam"/>
		<result column="PER_INTM_PARAM"				property="perIntmParam"/>
		<result column="PER_LOSS_CAT_PARAM"			property="perLossCatParam"/>
	</resultMap>

	<select id="whenNewBlockE010" resultMap="whenNewBlockE010Map" parameterClass="java.lang.String">
		SELECT * FROM TABLE(gicls202_pkg.when_new_block_e010(#userId#))
	</select>
	
	<parameterMap id="getPolicyNumberGicls202Map" class="map">
		<parameter property="userId"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
		<parameter property="sublineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
		<parameter property="issCd"				jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
		<parameter property="issueYy"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="polSeqNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="renewNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="tooManyRows"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT" />
	</parameterMap>
	
	<procedure id="getPolicyNumberGicls202" parameterMap="getPolicyNumberGicls202Map">
		BEGIN
			gicls202_pkg.get_policy_number_gicls202(?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<delete id="deleteDataGicls202" parameterClass="java.lang.String">
		BEGIN
			gicls202_pkg.delete_data_gicls202(#userId#);
		END;
	</delete>
	
	<delete id="deleteRcvryData">
		BEGIN
			gicls202_pkg.delete_rcvry_data_gicls202;
		END;
	</delete>
	
	<parameterMap id="extractGicls202Map" class="map">
		<parameter property="userId"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="branchOption"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="brdrxDateOption"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="brdrxOption"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="brdrxType"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="clmExpPayeeType"	jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="clmLossPayeeType"	jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dateOption"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspAsOfDate"		jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspFromDate"		jdbcType="DATE"			javaType="java.util.Date"		mode="IN" /><!-- 10 -->
		<parameter property="dspToDate"			jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspLineCd2"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspSublineCd2"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspIssCd2"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspIssueYy"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspPolSeqNo"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspRenewNo"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspGrossTag"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspIntmNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspIssCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" /><!-- 20 -->
		<parameter property="dspLineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspLossCatCd"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspPerilCd"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspRcvryFromDate"	jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspRcvryToDate"	jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspSublineCd"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspEnrollee"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspControlType"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspControlNumber"	jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="netRcvryChkbx"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" /><!-- 30 -->
		<parameter property="paidDateOption"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perBuss"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perEnrollee"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perIntermediary"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perIssource"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perLineSubline"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perLossCat"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perPolicy"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="regButton"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="repName"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" /><!-- 40 -->
		<parameter property="riIssCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="count"				jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="implSw"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="extractGicls202" parameterMap="extractGicls202Map">
		BEGIN
			gicls202_pkg.extract_gicls202(?,?,?,?,?,?,?,?,?,?, <!-- 10 -->
									  	  ?,?,?,?,?,?,?,?,?,?, <!-- 20 -->
										  ?,?,?,?,?,?,?,?,?,?, <!-- 30 -->
										  ?,?,?,?,?,?,?,?,?,?, <!-- 40 --> 
										  ?,?,?);
		END;
	</procedure>
	
	<select id="validateLineCd2Gicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_line_cd2_gicls202(#lineCd2#,#issCd2#) from dual
	</select>
	
	<select id="validateSublineCd2Gicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_subline_cd2_gicls202(#lineCd2#,#sublineCd2#) from dual
	</select>
	
	<select id="validateIssCd2Gicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_iss_cd2_gicls202(#lineCd2#,#issCd2#) from dual
	</select>
	
	<select id="validateLineCdGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_line_cd_gicls202(#lineCd#) from dual
	</select>
	
	<select id="validateSublineCdGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_subline_cd_gicls202(#lineCd#,#sublineCd#) from dual
	</select>
	
	<select id="validateIssCdGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_iss_cd_gicls202(#issCd#) from dual
	</select>
	
	<select id="validateLossCatCdGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_loss_cat_cd_gicls202(#lineCd#,#lossCatCd#) from dual
	</select>
	
	<select id="validatePerilCdGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_peril_cd_gicls202(#lineCd#,#perilCd#) from dual
	</select>
	
	<select id="validateIntmNoGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_intm_no_gicls202(#intmNo#) from dual
	</select>
	
	<select id="validateControlTypeCdGicls202" resultClass="java.lang.String">
		SELECT gicls202_pkg.validate_cntrl_typ_cd_gicls202(#controlTypeCd#) from dual
	</select>
	
	<resultMap id="Gicls202LineListing" class="com.geniisys.common.entity.GIISLine" >
	  	<result column="LINE_CD" 			property="lineCd" 			jdbcType="VARCHAR" />
	  	<result column="LINE_NAME"			property="lineName"			jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
	
	<select id="getLineCdGicls202LOV"	resultMap="Gicls202LineListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT line_cd, line_name FROM TABLE(gicls202_pkg.get_line_cd_gicls202_lov(#issCd#,#issCd2#,#moduleId#,#userId#))
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(line_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(line_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				          		WHERE (UPPER(line_cd) LIKE NVL(UPPER(#filterText#),'%') 
				         	 	   OR UPPER(line_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_line_cd_gicls202_lov(#issCd#,#issCd2#,#moduleId#,#userId#))
		                  <isNotNull property="findText">
				         		WHERE (UPPER(line_cd) LIKE NVL(UPPER(#findText#),'%') 
				         	 	   OR UPPER(line_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				          		WHERE (UPPER(line_cd) LIKE NVL(UPPER(#filterText#),'%') 
				         	 	   OR UPPER(line_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="Gicls202SublineListing" class="com.geniisys.common.entity.GIISSubline" >
	  	<result column="SUBLINE_CD"			property="sublineCd" 			jdbcType="VARCHAR" />
	  	<result column="SUBLINE_NAME"		property="sublineName"			jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
  	
  	<select id="getSublineCd2Gicls202LOV"	resultMap="Gicls202SublineListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT subline_cd, subline_name FROM TABLE(gicls202_pkg.get_subline_cd2_gicls202_lov(#lineCd#,#lineCd2#,#perPolicy#))
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(subline_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(subline_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				          		WHERE (UPPER(subline_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(subline_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="sublineCd">
			              		ORDER BY subline_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="sublineName">
			              		ORDER BY subline_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_subline_cd2_gicls202_lov(#lineCd#,#lineCd2#,#perPolicy#))
		                  <isNotNull property="findText">
				         		WHERE (UPPER(subline_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(subline_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				          		WHERE (UPPER(subline_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(subline_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="Gicls202IssourceListing" class="com.geniisys.common.entity.GIISISSource" >
	  	<result column="ISS_CD"				property="issCd" 			jdbcType="VARCHAR" />
	  	<result column="ISS_NAME"			property="issName"			jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
  	
  	<select id="getIssCd2Gicls202LOV"	resultMap="Gicls202IssourceListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT iss_cd, iss_name FROM TABLE(gicls202_pkg.get_iss_cd2_gicls202_lov(#lineCd#,#lineCd2#,#moduleId#,#userId#))
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(iss_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(iss_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(iss_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(iss_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="issCd">
			              		ORDER BY iss_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="issName">
			              		ORDER BY iss_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_iss_cd2_gicls202_lov(#lineCd#,#lineCd2#,#moduleId#,#userId#))
		                  <isNotNull property="findText">
				         		WHERE (UPPER(iss_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(iss_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(iss_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(iss_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="Gicls202PerilListing" class="com.geniisys.common.entity.GIISPeril" >
	  	<result column="PERIL_CD"			property="perilCd" 			jdbcType="INTEGER" />
	  	<result column="PERIL_NAME"			property="perilName"		jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
  	
  	<select id="getPerilCdGicls202LOV"	resultMap="Gicls202PerilListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT peril_cd, peril_name FROM TABLE(gicls202_pkg.get_peril_cd_gicls202_lov(#lineCd#))
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(peril_cd) LIKE NVL(UPPER(#findText#),'%') 
				         	 	   OR UPPER(peril_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(peril_cd) LIKE NVL(UPPER(#filterText#),'%') 
				         	 	   OR UPPER(peril_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="perilCd">
			              		ORDER BY peril_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="perilName">
			              		ORDER BY peril_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_peril_cd_gicls202_lov(#lineCd#))
		                  <isNotNull property="findText">
				         		WHERE (UPPER(peril_cd) LIKE NVL(UPPER(#findText#),'%') 
				         	 	   OR UPPER(peril_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(peril_cd) LIKE NVL(UPPER(#filterText#),'%') 
				         	 	   OR UPPER(peril_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="Gicls202LossCatListing" class="com.geniisys.common.entity.GIISLossCtgry" >
	  	<result column="LOSS_CAT_CD"		property="lossCatCd" 			jdbcType="VARCHAR" />
	  	<result column="LOSS_CAT_DESC"		property="lossCatDesc"			jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
  	
  	<select id="getLossCatCdGicls202LOV"	resultMap="Gicls202LossCatListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT loss_cat_cd, loss_cat_desc FROM TABLE(gicls202_pkg.get_loss_cat_cd_gicls202_lov(#lineCd#))
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(loss_cat_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(loss_cat_desc) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(loss_cat_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(loss_cat_desc) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="lossCatCd">
			              		ORDER BY loss_cat_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lossCatDesc">
			              		ORDER BY loss_cat_desc
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_loss_cat_cd_gicls202_lov(#lineCd#))
		                  <isNotNull property="findText">
				         		WHERE (UPPER(loss_cat_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(loss_cat_desc) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(loss_cat_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(loss_cat_desc) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="Gicls202IntmListing" class="com.geniisys.common.entity.GIISIntermediary" >
	  	<result column="INTM_NO"			property="intmNo" 			jdbcType="INTEGER" />
	  	<result column="INTM_NAME"			property="intmName"			jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
  	
  	<select id="getIntmNoGicls202LOV"	resultMap="Gicls202IntmListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT intm_no, intm_name FROM TABLE(gicls202_pkg.get_intm_no_gicls202_lov)
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(intm_no) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(intm_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(intm_no) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(intm_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_intm_no_gicls202_lov)
		                  <isNotNull property="findText">
				         		WHERE (UPPER(intm_no) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(intm_name) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(intm_no) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(intm_name) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="Gicls202ControlTypeCdListing" class="com.geniisys.common.entity.ControlType" >
	  	<result column="CONTROL_TYPE_CD"	property="controlTypeCd" 			jdbcType="INTEGER" />
	  	<result column="CONTROL_TYPE_DESC"	property="controlTypeDesc"			jdbcType="VARCHAR" />
	  	<result column="ROWNUM_"			property="rowNum" />
	  	<result column="COUNT_"				property="rowCount" />
  	</resultMap>
  	
  	<select id="getControlTypeCdGicls202LOV"	resultMap="Gicls202ControlTypeCdListing" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT control_type_cd, control_type_desc FROM TABLE(gicls202_pkg.get_cntrl_type_cd_gicls202_lov)
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(control_type_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(control_type_desc) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(control_type_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(control_type_desc) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="controlTypeCd">
			              		ORDER BY control_type_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="controlTypeDesc">
			              		ORDER BY control_type_desc
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_cntrl_type_cd_gicls202_lov)
		                  <isNotNull property="findText">
				         		WHERE (UPPER(control_type_cd) LIKE NVL(UPPER(#findText#),'%')
				         	 	   OR UPPER(control_type_desc) LIKE NVL(UPPER(#findText#),'%')
				         	   )
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE (UPPER(control_type_cd) LIKE NVL(UPPER(#filterText#),'%')
				         	 	   OR UPPER(control_type_desc) LIKE NVL(UPPER(#filterText#),'%')
				         	   )
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="enrolleeLOVMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	  	<result column="GROUPED_ITEM_TITLE"	property="groupedItemTitle" />
  	</resultMap>
  	
  	<select id="getEnrolleeGicls202LOV"	resultMap="enrolleeLOVMap" >  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT grouped_item_title FROM TABLE(gicls202_pkg.get_enrollee_lov)
		          		  <isNotNull property="findText">
				         		WHERE UPPER(grouped_item_title) LIKE NVL(UPPER(#findText#),'%') 
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE UPPER(grouped_item_title) LIKE NVL(UPPER(#filterText#),'%') 
				          </isNull>
		          		  <isEqual property="sortColumn" compareValue="groupedItemTitle">
			              		ORDER BY grouped_item_title
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls202_pkg.get_enrollee_lov)
		                  <isNotNull property="findText">
				         		WHERE UPPER(grouped_item_title) LIKE NVL(UPPER(#findText#),'%')
				          </isNotNull>
				          <isNull property="findText">
				         		WHERE UPPER(grouped_item_title) LIKE NVL(UPPER(#filterText#),'%') 
				          </isNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<parameterMap id="printGicls202Map" class="map">
		<parameter property="userId"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="repName"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="sessionId"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="message"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
		<parameter property="exist"				jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="printGicls202" parameterMap="printGicls202Map">
		BEGIN
			gicls202_pkg.print_gicls202(?,?,?,?,?);
		END;
	</procedure>
	
	<parameterMap id="extractGicls202WebMap" class="map">
		<parameter property="userId"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="repName"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="brdrxType"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="brdrxDateOption"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="brdrxOption"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspGrossTag"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="paidDateOption"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perBuss"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perIssource"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perLineSubline"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" /><!-- 10 -->
		<parameter property="perPolicy"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perEnrollee"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perLine"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perIss"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perIntermediary"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="perLossCat"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspFromDate"		jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspToDate"			jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspAsOfDate"		jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="branchOption"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" /><!-- 20 -->
		<parameter property="regButton"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="netRcvryChkbx"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspRcvryFromDate"	jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dspRcvryToDate"	jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="dateOption"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspLineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspSublineCd"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspIssCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspLossCatCd"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspPerilCd"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" /><!-- 30 -->
		<parameter property="dspIntmNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspLineCd2"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspSublineCd2"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspIssCd2"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspIssueYy"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspPolSeqNo"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspRenewNo"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspEnrollee"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="dspControlType"	jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="dspControlNumber"	jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" /><!-- 40 -->
		<!-- <parameter property="count"				jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT" /> -->
	</parameterMap>
	
	<select id="gicls202GetSessionId" resultClass="java.lang.Integer">
	  SELECT gicls202_pkg.get_session_id FROM DUAL
	</select>
	
	<procedure id="extractGicls202Web" resultClass="java.lang.Integer">	  
		BEGIN	    
            GICLS202_EXTRACTION_PKG.INITIALIZE_VARIABLES( 
					                                    #userId#,
					                                    #sessionId#,
					                                    #repName#,
					                                    #brdrxType#,
					                                    #brdrxDateOption#,
					                                    #brdrxOption#,
					                                    #dspGrossTag#,
					                                    #paidDateOption#,
					                                    #perIntermediary#,
					                                    #perIssource#,
					                                    #perLineSubline#,
					                                    #perPolicy#,
					                                    #perEnrollee#,
					                                    #perLine#,
					                                    #perIss#,
					                                    #perBuss#,
					                                    #perLossCat#,
					                                    #dspFromDate#, 
					                                    #dspToDate#,
					                                    #dspAsOfDate#,
					                                    #branchOption#,
					                                    #regButton#,
					                                    #netRcvryChkbx#,
					                                    #dspRcvryFromDate#,
					                                    #dspRcvryToDate#,
					                                    #dateOption#,
					                                    #dspLineCd#,
					                                    #dspSublineCd#,
					                                    #dspIssCd#,
					                                    #dspLossCatCd#,
					                                    #dspPerilCd#,
					                                    #dspIntmNo#,
					                                    #dspLineCd2#,
					                                    #dspSublineCd2#,
					                                    #dspIssCd2#,
					                                    #dspIssueYy#,
					                                    #dspPolSeqNo#,
					                                    #dspRenewNo#,
					                                    #dspEnrollee#,
					                                    #dspControlType#,
					                                    #dspControlNumber#
                                   						);
                                   						
		   GICLS202_EXTRACTION_PKG.EXTRACT_ALL;
		   GICLS202_EXTRACTION_PKG.EXTRACT_DISTRIBUTION;		                        											  										 
		   <!-- marco - 05.25.2015 - GENQA SR 4457 -->
		   GICLS202_EXTRACTION_PKG.SAVE_LAST_EXTRACT_PARAMS(#userId#,
						   									#sessionId#,
						                                    #repName#,
						                                    #brdrxType#,
						                                    #brdrxDateOption#,
						                                    #brdrxOption#,
						                                    #dspGrossTag#,
						                                    #paidDateOption#,
						                                    #perIntermediary#,
						                                    #perIssource#,
						                                    #perLineSubline#,
						                                    #perPolicy#,
						                                    #perEnrollee#,
						                                    #perLine#,
						                                    #perIss#,
						                                    #perBuss#,
						                                    #perLossCat#,
						                                    #dspFromDate#, 
						                                    #dspToDate#,
						                                    #dspAsOfDate#,
						                                    #branchOption#,
						                                    #regButton#,
						                                    #netRcvryChkbx#,
						                                    #dspRcvryFromDate#,
						                                    #dspRcvryToDate#,
						                                    #dateOption#,
						                                    #dspLineCd#,
						                                    #dspSublineCd#,
						                                    #dspIssCd#,
						                                    #dspLossCatCd#,
						                                    #dspPerilCd#,
						                                    #dspIntmNo#,
						                                    #dspLineCd2#,
						                                    #dspSublineCd2#,
						                                    #dspIssCd2#,
						                                    #dspIssueYy#,
						                                    #dspPolSeqNo#,
						                                    #dspRenewNo#,
						                                    #dspEnrollee#,
						                                    #dspControlType#,
						                                    #dspControlNumber#);
		END;
	</procedure>
	
	<select id="gicls202GetExtractCount" resultClass="java.lang.Integer">
	  SELECT gicls202_pkg.get_gicl_res_brdrx_extr_count(#sessionId#) FROM DUAL
	</select>
</sqlMap>