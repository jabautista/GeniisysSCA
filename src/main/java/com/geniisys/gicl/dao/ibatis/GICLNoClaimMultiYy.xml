<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GICLNoClaimMultiYy">
	<cacheModel id="oneDayClient" type="MEMORY">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>
	
    <typeAlias alias="GICLNoClaimMultiYyClass" type="com.geniisys.gicl.entity.GICLNoClaimMultiYy"/>
    
    <resultMap class="GICLNoClaimMultiYyClass" id="GICLNoClaimMultiYyResultMap">
    		<result column="no_claim_no"				property="noClaimNo"/>
    		<result column="plate_no"					property="plateNo"/>
    		<result column="motor_no"					property="motorNo"/>
    		<result column="serial_no"					property="serialNo"/>
    		<result column="assd_no"					property="assdNo"/>
    		<result column="no_claim_id"				property="noClaimId"/>
    		<result column="nc_iss_cd"					property="ncIssCd"/>
    		<result column="nc_issue_yy"				property="ncIssueYy"/>
    		<result column="make_cd"					property="makeCd"/>
    		<result column="assd_name"					property="assdName"/>
    		<result column="car_company"				property="carCompany"/> 
    		<result column="make"						property="make"/>
    		<result column="basic_color_cd"				property="basicColorCd"/>
    		<result column="color_cd"					property="colorCd"/>
    		<result column="remarks"					property="remarks"/>
    		<result column="basic_color"				property="basicColor"/>
    		<result column="color"						property="color"/>
    		<result column="user_id"					property="userId"/>
    		<result column="last_update"				property="lastUpdate"/>
    		<result column="model_year"					property="modelYear"/>
    		<result column="cancel_tag"					property="cancelTag"/>
    </resultMap>
    
    <resultMap class="java.util.HashMap" id="GICLNoClaimMultiYyResultMapGrid" extends="GICLNoClaimMultiYyResultMap">
		<result column="rownum_" 	property="rowNum" />
		<result column="count_"		property="rowCount"/>
	</resultMap>
	
	<resultMap id="lovNoClaimMultiMap" class="GICLNoClaimMultiYyClass">
  		<result column="assd_no" 				property="assdNo" />			
	  	<result column="assd_name"				property="assdName"	/>
	  	<result column="rownum_" 				property="rowNum" />
		<result column="count_"					property="rowCount"/>
  	</resultMap>
  	
  	<resultMap id="lovPlateNoClaimMultiMap" class="GICLNoClaimMultiYyClass">
  		<result column="plate_no" 				property="plateNo" />			
	  	<result column="serial_no"				property="serialNo"	/>
	  	<result column="motor_no"				property="motorNo"/>
	  	<result column="rownum_" 				property="rowNum" />
		<result column="count_"					property="rowCount"/>
  	</resultMap>
	
	<resultMap class="GICLNoClaimMultiYyClass" id="noClaimMultiYyPolicyList">
			<result column="rownum_" 			property="rowNum" />
			<result column="count_"				property="rowCount"/>
			<result column="policy_no"			property="policyNo"/>
			<result column="policy_id"			property="policyId"/>
			<result column="plate_no"			property="plateNo"/>
			<result column="line_cd"			property="lineCd"/>
			<result column="subline_cd"			property="sublineCd"/>
			<result column="iss_cd"				property="issCd"/>
			<result column="issue_yy"			property="issueYy"/>
			<result column="pol_seq_no"			property="polSeqNo"/>
			<result column="renew_no"			property="renewNo"/>
			<result column="eff_date"			property="effDate"/>
			<result column="expiry_date"		property="expiryDate"/>
			<result column="incept_date"		property="inceptDate"/>
			<result column="line_cd_mc"			property="lineCdMC"/>
			<result column="str_incept_date"    property="strInceptDate"/>
			<result column="str_expiry_date" 	property="strExpiryDate"/> 
	</resultMap>
	
	<resultMap class="GICLNoClaimMultiYyClass" id="populateNewDetailsMap">
		<result column="car_company_cd"			property="carCompanyCd"/>
		<result column="make_cd"				property="makeCd"/>
		<result column="car_company"			property="carCompany"/>
		<result column="model_year"				property="modelYear"/>
		<result column="make"					property="make"/>
		<result column="basic_color_cd"			property="basicColorCd"/>
		<result column="color_cd"				property="colorCd"/>
		<result column="color"					property="color"/>
		<result column="assd_no"				property="assdNo"/>
		<result column="serial_no"				property="serialNo"/>
		<result column="motor_no"				property="motorNo"/>
		<result column="message"				property="message"/>
		<result column="basic_color"			property="basicColor"/>
		<result column="assd_name"				property="assdName"/>
	</resultMap>
	
	<resultMap class="GICLNoClaimMultiYyClass" id="addtDtlMap">
		<result column="nc_iss_cd"				property="ncIssCd"/>
		<result column="nc_issue_date"			property="ncIssueDate"/>
		<result column="nc_last_update"			property="ncLastUpdate"/>
		<result column="nc_no_claim_id"			property="ncNoClaimId"/>
		<result column="nc_issue_yy"			property="ncIssueYy"/>
		<result column="nc_seq_no"				property="ncSeqNo"/>
		<result column="nc_no_claim_no"			property="ncNoClaimNo"/>
	</resultMap>
	
	<resultMap class="GICLNoClaimMultiYyClass" id="updateDtlsMap">
		<result column="nc_iss_cd"				property="ncIssCd"/>
		<result column="nc_issue_date"			property="ncIssueDate"/>
		<result column="nc_last_update"			property="ncLastUpdate"/>
		<result column="nc_issue_yy"			property="ncIssueYy"/>
		<result column="nc_seq_no"				property="ncSeqNo"/>
	</resultMap>
	
	
	
	<select id="getNoClaimMultiYyList" resultMap="GICLNoClaimMultiYyResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
			FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_no_claim_multi_yy(#userId#)) 
				   <isNotNull property="filter">
						 WHERE 1=1
               				<isNotEmpty prepend="AND"  property="ncIssCd">
               					UPPER(nc_iss_cd) LIKE UPPER(#ncIssCd#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="ncIssueYy">
               					nc_issue_yy LIKE #ncIssueYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="ncSeqNo">
               					nc_seq_no LIKE #ncSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="assdName">
               					UPPER(assd_name) LIKE UPPER(#assdName#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="plateNo">
               					UPPER(plate_no) LIKE UPPER(#plateNo#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="serialNo">
               					UPPER(serial_no) LIKE UPPER(#serialNo#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="motorNo">
               					UPPER(motor_no) LIKE UPPER(#motorNo#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="noClaimNo">
               					UPPER(no_claim_no) LIKE UPPER(#noClaimNo#)
               				</isNotEmpty>
                  </isNotNull>				   
					 		<isEqual property="sortColumn" compareValue="noClaimNo">
								ORDER BY no_claim_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="assdName">
								ORDER BY assd_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="plateNo">
								ORDER BY plate_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="carCompany">
								ORDER BY car_company
							</isEqual> 
							<isEqual property="sortColumn" compareValue="make">
								ORDER BY make
							</isEqual>
							<isEqual property="sortColumn" compareValue="serialNo">
								ORDER BY serial_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="motorNo">
								ORDER BY motor_no
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_no_claim_multi_yy(#userId#))
						<isNotNull property="filter">
						 WHERE 1=1
               				<isNotEmpty prepend="AND"  property="ncIssCd">
               					UPPER(nc_iss_cd) LIKE UPPER(#ncIssCd#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="ncIssueYy">
               					nc_issue_yy LIKE #ncIssueYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="ncSeqNo">
               					nc_seq_no LIKE #ncSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="assdName">
               					UPPER(assd_name) LIKE UPPER(#assdName#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="plateNo">
               					UPPER(plate_no) LIKE UPPER(#plateNo#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="serialNo">
               					UPPER(serial_no) LIKE UPPER(#serialNo#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="motorNo">
               					UPPER(motor_no) LIKE UPPER(#motorNo#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="noClaimNo">
               					UPPER(no_claim_no) LIKE UPPER(#noClaimNo#)
               				</isNotEmpty>
                         </isNotNull>
							) b) 
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getNoClaimMultiYyDetails" resultMap="GICLNoClaimMultiYyResultMap" parameterClass="java.lang.Integer">
		 SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_no_claim_details_multi_yy(#noClaimId#))
	</select>
	
	<select id="getPolListByPlateNo" resultMap="noClaimMultiYyPolicyList" parameterClass="map">
		  SELECT *       
            FROM (SELECT rownum rownum_ ,b.count_,a.*     
                    FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.GET_POL_LIST_BY_PLATE_NO(#plateNo#))) a,
                          (SELECT count(*) count_ FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.GET_POL_LIST_BY_PLATE_NO(#plateNo#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getNoClaimMultiYyPolicyList" resultMap="noClaimMultiYyPolicyList" parameterClass="java.util.HashMap">
		 SELECT *       
            FROM (SELECT rownum rownum_ ,b.count_,a.*     
                    FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_claim_multi_policy_list(#plateNo#,#serialNo#,#motorNo#,#userId#))
                     <isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY policy_no
					</isEqual>  
					<isEqual property="sortColumn" compareValue="strInceptDate">
						ORDER BY incept_Date
					</isEqual>  
					<isEqual property="sortColumn" compareValue="strExpiryDate">
						ORDER BY expiry_date
					</isEqual> 
					<isNotNull property="sortColumn">
						<isEqual property="ascDescFlg" compareValue="ASC">
							ASC
						</isEqual>
						<isEqual property="ascDescFlg" compareValue="DESC">
							DESC
						</isEqual>
					</isNotNull>
                    
                    ) a,
                          (SELECT count(*) count_ FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_claim_multi_policy_list(#plateNo#,#serialNo#,#motorNo#,#userId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- <select id="getNoClaimMultiYyPolicyList2" resultMap="noClaimMultiYyPolicyList" parameterClass="java.util.HashMap">
		 SELECT *       
            FROM (SELECT rownum rownum_ ,b.count_,a.*     
                    FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_claim_multi_policy_list(#serialNo#,#noClaimId#))) a,
                          (SELECT count(*) count_ FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_claim_multi_policy_list(#serialNo#,#noClaimId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getNoClaimMultiYyPolicyList3" resultMap="noClaimMultiYyPolicyList" parameterClass="java.util.HashMap">
		 SELECT *       
            FROM (SELECT rownum rownum_ ,b.count_,a.*     
                    FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_claim_multi_policy_list(#motorNo#,#noClaimId#))) a,
                          (SELECT count(*) count_ FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_claim_multi_policy_list(#motorNo#,#noClaimId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  -->
	
	<select id="getAssdNoLOV" resultMap="lovNoClaimMultiMap">
		SELECT *
          FROM (SELECT rownum rownum_, 
                       b.count_, 
                       a.* 
                  FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_assd_lov(#findText#, #moduleId#, #userId#)) <!-- added parameter - 12.07.2012 christian -->
                 WHERE 1=1              
                       <!-- <isNotNull property="findText">
                          AND (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
                         </isNotNull> -->
                          <isEqual property="sortColumn" compareValue="assdNo">
                            ORDER BY assd_no
                          </isEqual>  
                          <isEqual property="sortColumn" compareValue="assdName">
                            ORDER BY assd_name
                          </isEqual>   
                            <isNotNull property="sortColumn">
                              <isEqual property="ascDescFlg" compareValue="ASC">
                                  ASC
                              </isEqual>
                              <isEqual property="ascDescFlg" compareValue="DESC">
                                  DESC
                              </isEqual>
                          </isNotNull>
                          ) a, 
                       (SELECT count(*) count_ 
                          FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_assd_lov(#findText#, #moduleId#, #userId#))
                         WHERE 1=1 
                        <!-- <isNotNull property="findText">
                          AND (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
                         </isNotNull>  -->
                          ) b) 
         WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	
	
	<select id="getNoClmMultiYyPlateNoLOV" resultMap="lovPlateNoClaimMultiMap">
		SELECT *
          FROM (SELECT rownum rownum_, 
                       b.count_, 
                       a.* 

                  FROM (SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_plate_grp_lov(#assdNo#<!-- ,#findText# -->))   
                 WHERE 1=1            
                        <isNotNull property="findText">
                          AND (UPPER(plate_no) LIKE UPPER(#findText#) OR UPPER(serial_no) LIKE UPPER(#findText#) OR UPPER(motor_no) LIKE UPPER(#findText#))
                         </isNotNull> 
                          <isEqual property="sortColumn" compareValue="plateNo">
                            ORDER BY plate_no
                          </isEqual>  
                          <isEqual property="sortColumn" compareValue="serialNo">
                            ORDER BY serial_no
                          </isEqual>
                          <isEqual property="sortColumn" compareValue="motorNo">
                            ORDER BY motor_no
                          </isEqual>      
                            <isNotNull property="sortColumn">
                              <isEqual property="ascDescFlg" compareValue="ASC">
                                  ASC
                              </isEqual>
                              <isEqual property="ascDescFlg" compareValue="DESC">
                                  DESC
                              </isEqual>
                          </isNotNull>
                          ) a, 
                       (SELECT count(*) count_ 
                          FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_plate_grp_lov(#assdNo#<!-- ,#findText# -->))
                         WHERE 1=1 
                        <isNotNull property="findText">
                          AND (UPPER(plate_no) LIKE UPPER(#findText#) OR UPPER(serial_no) LIKE UPPER(#findText#) OR UPPER(motor_no) LIKE UPPER(#findText#))
                         </isNotNull> 
                          ) b) 
         WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getNoClaimNumber" resultClass="java.lang.Integer">
			SELECT GICL_NO_CLAIM_MULTI_PKG.get_no_clm_id FROM dual
	</select>
	
	<procedure id="populateNewDetails" resultMap="populateNewDetailsMap">
			SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.populate_noclmmultiyy_details(#assdNo#,#plateNo#,#serialNo#,#motorNo#))
	</procedure>
	
	<procedure id="validateSavingResult" resultClass="java.lang.String">
			SELECT NVL(GICL_NO_CLAIM_MULTI_PKG.on_key_commit(#assdNo#,#plateNo#,#serialNo#,#motorNo#),'') FROM dual
	</procedure>
	
	<select id="addtDtls" resultMap="addtDtlMap">
			SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_additional_dtls)
	</select>
	
	<select id="updateDtls" resultMap="updateDtlsMap">
			SELECT * FROM TABLE(GICL_NO_CLAIM_MULTI_PKG.get_update_details(#noClaimId#))
	</select>
	
	 <insert id="setNewDetails" parameterClass="java.util.HashMap">
			BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_NO_CLAIM_MULTI_PKG.set_gicl_no_claim_multi(#noClaimId#,		
															#ncIssCd#,			
															#ncIssueYy#,		
															#ncSeqNo#,			
															#assdNo#,			
															#noIssueDate#,		
															#motorNo#,		  	
															#serialNo#,		
															#plateNo#,		  
															#modelYear#,		
															#makeCd#,			
															#motcarCompCd#,	
															#basicColorCd#,	
															#colorCd#,		  
															#cancelTag#,		
															#remarks#,			  	
															#cpiRecNo#,		
															#cpiBranchCd#,			
															#userId#<!-- ,			
															#lastUpdate#,		
															#ncIssueDate# -->
															);
   		   END;
	 </insert>
	 
	 
	 
	 
	
</sqlMap>