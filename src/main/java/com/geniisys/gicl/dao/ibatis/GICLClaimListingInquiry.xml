<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="GICLClaimListingInquiry">

	<resultMap class="java.util.HashMap" id="clmListPerLawyerResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id" />
		<result property="recoveryId"		column="recovery_id"/>
		<result property="recoveryNo"		column="recovery_no"/>
		<result property="caseNo"			column="case_no"/>
		<result property="classDesc"		column="class_desc"/>
		<result property="payeeName"		column="payee_name"/>
		<result property="recStatDesc" 		column="rec_stat_desc"/>
		<result property="recoverableAmt"	column="recoverable_amt"/>
		<result property="recoveredAmt"		column="recovered_amt"/>
		<result property="claimNo"			column="claim_no"/>
		<result property="policyNo"			column="policy_no"/>
		<result property="court"			column="court"/>
		<result property="assdName" 		column="assd_name"/>
		<result property="clmStatDesc" 		column="clm_stat_desc"/>
		<result property="clmFileDate" 		column="clm_file_date"/>
		<result property="lossDate" 		column="loss_date"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerColorResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id" />
		<result property="itemNo" 			column="item_no" />
		<result property="itemTitle" 		column="item_title" />
		<result property="plateNo" 			column="plate_no" />
		<result property="claimNumber" 		column="claim_number" />
		<result property="lossResAmt" 		column="loss_res_amt"/>
		<result property="lossPaidAmt" 		column="loss_paid_amt"/>
		<result property="expResAmt" 		column="exp_res_amt"/>
		<result property="expPaidAmt" 		column="exp_paid_amt"/>
		<result property="totLossResAmt" 	column="tot_loss_res_amt"/>
		<result property="totLossPaidAmt" 	column="tot_loss_paid_amt"/>
		<result property="totExpResAmt" 	column="tot_exp_res_amt"/>
		<result property="totExpPaidAmt" 	column="tot_exp_paid_amt"/>
		<result property="policyNo" 		column="policy_no"/>
		<result property="assdName"			column="assd_name"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
		<result property="lossDate"			column="loss_date"/>
		<result property="clmFileDate"		column="clm_file_date"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerPackagePolicyResultMap" extends="BaseEntity.TableGridResultMap">
	    <result property="claimId" column="claim_id"/>
		<result property="claimNo" column="claim_no"/>
		<result property="lossReserve" column="loss_res_amt"/>
		<result property="expenseReserve" column="exp_res_amt"/>
		<result property="lossesPaid" column="loss_pd_amt"/>
		<result property="expensesPaid" column="exp_pd_amt"/>
		<result property="totLossResAmt" column="tot_loss_res_amt"/>
		<result property="totLossPdAmt" column="tot_loss_pd_amt"/>
		<result property="totExpResAmt" column="tot_exp_res_amt"/>
		<result property="totExpPdAmt" column="tot_exp_pd_amt"/>	
		<result property="polNo" column="pol_no"/>
		<result property="clmStatDesc" column="clm_stat_desc"/>
		<result property="clmFileDate" column="clm_file_date"/>
		<result property="dspLossDate" column="dsp_loss_date"/>
		<result property="recoverySw"  column="recovery_sw" />
		<result property="recoveryDetCount" column="recovery_det_count" />			
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerPlateNoResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" column="claim_id" />
		<result property="itemNo" column="item_no"/>
		<result property="itemTitle" column="item_title"/>
		<result property="lossReserve" column="loss_reserve"/>
		<result property="expenseReserve" column="expense_reserve"/>
		<result property="lossesPaid" column="losses_paid"/>
		<result property="expensesPaid" column="expenses_paid"/>
		<result property="assuredName" column="assured_name"/>
		<result property="claimNo" column="claim_no"/>
		<result property="policyNo" column="policy_no"/>
		<result property="recoverySw" column="recovery_sw"/>
		<result property="adverseParty" column="adverse_party"/>
		<result property="thirdParty" column="third_party"/>
		<result property="lossDate" column="loss_date"/>
		<result property="clmFileDate" column="clm_file_date"/>
		<result property="totLossReserve" column="tot_loss_reserve"/>
		<result property="totLossesPaid" column="tot_losses_paid"/>
		<result property="totExpenseReserve" column="tot_expense_reserve"/>
		<result property="totExpensesPaid" column="tot_expenses_paid"/>
		<result property="vehicleInfoCount" column="vehicle_info_count" />
		<result property="recoveryDetCount" column="recovery_det_count" />
		<result property="vehicleType" column="vehicle_type" />
		<result property="sublineCd" column="subline_cd" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerRecoveryTypeResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" column="claim_id" />
		<result property="lineCd" column="line_cd" />
		<result property="recoveryId" column="recovery_id" />
		<result property="recoveryNo" column="recovery_no" />
		<result property="payorClass" column="payor_class" />
		<result property="payorName" column="payor_name" />
		<result property="fileDate" column="clm_file_date" />
		<result property="lossDate" column="loss_date" />
		<result property="claimNo" column="claim_no" />
		<result property="policyNo" column="policy_no" />
		<result property="assdName" column="assd_name" />
		<result property="claimStat" column="claim_status" />
		<result property="recoveryDetCount" column="recovery_det_count" />
	</resultMap>

	<resultMap class="java.util.HashMap" id="ClmListPerUserResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId"			column="claim_id" />
		<result property="recoverySw" 		column="recovery_sw" />
		<result property="claimNo" 			column="claim_no" />
		<result property="claimStatDesc" 	column="clm_stat_desc" />
		<result property="lossResAmt" 		column="loss_res_amt" />
		<result property="expResAmt" 		column="exp_res_amt" />
		<result property="lossPdAmt" 		column="loss_pd_amt" />
		<result property="expPdAmt" 		column="exp_pd_amt" />
		<result property="lossDate" 		column="loss_date" />
        <result property="clmFileDate" 		column="clm_file_date" />
        <result property="entryDate"		column="entry_date" />
 		<result property="totLossRes" 		column="tot_loss_res" />
        <result property="totExpRes" 		column="tot_exp_res" />
        <result property="totLossPd" 		column="tot_loss_pd" />
        <result property="totExpPd" 		column="tot_exp_pd" />
        <result property="assdName" 		column="assured_name"/>
        <result property="policyNo"			column="policy_no" />
        <result property="recoveryDetCount" column="recovery_det_count" />
    </resultMap>
	
	<resultMap class="java.util.HashMap" id="recoveryDetailsMap" extends="BaseEntity.TableGridResultMap">
		<result property="recoveryId" 			column="recovery_id" />
		<result property="recoveryNo" 			column="recovery_no" />
		<result property="recoverableAmt"		column="recoverable_amt" />	
		<result property="recoveredAmt"			column="recovered_amt" />
		<result property="lawyer"				column="lawyer" />
		<result property="plateNo"				column="plate_no" />
		<result property="status"				column="status" />
		<result property="tpItemDesc"			column="tp_item_desc" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="payorDetailsMap" extends="BaseEntity.TableGridResultMap">
		<result property="payorClass"			column="class_desc" />
		<result property="payor"				column="payor" />
		<result property="recoveredAmt"			column="recovered_amt" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="historyMap" extends="BaseEntity.TableGridResultMap">
		<result property="recHistNo"			column="rec_hist_no" />
		<result property="recStatCd"			column="rec_stat_cd" />
		<result property="recStatDesc"			column="rec_stat_desc" />
		<result property="remarks"				column="remarks" />
		<result property="userId"				column="user_id" />
		<result property="lastUpdate"			column="last_update" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="processorHistoryMap" extends="BaseEntity.TableGridResultMap">
		<result property="inHouAdj"				column="in_hou_adj" />
		<result property="userId"				column="user_id" />
		<result property="lastUpdate"			column="last_update" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="claimStatusHistoryMap" extends="BaseEntity.TableGridResultMap">
		<result property="clmStatCd"			column="clm_stat_cd" />
		<result property="clmStatDesc"			column="clm_stat_desc" />
		<result property="userId"				column="user_id" />
		<result property="clmStatDt"			column="clm_stat_dt" />
	</resultMap>

	<resultMap class="java.util.HashMap" id="ClmListPerAdjusterResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 				column="claim_id"/>
		<result property="claimAdjId" 			column="clm_adj_id"/>		
		<result property="adjCompanyCd" 		column="adj_company_cd"/>
		<result property="payeeName" 			column="payee_name"/>
		<result property="assignDate" 			column="assign_date"/>
		<result property="completeDate" 		column="complt_date"/>
		<result property="cancelTag" 			column="cancel_tag"/>
		<result property="claimNumber" 			column="claim_number"/>
		<result property="assuredName" 			column="assured_name"/>
		<result property="policyNumber" 		column="policy_number"/>
		<result property="lossDate" 			column="loss_date"/>
		<result property="claimStatus" 			column="claim_status"/>
		<result property="fileDate" 			column="file_date"/>
		<result property="lossDesc" 			column="loss_desc"/>
		<result property="cancelDate" 			column="cancel_date"/>
		<result property="dPO" 					column="dpo"/>
		<result property="paidAmount" 			column="paid_amt"/>
		<result property="totPaidAmount" 		column="tot_paid_amt"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerPayeeResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimNumber" 	column="claim_number"/>
		<result property="policyNumber" column="policy_number"/>
		<result property="assuredName" 	column="assured_name"/>
		<result property="fileDate" 	column="clm_file_date"/>
		<result property="lossDate" 	column="loss_date"/>
		<result property="claimId" 		column="claim_id"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="perPayeeDtlResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="itemNo" 		column="item_no"/>
		<result property="dspItem" 		column="dsp_item"/>
		<result property="perilCd" 		column="peril_cd"/>
		<result property="dspPeril" 	column="dsp_peril"/>
		<result property="histSeqNo" 	column="hist_seq_no"/>
		<result property="status" 		column="dsp_status"/>
		<result property="paidAmt" 		column="paid_amt"/>
		<result property="netAmt" 		column="net_amt"/>
		<result property="adviceAmt" 	column="advice_amt"/>
		<result property="nbtAdviceNo" 	column="nbt_advice_no"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerBlockResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id" />
		<result property="itemNo" 			column="item_no" />
		<result property="itemTitle" 		column="item_title" />
		<result property="claimNumber" 		column="claim_number" />
		<result property="lossResAmt" 		column="loss_res_amt"/>
		<result property="lossPaidAmt" 		column="loss_paid_amt"/>
		<result property="expResAmt" 		column="exp_res_amt"/>
		<result property="expPaidAmt" 		column="exp_paid_amt"/>
		<result property="totLossResAmt" 	column="tot_loss_res_amt"/>
		<result property="totLossPaidAmt" 	column="tot_loss_paid_amt"/>
		<result property="totExpResAmt" 	column="tot_exp_res_amt"/>
		<result property="totExpPaidAmt" 	column="tot_exp_paid_amt"/>
		<result property="policyNo" 		column="policy_no"/>
		<result property="assdName"			column="assd_name"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
		<result property="lossDate"			column="loss_date"/>
		<result property="clmFileDate"		column="clm_file_date"/>
		<result property="blockId"			column="block_id"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerCargoTypeResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="itemNo" 			column="item_no" />
		<result property="claimId" 			column="claim_id" />
		<result property="itemTitle" 		column="item_title" />
		<result property="groupedItemNo" 	column="grouped_item_no"/>
		<result property="vesselCd" 		column="vessel_cd"/>
		<result property="claimNumber" 		column="claim_number" />
		<result property="policyNumber" 	column="policy_number"/>
		<result property="assuredName"		column="assured_name"/>
		
		<result property="lossResAmt" 		column="loss_res_amt"/>
		<result property="lossPaidAmt" 		column="loss_paid_amt"/>
		<result property="expResAmt" 		column="exp_res_amt"/>
		<result property="expPaidAmt" 		column="exp_paid_amt"/>
		<result property="totLossResAmt" 	column="tot_loss_res_amt"/>
		<result property="totLossPaidAmt" 	column="tot_loss_paid_amt"/>
		<result property="totExpResAmt" 	column="tot_exp_res_amt"/>
		<result property="totExpPaidAmt" 	column="tot_exp_paid_amt"/>
		
		<result property="lossDate"			column="loss_date"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
		<result property="clmFileDate"		column="clm_file_date"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="blockDetailsMap">
		<result property="blockNo" 		column="block_no" />
		<result property="blockDesc" 	column="block_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="cargoTypeDetailsMap">
		<result property="cargoType" 		column="cargo_type" />
		<result property="cargoTypeDesc" 	column="cargo_type_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="lossCatDescDetailsMap">
		<result property="lossCatCd" 		column="loss_cat_cd" />
		<result property="lossCatDesc" 		column="loss_cat_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerMotorshopResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="payeeCd" 			column="payee_cd"/>
		<result property="payeeName" 		column="payee_name"/>
		<result property="claimNumber" 		column="claim_number"/>
		<result property="assuredName" 		column="assured_name"/>
		<result property="loaNumber" 		column="loa_number"/>
		<result property="policyNumber" 	column="policy_number"/>
		<result property="clmFileDate" 		column="clm_file_date"/>
		<result property="plateNo" 			column="plate_no"/>
		<result property="clmStatCd" 		column="clm_stat_cd"/>
		<result property="clmStatDesc" 		column="clm_stat_desc"/>
		<result property="lossReserve" 		column="loss_reserve"/>
		<result property="dspLossDate" 		column="dsp_loss_date"/>
		<result property="paidAmt" 			column="paid_amt"/>
		<result property="totLossReserve" 	column="tot_loss_reserve"/>
		<result property="totPaidAmt" 		column="tot_paid_amt"/>
		<result property="lossCatDes" 		column="loss_cat_des"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerVesselResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id"/>
		<result property="vesselCd" 		column="vessel_cd"/>
		<result property="itemNo" 			column="item_no"/>
		<result property="itemTitle" 		column="item_title"/>
		<result property="dryDate" 			column="dry_date"/>
		<result property="dryPlace" 		column="dry_place"/>
		<result property="lossDate" 		column="loss_date"/>
		<result property="assuredName" 		column="assured_name"/>
		<result property="clmFileDate" 		column="clm_file_date"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
		<result property="claimNumber" 		column="claim_number"/>
		<result property="policyNumber" 	column="policy_number"/>
		<result property="lossResAmt" 		column="los_res_amt"/>
		<result property="losPaidAmt" 		column="los_paid_amt"/>
		<result property="expResAmt" 		column="exp_res_amt"/>
		<result property="expPaidAmt"	 	column="exp_paid_amt"/>
		<result property="totLossResAmt" 	column="tot_loss_res_amt"/>
		<result property="totExpResAmt" 	column="tot_exp_res_amt"/>
		<result property="totLossPdAmt" 	column="tot_loss_pd_amt"/>
		<result property="totExpPdAmt"	 	column="tot_exp_pd_amt"/>
		
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClmListPerNatureOfLossResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineName"			column="line_name"/>
		<result property="lossCatDesc"		column="loss_cat_des"/>
		<result property="claimNumber" 		column="claim_number"/>
		<result property="policyNumber" 	column="policy_number"/>
		<result property="assuredName"		column="assured_name"/>
		<result property="lossDate"			column="dsp_loss_date"/>
		<result property="clmFileDate"		column="clm_file_date"/>
		<result property="item"				column="item"/>
		<result property="perilName"		column="peril_name"/>
		<result property="lossResAmt" 		column="loss_reserve"/>
		<result property="expResAmt" 		column="exp_reserve"/>
		<result property="lossPaidAmt" 		column="loss_paid"/>
		<result property="expPaidAmt" 		column="exp_paid"/>
		<result property="itemNo" 			column="item_no" />
		<result property="totLossResAmt" 	column="tot_loss_reserve"/>
		<result property="totLossPaidAmt" 	column="tot_loss_paid"/>
		<result property="totExpResAmt" 	column="tot_exp_reserve"/>
		<result property="totExpPaidAmt" 	column="tot_exp_paid"/>
		<result property="clmStatDesc" 		column="clm_stat_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="cargoIdListMap">
		<result property="cargoClassCd"		column="cargo_class_cd"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="lineCdListMap">
		<result property="lineCd"		column="line_cd"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="vesselLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="vesselCd" column="vessel_cd"/>
		<result property="vesselName" column="vessel_name"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="thirdPartyListResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="payeeClassCd" 	column="payee_class_cd"/>
		<result property="payeeNo" 			column="payee_no"/>
		<result property="claimId" 			column="claim_id"/>
		<result property="tpType"			column="tp_type"/>
		<result property="classDesc"		column="class_desc"/>
		<result property="payeeName"		column="payee_name"/>
		<result property="recoveryDetails" 	column="recovery_details"/>
		<result property="lineCd" 			column="line_cd"/>
		<result property="sublineCd" 		column="subline_cd"/>
		<result property="issCd" 			column="iss_cd"/>
		<result property="clmYy" 			column="clm_yy"/>
		<result property="clmSeqNo" 		column="clm_seq_no"/>
		<result property="polIssCd" 		column="pol_iss_cd"/>
		<result property="issueYy" 			column="issue_yy"/>
		<result property="polSeqNo" 		column="pol_seq_no"/>
		<result property="renewNo" 			column="renew_no"/>
		<result property="assuredName" 		column="assured_name"/>
		<result property="lossDate" 		column="loss_date"/>
		<result property="claimDate" 		column="claim_date"/>
		<result property="intmNo" 			column="intm_no"/>
		<result property="claimNumber" 		column="claim_number"/>
		<result property="policyNumber" 	column="policy_number"/>
		<result property="perilCd"			column="peril_cd"/>
		<result property="itemNo"			column="item_no"/>
		<result property="lossCatDes"		column="loss_cat_des"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="payeeClassCdAndClassResultMap">
		<result property="payeeClassCd" 	column="payee_class_cd"/>
		<result property="classDesc" 			column="class_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="payeeDetResultMap">
		<result column="payee_no" 			property="id" />			
	  	<result column="payee_name"		property="desc"	/>	
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="validThirdPartyListResultMap">
		<result property="payeeClassCd" 	column="payee_class_cd"/>
		<result property="payeeNo" 			column="payee_no"/>
	</resultMap>
	
	<select id="getClaimStatusHistory" resultMap="claimStatusHistoryMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls271_pkg.get_claim_status_history(#claimId#))
		<isEqual property="sortColumn" compareValue="clmStatCd">
			ORDER BY clm_stat_cd
		</isEqual>
		<isEqual property="sortColumn" compareValue="clmStatDesc">
			ORDER BY clm_stat_desc
		</isEqual>
		<isEqual property="sortColumn" compareValue="userId">
			ORDER BY user_id
		</isEqual>
		<isEqual property="sortColumn" compareValue="clmStatDt">
			ORDER BY clm_stat_dt
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls271_pkg.get_claim_status_history(#claimId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getProcessorHistory" resultMap="processorHistoryMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls271_pkg.get_processor_history(#claimId#))
		<isEqual property="sortColumn" compareValue="inHouAdj">
			ORDER BY in_hou_adj
		</isEqual>
		<isEqual property="sortColumn" compareValue="userId">
			ORDER BY user_id
		</isEqual>
		<isEqual property="sortColumn" compareValue="lastUpdate">
			ORDER BY last_update
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls271_pkg.get_processor_history(#claimId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecoveryDetailsMap" resultMap="recoveryDetailsMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls251_pkg.get_recovery_details(#claimId#))
		<isEqual property="sortColumn" compareValue="recoveryNo">
			ORDER BY recovery_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoverableAmt">
			ORDER BY recoverable_amt
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoveredAmt">
			ORDER BY recovered_amt
		</isEqual>
		<isEqual property="sortColumn" compareValue="lawyer">
			ORDER BY lawyer
		</isEqual>
		<isEqual property="sortColumn" compareValue="plateNo">
			ORDER BY plate_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="status">
			ORDER BY status
		</isEqual>
		<isEqual property="sortColumn" compareValue="tpItemDesc">
			ORDER BY tp_item_desc
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls251_pkg.get_recovery_details(#claimId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGICLS258DetailsMap" resultMap="recoveryDetailsMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls258_pkg.get_recovery_details(#claimId#, #lineCd#, #recoveryId#))
		<isEqual property="sortColumn" compareValue="recoveryNo">
			ORDER BY recovery_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoverableAmt">
			ORDER BY recoverable_amt
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoveredAmt">
			ORDER BY recovered_amt
		</isEqual>
		<isEqual property="sortColumn" compareValue="lawyer">
			ORDER BY lawyer
		</isEqual>
		<isEqual property="sortColumn" compareValue="plateNo">
			ORDER BY plate_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="status">
			ORDER BY status
		</isEqual>
		<isEqual property="sortColumn" compareValue="tpItemDesc">
			ORDER BY tp_item_desc
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls258_pkg.get_recovery_details(#claimId#, #lineCd#, #recoveryId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPayorDetailsMap" resultMap="payorDetailsMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls251_pkg.get_payor_details(#claimId#, #recoveryId#))
		<isEqual property="sortColumn" compareValue="payorClass">
			ORDER BY class_desc
		</isEqual>
		<isEqual property="sortColumn" compareValue="payor">
			ORDER BY payor
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoveredAmt">
			ORDER BY recovered_amt
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls251_pkg.get_payor_details(#claimId#, #recoveryId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getHistoryMap" resultMap="historyMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls251_pkg.get_history(#recoveryId#))
		<isEqual property="sortColumn" compareValue="recHistNo">
			ORDER BY rec_hist_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="recStatCd recStatDesc">
			ORDER BY rec_stat_desc
		</isEqual>
		<isEqual property="sortColumn" compareValue="remarks">
			ORDER BY remarks
		</isEqual>
		<isEqual property="sortColumn" compareValue="userId">
			ORDER BY user_id
		</isEqual>
		<isEqual property="sortColumn" compareValue="lastUpdate">
			ORDER BY last_update
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls251_pkg.get_history(#recoveryId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>

	<select id="getClmListPerColor" resultMap="ClmListPerColorResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GICLS264_PKG.get_clm_list_per_color(#appUser#, #colorCd#, #basicColorCd#, 
																			#searchBy#, #asOfDate#, #fromDate#, #toDate#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPaidAmt">
									loss_paid_amt = #lossPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemTitle">
								ORDER BY item_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="plateNo">
								ORDER BY plate_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossResAmt">
								ORDER BY loss_res_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossPaidAmt">
								ORDER BY loss_paid_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="expResAmt">
								ORDER BY exp_res_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="expPaidAmt"> 
								ORDER BY exp_paid_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GICLS264_PKG.get_clm_list_per_color(#appUser#, #colorCd#, 
																			#basicColorCd#, #searchBy#, #asOfDate#, 
																			#fromDate#, #toDate#))
						   <isNotNull property="filter">
								WHERE 1 = 1
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPaidAmt">
									loss_paid_amt = #lossPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getClmListPerLawyer" resultMap="clmListPerLawyerResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gicls276_pkg.get_per_lawyer(#appUser#,#lawyerCd#, #searchBy#, #asOfDate#, #fromDate#, #toDate#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="recoveryNo">
									UPPER(recovery_no) LIKE UPPER(#recoveryNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="caseNo">
									UPPER(case_no) LIKE UPPER(#caseNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="classDesc">
									UPPER(class_desc) LIKE UPPER(#classDesc#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="payeeName">
									UPPER(payee_name) LIKE UPPER(#payeeName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recStatDesc">
									UPPER(rec_stat_desc) LIKE UPPER(#recStatDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recoverableAmt">
									recoverable_amt = (#recoverableAmt#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recoveredAmt">
									recovered_amt = (#recoveredAmt#)
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="recoveryNo">
								ORDER BY recovery_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="caseNo">
								ORDER BY case_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="classDesc">
								ORDER BY class_desc
							</isEqual>
							<isEqual property="sortColumn" compareValue="payeeName">
								ORDER BY payee_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="recStatDesc">
								ORDER BY rec_stat_desc
							</isEqual>
							<isEqual property="sortColumn" compareValue="recoverableAmt">
								ORDER BY recoverable_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="recoveredAmt"> 
								ORDER BY recovered_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gicls276_pkg.get_per_lawyer(#appUser#, #lawyerCd#, #searchBy#, #asOfDate#, #fromDate#, #toDate#))
						   <isNotNull property="filter">
								WHERE 1 = 1
 								<isNotEmpty prepend="AND" property="recoveryNo">
									UPPER(recovery_no) LIKE UPPER(#recoveryNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="caseNo">
									UPPER(case_no) LIKE UPPER(#caseNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="classDesc">
									UPPER(class_desc) LIKE UPPER(#classDesc#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="payeeName">
									UPPER(payee_name) LIKE UPPER(#payeeName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recStatDesc">
									UPPER(rec_stat_desc) LIKE UPPER(#recStatDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recoverableAmt">
									recoverable_amt = (#recoverableAmt#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recoveredAmt">
									recovered_amt = (#recoveredAmt#)
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getClmListPerPackagePolicy" resultMap="ClmListPerPackagePolicyResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS274_PKG.get_clm_list_per_pack_policy(#packPolicyId#, #lineCd#, #issCd#, #appUser#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #claimNo#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#, #recoverySw#))
		                <isEqual property="sortColumn" compareValue="recoverySw">
		                	ORDER BY recovery_sw
		                </isEqual>  
			            <isEqual property="sortColumn" compareValue="claimNo">
		              		ORDER BY claim_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossReserve">
		              		ORDER BY loss_res_amt
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="expenseReserve">
		              		ORDER BY exp_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossesPaid">
		              		ORDER BY loss_pd_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expensesPaid">
		              		ORDER BY exp_pd_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS274_PKG.get_clm_list_per_pack_policy(#packPolicyId#, #lineCd#, #issCd#, #appUser#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #claimNo#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#, #recoverySw#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>

	<select id="getClmListPerUser" resultMap="ClmListPerUserResultMap"> <!-- GICLS271 - Claim Listing Per User - Jeff/Pol 02-12-2013 -->
		<!-- Modified by pjsantos 11/10/2016, for optimization 5834 -->
		<!-- SELECT *
		FROM (SELECT rownum rownum_,
					b.count_, 
					a.*
				FROM ( -->	SELECT *
						FROM TABLE (GICLS271_PKG.get_clm_list_per_user(#appUser#, #inHouAdj#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, 
																	   #recoverySw#, #claimNo#, #claimStatDesc#, #lossResAmt#, #expResAmt#, 
																	   #lossPdAmt#, #expPdAmt#, #sortColumn#, #ascDescFlg#, #from#, #to#))
  						<!-- <isEqual property="sortColumn" compareValue="recoverySw">
  							ORDER BY recovery_sw
  						</isEqual>
						<isEqual property="sortColumn" compareValue="claimNo">
							ORDER BY claim_no
						</isEqual>
						<isEqual property="sortColumn" compareValue="claimStatDesc">
							ORDER BY clm_stat_desc
						</isEqual>
						<isEqual property="sortColumn" compareValue="lossResAmt">
							ORDER BY loss_res_amt
						</isEqual>
						<isEqual property="sortColumn" compareValue="expResAmt">
							ORDER BY exp_res_amt
						</isEqual>
						<isEqual property="sortColumn" compareValue="lossPdAmt">
							ORDER BY loss_pd_amt
						</isEqual>
						<isEqual property="sortColumn" compareValue="expPdAmt">
							ORDER BY exp_pd_amt
						</isEqual>
						<isNotNull property="sortColumn">
							<isEqual property="ascDescFlg" compareValue="ASC">
								ASC
							</isEqual>
							<isEqual property="ascDescFlg" compareValue="DESC">
								DESC
							</isEqual>
						</isNotNull>
						) a,
						(SELECT count(*) count_
						 FROM TABLE (
								GICLS271_PKG.get_clm_list_per_user(#appUser#, #inHouAdj#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, #recoverySw#, #claimNo#, #claimStatDesc#, #lossResAmt#, #expResAmt#, #lossPdAmt#, #expPdAmt#)
						 	)
						) b
		)WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>

	<!-- pjdiaz for query of Claim Listing per Cedant -->
	<resultMap class="java.util.HashMap" id="ClmListPerCedingResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimNo" column="claim_no"/>
		<result property="clmStatDesc" column="clm_stat_desc"/>
		<result property="lossResAmt" column="loss_res_amt"/>
		<result property="expResAmt" column="exp_res_amt"/>
		<result property="lossPdAmt" column="loss_pd_amt"/>
		<result property="expPdAmt" column="exp_pd_amt"/>
		<result property="totLossResAmt" column="tot_loss_res_amt"/>
		<result property="totExpResAmt" column="tot_exp_res_amt"/>
		<result property="totLossPdAmt" column="tot_loss_pd_amt"/>
		<result property="totExpPdAmt" column="tot_exp_pd_amt"/>
		<result property="policyNumber" column="policy_number"/>
		<result property="assuredName" column="assured_name"/>
		<result property="lossDate" column="loss_date"/>
		<result property="clmFileDate" column="clm_file_date"/>
	</resultMap>
	
	<select id="getClmListPerCeding" resultMap="ClmListPerCedingResultMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS267_PKG.get_clm_list_per_ceding(#riCd#, #appUser#, #claimNo#, #clmStatDesc#, #lossResAmt#, #expResAmt#, #lossPdAmt#, #expPdAmt#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#))
			            <isEqual property="sortColumn" compareValue="claimNo">
		              		ORDER BY claim_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="clmStatDesc">
		              		ORDER BY clm_stat_desc
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossResAmt">
		              		ORDER BY loss_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expResAmt">
		              		ORDER BY exp_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossPdAmt">
		              		ORDER BY loss_pd_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expPdAmt">
		              		ORDER BY exp_pd_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="policyNumber">
		              		ORDER BY policy_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="assuredName">
		              		ORDER BY assured_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossDate">
		              		ORDER BY loss_date
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="clmFileDate">
		              		ORDER BY claim_file_date
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS267_PKG.get_clm_list_per_ceding(#riCd#, #appUser#, #claimNo#, #clmStatDesc#, #lossResAmt#, #expResAmt#, #lossPdAmt#, #expPdAmt#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#))) b) 
		  				 WHERE rownum_ BETWEEN #from# AND #to#
	</select> 
	
	<select id="getClmListPerVessel" resultMap="ClmListPerVesselResultMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS262_PKG.POPULATE_PER_VESSEL_DETAILS(#vesselCd#, #searchBy#, #dateAsOf#, #dateFrom#, #dateTo#, #userId#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									upper(item_no) = upper(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(ITEM_TITLE) = UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dryDate">
									dry_date = TO_DATE(#dryDate#, 'MM-DD-YYYY')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dryPlace">
									UPPER(dry_place) = UPPER(#dryPlace#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossResAmt">
									los_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="losPaidAmt">
									los_paid_amt = #losPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="itemNo">
		              		ORDER BY item_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="itemTitle">
		              		ORDER BY item_title
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="dryDate">
		              		ORDER BY dry_date
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="dryPlace">
		              		ORDER BY dry_place
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossResAmt">
		              		ORDER BY los_res_amt
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="losPaidAmt">
		              		ORDER BY los_paid_amt
			            </isEqual>	
			            <isEqual property="sortColumn" compareValue="expResAmt">
		              		ORDER BY exp_res_amt
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="expPaidAmt">
		              		ORDER BY exp_paid_amt
			            </isEqual>			            
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS262_PKG.POPULATE_PER_VESSEL_DETAILS(#vesselCd#, #searchBy#, #dateAsOf#, #dateFrom#, #dateTo#, #userId#))
		                 <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									upper(item_no) = upper(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(ITEM_TITLE) = UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dryDate">
									dry_date = TO_DATE(#dryDate#, 'MM-DD-YYYY')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dryPlace">
									UPPER(dry_place) = UPPER(#dryPlace#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossResAmt">
									los_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="losPaidAmt">
									los_paid_amt = #losPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
						</isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getClmListPerPlateNo" resultMap="ClmListPerPlateNoResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS268_PKG.get_clm_list_per_plate_no(#appUser#, #plateNo#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#))
		                  WHERE UPPER(adverse_party) LIKE UPPER(NVL(#adverseParty#, adverse_party))
		                  AND UPPER(third_party) LIKE UPPER(NVL(#thirdParty#, third_party))
		                  AND UPPER(recovery_sw) LIKE UPPER(NVL(#recoverySw#, recovery_sw))
		                  AND item_no like NVL(#itemNo#, item_no)
		                  AND UPPER(item_title) LIKE UPPER(NVL(#itemTitle#, item_title))
		                  AND loss_reserve = NVL(#lossReserve#, loss_reserve)
		                  AND expense_reserve = NVL(#expenseReserve#, expense_reserve)
		                  AND losses_paid = NVL(#lossesPaid#, losses_paid)
		                  AND expenses_paid = NVL(#expensesPaid#, expenses_paid)
		                <isEqual property="sortColumn" compareValue="adverseParty">
		              		ORDER BY adverse_party
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="thirdParty">
		              		ORDER BY third_party
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="recoverySw">
		              		ORDER BY recovery_sw
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="itemNo">
		              		ORDER BY item_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="itemTitle">
		              		ORDER BY item_title
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossReserve">
		              		ORDER BY loss_reserve
			            </isEqual>
			            
			            <isEqual property="sortColumn" compareValue="expenseReserve">
		              		ORDER BY expense_reserve
			            </isEqual>
			            
			            <isEqual property="sortColumn" compareValue="lossesPaid">
		              		ORDER BY losses_paid
			            </isEqual>
			            
			            <isEqual property="sortColumn" compareValue="expensesPaid">
		              		ORDER BY expenses_paid
			            </isEqual>
			            
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS268_PKG.get_clm_list_per_plate_no(#appUser#, #plateNo#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#))
		                  WHERE UPPER(adverse_party) LIKE UPPER(NVL(#adverseParty#, adverse_party))
		                  AND UPPER(third_party) LIKE UPPER(NVL(#thirdParty#, third_party))
		                  AND UPPER(recovery_sw) LIKE UPPER(NVL(#recoverySw#, recovery_sw))
		                  AND item_no like NVL(#itemNo#, item_no)
		                  AND UPPER(item_title) LIKE UPPER(NVL(#itemTitle#, item_title))
		                  AND loss_reserve = NVL(#lossReserve#, loss_reserve)
		                  AND expense_reserve = NVL(#expenseReserve#, expense_reserve)
		                  AND losses_paid = NVL(#lossesPaid#, losses_paid)
		                  AND expenses_paid = NVL(#expensesPaid#, expenses_paid)) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getClmListPerAdjuster" resultMap="ClmListPerAdjusterResultMap">
		<!-- ADDED BY MarkS SR5837 11.14.2016 OPTIMIZATION -->
		SELECT *  FROM TABLE (GICLS257_PKG.get_clm_list_per_adjuster(#appUser#, #payeeNo#,
                  													 #searchBy#, #dateAsOf#, 
                  													 #dateFrom#, #dateTo#, 
                  													 #status#,#sortColumn#,
      															     #ascDescFlg#, #from#,
      																 #to#,#payeeName#,
      																 #assignDate#,#completeDate#,
      																 #cancelDate#,#dPO#,#paidAmount#))
     
		 <!-- SELECT *
		  FROM (SELECT rownum rownum_, 
		               COUNT(1) OVER() count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS257_PKG.get_clm_list_per_adjuster(#appUser#, #payeeNo#, #searchBy#, #dateAsOf#, #dateFrom#, #dateTo#, #status#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="payeeName">
									UPPER(payee_name) LIKE UPPER(#payeeName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="assignDate">
									assign_date = TO_DATE(#assignDate#, 'MM-DD-YYYY')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="completeDate">
									complt_date = TO_DATE(#completeDate#, 'MM-DD-YYYY')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="cancelDate">
									cancel_date = TO_DATE(#cancelDate#, 'MM-DD-YYYY')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dPO">
									dpo = #dPO#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="paidAmount">
									paid_amt = #paidAmount#
								</isNotEmpty>
						</isNotNull>
						
			            <isEqual property="sortColumn" compareValue="payeeName">
		              		ORDER BY payee_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="assignDate">
		              		ORDER BY assign_date
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="completeDate">
		              		ORDER BY complt_date
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="cancelDate">
		              		ORDER BY cancel_date
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="dPO">
		              		ORDER BY dpo
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="paidAmount">
		              		ORDER BY paid_amt
			            </isEqual>			            
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a)
		 WHERE rownum_ BETWEEN #from# AND #to#  -->
	</select>
	
	<resultMap class="java.util.HashMap" id="ClmListPerAssuredResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" column="claim_id"/>
		<result property="claimNumber" column="claim_number"/>
		<result property="assdNo" column="assd_no" />
		<result property="freeText" column="free_text"/>
		<result property="assuredName" column="assured_name" />
		<result property="lossReserve" column="loss_res_amt" />
		<result property="expenseReserve" column="exp_res_amt" />
		<result property="lossesPaid" column="loss_pd_amt" />
		<result property="expensesPaid" column="exp_pd_amt" />
		<result property="recoverySw" column="recovery_sw" />
		<result property="policyNumber" column="policy_number" />
		<result property="claimFileDate" column="clm_file_date" />
		<result property="lossDate" column="dsp_loss_date" />
		<result property="clmStatDesc" column="clm_stat_desc" />
		<result property="totLossResAmt" column="tot_loss_res_amt" />
		<result property="totLossPaidAmt" column="tot_loss_paid_amt" />
		<result property="totExpResAmt" column="tot_exp_res_amt" />
		<result property="totExpPaidAmt" column="tot_exp_paid_amt" />
		<result property="recoveryDetCount" column="recovery_det_count" />
		<result property="totRecoveryDetCount" column="tot_recovery_det_count" />
	</resultMap>
	
	<select id="getClmListPerAssured" resultMap="ClmListPerAssuredResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*, ' ' tot_recovery_det_count
		          FROM (SELECT * FROM TABLE(GICLS251_PKG.get_clm_list_per_assured(#moduleId#, #userId#, #assdNo#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, #recoverySw#, #claimNumber#, #freeText#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#))
			            <isEqual property="sortColumn" compareValue="recoverySw">
		              		ORDER BY recovery_sw
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="claimNumber">
		              		ORDER BY claim_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="freeText">
		              		ORDER BY free_text
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossReserve">
		              		ORDER BY loss_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expenseReserve">
		              		ORDER BY exp_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossesPaid">
		              		ORDER BY loss_pd_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expensesPaid">
		              		ORDER BY exp_pd_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS251_PKG.get_clm_list_per_assured(#moduleId#, #userId#, #assdNo#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, #recoverySw#, #claimNumber#, #freeText#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getPerAssuredFreeText" resultMap="ClmListPerAssuredResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*, 
		               (SELECT SUM(recovery_det_count) FROM TABLE(GICLS251_PKG.get_per_assured_freetext(#moduleId#, #userId#, #freeText#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, #recoverySw#, #claimNumber#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#))) tot_recovery_det_count
		          FROM (SELECT * FROM TABLE(GICLS251_PKG.get_per_assured_freetext(#moduleId#, #userId#, #freeText#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, #recoverySw#, #claimNumber#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#))
			            <isEqual property="sortColumn" compareValue="recoverySw">
		              		ORDER BY recovery_sw
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="claimNumber">
		              		ORDER BY claim_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="freeText">
		              		ORDER BY free_text
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossReserve">
		              		ORDER BY loss_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expenseReserve">
		              		ORDER BY exp_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossesPaid">
		              		ORDER BY loss_pd_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expensesPaid">
		              		ORDER BY exp_pd_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS251_PKG.get_per_assured_freetext(#moduleId#, #userId#, #freeText#, #searchByOpt#, #dateAsOf#, #dateTo#, #dateFrom#, #recoverySw#, #claimNumber#, #lossReserve#, #expenseReserve#, #lossesPaid#, #expensesPaid#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	
	
	
	<resultMap class="GIPIVehicle" id="getPlateNoGICLS268LOVMap">		
  		<result property="plateNo" 					column="plate_no" />	
  		<result property="rowNum" 				column="rownum_" />
		<result property="rowCount"				column="count_" />
  	</resultMap>
  	
  	<select id="getPlateNoGICLS268LOV" resultMap="getPlateNoGICLS268LOVMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT plate_no 
		          		  FROM TABLE (GICLS268_PKG.get_plate_no_gicls628)
		             <isNull property="findText">
		                 WHERE UPPER(plate_no) LIKE UPPER(#searchString#)
		             </isNull>
		             <isNotNull property="findText">
		                 WHERE UPPER(plate_no) LIKE UPPER(#findText#)
		             </isNotNull>
		             <isEqual property="sortColumn" compareValue="plateNo">
		              		ORDER BY plate_no
			         </isEqual>
			         <isNotNull property="sortColumn">
		             	<isEqual property="ascDescFlg" compareValue="ASC">
		              		ASC
		              	</isEqual>
		              	<isEqual property="ascDescFlg" compareValue="DESC">
		              		DESC
		              	</isEqual>
		             </isNotNull>
		                ) a, (SELECT count(*) count_ 
		                        FROM TABLE (GICLS268_PKG.get_plate_no_gicls628)
		             <isNull property="findText">
		                 WHERE UPPER(plate_no) LIKE UPPER(#searchString#)
		             </isNull>
		             <isNotNull property="findText">
		                 WHERE UPPER(plate_no) LIKE UPPER(#findText#)
		             </isNotNull>
		                      ) b) WHERE rownum_ BETWEEN #from# AND #to#
  	</select>

	<resultMap class="java.util.HashMap" id="ClmListPerIntermediaryResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" column="claim_id"/>
		<result property="perilCd" column="peril_cd"/>
		<result property="itemNo" column="item_no"/>
		<result property="lineCd" column="line_cd" />
		<result property="claimNo" column="claim_no"/>
		<result property="policyNo" column="policy_no"/>
		<result property="assuredName" column="assured_name"/>
		<result property="lossDate" column="loss_date"/>
		<result property="clmFileDate" column="clm_file_date"/>
		<result property="entryDate" column="entry_date"/>
		<result property="recoverySw" column="recovery_sw" />
		<result property="recoveryDetCount" column="recovery_det_count" />
		<result property="claimDetCount" column="claim_det_count" />
		<result property="lossCatDesc" column="loss_cat_desc" />
		<result property="clmStatDesc" column="clm_stat_desc" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="claimDetailsPerIntermediaryResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="itemNo" column="item_no" />
		<result property="itemTitle" column="item_title" />
		<result property="perilCd" column="peril_cd" />
		<result property="perilName" column="peril_name" />
		<result property="shrIntmPct" column="shr_intm_pct" />
		<result property="lossReserve" column="loss_reserve" />
		<result property="expenseReserve" column="expense_reserve" />
		<result property="lossesPaid" column="losses_paid" />
		<result property="expensesPaid" column="expenses_paid" />
		<result property="totLossReserve" column="tot_loss_reserve" />
		<result property="totExpenseReserve" column="tot_expense_reserve" />
		<result property="totLossesPaid" column="tot_losses_paid" />
		<result property="totExpensesPaid" column="tot_expenses_paid" />
	</resultMap>
	
	<select id="getClmListPerIntermediary" resultMap="ClmListPerIntermediaryResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS266_PKG.get_clm_list_per_intermediary(#userId#, #intmNo#, #recoverySw#, #claimNo#, #policyNo#, #assuredName#, #clmFileDate#, #lossDate#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#))
		                <isEqual property="sortColumn" compareValue="recoverySw">
		              		ORDER BY recovery_sw
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="claimNo">
		              		ORDER BY claim_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="policyNo">
		              		ORDER BY policy_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="assuredName">
		              		ORDER BY assured_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="clmFileDate">
		              		ORDER BY clm_file_date
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossDate">
		              		ORDER BY loss_date
			            </isEqual>  
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS266_PKG.get_clm_list_per_intermediary(#userId#, #intmNo#, #recoverySw#, #claimNo#, #policyNo#, #assuredName#, #clmFileDate#, #lossDate#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getClaimDetailsPerIntermediary" resultMap="claimDetailsPerIntermediaryResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS266_PKG.get_claim_details(#claimId#, #perilCd#, #itemNo#, #lineCd#))
		                <isEqual property="sortColumn" compareValue="itemNo">
		              		ORDER BY item_no
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="itemTitle">
		              		ORDER BY item_title
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="perilCd perilName">
		              		ORDER BY peril_cd
			            </isEqual>   
			            <isEqual property="sortColumn" compareValue="shrIntmPct">
		              		ORDER BY shr_intm_pct
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="lossReserve">
		              		ORDER BY loss_reserve
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="expenseReserve">
		              		ORDER BY expense_reserve
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="lossesPaid">
		              		ORDER BY losses_paid
			            </isEqual>   
			            <isEqual property="sortColumn" compareValue="expensesPaid">
		              		ORDER BY expenses_paid
			            </isEqual>  
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS266_PKG.get_claim_details(#claimId#, #perilCd#, #itemNo#, #lineCd#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap id="GICLS263MakeDetailsResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id" />
		<result property="itemNo" 			column="item_no" />
		<result property="itemTitle" 		column="item_title" />
		<result property="plateNo" 			column="plate_no" />
		<result property="claimNumber" 		column="claim_number" />
		<result property="lossResAmt" 		column="loss_res_amt"/>
		<result property="lossPaidAmt" 		column="loss_paid_amt"/>
		<result property="expResAmt" 		column="exp_res_amt"/>
		<result property="expPaidAmt" 		column="exp_paid_amt"/>
		<result property="totLossResAmt" 	column="tot_loss_res_amt"/>
		<result property="totLossPaidAmt" 	column="tot_loss_paid_amt"/>
		<result property="totExpResAmt" 	column="tot_exp_res_amt"/>
		<result property="totExpPaidAmt" 	column="tot_exp_paid_amt"/>
		<result property="policyNo" 		column="policy_no"/>
		<result property="assdName"			column="assd_name"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
		<result property="lossDate"			column="loss_date"/>
		<result property="clmFileDate"		column="clm_file_date"/>
	</resultMap>
	
	<select id="getMakeDetailsInfo" resultMap="GICLS263MakeDetailsResultMap">
	    SELECT *
			FROM (SELECT rownum rownum_,
						 c.*, b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GICLS263_PKG.get_make_details(#makeCd#, #carCompanyCd#, #appUser#,
																	#searchBy#, #asOfDate#, #fromDate#, #toDate#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPaidAmt">
									loss_paid_amt = #lossPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemTitle">
								ORDER BY item_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="plateNo">
								ORDER BY plate_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossResAmt">
								ORDER BY loss_res_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossPaidAmt">
								ORDER BY loss_paid_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="expResAmt">
								ORDER BY exp_res_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="expPaidAmt"> 
								ORDER BY exp_paid_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GICLS263_PKG.get_make_details(#makeCd#, #carCompanyCd#, #appUser#,
						   										#searchBy#, #asOfDate#, #fromDate#, #toDate#))
						   <isNotNull property="filter">
								WHERE 1 = 1
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPaidAmt">
									loss_paid_amt = #lossPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
							</isNotNull>
						   ) b, 
						   (SELECT sum(loss_res_amt) tot_loss_res_amt, sum(loss_paid_amt) tot_loss_paid_amt, 
								sum(exp_res_amt) tot_exp_res_amt, sum(exp_paid_amt) tot_exp_paid_amt
							FROM TABLE (GICLS263_PKG.get_make_details(#makeCd#, #carCompanyCd#, #appUser#,
																	#searchBy#, #asOfDate#, #fromDate#, #toDate#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPaidAmt">
									loss_paid_amt = #lossPaidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPaidAmt">
									exp_paid_amt = #expPaidAmt#
								</isNotEmpty>
							</isNotNull>							
						) c)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="GICLS275MCReplacementDetailsResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id" />
		<result property="itemNo" 			column="item_no" />
		<result property="perilName" 		column="peril_name" />
		<result property="classDesc"     	column="class_desc" />
		<result property="payeeLastName" 	column="payee_last_name" />
		<result property="histSeqNo" 		column="hist_seq_no"/>
		<result property="leStatDesc" 		column="le_stat_desc"/>
		<result property="dtlAmt"   		column="dtl_amt"/>
		<result property="userId" 			column="user_id"/>
		<result property="lastUpdate"   	column="last_update"/>
		<result property="claimNumber" 		column="claim_number" />
	    <result property="policyNo" 		column="policy_no"/>
		<result property="assdName"			column="assd_name"/>
		<result property="clmStatDesc"		column="clm_stat_desc"/>
		<result property="lossDate"			column="loss_date"/>
		<result property="clmFileDate"		column="clm_file_date"/>
		<result property="lossExpCd"		column="loss_exp_cd"/>
		<result property="clmLossId"		column="clm_loss_id"/>
	</resultMap>
	
	<select id="getMCReplacementDetailsInfo" resultMap="GICLS275MCReplacementDetailsResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS275_PKG.get_MCReplacement_details(#carCompanyCd#, #makeCd#, #modelYear#, 
		                  														#lossExpCd#, #appUser#, #searchBy#, 
		                  														#asOfDate#, #fromDate#, #toDate#))
		                <isNotNull property="filter">
                            WHERE 1 = 1 
                                 <isNotEmpty prepend="AND" property="itemNo">
                                    item_no = #itemNo#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="perilName">
                                    UPPER(peril_name) LIKE UPPER(#perilName#)
                                </isNotEmpty>
                                 <isNotEmpty prepend="AND" property="classDesc">
                                     UPPER(class_desc) LIKE  UPPER(#classDesc#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="payeeLastName">
                                    UPPER(payee_last_name) LIKE  UPPER(#payeeLastName#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="histSeqNo">
                                    hist_seq_no = #histSeqNo#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="leStatDesc">
                                     UPPER(le_stat_desc) UPPER  UPPER(#leStatDesc#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="dtlAmt">
                                    dtl_amt = #dtlAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="userId">
                                     UPPER(user_id) LIKE  UPPER(#userId#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="lastUpdate">
                                    last_update = #lastUpdate#
                                </isNotEmpty>
                        </isNotNull>				                  														
		                <isEqual property="sortColumn" compareValue="itemNo">
		              		ORDER BY item_no
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="perilName">
		              		ORDER BY peril_name
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="classDesc payeeLastName">
							ORDER BY class_desc
						</isEqual>
			            <isEqual property="sortColumn" compareValue="histSeqNo">
		              		ORDER BY hist_seq_no
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="leStatDesc">
		              		ORDER BY le_stat_desc
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="dtlAmt">
		              		ORDER BY dtl_amt
			            </isEqual>   
			            <isEqual property="sortColumn" compareValue="userId">
		              		ORDER BY user_id
			            </isEqual>
						<isEqual property="sortColumn" compareValue="lastUpdate">
		              		ORDER BY last_update
			            </isEqual>   
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS275_PKG.get_MCReplacement_details(#carCompanyCd#, #makeCd#, #modelYear#, 
		                  														#lossExpCd#, #appUser#, #searchBy#, 
		                  														#asOfDate#, #fromDate#, #toDate#))		                  														
		               <isNotNull property="filter">
                            WHERE 1 = 1 
                                 <isNotEmpty prepend="AND" property="itemNo">
                                    UPPER(item_no) LIKE UPPER(#itemNo#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="perilName">
                                    UPPER(peril_name) LIKE UPPER(#perilName#)
                                </isNotEmpty>
                                 <isNotEmpty prepend="AND" property="classDesc">
                                    class_desc = #classDesc#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="payeeLastName">
                                    payee_last_name = #payeeLastName#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="histSeqNo">
                                    hist_seq_no = #histSeqNo#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="leStatDesc">
                                    le_stat_desc = #leStatDesc#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="dtlAmt">
                                    dtl_amt = #dtlAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="userId">
                                    user_id = #userId#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="lastUpdate">
                                    last_update = #lastUpdate#
                                </isNotEmpty>
                        </isNotNull>
                         ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap id="GICLS275LossDetailsResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result property="lossExpCd" 			column="loss_exp_cd" />
		<result property="dspExpDesc" 			column="dsp_exp_desc" />		
		<result property="noOfUnits" 			column="no_of_units" />	
		<result property="nbtBaseAmt" 			column="nbt_base_amt" />
		<result property="dtlAmt"    			column="dtl_amt" />	
		<result property="nbtNetAmt"  			column="nbt_net_amt" />	
		<result property="totDtlAmt"            column="tot_dtl_amt" />
		<result property="totNetAmt"            column="tot_net_amt" />
	</resultMap>
	
	<select id="getLossDtlsField" resultMap="GICLS275LossDetailsResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS275_PKG.get_loss_dtls(#claimId#, #clmLossId#, #lossExpCd#))
		                <isNotNull property="filter">
                            WHERE 1 = 1 
                                 <isNotEmpty prepend="AND" property="lossExpCd">
                                    UPPER(loss_exp_cd) LIKE UPPER(#lossExpCd#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="dspExpDesc">
                                    UPPER(dsp_exp_desc) LIKE UPPER(#dspExpDesc#)
                                </isNotEmpty>
                                 <isNotEmpty prepend="AND" property="noOfUnits">
                                    no_of_units = #noOfUnits#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="nbtBaseAmt">
                                    nbt_base_amt = #nbtBaseAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="dtlAmt">
                                    dtl_amt = #dtlAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="nbtNetAmt">
                                    nbt_net_amt = #nbtNetAmt#
                                </isNotEmpty>
                        </isNotNull>				                  														
		                <isEqual property="sortColumn" compareValue="lossExpCd dspExpDesc">
		              		ORDER BY loss_exp_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="noOfUnits">
							ORDER BY no_of_units
						</isEqual>
			            <isEqual property="sortColumn" compareValue="nbtBaseAmt">
		              		ORDER BY nbt_base_amt
			            </isEqual> 
			            <isEqual property="sortColumn" compareValue="dtlAmt">
		              		ORDER BY dtl_amt
			            </isEqual>  
			            <isEqual property="sortColumn" compareValue="nbtNetAmt">
		              		ORDER BY nbt_net_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS275_PKG.get_loss_dtls(#claimId#, #clmLossId#, #lossExpCd#))
		                <isNotNull property="filter">
                            WHERE 1 = 1 
                                 <isNotEmpty prepend="AND" property="lossExpCd">
                                    UPPER(loss_exp_cd) LIKE UPPER(#lossExpCd#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="dspExpDesc">
                                    UPPER(dsp_exp_desc) LIKE UPPER(#dspExpDesc#)
                                </isNotEmpty>
                                 <isNotEmpty prepend="AND" property="noOfUnits">
                                    no_of_units = #noOfUnits#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="nbtBaseAmt">
                                    nbt_base_amt = #nbtBaseAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="dtlAmt">
                                    dtl_amt = #dtlAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="nbtNetAmt">
                                    nbt_net_amt = #nbtNetAmt#
                                </isNotEmpty>
                        </isNotNull>
                         ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>

	<select id="getClmListPerRecoveryType" resultMap="ClmListPerRecoveryTypeResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               COUNT(1) OVER() count_, a.* <!-- edited by MarkS SR5845 11.24.2016 -->
		          FROM (SELECT * 
		                  FROM TABLE (GICLS258_PKG.get_clm_list_per_recovery_type(#appUser#, #recTypeCd#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #recoveryNo#, #payorClass#, #payorName#, #fileDate#, #lossDate#))
		                <isEqual property="sortColumn" compareValue="recoveryNo">
		              		ORDER BY recovery_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="payorClass">
		              		ORDER BY payor_class
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="payorName">
		              		ORDER BY payor_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="fileDate">
		              		ORDER BY clm_file_date
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="lossDate">
		              		ORDER BY loss_date
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
		  <!-- commented out by MarkS 11.24.2016 SR5845 optimization -->
		 <!-- SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS258_PKG.get_clm_list_per_recovery_type(#appUser#, #recTypeCd#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #recoveryNo#, #payorClass#, #payorName#, #fileDate#, #lossDate#))
		                <isEqual property="sortColumn" compareValue="recoveryNo">
		              		ORDER BY recovery_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="payorClass">
		              		ORDER BY payor_class
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="payorName">
		              		ORDER BY payor_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="fileDate">
		              		ORDER BY clm_file_date
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="lossDate">
		              		ORDER BY loss_date
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS258_PKG.get_clm_list_per_recovery_type(#appUser#,#recTypeCd#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #recoveryNo#, #payorClass#, #payorName#, #fileDate#, #lossDate#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	 -->
	</select>
	
	<select id="getClmListPerPayee" resultMap="ClmListPerPayeeResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS259_PKG.get_clm_list_per_payee(#appUser#, #payeeCd#, #payeeClassCd#))
		                  WHERE 1=1
                    	<isNotEmpty property="fileDate2">
                    		<isNotEmpty prepend="AND"  property="asOfDate">
                    			TRUNC(clm_file_date) <![CDATA[ <= ]]> TRUNC(to_date(#asOfDate#,'MM-DD-YYYY'))
                    		</isNotEmpty>
                    		<isNotEmpty prepend="AND"  property="fromDate">
               			 		TRUNC(clm_file_date) <![CDATA[ >= ]]> TRUNC(to_date(#fromDate#,'MM-DD-YYYY'))
		             			AND TRUNC(clm_file_date) <![CDATA[ <= ]]> TRUNC(to_date(#toDate#,'MM-DD-YYYY'))
               			 	</isNotEmpty>
                    	</isNotEmpty>
                    	<isNotEmpty property="lossDate2">
                    		<isNotEmpty prepend="AND"  property="asOfDate">
                    			TRUNC(loss_date) <![CDATA[ <= ]]> TRUNC(to_date(#asOfDate#,'MM-DD-YYYY'))
                    		</isNotEmpty>
                    		<isNotEmpty prepend="AND"  property="fromDate">
               			 		TRUNC(loss_date) <![CDATA[ >= ]]> TRUNC(to_date(#fromDate#,'MM-DD-YYYY'))
		             			AND TRUNC(loss_date) <![CDATA[ <= ]]> TRUNC(to_date(#toDate#,'MM-DD-YYYY'))
               			 	</isNotEmpty>
                    	</isNotEmpty>
                    	<isNotEmpty prepend="AND"  property="claimNumber">
							claim_number LIKE upper(#claimNumber#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="policyNumber">
							policy_number LIKE upper(#policyNumber#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="assuredName">
							assured_name LIKE upper(#assuredName#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="fileDate">
							TRUNC(clm_file_date) = TRUNC(to_date(#fileDate#,'MM-DD-YYYY'))
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="lossDate">
							TRUNC(loss_date) = TRUNC(to_date(#lossDate#,'MM-DD-YYYY'))
						</isNotEmpty>
			            <isEqual property="sortColumn" compareValue="claimNumber">
		              		ORDER BY claim_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="policyNumber">
		              		ORDER BY policy_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="assuredName">
		              		ORDER BY assured_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="fileDate">
		              		ORDER BY clm_file_date
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossDate">
		              		ORDER BY loss_date
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS259_PKG.get_clm_list_per_payee(#appUser#, #payeeCd#, #payeeClassCd#))
		                  WHERE 1=1
	                    <isNotEmpty property="fileDate2">
                    		<isNotEmpty prepend="AND"  property="asOfDate">
                    			clm_file_date <![CDATA[ <= ]]> to_date(#asOfDate#,'MM-DD-YYYY')
                    		</isNotEmpty>
                    		<isNotEmpty prepend="AND"  property="fromDate">
               			 		clm_file_date <![CDATA[ >= ]]> to_date(#fromDate#,'MM-DD-YYYY')
		             			AND clm_file_date <![CDATA[ <= ]]> to_date(#toDate#,'MM-DD-YYYY')
               			 	</isNotEmpty>
                    	</isNotEmpty>
                    	<isNotEmpty property="lossDate2">
                    		<isNotEmpty prepend="AND"  property="asOfDate">
                    			loss_date <![CDATA[ <= ]]> to_date(#asOfDate#,'MM-DD-YYYY')
                    		</isNotEmpty>
                    		<isNotEmpty prepend="AND"  property="fromDate">
               			 		loss_date <![CDATA[ >= ]]> to_date(#fromDate#,'MM-DD-YYYY')
		             			AND loss_date <![CDATA[ <= ]]> to_date(#toDate#,'MM-DD-YYYY')
               			 	</isNotEmpty>
                    	</isNotEmpty>
                    	<isNotEmpty prepend="AND"  property="claimNumber">
							claim_number LIKE upper(#claimNumber#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="policyNumber">
							policy_number LIKE upper(#policyNumber#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="assuredName">
							assured_name LIKE upper(#assuredName#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="fileDate">
							TRUNC(clm_file_date) = TRUNC(to_date(#fileDate#,'MM-DD-YYYY'))
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="lossDate">
							TRUNC(loss_date) = TRUNC(to_date(#lossDate#,'MM-DD-YYYY'))
						</isNotEmpty>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="showPerPayeeDtl" resultMap="perPayeeDtlResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_,
		               a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS259_PKG.get_gicls259_details(#claimId#, #payeeCd#, #payeeClassCd#))
		                  WHERE 1=1
	                    	<isNotEmpty prepend="AND"  property="itemNo">
								item_no LIKE #itemNo#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="dspItem">
								UPPER(dsp_item) LIKE UPPER(#dspItem#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="perilCd">
								peril_cd LIKE #perilCd#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="dspPeril">
								UPPER(dsp_peril) LIKE UPPER(#dspPeril#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="histSeqNo">
								hist_seq_no LIKE TO_NUMBER(#histSeqNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="status">
								UPPER(dsp_status) LIKE UPPER(#status#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="paidAmt">
								paid_amt LIKE #paidAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="netAmt">
								net_amt LIKE #netAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="adviceAmt">
								advice_amt LIKE #adviceAmt#
							</isNotEmpty>
		                <isEqual property="sortColumn" compareValue="itemNo dspItem">
		              		ORDER BY item_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="perilCd dspPeril">
		              		ORDER BY peril_cd
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="histSeqNo">
		              		ORDER BY hist_seq_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="status">
		              		ORDER BY dsp_status
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="paidAmt">
		              		ORDER BY paid_amt
			            </isEqual>
			             <isEqual property="sortColumn" compareValue="netAmt">
		              		ORDER BY net_amt
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="adviceAmt">
		              		ORDER BY advice_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS259_PKG.get_gicls259_details(#claimId#, #payeeCd#, #payeeClassCd#))
		                  WHERE 1=1
	                    	<isNotEmpty prepend="AND"  property="itemNo">
								item_no LIKE #itemNo#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="dspItem">
								UPPER(dsp_item) LIKE UPPER(#dspItem#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="perilCd">
								peril_cd LIKE #perilCd#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="dspPeril">
								UPPER(dsp_peril) LIKE UPPER(#dspPeril#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="histSeqNo">
								hist_seq_no LIKE TO_NUMBER(#histSeqNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="status">
								UPPER(dsp_status) LIKE UPPER(#status#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="paidAmt">
								paid_amt LIKE #paidAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="netAmt">
								net_amt LIKE #netAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="adviceAmt">
								advice_amt LIKE #adviceAmt#
							</isNotEmpty>
						) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="validateLawyer" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS276_PKG.validate_lawyer(#lawyerName#) FROM DUAL
	</select>
	
	<select id="validateColorPerColor" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS264_PKG.validate_color_per_color(#basicColorCd#, #color#) FROM DUAL
	</select>
	
	<select id="validateBasicColorPerColor" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS264_PKG.validate_basic_color_per_color(#basicColor#) FROM DUAL
	</select>
	
	<select id="validatePayeePerAdjuster" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS257_PKG.validate_payee_per_adj(#payee#) FROM DUAL
	</select>
	
	<select id="getClmListPerBlock" resultMap="ClmListPerBlockResultMap">
        SELECT *
            FROM (SELECT rownum rownum_,
                         b.count_, 
                         a.*
                    FROM (SELECT *
                            FROM TABLE (GICLS279_PKG.get_clm_list_per_block(#appUser#, #districtNo#, #blockNo#, 
                                                                            #searchBy#, #asOfDate#, #fromDate#, #toDate#))
                            <isNotNull property="filter">
                            WHERE 1 = 1 
                                 <isNotEmpty prepend="AND" property="itemNo">
                                    UPPER(item_no) LIKE UPPER(#itemNo#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="itemTitle">
                                    UPPER(item_title) LIKE UPPER(#itemTitle#)
                                </isNotEmpty>
                                 <isNotEmpty prepend="AND" property="lossResAmt">
                                    loss_res_amt = #lossResAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="lossPaidAmt">
                                    loss_paid_amt = #lossPaidAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="expResAmt">
                                    exp_res_amt = #expResAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="expPaidAmt">
                                    exp_paid_amt = #expPaidAmt#
                                </isNotEmpty>
                            </isNotNull>
                            <isEqual property="sortColumn" compareValue="itemNo">
                                ORDER BY item_no
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="itemTitle">
                                ORDER BY item_title
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="lossResAmt">
                                ORDER BY loss_res_amt
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="lossPaidAmt">
                                ORDER BY loss_paid_amt
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="expResAmt">
                                ORDER BY exp_res_amt
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="expPaidAmt"> 
                                ORDER BY exp_paid_amt
                            </isEqual>
                            <isNotNull property="sortColumn">
                                <isEqual property="ascDescFlg" compareValue="ASC">
                                    ASC
                                </isEqual>
                                <isEqual property="ascDescFlg" compareValue="DESC">
                                    DESC
                                </isEqual>
                            </isNotNull>
                        ) a,
                        (SELECT count(*) count_
                           FROM TABLE (GICLS279_PKG.get_clm_list_per_block(#appUser#, #districtNo#, 
                                                                            #blockNo#, #searchBy#, #asOfDate#, 
                                                                            #fromDate#, #toDate#))
                           <isNotNull property="filter">
                                WHERE 1 = 1
                                 <isNotEmpty prepend="AND" property="itemNo">
                                    UPPER(item_no) LIKE UPPER(#itemNo#)
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="itemTitle">
                                    UPPER(item_title) LIKE UPPER(#itemTitle#)
                                </isNotEmpty>
                                 <isNotEmpty prepend="AND" property="lossResAmt">
                                    loss_res_amt = #lossResAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="lossPaidAmt">
                                    loss_paid_amt = #lossPaidAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="expResAmt">
                                    exp_res_amt = #expResAmt#
                                </isNotEmpty>
                                <isNotEmpty prepend="AND" property="expPaidAmt">
                                    exp_paid_amt = #expPaidAmt#
                                </isNotEmpty>
                            </isNotNull>
                           ) b)
            WHERE rownum_ BETWEEN #from# AND #to#
    </select>
	
	<select id="validateDistrictPerBlock" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS279_PKG.validate_district_per_block(#blockNo#, #district#) FROM DUAL
	</select>
	
	<select id="validateBlockPerBlock" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS279_PKG.validate_block_per_block(#block#) FROM DUAL
	</select>
	
	<select id="getBlockByDistrictNo" parameterClass="java.util.HashMap" resultMap="blockDetailsMap">
		SELECT block_no, block_desc FROM TABLE(GICLS279_PKG.get_block_by_district(#districtNo#))
	</select>
	
	<select id="getClmListPerCargoType" resultMap="ClmListPerCargoTypeResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_,
		              b.count_,
		              a.*
		         FROM (
		         	SELECT * FROM TABLE (GICLS265_PKG.get_clm_list_per_cargo(#appUser#, #cargoClassCd#, #cargoType#,#searchBy#, #asOfDate#, #fromDate#, #toDate#))
						<isNotNull property="filter">
						
							WHERE 1 = 1
							<isNotEmpty prepend="AND" property="itemNo">
								item_no = #itemNo#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="groupedItemNo">
								UPPER(grouped_item_no) LIKE UPPER(#groupedItemNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="vesselCd">
								UPPER(vessel_cd) LIKE UPPER(#vesselCd#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossResAmt">
								loss_res_amt = #lossResAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossPaidAmt">
								loss_paid_amt = #lossPaidAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expResAmt">
								exp_res_amt = #expResAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expPaidAmt">
								exp_paid_amt = #expPaidAmt#
							</isNotEmpty>
						</isNotNull>
						
						<isEqual property="sortColumn" compareValue="itemNo">
		              		ORDER BY item_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="groupedItemNo">
		              		ORDER BY grouped_item_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="vesselCd">
		              		ORDER BY vessel_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossResAmt">
		              		ORDER BY loss_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossPaidAmt">
		              		ORDER BY loss_paid_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expResAmt">
		              		ORDER BY exp_res_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expPaidAmt">
		              		ORDER BY exp_paid_amt
			            </isEqual>		            
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>
				 ) a,
		         ( SELECT count(*) count_
		           FROM (
		         	SELECT * FROM TABLE (GICLS265_PKG.get_clm_list_per_cargo(#appUser#, #cargoClassCd#, #cargoType#,#searchBy#, #asOfDate#, #fromDate#, #toDate#))
						<isNotNull property="filter">
						
							WHERE 1 = 1
							<isNotEmpty prepend="AND" property="itemNo">
								item_no = #itemNo#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="groupedItemNo">
								UPPER(grouped_item_no) LIKE UPPER(#groupedItemNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="vesselCd">
								UPPER(vessel_cd) LIKE UPPER(#vesselCd#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossResAmt">
								loss_res_amt = #lossResAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossPaidAmt">
								loss_paid_amt = #lossPaidAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expResAmt">
								exp_res_amt = #expResAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expPaidAmt">
								exp_paid_amt = #expPaidAmt#
							</isNotEmpty>
						</isNotNull>
						)
		         ) b
		      )
		       WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="validateCargoClassPerCargoClass" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS265_PKG.validate_cargo_class(#cargoClassDesc#) FROM DUAL
	</select>
	
	<select id="validateCargoTypePerCargoClass" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS265_PKG.validate_cargo_type(#cargoClassCd#,#cargoTypeDesc#) FROM DUAL
	</select>
	
	<select id="fetchCorrespondingCargoTypeBasedOnClassCd" parameterClass="java.util.HashMap" resultMap="cargoTypeDetailsMap">
		SELECT * FROM TABLE(GICLS265_PKG.fetch_cargo_type_by_code(#cargoClassCd#))
	</select>
	
	<select id="fetchValidCargo" parameterClass="java.util.HashMap" resultMap="cargoIdListMap">
		SELECT * FROM TABLE(GICLS265_PKG.fetch_valid_cargo_class(#moduleId#))
	</select>
	
	<select id="getClmListPerMotorshop" resultMap="ClmListPerMotorshopResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_,
		              b.count_,
		              a.*
		         FROM (
		         	SELECT * FROM TABLE (GICLS253_PKG.populate_per_motortype_details(#pPayeeCd#, #pFromDate#, #pToDate#, #pAsOfDate#, #pSearchBy#))
						<isNotNull property="filter">
							WHERE 1 = 1
							 <isNotEmpty prepend="AND" property="claimNumber">
								UPPER(claim_number) LIKE UPPER(#claimNumber#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="clmStatDesc">
								UPPER(clm_stat_desc) LIKE UPPER(#clmStatDesc#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="loaNumber">
								UPPER(loa_number) LIKE UPPER(#loaNumber#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="plateNo">
								UPPER(plate_no) LIKE UPPER(#plateNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossReserve">
								loss_reserve = #lossReserve#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="paidAmt">
								paid_amt = #paidAmt#
							</isNotEmpty>
						</isNotNull>
						
						<isEqual property="sortColumn" compareValue="claimNumber">
		              		ORDER BY claim_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="clmStatDesc">
		              		ORDER BY clm_stat_desc
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="loaNumber">
		              		ORDER BY loa_number
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="plateNo">
		              		ORDER BY plate_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossReserve">
		              		ORDER BY loss_reserve
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="paidAmt">
		              		ORDER BY paid_amt
			            </isEqual>			            
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>
				 ) a,
		         ( SELECT count(*) count_
		           FROM (
		         	SELECT * FROM TABLE (GICLS253_PKG.populate_per_motortype_details(#pPayeeCd#, #pFromDate#, #pToDate#, #pAsOfDate#, #pSearchBy#))
						<isNotNull property="filter">
							WHERE 1 = 1
							 <isNotEmpty prepend="AND" property="claimNumber">
								UPPER(claim_number) LIKE UPPER(#claimNumber#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="clmStatDesc">
								UPPER(clm_stat_desc) LIKE UPPER(#clmStatDesc#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="loaNumber">
								UPPER(loa_number) LIKE UPPER(#loaNumber#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="plateNo">
								UPPER(plate_no) LIKE UPPER(#plateNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossReserve">
								loss_reserve = #lossReserve#
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="paidAmt">
								paid_amt = #paidAmt#
							</isNotEmpty>
						</isNotNull>
						)
		         ) b
		      )
		       WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="validateMotorshop" resultClass="java.lang.String">
		SELECT GICLS253_PKG.validate_motorshop(#payeeName#) FROM DUAL
	</select>
	
	<select id="getClmListPerNatureOfLoss" resultMap="ClmListPerNatureOfLossResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_,
		              b.count_,
		              a.*
		         FROM (
		         	SELECT * FROM TABLE (GICLS256_PKG.populate_gicls256_details(#lineCd#,#lossCatCd#,#fromDate#,#toDate#,#asOfDate#,#searchBy#,#userId#))
						<isNotNull property="filter">
							where 1 = 1 <!-- added by robert SR 4876 09.09.15 -->
							<isNotEmpty prepend="AND" property="itemNo">
								item_no = TO_NUMBER(#itemNo#) <!-- UPPER(item_no) LIKE UPPER(#itemNo#) replaced by robert SR 4876 09.09.15 -->
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="item">
								UPPER(item) LIKE UPPER(#item#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="perilName">
								UPPER(peril_name) LIKE UPPER(#perilName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossResAmt">
								UPPER(loss_reserve) LIKE UPPER(#lossResAmt#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossPaidAmt">
								UPPER(loss_paid) LIKE UPPER(#lossPaidAmt#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expResAmt">
								UPPER(exp_reserve) LIKE UPPER(#expResAmt#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expPaidAmt">
								UPPER(exp_paid) LIKE UPPER(#expPaidAmt#)
							</isNotEmpty>
						</isNotNull>
						
						<isEqual property="sortColumn" compareValue="itemNo">
		              		ORDER BY item_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="item">
		              		ORDER BY item
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="perilName"> <!-- "PerilName"> replaced by robert SR 4876 09.09.15 -->
		              		ORDER BY peril_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossResAmt">
		              		ORDER BY loss_reserve
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lossPaidAmt">
		              		ORDER BY loss_paid
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expResAmt">
		              		ORDER BY exp_reserve
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="expPaidAmt">
		              		ORDER BY exp_paid
			            </isEqual>		            
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>
				 ) a,
		         ( SELECT count(*) count_
		           FROM (
		         	SELECT * FROM TABLE (GICLS256_PKG.populate_gicls256_details(#lineCd#,#lossCatCd#,#fromDate#,#toDate#,#asOfDate#,#searchBy#,#userId#))
						<isNotNull property="filter">
							WHERE 1 = 1
							<isNotEmpty prepend="AND" property="itemNo">
								item_no = TO_NUMBER(#itemNo#) <!-- UPPER(item_no) LIKE UPPER(#itemNo#) replaced by robert SR 4876 09.09.15 -->
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="item">
								UPPER(item) LIKE UPPER(#item#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="perilName">
								UPPER(peril_name) LIKE UPPER(#perilName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossResAmt">
								UPPER(loss_reserve) LIKE UPPER(#lossResAmt#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="lossPaidAmt">
								UPPER(loss_paid) LIKE UPPER(#lossPaidAmt#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expResAmt">
								UPPER(exp_reserve) LIKE UPPER(#expResAmt#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="expPaidAmt">
								UPPER(exp_paid) LIKE UPPER(#expPaidAmt#)
							</isNotEmpty>
						</isNotNull>
						)
		         ) b
		      )
		       WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getClmVesselLOV" resultMap="vesselLOVMap">	
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GICLS262_PKG.get_vessel_lov)
	          	 WHERE 1=1
	          	 	<isNull prepend="AND" property="findText">
						upper(vessel_name) LIKE upper(#search# || '%') OR
						upper(vessel_cd) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(vessel_name) LIKE upper(#findText# || '%')OR
						upper(vessel_cd) LIKE upper(#findText# || '%')
					</isNotNull>
		            <isEqual property="sortColumn" compareValue="lineCd">
	              		ORDER BY vessel_cd
		            </isEqual>
		            <isEqual property="sortColumn" compareValue="lineName">
	              		ORDER BY vessel_name
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM TABLE(GICLS262_PKG.get_vessel_lov)
	          	 WHERE 1=1
	            	<isNull prepend="AND" property="findText">
						upper(vessel_name) LIKE upper(#search# || '%') OR
						upper(vessel_cd) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(vessel_name) LIKE upper(#findText# || '%')OR
						upper(vessel_cd) LIKE upper(#findText# || '%')
					</isNotNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
	<select id="validateLineCdByLineName" resultClass="java.lang.String">
		SELECT GICLS256_PKG.validate_line_per_linename(#lineName#) FROM DUAL
	</select>
	
	<select id="validateLossCatDescPerLineCd" resultClass="java.lang.String">
		SELECT GICLS256_PKG.validate_loss_cat_desc(#lineCd#, #lossCatDesc#) FROM DUAL
	</select>
	
	<select id="fetchValidLossCatDesc" resultMap="lossCatDescDetailsMap">
		SELECT * FROM TABLE(GICLS256_PKG.fetch_valid_loss_cat(#lineCd#))
	</select>
	
	<select id="fetchValidLineCd" parameterClass="java.util.HashMap" resultMap="lineCdListMap">
		SELECT * FROM TABLE(GICLS256_PKG.fetch_valid_lines(#moduleId#))
	</select>
	
	<resultMap class="java.util.HashMap" id="ClmListPerBillResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="itemTitle" 		column="item_title" />
		<result property="perilName" 		column="peril_name" />
		<result property="leStatDesc" 		column="le_stat_desc" />
		<result property="paidAmt" 			column="paid_amt" />
		<result property="netAmt" 			column="net_amt" />
		<result property="adviseAmt" 		column="advise_amt"/>
		<result property="clmStatDesc" 		column="clm_stat_desc"/>
		<result property="assdName" 		column="assd_name"/>
		<result property="lossDate" 		column="loss_date"/>
		<result property="clmFileDate" 		column="clm_file_date"/>
		<result property="claimNo" 			column="claim_no"/>
		<result property="policyNo" 		column="policy_no"/>
	</resultMap>
	
	<select id="getClaimListingPerBill" resultMap="ClmListPerBillResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GICLS272_PKG.new_get_clm_list_per_bill(#payeeNo#, #payeeClassNo#,#docNumber#,#searchBy#, #asOfDate#, #fromDate#, #toDate#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="perilNo">
									UPPER(peril_cd) LIKE UPPER(#perilNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="perilName">
									UPPER(peril_name) LIKE UPPER(#perilName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="leStatDesc">
									UPPER(le_stat_desc) LIKE UPPER(#leStatDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="paidAmt">
									paid_amt = (#paidAmt#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="netAmt">
									net_amt = (#netAmt#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="adviseAmt">
									advise_amt = (#adviseAmt#)
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemTitle">
								ORDER BY item_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="perilNo">
								ORDER BY peril_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="perilName">
								ORDER BY peril_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="leStatDesc">
								ORDER BY le_stat_desc
							</isEqual>
							<isEqual property="sortColumn" compareValue="paidAmt">
								ORDER BY paid_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="netAmt"> 
								ORDER BY net_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="adviseAmt"> 
								ORDER BY advise_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GICLS272_PKG.new_get_clm_list_per_bill(#payeeNo#, #payeeClassNo#, #docNumber#,#searchBy#, #asOfDate#, #fromDate#, #toDate#))
						   <isNotNull property="filter">
								WHERE 1 = 1
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="perilNo">
									UPPER(peril_cd) LIKE UPPER(#perilNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="perilName">
									UPPER(peril_name) LIKE UPPER(#perilName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="leStatDesc">
									UPPER(le_stat_desc) LIKE UPPER(#leStatDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="paidAmt">
									paid_amt = #paidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="netAmt">
									net_amt = #netAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="adviseAmt">
									advise_amt = #adviseAmt#
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- Claims Bill Payee Names LOV -->
	<resultMap class="java.util.HashMap" id="ClmPayeeNamesResultMap">
		<result property="payeeNo" 		column="payee_no"/>
		<result property="payeeName" 	column="payee_name"/>
		<result property="rowNum" 		column="rownum_"/>
		<result property="rowCount" 	column="count_"/>
	</resultMap>
	
	<select id="getClaimsBillPayeeNamesLOV" resultMap="ClmPayeeNamesResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICLS272_PKG.get_payee_names(#payeeClassNo#,#docNumber#,#payeeNo#,#payeeName#))
		                 <isNotNull property="findText">
					         WHERE (UPPER(payee_no) LIKE UPPER(#findText#) 
					         	 OR UPPER(payee_name) LIKE UPPER(#findText#)
					         	 )
				         </isNotNull>          
			          	  <isNotNull property="sortColumn">
			                  <isEqual property="sortColumn" compareValue="payeeNo">
				              		ORDER BY payee_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="payeeName">
				              		ORDER BY payee_name
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>    
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GICLS272_PKG.get_payee_names(#payeeClassNo#,#docNumber#,#payeeNo#,#payeeName#))
			              <isNotNull property="findText">
					          WHERE (UPPER(payee_no) LIKE UPPER(#findText#) 
					         	  OR UPPER(payee_name) LIKE UPPER(#findText#)
					         	  )
				          </isNotNull> 
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Claims Bill Payee Names LOV -->
	<resultMap class="java.util.HashMap" id="ClmPayeeClassResultMap">
		<result property="payeeClassCd" column="payee_class_cd"/>
		<result property="payeeClass" 	column="payee_class_name"/>
		<result property="rowNum" 		column="rownum_"/>
		<result property="rowCount" 	column="count_"/>
	</resultMap>
	
	<select id="getClaimsBillPayeeClassLOV" resultMap="ClmPayeeClassResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICLS272_PKG.get_payee_class(#payeeNo#,#docNumber#,#payeeClassNo#,#payeeClass#))
		                 <isNotNull property="findText">
					         WHERE (UPPER(payee_class_cd) LIKE UPPER(#findText#) 
					         	 OR UPPER(payee_class_name) LIKE UPPER(#findText#)
					         	 )
				         </isNotNull>          
			          	  <isNotNull property="sortColumn">
			                  <isEqual property="sortColumn" compareValue="payeeClassCd">
				              		ORDER BY payee_class_cd
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="payeeClass">
				              		ORDER BY payee_class_name
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>    
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GICLS272_PKG.get_payee_class(#payeeNo#,#docNumber#,#payeeClassNo#,#payeeClass#))
			              <isNotNull property="findText">
					          WHERE (UPPER(payee_class_cd) LIKE UPPER(#findText#) 
					         	  OR UPPER(payee_class_name) LIKE UPPER(#findText#)
					         	  )
				          </isNotNull> 
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- Claims Bill Payee Doc Number LOV -->
	<resultMap class="java.util.HashMap" id="ClmDocNumberResultMap">
		<result property="docNumber"	column="doc_number"/>
		<result property="docType" 		column="doc_type"/>
		<result property="amount" 		column="amount"/>
		<result property="billDate" 	column="bill_date"/>
		<result property="rvMeaning" 	column="rv_meaning"/>
		<result property="rowNum" 		column="rownum_"/>
		<result property="rowCount" 	column="count_"/>
	</resultMap>
	
	<select id="getClaimsBillDocNumberLOV" resultMap="ClmDocNumberResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICLS272_PKG.get_doc_number(#payeeNo#,#payeeClassNo#,#docTypeNo#,#docType#,#docNumber#,#billAmt#,#billDate#))
		                 <isNotNull property="findText">
					         WHERE doc_number LIKE (#findText#) 
				         </isNotNull>          
			          	  <isNotNull property="sortColumn">
			                  <isEqual property="sortColumn" compareValue="docNumber">
				              		ORDER BY doc_number
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="amount">
				              		ORDER BY amount
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="billDate">
				              		ORDER BY bill_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="docType">
				              		ORDER BY doc_type
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="rvMeaning">
				              		ORDER BY rv_meaning
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>    
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GICLS272_PKG.get_doc_number(#payeeNo#,#payeeClassNo#,#docTypeNo#,#docType#,#docNumber#,#billAmt#,#billDate#))
			              <isNotNull property="findText">
					          WHERE doc_number LIKE (#findText#) 
				          </isNotNull> 
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<select id="validatePayees" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS272_PKG.validate_payee(#payeeNo#,#payeeName#) FROM DUAL
	</select>
	<select id="validatePayeeClass" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS272_PKG.validate_payee_class(#payeeClassNo#,#payeeClass#) FROM DUAL
	</select>
	<select id="validateDocNumber" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICLS272_PKG.validate_doc_number(#docNumber#) FROM DUAL
	</select>
	<select id="getPerVesselTotals" resultClass="java.util.HashMap">
		SELECT * FROM TABLE(GICLS262_PKG.get_totals(#vesselCd#, #searchBy#, #asOfDate#, #fromDate#, #toDate#))
	</select>

	<select id="getClmListPerThirdParty" resultMap="thirdPartyListResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICLS277_PKG.populate_gicls277_main(#appUser#, #payeeClassCd#, #payeeNo#, #fromDate#, #toDate#, #asOfDate#, #searchBy#, #tpType#))
		                 <isNotNull property="filter">
							WHERE 1 = 1
 								<isNotEmpty prepend="AND" property="recoveryDetails">
									UPPER(recovery_details) = UPPER(#recoveryDetails#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="claimNumber">
									UPPER(claim_number) LIKE UPPER(#claimNumber#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="policyNumber">
									UPPER(policy_number) LIKE UPPER(#policyNumber#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="assuredName">
									UPPER(assured_name) LIKE UPPER(#assuredName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossDate">
									loss_date = #lossDate#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="claimDate">
									claim_date = #claimDate#
								</isNotEmpty>
						 </isNotNull>       
			          	  <isNotNull property="sortColumn">
			                  <isEqual property="sortColumn" compareValue="recoveryDetails">
				              		ORDER BY recovery_details
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimNumber">
				              		ORDER BY claim_number
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNumber">
				              		ORDER BY policy_number
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="assuredName">
				              		ORDER BY assured_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="lossDate">
				              		ORDER BY loss_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimDate">
				              		ORDER BY claim_date
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>    
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GICLS277_PKG.populate_gicls277_main(#appUser#, #payeeClassCd#, #payeeNo#, #fromDate#, #toDate#, #asOfDate#, #searchBy#, #tpType#))
			              <isNotNull property="filter">
							WHERE 1 = 1
							<isNotEmpty prepend="AND" property="recoveryDetails">
									UPPER(recovery_details) = UPPER(#recoveryDetails#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="claimNumber">
									UPPER(claim_number) LIKE UPPER(#claimNumber#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="policyNumber">
									UPPER(policy_number) LIKE UPPER(#policyNumber#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="assuredName">
									UPPER(assured_name) LIKE UPPER(#assuredName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossDate">
									loss_date = #lossDate#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="claimDate">
									claim_date = #claimDate#
								</isNotEmpty>
						  </isNotNull>     
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="fetchValidThirdParty" resultMap="validThirdPartyListResultMap">
		SELECT * FROM TABLE(GICLS277_PKG.fetch_valid_third_party(#appUser#))
	</select>
	
	<select id="validateClassPerClass" resultMap="payeeClassCdAndClassResultMap">
		SELECT * FROM TABLE (giis_payee_class_pkg.get_payee_class_list)
			<isNotNull property="filter">
				WHERE (UPPER(payee_class_cd) LIKE UPPER(#filter#)
						OR	UPPER(class_desc) LIKE UPPER(#filter#)
					)
	         	 <isNotEmpty prepend="AND" property="payeeClassCdIn">
					UPPER(payee_class_cd) IN $payeeClassCdIn$
				 </isNotEmpty>
			</isNotNull> 
	</select>
	<select id="validatePayeePerClassCd" resultMap="payeeDetResultMap">
		SELECT * FROM TABLE (giis_payees_pkg.fetch_payee_name_lov(#payeeClassCd#))
	</select>
	
	<select id="validateEntries" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		select GICLS261_PKG.validate_entries(#lineCd#,#sublineCd#,#clmLineCd#,#clmSublineCd#,#issCd#,#polIssCd#,#clmYy#,#issueYy#,#clmSeqNo#,#polSeqNo#,#renewNo#) from dual
	</select>
	
	<resultMap id="GICLS278PolicyLOVMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="POLICY_NO"		property="policyNo"/>
		<result column="LINE_CD"		property="lineCd"/>
		<result column="SUBLINE_CD"		property="sublineCd"/>
		<result column="POL_ISS_CD"		property="polIssCd"/>
		<result column="ISS_CD"			property="issCd"/>
		<result column="ISSUE_YY"		property="issueYy"/>
		<result column="POL_SEQ_NO"		property="polSeqNo"/>
		<result column="RENEW_NO"		property="renewNo"/>
		<result column="ASSD_NO"		property="assdNo"/>
		<result column="ASSD_NAME"		property="assdName"/>
	</resultMap>
	
	<resultMap id="claimsWithEnrolleesMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="CLAIM_ID"		property="claimId"/>
		<result column="CLAIM_NO"		property="claimNo"/>
		<result column="LINE_CD"		property="lineCd"/>
		<result column="SUBLINE_CD"		property="sublineCd"/>
		<result column="ISS_CD"			property="issCd"/>
		<result column="CLM_YY"			property="clmYy"/>
		<result column="CLM_SEQ_NO"		property="clmSeqNo"/>
		<result column="ENROLLEE"		property="enrollee"/>
		<result column="LOSS_RES_AMT"	property="lossResAmt"/>
		<result column="LOSS_PD_AMT"	property="lossPdAmt"/>
		<result column="EXP_RES_AMT"	property="expResAmt"/>
		<result column="EXP_PD_AMT"		property="expPdAmt"/>
		<result column="CLM_STAT_CD"	property="clmStatCd"/>
		<result column="CLAIM_STATUS"	property="claimStatus"/>
		<result column="ENTRY_DATE"		property="entryDate"/>
		<result column="LOSS_DATE"		property="lossDate"/>
		<result column="FILE_DATE"		property="fileDate"/>
		<result column="CLM_RECOVERY"	property="clmRecovery"/>
		<result column="TOT_LOSS_RES"	property="totLossResAmt"/>
		<result column="TOT_LOSS_PD"	property="totLossPdAmt"/>
		<result column="TOT_EXP_RES"	property="totExpResAmt"/>
		<result column="TOT_EXP_PD"		property="totExpPdAmt"/>
	</resultMap>
  	
  	<resultMap id="GICLS278LineLOVMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="LINE_CD"		property="lineCd"/>
		<result column="LINE_NAME"		property="lineName"/>
	</resultMap>
	
	<resultMap id="GICLS278SublineLOVMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="SUBLINE_CD"		property="sublineCd"/>
		<result column="SUBLINE_NAME"	property="sublineName"/>
	</resultMap>
	
	<resultMap id="GICLS278IssourceLOVMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="ISS_CD"			property="issCd"/>
		<result column="ISS_NAME"		property="issName"/>
	</resultMap>
	
	<resultMap id="GICLS278IssueYyLOVMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="ISSUE_YY"		property="issueYy"/>
	</resultMap>
  	
  	<select id="getGICLS278LineLOV" resultMap="GICLS278LineLOVMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GICLS278_PKG.get_line_lov(#findText#, #moduleId#, #userId#))
                          	<isEqual property="sortColumn" compareValue="lineCd">
								ORDER BY line_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="lineName">
								ORDER BY line_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GICLS278_PKG.get_line_lov(#findText#, #moduleId#, #userId#))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGICLS278SublineLOV" resultMap="GICLS278SublineLOVMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GICLS278_PKG.get_subline_lov(#lineCd#, #findText#, #moduleId#))
                          	<isEqual property="sortColumn" compareValue="sublineCd">
								ORDER BY subline_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="sublineName">
								ORDER BY subline_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GICLS278_PKG.get_subline_lov(#lineCd#, #findText#, #moduleId#))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGICLS278IssourceLOV" resultMap="GICLS278IssourceLOVMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GICLS278_PKG.get_issource_lov(#lineCd#, #sublineCd#, #findText#, #moduleId#, #userId#))
                          	<isEqual property="sortColumn" compareValue="issCd">
								ORDER BY iss_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="issName">
								ORDER BY iss_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GICLS278_PKG.get_issource_lov(#lineCd#, #sublineCd#, #findText#, #moduleId#, #userId#))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGICLS278IssueYyLOV" resultMap="GICLS278IssueYyLOVMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GICLS278_PKG.get_issue_yy_lov(#lineCd#, #sublineCd#, #findText#))
                          	<isEqual property="sortColumn" compareValue="issueYy">
								ORDER BY issue_yy
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GICLS278_PKG.get_issue_yy_lov(#lineCd#, #sublineCd#, #findText#))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
  	
  	<select id="getGICLS278PolicyLOV" resultMap="GICLS278PolicyLOVMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GICLS278_PKG.get_gicls278_policy(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #polSeqNo#, #renewNo#, #moduleId#, #userId#))
                         WHERE (UPPER(policy_no) LIKE UPPER(NVL(#findText#, policy_no))
                            OR UPPER(assd_name) LIKE UPPER(NVL(#findText#, assd_name)))
                          	<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY policy_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="assdName">
								ORDER BY assd_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GICLS278_PKG.get_gicls278_policy(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #polSeqNo#, #renewNo#, #moduleId#, #userId#))
                 WHERE (UPPER(policy_no) LIKE UPPER(NVL(#findText#, policy_no))
                    OR UPPER(assd_name) LIKE UPPER(NVL(#findText#, assd_name)))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
  	
  	<select id="getClaimsWithEnrollees" resultMap="claimsWithEnrolleesMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GICLS278_PKG.get_claims_with_enrollees(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #polSeqNo#, #renewNo#,
                          													#dateType#, #fromDate#, #toDate#, #asOfDate#, #moduleId#, #userId#))
                         WHERE UPPER(claim_no) LIKE UPPER(NVL(#claimNo#, claim_no))
                           AND UPPER(enrollee) LIKE UPPER(NVL(#enrollee#, enrollee))
                           AND loss_res_amt = NVL(#lossResAmt#, loss_res_amt)
                           AND loss_pd_amt = NVL(#lossPdAmt#, loss_pd_amt)
                           AND exp_res_amt = NVL(#expResAmt#, exp_res_amt)
                           AND exp_pd_amt = NVL(#expPdAmt#, exp_pd_amt)
                          	<isEqual property="sortColumn" compareValue="claimNo">
								ORDER BY claim_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="enrollee">
								ORDER BY enrollee
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossResAmt">
								ORDER BY loss_res_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossPdAmt">
								ORDER BY loss_pd_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="expResAmt">
								ORDER BY exp_res_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="expPdAmt">
								ORDER BY exp_pd_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GICLS278_PKG.get_claims_with_enrollees(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #polSeqNo#, #renewNo#,
                          											#dateType#, #fromDate#, #toDate#, #asOfDate#, #moduleId#, #userId#))
				 WHERE UPPER(claim_no) LIKE UPPER(NVL(#claimNo#, claim_no))
                   AND UPPER(enrollee) LIKE UPPER(NVL(#enrollee#, enrollee))
                   AND loss_res_amt = NVL(#lossResAmt#, loss_res_amt)
                   AND loss_pd_amt = NVL(#lossPdAmt#, loss_pd_amt)
                   AND exp_res_amt = NVL(#expResAmt#, exp_res_amt)
                   AND exp_pd_amt = NVL(#expPdAmt#, exp_pd_amt)
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="validateGICLS278lineCd" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT GICLS278_PKG.validate_gicls278_line_cd(#value#)
		  FROM DUAL
	</select>
	
	<select id="validateGICLS278sublineCd" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT GICLS278_PKG.validate_gicls278_subline_cd(#value#)
		  FROM DUAL
	</select>
	
	<select id="validateGICLS278polIssCd" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT GICLS278_PKG.validate_gicls278_pol_iss_cd(#value#)
		  FROM DUAL
	</select>
	
	<select id="validateGICLS278issueYy" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT GICLS278_PKG.validate_gicls278_issue_yy(#value#)
		  FROM DUAL
	</select>
	
	<select id="validateGICLS278Entries" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT GICLS278_PKG.validate_entry(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #polSeqNo#, #renewNo#, #moduleId#, #userId#)
		  FROM DUAL
	</select>
	
	<parameterMap class="map" id="populateGicls256TotalsMap"> 
		<parameter property="lineCd"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="lossCatCd"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="fromDate"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="toDate"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="asOfDate"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="searchBy"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="userId"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="totLossRes"	jdbcType="VARCHAR"	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="totExpRes"	jdbcType="VARCHAR"		javaType="java.lang.String"  mode="OUT"/>
		<parameter property="totLossPd"	jdbcType="VARCHAR"		javaType="java.lang.String"  mode="OUT"/>
		<parameter property="totExpPd"	jdbcType="VARCHAR"		javaType="java.lang.String"  mode="OUT"/>
	</parameterMap>
	
	<procedure id="populateGicls256Totals" parameterMap="populateGicls256TotalsMap">
		BEGIN
 			GICLS256_PKG.populate_gicls256_totals(?,?,?,?,?,?,?,?,?,?,?);
 		END;
	</procedure>
	
	<parameterMap class="map" id="validateGicls277PayeeNameMap">
		<parameter property="payeeNo"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
		<parameter property="payeeName"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
		<parameter property="searchPayee"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="payeeClass"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
	</parameterMap>
	
	<procedure id="validateGicls277PayeeName" parameterMap="validateGicls277PayeeNameMap">
		BEGIN
 			GICLS277_PKG.validate_gicls277_name(?,?,?,?);
 		END;
	</procedure>
	
	<select id="showGicls276RecoveryDetails" resultMap="recoveryDetailsMap">
		SELECT *
		FROM (SELECT rownum rownum_,
		b.count_, a.*
		FROM (SELECT *
		FROM TABLE (gicls276_pkg.get_recovery_details(#claimId#,#recoveryId#))
		<isEqual property="sortColumn" compareValue="recoveryNo">
			ORDER BY recovery_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoverableAmt">
			ORDER BY recoverable_amt
		</isEqual>
		<isEqual property="sortColumn" compareValue="recoveredAmt">
			ORDER BY recovered_amt
		</isEqual>
		<isEqual property="sortColumn" compareValue="lawyer">
			ORDER BY lawyer
		</isEqual>
		<isEqual property="sortColumn" compareValue="plateNo">
			ORDER BY plate_no
		</isEqual>
		<isEqual property="sortColumn" compareValue="status">
			ORDER BY status
		</isEqual>
		<isEqual property="sortColumn" compareValue="tpItemDesc">
			ORDER BY tp_item_desc
		</isEqual>
		<isNotNull property="sortColumn">
			<isEqual property="ascDescFlg" compareValue="ASC">
				ASC
			</isEqual>
			<isEqual property="ascDescFlg" compareValue="DESC">
				DESC
			</isEqual>
		</isNotNull>
		) a,
		(SELECT count(*) count_
		FROM TABLE (gicls276_pkg.get_recovery_details(#claimId#,#recoveryId#))) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
</sqlMap>
