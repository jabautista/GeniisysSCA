<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="GICLDrvrOccptn">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<typeAlias alias="GICLDrvrOccptnClass" type="com.geniisys.gicl.entity.GICLDrvrOccptn"/>
	
	<resultMap class="GICLDrvrOccptnClass" id="GICLDrvrOccptnLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="drvrOccCd" column="drvr_Occ_Cd"/>
		<result property="occDesc" column="occ_desc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GICLDrvrOccptnResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="drvrOccCd" 		column="drvr_occ_cd"/>
		<result property="occDesc" 			column="occ_desc"/>		
		<result property="remarks" 			column="remarks"/>	
		<result property="userId" 			column="user_id"/>	
		<result property="lastUpdate" 		column="last_update"/>		
	</resultMap> 
	
	<select id="getDriverOccupationList" resultMap="GICLDrvrOccptnLOVMap">
		SELECT *
		  FROM (SELECT rownum rownum_,
					   b.count_,
					   a.*
				  FROM (SELECT *
						  FROM TABLE(gicl_drvr_occptn_pkg.drvr_occptn_list(#findText#))
						   <isNull property="sortColumn">
							ORDER BY occ_Desc ASC
						  </isNull>
						  <isNotNull property="sortColumn">		 	
							<isEqual property="sortColumn" compareValue="occDesc">
								ORDER BY occ_Desc
							</isEqual>		
							<isEqual property="sortColumn" compareValue="drvrOccCd">
								ORDER BY drvr_Occ_Cd
							</isEqual>					
							<isEqual property="ascDescFlg" compareValue="ASC">
								ASC
							</isEqual>
							<isEqual property="ascDescFlg" compareValue="DESC">
								DESC
							</isEqual>
						</isNotNull>) a,
						(SELECT COUNT(*) count_
						   FROM TABLE(gicl_drvr_occptn_pkg.drvr_occptn_list(#findText#))) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="showDrvrOccptnMaintenance" resultMap="GICLDrvrOccptnResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GICLS511_PKG.show_drvr_occptn)		
							<isNotNull property="filter">
								WHERE 1 = 1 
	 								<isNotEmpty prepend="AND" property="drvrOccCd">
										UPPER(drvr_occ_cd) LIKE UPPER(#drvrOccCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="occDesc">
										UPPER(occ_desc) LIKE UPPER(#occDesc#)
									</isNotEmpty>																								
							</isNotNull>					
							<isEqual property="sortColumn" compareValue="drvrOccCd">
								ORDER BY drvr_occ_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="occDesc">
								ORDER BY occ_desc
							</isEqual>							
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GICLS511_PKG.show_drvr_occptn)						 		
							<isNotNull property="filter">
								WHERE 1 = 1 
	 								<isNotEmpty prepend="AND" property="drvrOccCd">
										UPPER(drvr_occ_cd) LIKE UPPER(#drvrOccCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="occDesc">
										UPPER(occ_desc) LIKE UPPER(#occDesc#)
									</isNotEmpty>																								
							</isNotNull>							  
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="validateDrvrOccptnInput" resultClass="java.lang.String">
		SELECT GICLS511_PKG.validate_drvr_occptn_input(#inputString#)FROM dual							
	</select>
	
	<insert id="setDrvrOccptn" parameterClass="GICLDrvrOccptnClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;						
			GICLS511_PKG.set_drvr_occptn(
				#drvrOccCd#, #occDesc#,#remarks#);
		END;	
	</insert>	
	
	<delete id="deleteInDrvrOccptn" parameterClass="GICLDrvrOccptnClass">
		BEGIN
			GICLS511_PKG.delete_in_drvr_occptn(#drvrOccCd#);
		END;
	</delete>
</sqlMap>	