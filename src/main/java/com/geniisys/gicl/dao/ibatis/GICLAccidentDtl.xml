<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace = "GICLAccidentDtl">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<typeAlias alias="GICLAccidentDtlClass" type="com.geniisys.gicl.entity.GICLAccidentDtl"/>
	<typeAlias alias="GICLBeneficiaryClass" type="com.geniisys.gicl.entity.GICLBeneficiary"/>
	
	<resultMap class="GICLAccidentDtlClass" id="GICLAccidentDtlResultMap">
		<result property="claimId" 				column="claim_id"/>
		<result property="itemNo" 				column="item_no"/>
		<result property="itemTitle" 			column="item_title"/>
		<result property="groupedItemNo" 		column="grouped_item_no"/>
		<result property="groupedItemTitle" 	column="grouped_item_title"/>
		<result property="currencyCd" 			column="currency_cd"/>
		<result property="dspCurrency" 		    column="dsp_currency"/>
		<result property="currencyRate" 		column="currency_rate"/>
		<result property="positionCd" 			column="position_cd"/>
		<result property="dspPosition" 		    column="dsp_position"/>
		<result property="monthlySalary" 		column="monthly_salary"/>
		<result property="dspControlType" 		column="dsp_control_type"/>
		<result property="controlCd" 			column="control_cd"/>
		<result property="controlTypeCd" 		column="control_type_cd"/>
		<result property="itemDesc" 			column="item_desc"/>
		<result property="itemDesc2" 		    column="item_desc2"/>
		<result property="levelCd" 				column="level_cd"/>
        <result property="salaryGrade" 			column="salary_grade"/>
		<result property="dateOfBirth" 		 	column="date_of_birth"/>
		<result property="civilStatus" 		    column="civil_status"/>
		<result property="dspCivilStat" 		column="dsp_civil_stat"/>
		<result property="sex" 				    column="sex"/>
		<result property="dspSex" 				column="dsp_sex"/>
		<result property="age" 					column="age"/>
		<result property="amountCoverage" 		column="amount_coverage"/>
		<result property="giclItemPerilExist"	column="gicl_item_peril_exist" 	 	nullValue="N"/>
  		<result property="giclMortgageeExist"	column="gicl_mortgagee_exist" 	 	nullValue="N"/>
  		<result property="giclItemPerilMsg"		column="gicl_item_peril_msg" 	 	nullValue="2"/>
   </resultMap>
   
   <resultMap class="GICLAccidentDtlClass" id="GICLAccidentGridResultMap" extends="GICLAccidentDtlResultMap">
		<result column="rownum_" 				property="rowNum" />
		<result column="count_"					property="rowCount"/>
	</resultMap>
   
   <select id="getAccidentItemDtl" resultMap="GICLAccidentGridResultMap"> <!-- GICLAccidentDtlResultMap -->
   		SELECT * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicl_accident_dtl_pkg.get_accident_dtl_item(#claimId#))) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicl_accident_dtl_pkg.get_accident_dtl_item(#claimId#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
   </select>
   
   	<select id="getClmAccidentItemLOV" parameterClass="java.util.HashMap" resultMap="GIPIItem.itemNoLOVResultMap" >
		SELECT *
		  FROM (SELECT a.*, b.count_ ,rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE (gicl_accident_dtl_pkg.get_item_no_list_pa (#lineCd#, #sublineCd#, #polIssCd#,	<!-- kenneth SR 4855 100715 --> 
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																		  #lossDate#, #polEffDate#, #expiryDate#,#claimId#)) 	
		                 <isNotNull property="findText">
		                 WHERE (UPPER(item_no) LIKE UPPER(#findText#) OR UPPER(item_title) LIKE UPPER(#findText#))
		             	 </isNotNull>   
		             	 <isNull property="sortColumn"> <!-- added by steven to sort the record when the LOV is shown -->
		             	 	ORDER BY item_no
		             	 </isNull>         
                         <isEqual property="sortColumn" compareValue="itemNo">
             			 	ORDER BY item_no
			             </isEqual>
		                 <isEqual property="sortColumn" compareValue="itemTitle">
			             	ORDER BY item_title
			             </isEqual>		
			             <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	</isNotNull>	
                           ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (gicl_accident_dtl_pkg.get_item_no_list_pa (#lineCd#, #sublineCd#, #polIssCd#,	<!-- kenneth SR 4855 100715 --> 
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																		  #lossDate#, #polEffDate#, #expiryDate#,#claimId#))
						<isNotNull property="findText">
		                 WHERE (UPPER(item_no) LIKE UPPER(#findText#) OR UPPER(item_title) LIKE UPPER(#findText#))
		             	 </isNotNull> 												  
						) b)
		WHERE rownum_ BETWEEN #from# AND #to#		  
	</select>
	
	<resultMap class="GICLAccidentDtlClass"		id="grpItemNoLOVResultMap">
		<result property="groupedItemNo"		column="GROUPED_ITEM_NO"/>
		<result property="groupedItemTitle"		column="GROUPED_ITEM_TITLE"/>
		<result property="rowNum" 				column="ROWNUM_"/>			
		<result property="rowCount"				column="COUNT_"/>
	</resultMap>
	
   	<select id="getClmAccidentGrpItemLOV" parameterClass="java.util.HashMap" resultMap="grpItemNoLOVResultMap" >
		SELECT *
		  FROM (SELECT a.*, b.count_ ,rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE (gipi_item_pkg.get_grpitem_no_list_PA (#lineCd#, #sublineCd#, #polIssCd#, 
																		    #issueYy#, #polSeqNo#, #renewNo#, 
																		    #lossDate#, #polEffDate#, #expiryDate#,#claimId#,#itemNo#)) 	
		                 <isNotNull property="findText">
		                 WHERE (UPPER(grouped_item_no) LIKE UPPER(#findText#) OR UPPER(grouped_item_title) LIKE UPPER(#findText#))
		             	 </isNotNull>   
		                 <isEqual property="sortColumn" compareValue="groupedItemNo">
           						ORDER BY grouped_item_no
			             </isEqual>
			                 <isEqual property="sortColumn" compareValue="groupedItemTitle">
			              		ORDER BY grouped_item_title
			             </isEqual>		
			             <isNotNull property="sortColumn">
		            		<isEqual property="ascDescFlg" compareValue="ASC">
		            			ASC
		            		</isEqual>
		            		<isEqual property="ascDescFlg" compareValue="DESC">
		            			DESC
		            		</isEqual>
			            </isNotNull>) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (gipi_item_pkg.get_grpitem_no_list_PA(#lineCd#, #sublineCd#, #polIssCd#, 
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																	  #lossDate#, #polEffDate#, #expiryDate#,#claimId#,#itemNo#))
						<isNotNull property="findText">
		                 WHERE (UPPER(grouped_item_no) LIKE UPPER(#findText#) OR UPPER(grouped_item_title) LIKE UPPER(#findText#))
		             	 </isNotNull>
						) b)
		WHERE rownum_ BETWEEN #from# AND #to#		  
	</select>
	
	<parameterMap class="map" id="validateClmItemNoAccidentMap">
		<parameter property="userId"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="lineCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="sublineCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polIssCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="issueYy"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polSeqNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="renewNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polEffDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="expiryDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="lossDate"		javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="itemNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="groupedItemNo"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="claimId"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="issCd"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="from"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="to"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="row"			javaType="java.sql.ResultSet" 	jdbcType="ORACLECURSOR"  	mode="OUT" 		resultMap="GICLAccidentDtlResultMap"/>  
		<parameter property="c017b"			javaType="java.sql.ResultSet" 	jdbcType="ORACLECURSOR"  	mode="OUT" 		resultMap="GICLBeneficiaryResultMap"/>     
		<parameter property="itemExist"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="overrideFl"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="tlossFl"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="itemExist2"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="exist"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="valid"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="benCnt"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
	</parameterMap>
	
	<resultMap class="GICLBeneficiaryClass" id="GICLBeneficiaryResultMap">
		<result property="claimId" 				column="claim_id"/>
		<result property="itemNo" 				column="item_no"/>
		<result property="groupedItemNo" 		column="grouped_item_no"/>
		<result property="beneficiaryNo" 		column="beneficiary_no"/>  
		<result property="beneficiaryName" 		column="beneficiary_name"/>
		<result property="beneficiaryAddr" 		column="beneficiary_addr"/>
		<result property="relation" 			column="relation"/>
		<result property="civilStatus" 		    column="civil_status"/>
		<result property="dateOfBirth" 		    column="date_of_birth"/>
		<result property="age" 		            column="age"/>
		<result property="sex" 			        column="sex"/>
		<result property="positionCd" 		    column="position_cd"/>
		<result property="position" 			column="position"/>
		<result property="dspSex" 		        column="dsp_sex"/>
		<result property="dspCivilStatus" 		column="dsp_civil_stat"/>
		<result property="dspBenPosition" 		column="dsp_ben_position"/>
   </resultMap>
	
	<procedure id="validateClmItemNoAccident" parameterMap="validateClmItemNoAccidentMap">
		BEGIN
  			giis_users_pkg.app_user := ?;
  			gicl_accident_dtl_pkg.validate_gicl_accident_item_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
	</procedure>
	
	<procedure id="setGiclAccidentDtl" parameterClass="GICLAccidentDtlClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_accident_dtl_pkg.set_gicl_accident_dtl(
					#claimId#, #itemNo#, #itemTitle#, #currencyCd#, #currencyRate#,#lossDate#, 
					#dateOfBirth#, #age#, #civilStatus#, #positionCd#, #monthlySalary#, #salaryGrade#,     
					#sex#, #groupedItemNo#, #groupedItemTitle#, #amountCoverage#, #lineCd#, #sublineCd#,
					#controlCd#, #controlTypeCd# );
		END;
	</procedure>
	
	<delete id="delGiclAccidentDtl" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_accident_dtl_pkg.del_gicl_accident_dtl(#claimId#, #itemNo#, #groupedItemNo#);
		END;
	</delete>

   <resultMap class="GICLBeneficiaryClass"		id="beneficiaryNoLOVResultMap" extends="GICLBeneficiaryResultMap"> 
		<result property="rowNum" 				column="ROWNUM_"/>			
		<result property="rowCount"				column="COUNT_"/>
	</resultMap>
  
	<select id="getClmBenNoLOV" parameterClass="java.util.HashMap" resultMap="beneficiaryNoLOVResultMap">
		SELECT *
		  FROM (SELECT a.*, b.count_ ,rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE (gicl_accident_dtl_pkg.get_claim_ben_no(#claimId#, #lineCd#, #sublineCd#, #polIssCd#, 
																		     #issueYy#, #polSeqNo#, #renewNo#, #lossDate#, 
																		     #itemNo#, #groupedItemNo#, #findText#)) 
						 <isNotNull property="notIn">
					  		WHERE beneficiary_no NOT IN ($notIn$)
					  	 </isNotNull>	
                            <isEqual property="sortColumn" compareValue="beneficiaryNo">
              				ORDER BY beneficiary_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="beneficiaryName">
			              		ORDER BY beneficiary_name
			              </isEqual>		
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>	
		                             ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (gicl_accident_dtl_pkg.get_claim_ben_no(#claimId#, #lineCd#, #sublineCd#, #polIssCd#, 
																		     #issueYy#, #polSeqNo#, #renewNo#, #lossDate#, 
																		     #itemNo#, #groupedItemNo#, #findText#))
						<isNotNull property="notIn">
						 WHERE beneficiary_no NOT IN ($notIn$)
					    </isNotNull>
						) b)
		WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getItemBeneficiaryDtl" parameterClass="java.util.HashMap" resultMap="beneficiaryNoLOVResultMap">
   		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicl_accident_dtl_pkg.get_beneficiary_info(#claimId#, #itemNo#, #groupedItemNo#))) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicl_accident_dtl_pkg.get_beneficiary_info(#claimId#, #itemNo#, #groupedItemNo#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="setGiclBeneficiaryDtl" parameterClass="GICLBeneficiaryClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_accident_dtl_pkg.set_gicl_beneficiary_dtl(
					#claimId#, #itemNo#, #groupedItemNo#, #beneficiaryNo#, #beneficiaryName#,#beneficiaryAddr#, 
					#relation#, #dateOfBirth#, #age#, #civilStatus#, #positionCd#, #sex#);
		END;
	</procedure>
	
	<delete id="delGiclBeneficiaryDtl" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_accident_dtl_pkg.del_gicl_beneficiary_dtl(#claimId#, #itemNo#, #groupedItemNo#, #beneficiaryNo#);
		END;
	</delete>
	
	<delete id="delGiclItemBeneficiary" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_accident_dtl_pkg.del_gicl_item_beneficiary(#claimId#, #itemNo#, #groupedItemNo#);
		END;
	</delete>
	
	<resultMap class="java.util.HashMap" id="GICLAvailmentsLOVResultMap">
		<result property="claimId" 				column="claim_id"/>
		<result property="itemNo" 				column="item_no"/>
		<result property="groupedItemNo" 		column="grouped_item_no"/>
        <result property="perilCd" 				column="peril_cd"/>  
		<result property="aggregateSw"  		column="aggregate_sw"/>
		<result property="baseAmt" 				column="base_amt"/>
		<result property="noOfDays"	 			column="no_of_days"/>
		<result property="annTsiAmt"  		    column="ann_tsi_amt"/>
		<result property="dspAllow" 		    column="dsp_allow"/>
		<result property="dspPerilName"         column="dsp_peril_name"/>
		<result property="rowNum"				column="rownum_"/>
		<result property="rowCount"				column="count_"	/>
	</resultMap>	
	
	<select id="getClmAvailPerilLOV" parameterClass="java.util.HashMap" resultMap="GICLAvailmentsLOVResultMap">
		SELECT *
		  FROM (SELECT a.*, b.count_ ,rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE (gicl_accident_dtl_pkg.get_avail_perils(#claimId#, #itemNo#, #groupedItemNo#)) 
						 <isNotNull property="findText">
		                 WHERE (UPPER(peril_cd) LIKE UPPER(#findText#) OR UPPER(dsp_peril_name) LIKE UPPER(#findText#))
		             	 </isNotNull>			
									<isEqual property="sortColumn" compareValue="perilCd">
			              				ORDER BY peril_cd
						              </isEqual>
					                  <isEqual property="sortColumn" compareValue="perilName">
						              		ORDER BY peril_name
						              </isEqual>		
						              <isNotNull property="sortColumn">
						              		<isEqual property="ascDescFlg" compareValue="ASC">
						              			ASC
						              		</isEqual>
						              		<isEqual property="ascDescFlg" compareValue="DESC">
						              			DESC
						              		</isEqual>
						              </isNotNull>	
		                             ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (gicl_accident_dtl_pkg.get_avail_perils(#claimId#, #itemNo#, #groupedItemNo#))
		                  <isNotNull property="findText">
		                     WHERE (UPPER(peril_cd) LIKE UPPER(#findText#) OR UPPER(dsp_peril_name) LIKE UPPER(#findText#))
		             	 </isNotNull>
		             	 ) b)
		WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap class="java.util.HashMap" id="GICLAvailmentsListResultMap">
		<result property="dspClaimNo" 			column="dsp_claim_no"/>
		<result property="dspLossDate" 			column="dsp_loss_date"/>
		<result property="dspClaimStat" 		column="dsp_claim_stat"/>
        <result property="dspNoOfDays" 			column="dsp_no_of_days"/>  
		<result property="lossReserve"  		column="loss_reserve"/>
		<result property="paiAmt" 				column="paid_amt"/>
		<result property="rowNum"				column="rownum_"/>
		<result property="rowCount"				column="count_"	/>
	</resultMap>
	
	<select id="getItemClaimAvailments" parameterClass="java.util.HashMap" resultMap="GICLAvailmentsListResultMap">
   		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicl_accident_dtl_pkg.get_avail_claim_list(#claimId#, #itemNo#, #groupedItemNo#, #noOfDays#))) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicl_accident_dtl_pkg.get_avail_claim_list(#claimId#, #itemNo#, #groupedItemNo#, #noOfDays#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGroupedItemTitle" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT grouped_item_title
	      FROM gicl_accident_dtl
	     WHERE claim_id = #claimId#
	       AND item_no  = #itemNo#
	       AND grouped_item_no = #groupedItemNo#
	</select>
	
	<resultMap class="java.util.HashMap" id="GICLAccidentGicls260ResultMap">
		<result property="claimId" 				column="claim_id"/>
		<result property="itemNo" 				column="item_no"/>
		<result property="itemTitle" 			column="item_title"/>
		<result property="groupedItemNo" 		column="grouped_item_no"/>
		<result property="groupedItemTitle" 	column="grouped_item_title"/>
		<result property="currencyCd" 			column="currency_cd"/>
		<result property="dspCurrency" 		    column="dsp_currency"/>
		<result property="currencyRate" 		column="currency_rate"/>
		<result property="positionCd" 			column="position_cd"/>
		<result property="dspPosition" 		    column="dsp_position"/>
		<result property="monthlySalary" 		column="monthly_salary"/>
		<result property="dspControlType" 		column="dsp_control_type"/>
		<result property="controlCd" 			column="control_cd"/>
		<result property="controlTypeCd" 		column="control_type_cd"/>
		<result property="itemDesc" 			column="item_desc"/>
		<result property="itemDesc2" 		    column="item_desc2"/>
		<result property="levelCd" 				column="level_cd"/>
        <result property="salaryGrade" 			column="salary_grade"/>
		<result property="dateOfBirth" 		 	column="date_of_birth"/>
		<result property="civilStatus" 		    column="civil_status"/>
		<result property="dspCivilStat" 		column="dsp_civil_stat"/>
		<result property="sex" 				    column="sex"/>
		<result property="dspSex" 				column="dsp_sex"/>
		<result property="age" 					column="age"/>
		<result property="amountCoverage" 		column="amount_coverage"/>
		<result property="lossDate" 			column="loss_date"/>
		<result property="giclItemPerilExist"	column="gicl_item_peril_exist" 	 	nullValue="N"/>
  		<result property="giclMortgageeExist"	column="gicl_mortgagee_exist" 	 	nullValue="N"/>
  		<result property="giclItemPerilMsg"		column="gicl_item_peril_msg" 	 	nullValue="2"/>
  		<result property="beneficiaryNo"	    column="beneficiary_no"/>
		<result property="beneficiaryName" 		column="beneficiary_name"/>
		<result property="beneficiaryAddr"	    column="beneficiary_addr"/>
		<result property="benPositionCd"		column="ben_position_cd"/>
		<result property="benSex"				column="ben_sex"/>
		<result property="benRelation" 		    column="ben_relation"/>
		<result property="benDateOfBirth" 		column="ben_date_of_birth"/>
		<result property="benAge" 			    column="ben_age"/>
		<result property="benPosition" 			column="ben_position"/>
		<result property="benCivilStatus"		column="ben_civil_status"/>
  		<result property="rowNum"				column="rownum_"/>
		<result property="rowCount"				column="count_"	/>
   </resultMap>
   
   <select id="getAccidentItemDtlGicls260" resultMap="GICLAccidentGicls260ResultMap">
   		SELECT * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicl_accident_dtl_pkg.get_accident_dtl_gicls260(#claimId#))
		          			<isNotNull property="filter">
						      WHERE 1=1
						      	<isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspCurrencyDesc">
              					  UPPER(dsp_currency_desc) LIKE UPPER(#dspCurrencyDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="currencyRate">
              					  currency_rate LIKE #currencyRate#
              			        </isNotEmpty>
                   		  	</isNotNull>
		          			<isEqual property="sortColumn" compareValue="itemNo">
			            		ORDER BY item_no
			          		</isEqual>  
			          		<isEqual property="sortColumn" compareValue="itemTitle">
			            		ORDER BY item_title
			          		</isEqual>  
			          		<isEqual property="sortColumn" compareValue="dspCurrencyDesc">
			            		ORDER BY dsp_currency_desc
			          		</isEqual>
			          		<isEqual property="sortColumn" compareValue="currencyRate">
			            		ORDER BY currency_rate
			          		</isEqual>       
			           		<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull> ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicl_accident_dtl_pkg.get_accident_dtl_gicls260(#claimId#))
		                  	<isNotNull property="filter">
						      WHERE 1=1
						      	<isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspCurrencyDesc">
              					  UPPER(dsp_currency_desc) LIKE UPPER(#dspCurrencyDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="currencyRate">
              					  currency_rate LIKE #currencyRate#
              			        </isNotEmpty>
                   		  	</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
   </select>
   
   <select id="getAcBaseAmount" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT NVL(base_amt, 0) amt
		 FROM GIPI_ITMPERIL
		WHERE policy_id = #policyId#
	</select>
</sqlMap>