<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="GICLFireDtl">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<typeAlias alias="GICLFireDtlClass" type="com.geniisys.gicl.entity.GICLFireDtl"/>
	
	<resultMap class="GICLFireDtlClass" id="GICLFireDtlResultMap">
		<result column="claim_id" 				property="claimId" />
  		<result column="item_no" 				property="itemNo" />
  		<result column="currency_cd" 			property="currencyCd" />
  		<result column="user_id" 				property="userId" />
  		<result column="last_update" 			property="lastUpdate" />
  		<result column="item_title" 			property="itemTitle" />
  		<result column="district_no" 			property="districtNo" />
  		<result column="eq_zone" 				property="eqZone" />
  		<result column="tarf_cd" 				property="tarfCd" />
  		<result column="block_no" 				property="blockNo" />
  		<result column="block_id" 				property="blockId" />
  		<result column="fr_item_type" 			property="frItemType" />
  		<result column="loc_risk1" 				property="locRisk1" />
  		<result column="loc_risk2" 				property="locRisk2" />
  		<result column="loc_risk3" 				property="locRisk3" />
  		<result column="tariff_zone" 			property="tariffZone" />
  		<result column="typhoon_zone" 			property="typhoonZone" />
  		<result column="construction_cd" 		property="constructionCd" />
  		<result column="construction_remarks" 	property="constructionRemarks" />
  		<result column="front" 					property="front" />
  		<result column="right" 					property="right" />
  		<result column="left" 					property="left" />
  		<result column="rear" 					property="rear" />
  		<result column="occupancy_cd" 			property="occupancyCd" />
  		<result column="occupancy_remarks" 		property="occupancyRemarks" />
  		<result column="flood_zone" 			property="floodZone" />
  		<result column="assignee" 				property="assignee" />
  		<result column="cpi_rec_no" 			property="cpiRecNo" />
  		<result column="cpi_branch_cd" 			property="cpiBranchCd" />
  		<result column="loss_date" 				property="lossDate" />
  		<result column="currency_rate" 			property="currencyRate" />
  		<result column="risk_cd" 				property="riskCd" />
  		<result column="risk_desc" 				property="riskDesc"/>
  		<result column="item_desc" 				property="itemDesc"/>
  		<result column="item_desc2" 			property="itemDesc2"/>
  		<result column="dsp_item_type" 			property="dspItemType"/>
  		<result column="dsp_eq_zone" 			property="dspEqZone"/>
  		<result column="dsp_tariff_zone" 		property="dspTariffZone"/>
  		<result column="dsp_typhoon" 			property="dspTyphoon"/>
  		<result column="dsp_construction" 		property="dspConstruction"/>
  		<result column="dsp_occupancy" 			property="dspOccupancy"/>
  		<result column="dsp_flood_zone" 		property="dspFloodZone"/>
  		<result column="dsp_currency_desc" 		property="dspCurrencyDesc"/>
  		<result column="gicl_item_peril_exist" 	property="giclItemPerilExist" 	nullValue="N"/>
  		<result column="gicl_mortgagee_exist" 	property="giclMortgageeExist" 	nullValue="N"/>
  		<result column="gicl_item_peril_msg" 	property="giclItemPerilMsg" 	nullValue="2"/>
  		<result column="msg_alert" 				property="msgAlert"/>																			
	</resultMap>
	
	<resultMap class="GICLFireDtlClass" id="GICLFireDtlGridResultMap" extends="GICLFireDtlResultMap">
		<result column="loss_date_char" 		property="lossDateChar" />
		<result column="rownum_" 				property="rowNum" />
		<result column="count_"					property="rowCount"/>
	</resultMap>
	
 	<parameterMap class="map" id="validateClmItemNoFireMap">
		<parameter property="userId"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
  		<parameter property="lineCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="sublineCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polIssCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="issueYy"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polSeqNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="renewNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polEffDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="expiryDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="lossDate"		javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="inceptDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="itemNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="claimId"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="from"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="to"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="row"			javaType="java.sql.ResultSet" 	jdbcType="ORACLECURSOR" 	mode="OUT" 		resultMap="GICLFireDtlResultMap"/>
		<parameter property="itemExist"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="overrideFl"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="tlossFl"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="itemExist2"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
  	</parameterMap>
	
	<select id="getGiclFireDtlGrid" resultMap="GICLFireDtlGridResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_FIRE_DTL_PKG.get_gicl_fire_dtl(#claimId#))   
		          			<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspCurrencyDesc">
              					  UPPER(dsp_currency_desc) LIKE UPPER(#dspCurrencyDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="currencyRate">
              					  currency_rate LIKE #currencyRate#
              			        </isNotEmpty>
                   		  	</isNotNull>
		          			<isEqual property="sortColumn" compareValue="itemNo">
			            		ORDER BY item_no
			          		</isEqual>  
			          		<isEqual property="sortColumn" compareValue="itemTitle">
			            		ORDER BY item_title
			          		</isEqual>  
			          		<isEqual property="sortColumn" compareValue="itemDesc itemDesc2">
			            		ORDER BY item_desc
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>, item_desc2
			          		</isEqual> 
			          		<isEqual property="sortColumn" compareValue="dspCurrencyDesc">
			            		ORDER BY dsp_currency_desc
			          		</isEqual>
			          		<isEqual property="sortColumn" compareValue="currencyRate">
			            		ORDER BY currency_rate
			          		</isEqual>       
			           		<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_FIRE_DTL_PKG.get_gicl_fire_dtl(#claimId#))
		                  	<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspCurrencyDesc">
              					  UPPER(dsp_currency_desc) LIKE UPPER(#dspCurrencyDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="currencyRate">
              					  currency_rate LIKE #currencyRate#
              			        </isNotEmpty>
                   		  	</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
		
	<select id="getGiclFireDtl" parameterClass="java.util.HashMap" resultMap="GICLFireDtlResultMap">
		SELECT * FROM TABLE(GICL_FIRE_DTL_PKG.get_gicl_fire_dtl(
				#lineCd#, #sublineCd#, #polIssCd#, 
				#issueYy#, #polSeqNo#, #renewNo#, 
				#polEffDate#, #expiryDate#, #lossDate#, 
				#inceptDate#, #itemNo#))
	</select>	
		
  	<procedure id="validateClmItemNoFire" parameterMap="validateClmItemNoFireMap">
  		BEGIN
  			giis_users_pkg.app_user := ?;
  			GICL_FIRE_DTL_PKG.validate_gicl_fire_dtl(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>	
  	
 	<select id="getClmFireItemLOV" parameterClass="java.util.HashMap" resultMap="GIPIItem.itemNoLOVResultMap">
		SELECT * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT item_no, item_title 
		                  FROM TABLE (gicl_fire_dtl_pkg.get_item_no_list(#lineCd#, #sublineCd#, #polIssCd#,	<!-- kenneth SR 4855 100715 --> 
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																		  #lossDate#, #polEffDate#, #expiryDate#)) 
		                 WHERE item_no NOT IN (SELECT item.item_no
		  										 FROM (SELECT rownum rownum_2,  
		               										  a2.* 
		         										 FROM (SELECT * FROM TABLE(GICL_FIRE_DTL_PKG.get_gicl_fire_dtl(#claimId#))   
		          												<isEqual property="itemSortColumn" compareValue="itemNo">
			            											ORDER BY item_no
			          											</isEqual>  
			          											<isEqual property="itemSortColumn" compareValue="itemTitle">
			            											ORDER BY item_title
			          											</isEqual>  
			          											<isEqual property="itemSortColumn" compareValue="itemDesc">
			            											ORDER BY item_desc
			          											</isEqual>
			          											<isEqual property="itemSortColumn" compareValue="itemDesc2">
			            											ORDER BY item_desc2
			          											</isEqual>
			          											<isEqual property="itemSortColumn" compareValue="dspCurrencyDesc">
			            											ORDER BY dsp_currency_desc
			          											</isEqual>
			          											<isEqual property="itemSortColumn" compareValue="currencyRate">
			            											ORDER BY currency_rate
			          											</isEqual>       
			           											<isNotNull property="itemSortColumn">
			              											<isEqual property="itemAscDescFlg" compareValue="ASC">
			              												ASC
			              											</isEqual>
			              											<isEqual property="itemAscDescFlg" compareValue="DESC">
			              												DESC
			              											</isEqual>
			              										</isNotNull>
		                  									) a2
		                  							  ) item 
		 									    WHERE rownum_2 NOT BETWEEN #itemFrom# AND #itemTo#) 
		 			 <isNotNull property="notIn">
		                   AND item_no NOT IN ($notIn$)					               
		           	 </isNotNull>	
		           	 <isNotNull property="findText">
		                  AND (UPPER(item_no) LIKE UPPER(#findText#) OR UPPER(item_title) LIKE UPPER(#findText#))
		             </isNotNull>
		                  <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="itemTitle">
			              		ORDER BY item_title
			              </isEqual>		
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_fire_dtl_pkg.get_item_no_list(#lineCd#, #sublineCd#, #polIssCd#,	<!-- kenneth SR 4855 100715 -->
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																		  #lossDate#, #polEffDate#, #expiryDate#)) 
		 				  WHERE item_no NOT IN (SELECT item.item_no
		  										 FROM (SELECT rownum rownum_2,  
		               										  a2.* 
		         										 FROM (SELECT * FROM TABLE(GICL_FIRE_DTL_PKG.get_gicl_fire_dtl(#claimId#))   
		          												<isEqual property="itemSortColumn" compareValue="itemNo">
			            											ORDER BY item_no
			          											</isEqual>  
			          											<isEqual property="itemSortColumn" compareValue="itemTitle">
			            											ORDER BY item_title
			          											</isEqual>  
			          											<isEqual property="itemSortColumn" compareValue="itemDesc">
			            											ORDER BY item_desc
			          											</isEqual>
			          											<isEqual property="itemSortColumn" compareValue="itemDesc2">
			            											ORDER BY item_desc2
			          											</isEqual>
			          											<isEqual property="itemSortColumn" compareValue="dspCurrencyDesc">
			            											ORDER BY dsp_currency_desc
			          											</isEqual>
			          											<isEqual property="itemSortColumn" compareValue="currencyRate">
			            											ORDER BY currency_rate
			          											</isEqual>       
			           											<isNotNull property="itemSortColumn">
			              											<isEqual property="itemAscDescFlg" compareValue="ASC">
			              												ASC
			              											</isEqual>
			              											<isEqual property="itemAscDescFlg" compareValue="DESC">
			              												DESC
			              											</isEqual>
			              										</isNotNull>
		                  									) a2
		                  							  ) item 
		 									    WHERE rownum_2 NOT BETWEEN #itemFrom# AND #itemTo#) 
		 			 <isNotNull property="notIn">
		                   AND item_no NOT IN ($notIn$)					               
		           	 </isNotNull>
		           	 <isNotNull property="findText">
		                  AND (UPPER(item_no) LIKE UPPER(#findText#) OR UPPER(item_title) LIKE UPPER(#findText#))
		             </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#		
	</select>
	
	<delete id="delGiclFireDtl" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_FIRE_DTL_PKG.del_gicl_fire_dtl(#claimId#, #itemNo#);
		END;
	</delete>
	
	<insert id="setGiclFireDtl" parameterClass="GICLFireDtlClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_FIRE_DTL_PKG.set_gicl_fire_dtl(
					#claimId#, #itemNo#, #currencyCd#, #userId#, 
                    #lastUpdate#, #itemTitle#, #districtNo#, #eqZone#, 
                    #tarfCd#, #blockNo#, #blockId#, #frItemType#, 
                    #locRisk1#, #locRisk2#, #locRisk3#, #tariffZone#, 
                    #typhoonZone#, #constructionCd#, #constructionRemarks#, #front#, 
                    #right#, #left#, #rear#, #occupancyCd#, 
                    #occupancyRemarks#, #floodZone#, #assignee#, #cpiRecNo#, 
                    #cpiBranchCd#, #lossDate#, #currencyRate#, #riskCd#);
		END;
	</insert>
	
	<select id="getGiclFireDtlExist" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT GICL_FIRE_DTL_PKG.get_gicl_fire_dtl_exist(#claimId#) FROM dual
	</select>
	
</sqlMap>