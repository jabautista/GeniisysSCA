<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GICLEvalLoa">

	<resultMap class="java.util.HashMap" id="mcEvalLoaMap">
		<result property="payeeCd" column="payee_cd"/>
		<result property="payeeTypeCd" column="payee_type_cd"/>
		<result property="evalId" column="eval_id"/>
		<result property="dspClassDesc" column="dsp_class_desc"/>
		<result property="payeeName" column="payee_name"/>
		<result property="loaNo" column="loa_no"/>
		<result property="baseAmt" column="base_amt"/>
		<result property="clmLossId" column="clm_loss_id"/>
		<result property="remarks" column="remarks"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="mcEvalLoaDtlMap">
		<result property="lossExpCd" column="loss_exp_cd"/>
		<result property="partAmt" column="part_amt"/>
		<result property="lossExpDesc" column="loss_exp_desc"/>
		<result property="payeeCd" column="payee_cd"/>
		<result property="payeeTypeCd" column="payee_type_cd"/>
		<result property="evalId" column="eval_id"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<select id="getMcEvalLoaTGLst" resultMap="mcEvalLoaMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_eval_loa_pkg.get_mc_eval_loa(#evalId#,#dspClassDesc#,#payeeName#,#baseAmt#,#loaNo#))
		                  <isEqual property="sortColumn" compareValue="dspClassDesc">
			              		ORDER BY dsp_class_desc
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="payeeName">
			              		ORDER BY payee_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="baseAmt">
			              		ORDER BY base_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="loaNo">
			              		ORDER BY loa_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (gicl_eval_loa_pkg.get_mc_eval_loa(#evalId#,#dspClassDesc#,#payeeName#,#baseAmt#,#loaNo#))
		                  ) b)  
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getMcEvalLoaDtlTGList" resultMap="mcEvalLoaDtlMap" parameterClass="map"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_eval_loa_pkg.get_mc_eval_loa_dtl(#evalId#,#payeeTypeCd#,#payeeCd#))
		                  <isEqual property="sortColumn" compareValue="lossExpDesc">
			              		ORDER BY loss_exp_desc
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="partAmt">
			              		ORDER BY part_amt
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (gicl_eval_loa_pkg.get_mc_eval_loa_dtl(#evalId#,#payeeTypeCd#,#payeeCd#))
		                  ) b)  
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getTotalPartAmt" parameterClass="map" resultClass="java.math.BigDecimal">
		SELECT gicl_eval_loa_pkg.get_total_part_amt(#evalId#,#payeeTypeCd#,#payeeCd#) from dual
	</select>
	
	<procedure id="generateLoa" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_eval_loa_pkg.generate_loa(#claimId#,#itemNo#,#evalId#,#tpSw#,#sublineCd#,#issCd#,#clmYy#,#payeeTypeCd#,#payeeCd#,#remarks#); 
		END;
	</procedure>
	
	<select id="checkIfLoaGenerated" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GICL_EVAL_LOA_PKG.check_if_loa_generated(#claimId#, #clmLossId#, #tpSw#) FROM dual
	</select>
	
	<procedure id="generateLoaFromLossExp" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_EVAL_LOA_PKG.generate_loa_from_loss_exp
				(#claimId#, #sublineCd#, #issCd#, #clmYy#,   #itemNo#,   #payeeClassCd#,
				 #payeeCd#, #clmLossId#, #tpSw#,  #remarks#, #cancelSw#, #evalId#);
		END;
	</procedure>
</sqlMap>