<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GICLCargoDtl">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	<typeAlias alias="GICLCargoDtlClass" type="com.geniisys.gicl.entity.GICLCargoDtl"/>
	
	<resultMap class="GICLCargoDtlClass" id="GICLCargoDtlResultMap">
		<result property="claimId" column="claim_id"/>
		<result property="itemNo" column="item_no"/>
		<result property="itemTitle" column="item_title"/>
		<result property="currencyCd" column="currency_cd"/>
		<result property="lossDate" column="loss_date"/>
		<result property="currencyRate" column="currency_rate"/>
		<result property="lastUpdate" column="last_update"/>
		<result column="item_desc" 				property="itemDesc"/>
  		<result column="item_desc2" 			property="itemDesc2"/>
  		<result property="dspCurrencyDesc" column="dsp_Currency_Desc"/>
  		<result column="gicl_item_peril_exist" 	property="giclItemPerilExist" 	nullValue="N"/>
  		<result column="gicl_mortgagee_exist" 	property="giclMortgageeExist" 	nullValue="N"/>
  		<result column="gicl_item_peril_msg" 	property="giclItemPerilMsg" 	nullValue="2"/>
  		<result column="cpi_rec_no" 			property="cpiRecNo" />
  		<result column="cpi_branch_cd" 			property="cpiBranchCd" />
  		<result property="geogCd" column="geog_cd"/>
  		<result property="cargoClassCd" column="cargo_class_cd"/>
  		<result property="voyageNo" column="voyage_no"/>
  		<result property="blAwb" column="bl_awb"/>
  		<result property="origin" column="origin"/>
  		<result property="destn" column="destn"/>
  		<result property="etd" column="etd"/>
  		<result property="eta" column="eta"/>
  		<result property="cargoType" column="cargo_type"/>
  		<result property="deductText" column="deduct_text"/>
  		<result property="packMethod" column="pack_method"/>
  		<result property="transhipOrigin" column="tranship_origin"/>
  		<result property="transhipDestination" column="tranship_destination"/>
  		<result property="vesselCd" column="vessel_cd"/>
  		<result property="vesselName" column="vessel_name"/>
  		<result property="geogDesc" column="geog_desc"/>
  		<result property="cargoClassDesc" column="cargo_class_desc"/>
  		<result property="cargoTypeDesc" column="cargo_type_desc"/>
  		<result property="lcNo" column="lc_no"/>
	</resultMap>
	<resultMap class="GICLCargoDtlClass" id="GICLCargoGridResultMap" extends="GICLCargoDtlResultMap">
		<result column="rownum_" 				property="rowNum" />
		<result column="count_"					property="rowCount"/>
	</resultMap>
	
	<select id="getCargoItemDtl" resultMap="GICLCargoGridResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicl_cargo_dtl_pkg.get_gicl_cargo_dtl(#claimId#))   
		          			<isNotNull property="filter">
						      WHERE 1=1
						      	<isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspCurrencyDesc">
              					  UPPER(dsp_currency_desc) LIKE UPPER(#dspCurrencyDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="currencyRate">
              					  currency_rate LIKE #currencyRate#
              			        </isNotEmpty>
                   		  	</isNotNull>
		          			<isEqual property="sortColumn" compareValue="itemNo">
			            		ORDER BY item_no
			          		</isEqual>  
			          		<isEqual property="sortColumn" compareValue="itemTitle">
			            		ORDER BY item_title
			          		</isEqual>  
			          		<isEqual property="sortColumn" compareValue="itemDesc">
			            		ORDER BY item_desc
			          		</isEqual>
			          		<isEqual property="sortColumn" compareValue="itemDesc2">
			            		ORDER BY item_desc2
			          		</isEqual>
			          		<isEqual property="sortColumn" compareValue="itemDesc itemDesc2">
			            		ORDER BY item_desc, item_desc2
			          		</isEqual>
			          		<isEqual property="sortColumn" compareValue="dspCurrencyDesc">
			            		ORDER BY dsp_currency_desc
			          		</isEqual>
			          		<isEqual property="sortColumn" compareValue="currencyRate">
			            		ORDER BY currency_rate
			          		</isEqual>       
			           		<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull> 
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicl_cargo_dtl_pkg.get_gicl_cargo_dtl(#claimId#))
		                  	<isNotNull property="filter">
						      WHERE 1=1
						      	<isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspCurrencyDesc">
              					  UPPER(dsp_currency_desc) LIKE UPPER(#dspCurrencyDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="currencyRate">
              					  currency_rate LIKE #currencyRate#
              			        </isNotEmpty>
                   		  	</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getClmMarineCargoItemLOV" parameterClass="java.util.HashMap" resultMap="GIPIItem.itemNoLOVResultMap" >
		SELECT *
		  FROM (SELECT a.*, b.count_ ,rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE (gipi_item_pkg.get_item_no_list_mn (#lineCd#, #sublineCd#, #polIssCd#, 
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																		  #lossDate#, #polEffDate#, #expiryDate#,#claimId#,#findText#
		                                                                )
		                             ) 	
		                             <isEqual property="sortColumn" compareValue="itemNo">
			              				ORDER BY item_no
						              </isEqual>
					                  <isEqual property="sortColumn" compareValue="itemTitle">
						              		ORDER BY item_title
						              </isEqual>		
						              <isNotNull property="sortColumn">
						              		<isEqual property="ascDescFlg" compareValue="ASC">
						              			ASC
						              		</isEqual>
						              		<isEqual property="ascDescFlg" compareValue="DESC">
						              			DESC
						              		</isEqual>
						              </isNotNull>	
		                             ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (gipi_item_pkg.get_item_no_list_mn(#lineCd#, #sublineCd#, #polIssCd#, 
																		  #issueYy#, #polSeqNo#, #renewNo#, 
																		  #lossDate#, #polEffDate#, #expiryDate#,#claimId#,#findText#
		                                                                )
		                                                          
		                             )
	                            
		                             ) b)
		                             
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="map" id="validateClmItemNoCagoMap">
		<parameter property="userId"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
  		<parameter property="lineCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="sublineCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polIssCd"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="issueYy"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polSeqNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="renewNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="polEffDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="expiryDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="lossDate"		javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="inceptDate"	javaType="java.util.Date"		jdbcType="DATE" 			mode="IN"/>
		<parameter property="itemNo"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="claimId"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="from"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="to"			javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="IN"/>
		<parameter property="row"			javaType="java.sql.ResultSet" 	jdbcType="ORACLECURSOR"  		mode="OUT" 		resultMap="GICLCargoDtlResultMap"/>
		<parameter property="itemExist"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="overrideFl"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="tlossFl"		javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
		<parameter property="itemExist2"	javaType="java.lang.String"		jdbcType="VARCHAR" 			mode="OUT"/>
	</parameterMap>
	
	<procedure id="validateClmItemNoCargo" parameterMap="validateClmItemNoCagoMap">
		BEGIN
  			giis_users_pkg.app_user := ?;
  			gicl_cargo_dtl_pkg.validate_gicl_cargo_item_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
	</procedure>
	
	<delete id="delGiclCargoDtl" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_cargo_dtl_pkg.del_gicl_cargo_dtl(#claimId#, #itemNo#);
		END;
	</delete>	
	
	<procedure id="setGiclCargoDtl" parameterClass="GICLCargoDtlClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_cargo_dtl_pkg.set_gicl_cargo_dtl(
				#claimId#, #itemNo#, #vesselCd#, #geogCd#, 
                #cargoClassCd#, #voyageNo#, #blAwb#, #origin#, 
                #destn#, #etd#, #eta#, #cargoType#, 
                #deductText#, #packMethod#, #transhipOrigin#, #transhipDestination#, 
                #lcNo#, #itemTitle#, #currencyCd#,#currencyRate#, #cpiRecNo#,#cpiBranchCd#
			);
		END;
		
	</procedure>
</sqlMap>