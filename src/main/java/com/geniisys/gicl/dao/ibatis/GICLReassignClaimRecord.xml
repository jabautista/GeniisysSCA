<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="ReassignClaimRecord">

	<resultMap class="java.util.HashMap" id="getClaimDetailMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimId" 			column="claim_id"/>
		<result property="claimNo" 			column="claim_no"/>		
		<result property="policyNo" 		column="policy_no"/>
		<result property="assdName"  		column="assd_name"/>
		<result property="claimStatus" 		column="claim_status"/>		
		<result property="plateNo" 			column="plate_no"/>
		<result property="inHouAdj" 		column="in_hou_adj"/>
		<result property="reassignClmChk"	column="reassign_clm_chk"/>
		<result property="remarks"			column="remarks"/>
		<result property="issCd"			column="iss_cd"/>
		<result property="userId"			column="user_id"/>
	</resultMap>
	
	<resultMap id="getUserLOVMap" class="java.util.HashMap" >
	  	<result column="user_id" 			property="userId"/>
	  	<result column="user_name"			property="userName"/>
	  	<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
  	</resultMap>
  	
	<select id="showReassignClaimRecord" resultMap="getClaimDetailMap">
  		SELECT * 
  		  FROM (SELECT a.*, b.count_, rownum rownum_
  		     	  FROM (SELECT * 
  		     	   		  FROM TABLE(GICLS044_PKG.get_claim_details(#lineCd#, #allUserSw#, #userId#))   
  		     	   		  <isNotNull property="filter">
  		     	   		  		WHERE 1=1
  		     	   		  		<isNotEmpty prepend="AND" property="claimNo">
  		     	   		  			UPPER(claim_no) LIKE UPPER(#claimNo#)
  		     	   		  		</isNotEmpty>
  		     	   		  		<isNotEmpty prepend="AND" property="policyNo">
  		     	   		  			UPPER(policy_no) LIKE UPPER(#policyNo#)
  		     	   		  		</isNotEmpty>
  		     	   		  		<isNotEmpty prepend="AND" property="assdName">
  		     	   		  			UPPER(TRIM(assd_name)) LIKE UPPER(#assdName#)
  		     	   		  		</isNotEmpty>
  		     	   		  		<isNotEmpty prepend="AND" property="claimStatus">
  		     	   		  			UPPER(claim_status) LIKE UPPER(#claimStatus#)
  		     	   		  		</isNotEmpty>
  		     	   		  		<isNotEmpty prepend="AND" property="plateNo">
  		     	   		  			UPPER(plate_no) LIKE UPPER(#plateNo#)
  		     	   		  		</isNotEmpty>
  		     	   		  		<isNotEmpty prepend="AND" property="inHouAdj">
  		     	   		  			UPPER(in_hou_adj) LIKE UPPER(#inHouAdj#)
  		     	   		  		</isNotEmpty>
  		     	   		  </isNotNull>
  		     	   		  <isEqual property="sortColumn" compareValue="claimNo">
  		     	   		  		ORDER BY claim_no
  		     	   		  </isEqual>
  		     	   		  <isEqual property="sortColumn" compareValue="policyNo">
  		     	   		  		ORDER BY policy_no
  		     	   		  </isEqual>
  		     	   		  <isEqual property="sortColumn" compareValue="assdName">
  		     	   		  		ORDER BY assd_name
  		     	   		  </isEqual>
  		     	   		  <isEqual property="sortColumn" compareValue="claimStatus">
  		     	   		  		ORDER BY claim_status
  		     	   		  </isEqual>
  		     	   		  <isEqual property="sortColumn" compareValue="plateNo">
  		     	   		  		ORDER BY plate_no
  		     	   		  </isEqual>
  		     	   		  <isEqual property="sortColumn" compareValue="inHouAdj">
  		     	   		  		ORDER BY in_hou_adj
  		     	   		  </isEqual>
  		     	   		  <isNotNull property="sortColumn">
	  		     	   		  	<isEqual property="ascDescFlg" compareValue="ASC">
	  		     	   		  		ASC
	  		     	   		  	</isEqual>
	  		     	   		  	<isEqual property="ascDescFlg" compareValue="DESC">
	  		     	   		  		DESC
	  		     	   		  	</isEqual>
  		     	   		  </isNotNull>
  		     	   	    ) a,
  		     	(SELECT count(*) count_
  		     	   FROM TABLE(GICLS044_PKG.get_claim_details(#lineCd#, #allUserSw#, #userId#))
	  		     	   <isNotNull property="filter">
	     	   		  		WHERE 1=1
	     	   		  		<isNotEmpty prepend="AND" property="claimNo">
	     	   		  			UPPER(claim_no) LIKE UPPER(#claimNo#)
	     	   		  		</isNotEmpty>
	     	   		  		<isNotEmpty prepend="AND" property="policyNo">
	     	   		  			UPPER(policy_no) LIKE UPPER(#policyNo#)
	     	   		  		</isNotEmpty>
	     	   		  		<isNotEmpty prepend="AND" property="assdName">
	     	   		  			UPPER(TRIM(assd_name)) LIKE UPPER(#assdName#)
	     	   		  		</isNotEmpty>
	     	   		  		<isNotEmpty prepend="AND" property="claimStatus">
	     	   		  			UPPER(claim_status) LIKE UPPER(#claimStatus#)
	     	   		  		</isNotEmpty>
	     	   		  		<isNotEmpty prepend="AND" property="plateNo">
	     	   		  			UPPER(plate_no) LIKE UPPER(#plateNo#)
	     	   		  		</isNotEmpty>
	     	   		  		<isNotEmpty prepend="AND" property="inHouAdj">
  		     	   		  		UPPER(in_hou_adj) LIKE UPPER(#inHouAdj#)
  		     	   		  	</isNotEmpty>
	     	   		  </isNotNull>
  		     	   	   ) b)
  		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
	
	<insert id="updateClaimRecord" parameterClass="com.geniisys.gicl.entity.GICLClaims">
  		DECLARE
  			v_update_claim   gicl_claims%ROWTYPE;
		BEGIN	
		  giis_users_pkg.app_user := #appUser#;
		  
		  v_update_claim.in_hou_adj := #inHouAdj#;
		  v_update_claim.claim_id := #claimId#;
		  v_update_claim.user_id := #appUser#;
		  
		  GICLS044_PKG.update_claim_record(v_update_claim);
		END;
  	</insert>
  	
  	<select id="getuserLOVGICLS044" resultMap="getUserLOVMap" parameterClass="java.util.HashMap">		 
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GICLS044_PKG.get_user_lov(#lineCd#, #issCd#))
	          	  		 WHERE (UPPER(user_id) LIKE UPPER(NVL(#findText#, user_id))
    						OR UPPER(user_name) LIKE UPPER(NVL(#findText#, user_name)))
	            <isEqual property="sortColumn" compareValue="userId">
              		ORDER BY user_id
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="userName">
              		ORDER BY user_name
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(GICLS044_PKG.get_user_lov(#lineCd#, #issCd#))
	          	WHERE (UPPER(user_id) LIKE UPPER(NVL(#findText#, user_id))
				   OR UPPER(user_name) LIKE UPPER(NVL(#findText#, user_name))))b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
  	
  	<select id="checkIfCanReassignClaim" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT GICLS044_PKG.reassign_processor_validation (#userId#) FROM DUAL
	</select>
	
</sqlMap>