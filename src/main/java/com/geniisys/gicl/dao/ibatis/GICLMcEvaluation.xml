<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="GICLMcEvaluation">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<typeAlias alias="GICLMcEvaluationClass" type="com.geniisys.gicl.entity.GICLMcEvaluation"/>
	
	<resultMap class="GICLMcEvaluationClass" id="GICLMcEvaluationClass">
		<result property="claimId" column="claim_id"/>
		<result property="evalId" column="eval_id"/>
		<result property="itemNo" column="item_no"/>
		<result property="perilCd" column="peril_cd"/>
		<result property="sublineCd" column="subline_cd"/>
		<result property="issCd" column="iss_cd"/>
		<result property="evalYy" column="eval_yy"/>
		<result property="evalSeqNo" column="eval_seq_no"/>
		<result property="evalVersion" column="eval_version"/>
		<result property="reportType" column="report_type"/>
		<result property="evalMasterId" column="eval_master_id"/>
		<result property="payeeNo" column="payee_no"/>
		<result property="payeeClassCd" column="payee_class_cd"/>
		<result property="plateNo" column="plate_no"/>
		<result property="tpSw" column="tp_sw"/>
		<result property="csoId" column="cso_id"/>
		<result property="evalDate" column="eval_date"/>
		<result property="inspectDate" column="inspect_date"/>
		<result property="inspectPlace" column="inspect_place"/>
		<result property="adjusterId" column="adjuster_id"/>
		<result property="replaceAmt" column="replace_amt"/>
		<result property="vat" column="vat"/>
		<result property="depreciation" column="depreciation"/>
		<result property="remarks" column="remarks"/>
		<result property="currencyCd" column="currency_cd"/>
		<result property="currencyRate" column="currency_rate"/>
		<result property="repairAmt" column="repair_amt"/>
		<result property="userId" column="user_id"/>
		<result property="evalStatCd" column="eval_stat_cd"/>
	</resultMap> 
	
	<resultMap class="GICLMcEvaluationClass" id="mcEvaluationTGMap" extends="GICLMcEvaluationClass">
		<result property="dspAdjusterDesc" column="dsp_adjuster_desc"/>
		<result property="dspPayee" column="dsp_payee"/>
		<result property="dspCurrShortname" column="dsp_curr_shortname"/>
		<result property="dspDiscount" column="dsp_discount"/>
		<result property="deductible" column="deductible"/>
		<result property="totEstCos" column="tot_estcos"/>
		<result property="totErc" column="tot_erc"/>
		<result property="totInp" column="tot_inp"/>
		<result property="totInl" column="tot_inl"/>
		<result property="dspReportTypeDesc" column="dsp_report_type_desc"/>
		<result property="dspEvalDesc" column="dsp_eval_desc"/>
		<result property="replaceGross" column="REPLACE_GROSS"/>
		<result property="repairGross" column="REPAIR_GROSS"/>
		<result property="evaluationNo" column="evaluation_no"/>
		<result property="varPayeeCdGiclReplace" column="v_payee_cd_gicl_replace"/>
		<result property="varPayeeTypeCdGiclReplace" column="v_payee_type_cd_gicl_replace"/>
		<result property="masterFlag" column="master_flag"/>
		<result property="cancelFlag" column="cancel_Flag"/>
		<result property="dedFlag" column="ded_Flag"/>
		<result property="depFlag" column="dep_Flag"/>
		<result property="inHouAdj" column="in_hou_adj"/>
		<result property="masterReportType" column="master_report_type"/>
		<result property="mainEvalVatExist" column="main_eval_vat_exist"/>
		<result column="rownum_" 	property="rowNum" />
		<result column="count_"		property="rowCount"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="claimPolicyInfoMap" >
		<result property="claimId" column="claim_id"/>
		<result property="lineCd" column="line_cd"/>
		<result property="sublineCd" column="subline_cd"/>
		<result property="clmYy" column="clm_yy"/>
		<result property="clmSeqNo" column="clm_seq_no"/>
		<result property="assdNo" column="assd_no"/>
		<result property="assuredName" column="assured_name"/>
		<result property="lossDate" column="loss_date"/>
		<result property="itemNo" column="item_no"/>
		<result property="plateNo" column="plate_no"/>
		<result property="perilCd" column="peril_cd"/>
		<result property="payeeNo" column="payee_no"/>
		<result property="payeeClassCd" column="payee_class_cd"/>
		<result property="tpSw" column="tp_sw"/>
		<result property="inHouAdj" column="in_hou_adj"/>
		<result property="polIssCd" column="pol_iss_cd"/>
		<result property="polSeqNo" column="pol_seq_no"/>
		<result property="polIssueYy" column="issue_yy"/>
		<result property="polRenewNo" column="renew_no"/>
		<result property="dspItemDesc" column="dsp_item_desc"/>
		<result property="dspPerilDesc" column="dsp_peril_desc"/>
		<result property="currencyCd" column="currency_cd"/>
		<result property="currencyRate" column="currency_rate"/>
		<result property="dspCurrShortname" column="dsp_curr_shortname"/>
		<result property="issCd" column="iss_cd"/>
		<result property="clmFileDate" column="clm_file_date"/>
		<result property="annTsiAmt" column="ann_tsi_amt"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="evaluationSublineMap">
		<result property="sublineCd" column="subline_cd"/>
		<result property="sublineName" column="subline_name"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="mcEvaluationIssSourceMap">
		<result property="issCd" 			column="iss_cd"/>
		<result property="issName" 			column="iss_name"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="mcEvaluationClmYyMap">
		<result property="clmYy" 			column="clm_yy"/>
		<result property="clmSeqNo" 			column="clm_seq_no"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="leEvalReportResultMap">
		<result property="evalNo" 			column="EVAL_NO"/>
		<result property="evalId" 			column="EVAL_ID"/>
		<result property="perilCd" 			column="PERIL_CD"/>
		<result property="totEstCos" 		column="TOT_ESTCOS"/>
		<result property="repairAmt" 		column="REPAIR_AMT"/>
		<result property="replaceAmt" 		column="REPLACE_AMT"/>
		<result property="vat" 				column="VAT"/>
		<result property="deductible" 		column="DEDUCTIBLE"/>
		<result property="depreciation" 	column="DEPRECIATION"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<parameterMap class="java.util.HashMap" id="polInfoMap">
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="clmYy" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="clmSeqNo" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="claimId" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/>
		<parameter property="polIssCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="polSeqNo" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="polRenewNo" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="polIssueYy" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="lossDate"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="assuredName"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="plateNo"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="perilCd" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="perilName"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="message"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
	</parameterMap>

	<select id="getMcEvaluationSublineLOV" resultMap="evaluationSublineMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_subline_list(#findText#))
		                  <isEqual property="sortColumn" compareValue="sublineCd">
			              		ORDER BY subline_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="sublineName">
			              		ORDER BY subline_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_subline_list(#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getMcEvaluationIssSourceLOV" resultMap="mcEvaluationIssSourceMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_issue_cd_list(#sublineCd#,#findText#))
		                  <isEqual property="sortColumn" compareValue="issCd">
			              		ORDER BY issue_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="issName">
			              		ORDER BY iss_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_issue_cd_list(#sublineCd#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getMcEvaluationClmYyLOV" resultMap="mcEvaluationClmYyMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_clm_year_list(#sublineCd#, #issCd#,#findText#))
		                  <isEqual property="sortColumn" compareValue="clmYy">
			              		ORDER BY clm_yy
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_clm_year_list(#sublineCd#, #issCd#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	<select id="getMcEvaluationClmSeqNoLOV" resultMap="mcEvaluationClmYyMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_clm_seq_no_list(#sublineCd#, #issCd#, #clmYy#,#findText#))
		                  <isEqual property="sortColumn" compareValue="clmSeqNo">
			              		ORDER BY clm_seq_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="issName">
			              		ORDER BY iss_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (gicl_mc_evaluation_pkg.get_evaluation_clm_seq_no_list(#sublineCd#, #issCd#, #clmYy#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getClaimPolicyInfo" resultMap="claimPolicyInfoMap" parameterClass="map">
		<!-- SELECT * FROM TABLE(gicl_mc_evaluation_pkg.get_mc_evaluation_info(#sublineCd#,#issCd#,#clmYy#,#clmSeqNo#,#userId#)) changed by robert sr 13692-->
		SELECT * FROM TABLE(gicl_mc_evaluation_pkg.check_mc_evaluation_exist(#sublineCd#,#issCd#,#clmYy#,#clmSeqNo#,#userId#))
	</select>

	<select id="getMcEvaluationTGList" resultMap="mcEvaluationTGMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_mc_evaluation_list(#claimId#, #itemNo#, #payeeNo#,#payeeClassCd#,#plateNo#,#perilCd#,
		                  #sublineCd#,#issCd#,#evalYy#,#evalSeqNo#,#evalVersion#,#csoId#,#evalDate#,#inspectDate#,
							#polLineCd#,#polSublineCd#,#polIssCd#,#polIssueYy#,#polRenewNo#))
		                  <isEqual property="sortColumn" compareValue="evaluationNo">
			              		ORDER BY evaluation_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="csoId">
			              		ORDER BY cso_id
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="evalDate">
			              		ORDER BY eval_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="inspectDate">
			              		ORDER BY inspect_date
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (gicl_mc_evaluation_pkg.get_mc_evaluation_list(#claimId#, #itemNo#, #payeeNo#,#payeeClassCd#,#plateNo#,#perilCd#,
		                  #sublineCd#,#issCd#,#evalYy#,#evalSeqNo#,#evalVersion#,#csoId#,#evalDate#,#inspectDate#,
							#polLineCd#,#polSublineCd#,#polIssCd#,#polIssueYy#,#polRenewNo#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<parameterMap class="java.util.HashMap" id="variablesMap">
		<parameter property="replaceLabel" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="repairLabel" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="mortgageeClassCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="assdClassCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="inputVatRt" jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/>
	</parameterMap>
	
	<procedure id="getVariables" parameterMap="variablesMap">
		BEGIN
			gicl_mc_evaluation_pkg.get_variables(?,?,?,?,?);
		END;
	</procedure>
	
	<parameterMap class="java.util.HashMap" id="mcEvalBlkPreInsertMap">
		<parameter property="userId"					jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="newRepFlag"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="copyDtlFlag"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="reviseFlag"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="issCd"						jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="sublineCd"					jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="inspectDate"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="INOUT"/>
		<parameter property="evalMasterId" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/>
		<parameter property="replaceAmt" 			jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="INOUT"/>
		<parameter property="repairAmt" 			jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="INOUT"/>
		<parameter property="deductible2" 			jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/>
		<parameter property="depreciation" 			jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/>
		<parameter property="evalSeqNo" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="evalYy" 				jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/>
		<parameter property="evalId"	 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="evalVersion"			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="evalStatCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="INOUT"/>
		<parameter property="reportType"			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="INOUT"/>
		<parameter property="vat" 					jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/> <!-- added by kenneth L for vat retrieval SR 0014535 -->
		<parameter property="inspectPlace" 			jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="INOUT"/> <!-- marco - 03.27.2014 -->
		<parameter property="adjusterId" 			jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/> <!-- marco - 03.27.2014 -->
	</parameterMap>
	
	<procedure id="mcEvalBlkPreInsert" parameterMap="mcEvalBlkPreInsertMap">
		BEGIN
			giis_users_pkg.app_user := ?;
		 	gicl_mc_evaluation_pkg.mc_eval_blk_pre_insert(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<procedure id="insertMcEval" parameterClass="map">
		BEGIN
			gicl_mc_evaluation_pkg.insert_mc_eval(#evalMasterId#,#inspectDate#,#inspectPlace#,#sublineCd#,#issCd#,#evalYy#,#userId#,
				#itemNo#,#claimId#,#perilCd#,#plateNo#,#tpSw#,#payeeNo#,#payeeClassCd#,#currencyCd#,#currencyRate#,#replaceAmt#,#reportType#,#evalVersion#,
				#evalId#,#evalSeqNo#,#repairAmt#,#depreciation#,#deductible2#,#adjusterId#,#evalStatCd#,#evalDate#,#remarks#,#vat#
			);
		end;
	</procedure>
	
	<resultMap class="java.util.HashMap" id="copyReportMap">
		<result property="evaluationNo" column="evaluation_no"/>
		<result property="evalId" column="eval_id"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<select id="getCopyReportLOV" resultMap="copyReportMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_copy_report_list(#claimId#,#findText#))
		                  <isEqual property="sortColumn" compareValue="evaluationNo">
			              		ORDER BY evaluation_No
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_copy_report_list(#claimId#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<update id="updateMcEvaluationReport" parameterClass="map">
		BEGIN
			gicl_mc_evaluation_pkg.update_mc_eval(#evalId#,#remarks#,#inspectDate#,#adjusterId#,#inspectPlace#);
		END;
	</update>
	
	<procedure id="cancelMcEvalreport" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			gicl_mc_evaluation_pkg.cancel_mc_eval(#evalId#,#evalMasterId#,#reportType#); 
		END;
	</procedure>
	
	<resultMap class="java.util.HashMap" id="forAdditionalReportListMap">
		<result property="evalId" column="eval_id"/>
		<result property="evaluationNo" column="evaluation_no"/>
		<result property="evalDate" column="eval_date"/>
		<result property="inspectDate" column="inspect_date"/>
		<result property="inspectPlace" column="inspect_place"/>
		<result property="dspEvalDesc" column="dsp_eval_desc"/>
		<result property="adjusterId" column="adjuster_id"/>
		<result property="adjuster" column="adjuster"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
    
	<select id="getForAdditionalReportList" resultMap="forAdditionalReportListMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_for_additional_report_list(#claimId#,#plateNo#,#perilCd#,
		                  	#payeeClassCd#,#payeeNo#,#tpSw#, #evalStatCd#,#itemNo#,#findText#
		                  ))
		                  <isEqual property="sortColumn" compareValue="evaluationNo">
			              		ORDER BY evaluation_No
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="inspectionDate">
			              		ORDER BY inspection_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="inspectPlace">
			              		ORDER BY inspect_place
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="adjuster">
			              		ORDER BY adjuster
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="dspEvalDesc">
			              		ORDER BY dsp_eval_desc
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_for_additional_report_list(#claimId#,#plateNo#,#perilCd#,
		                  	#payeeClassCd#,#payeeNo#,#tpSw#, #evalStatCd#,#itemNo#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="java.util.HashMap" id="validateBeforePostMap">
		<parameter property="claimId" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="itemNo" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="perilCd" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="evalId" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="userId"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="resAmt" jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/>
		<parameter property="pMessage"				jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
	</parameterMap>
	
	<procedure id="validateBeforePostMap" parameterMap="validateBeforePostMap">
		BEGIN
		 	gicl_mc_evaluation_pkg.validate_before_posting(?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<procedure id="postEvalReport" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		 	gicl_mc_evaluation_pkg.post_evaluation_report(#evalId#,#claimId#,#itemNo#,#perilCd#,#currencyCd#,#currencyRate#,
		 		#remarks#,#inspectDate#,#adjusterId#,#inspectPlace#
		 	);
		END;
	</procedure>
	
	<procedure id="createSettlementForReport" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		 	gicl_mc_evaluation_pkg.create_settlement_for_report(#evalId#,#claimId#,#itemNo#,#perilCd#,#totEstCos#,#vat#);
		END;
	</procedure>
	
	<select id="validateOverrideUserMcEval" parameterClass="map" resultClass="string">
		SELECT gicl_mc_evaluation_pkg.validate_override_user(#userId#, #issCd#, #resAmt#, #vOverrideProc#) FROM DUAL
	</select>
	
	<procedure id="updateEvalDepVatAmt" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		 	gicl_mc_evaluation_pkg.update_eval_dep_vat_amt(#evalId#);
		END;
	</procedure>
	
	<select id="getLeEvalReportLOV" resultMap="leEvalReportResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICL_MC_EVALUATION_PKG.get_le_eval_report_list(#claimId#))
		                  <isEqual property="sortColumn" compareValue="evalNo">
			              		ORDER BY eval_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GICL_MC_EVALUATION_PKG.get_le_eval_report_list(#claimId#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="createSettlementForLossExpEvalReport" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		 	GICL_MC_EVALUATION_PKG.create_settlement_for_eval_rep(#claimId#, #itemNo#, #perilCd#, #evalId#, #paramPerilCd#);
		END;
	</procedure>
	
	<update id="updateMcEvalDep" parameterClass="map">
		UPDATE gicl_mc_evaluation
	   	 SET depreciation = #total#
	 	WHERE eval_id = #evalId#
	</update>
	
	<parameterMap class="java.util.HashMap" id="popGiclEvalMap">
		<parameter property="claimId" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/>
		<parameter property="sublineCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="INOUT"/>
		<parameter property="issCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="INOUT"/>
		<parameter property="clmYy" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/>
		<parameter property="clmSeqNo" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="INOUT"/>
		<parameter property="userId" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="IN"/>
		<parameter property="lossDate" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="assuredName" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="polIssCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="polIssueYy" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="polSeqNo" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="polRenewNo" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="itemNo" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="plateNo" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="tpSw" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="dspPayee" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="dspCurrShortname" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="currencyCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="currencyRate" jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/>
		<parameter property="perilCd" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="dspPerilDesc" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="dspItemDesc" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="adjusterId" jdbcType="INTEGER" 	javaType="java.lang.Integer"  mode="OUT"/>
		<parameter property="dspAdjusterDesc" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="annTsiAmt" jdbcType="NUMERIC" 	javaType="java.math.BigDecimal"  mode="OUT"/>
		<parameter property="allowPlateNo" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="allowPerilCd" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="allowAdjuster" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="evalExist" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
		<parameter property="message" jdbcType="VARCHAR" 	javaType="java.lang.String"  mode="OUT"/>
	</parameterMap>
	
	<procedure id="popGiclMcEval" parameterMap="popGiclEvalMap">
		BEGIN
			GICL_MC_EVALUATION_PKG.pop_giclmceval(?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<resultMap class="java.util.HashMap" id="evalPerilMap">
		<result property="perilCd" column="peril_Cd"/>
		<result property="dspPerilDesc" column="dsp_peril_desc"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<select id="getEvalPerilLOV" resultMap="evalPerilMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_eval_peril_lov(#claimId#,#itemNo#,#findText#))
			              <isEqual property="sortColumn" compareValue="dspCompany">
			              		ORDER BY dsp_company
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_eval_peril_lov(#claimId#,#itemNo#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="itemLOVMap">
		<result property="itemNo" column="item_no"/>
		<result property="plateNo" column="plate_no"/>
		<result property="itemTitle" column="item_title"/>
		<result property="carCompany" column="car_company"/>
		<result property="make" column="make"/>
		<result property="engineSeries" column="engine_series"/>
		<result property="payeeName" column="payee_name"/>
		<result property="tpSw" column="tp_sw"/>
		<result property="payeeClassCd" column="payee_class_cd"/>
		<result property="payeeNo" column="payee_no"/>
		<result property="currencyCd" column="currency_cd"/>
		<result property="shortName" column="short_name"/>
		
		<result property="perilCd" column="peril_cd"/>
		<result property="dspPerilDesc" column="dsp_peril_desc"/>
		<result property="allowPeril" column="allow_peril"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<select id="getEvalItemLOV" resultMap="itemLOVMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_mc_eval_item_lov(#claimId#,#findText#))
			              <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="itemTitle">
			              		ORDER BY item_title
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="plateNo">
			              		ORDER BY plate_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="itemTitle">
			              		ORDER BY item_title
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="plateNo">
			              		ORDER BY plate_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="carCompany">
			              		ORDER BY car_company
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="make">
			              		ORDER BY make
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="engineSeries">
			              		ORDER BY engine_series
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="tpSw">
			              		ORDER BY to_sw
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="payeeName">
			              		ORDER BY payee_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_mc_eval_item_lov(#claimId#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="executeMasterBlkKeyCommit" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		 	GICL_MC_EVALUATION_PKG.master_blk_key_commit(#claimId#, #itemNo#,#plateNo#,#tpSw#,#perilCd#, #payeeClassCd#, #payeeNo#,
		 		#itemNoValue#,#plateNoValue#,#tpSwValue#,#perilCdValue#, #payeeClassCdValue#, #payeeNoValue#, #evalId#
		 	);
		END;
	</procedure>
	
	<resultMap class="java.util.HashMap" id="mcEvalPlateLOVMap">
		<result property="plateNo" column="plate_no"/>
		<result property="payeeName" column="payee_name"/>
		<result property="tpSw" column="tp_sw"/>
		<result property="payeeClassCd" column="payee_class_Cd"/>
		<result property="payeeNo" column="payee_no"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<select id="getMcEvalPlateNoLOV" resultMap="mcEvalPlateLOVMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_plate_no_lov(#claimId#,#itemNo#,#findText#))
		                  <isEqual property="sortColumn" compareValue="plateNo">
			              		ORDER BY plate_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="tpSw">
			              		ORDER BY tp_sw
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="payeeName">
			              		ORDER BY payee_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_plate_no_lov(#claimId#,#itemNo#,#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap id="checkEvalCSLOverrideRequestExistMap" class="java.util.HashMap">
  		<parameter property="userId"		  jdbcType="VARCHAR" 	javaType="java.lang.String"		 mode="IN"/>
  		<parameter property="claimId"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="IN"/>
  		<parameter property="evalId"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="IN"/>
  		<parameter property="clmLossId"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="IN"/>
  		<parameter property="payeeTypeCd"	  jdbcType="VARCHAR" 	javaType="java.lang.String"		 mode="IN"/>
  		<parameter property="payeeCd"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="IN"/>
  		<parameter property="recExist"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="OUT"/>
  	</parameterMap>
	
	<procedure id="checkEvalCSLOverrideRequestExist" parameterMap="checkEvalCSLOverrideRequestExistMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			CHECK_REC_EXIST2(?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap id="getMcItemPerilMap" class="java.util.HashMap">
  		<parameter property="claimId"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="IN"/>
  		<parameter property="itemNo"		  jdbcType="INTEGER" 	javaType="java.lang.Integer"		 mode="IN"/>
  		<parameter property="perilCd" 		  jdbcType="INTEGER" 	javaType="java.lang.Integer"  	mode="OUT"/>
  		<parameter property="perilName"		  jdbcType="VARCHAR" 	javaType="java.lang.String"		 mode="OUT"/>
  		<parameter property="multiplePerils"  jdbcType="VARCHAR" 	javaType="java.lang.String"		 mode="OUT"/>
  	</parameterMap>
	
	<procedure id="getMcItemPeril" parameterMap="getMcItemPerilMap">
		BEGIN
			GICL_MC_EVALUATION_PKG.get_item_peril(?,?,?,?,?);
		END;
	</procedure>
	
	<!-- added by robert for SR 13692 -->
	<resultMap class="java.util.HashMap" id="claimPolicyInfoTGMap" extends="claimPolicyInfoMap">
		<result column="rownum_"					property="rowNum"/>
	    <result column="count_"						property="rowCount"/>
	</resultMap>
	
	<select id="getMcEvalItemTGList" resultMap="claimPolicyInfoTGMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_mc_evaluation_pkg.get_mc_evaluation_info(#sublineCd#,#issCd#,#clmYy#,#clmSeqNo#,#userId#))
		                  <isEqual property="sortColumn" compareValue="itemNo dspItemDesc">
			            	  ORDER BY item_no || dsp_item_desc
			          	  </isEqual>
			          	  <isEqual property="sortColumn" compareValue="perilCd dspPerilDesc">
			            	  ORDER BY peril_cd || dsp_peril_desc
			          	  </isEqual>
		          		  <isEqual property="sortColumn" compareValue="plateNo">
			            	  ORDER BY plate_no
			          	  </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (gicl_mc_evaluation_pkg.get_mc_evaluation_info(#sublineCd#,#issCd#,#clmYy#,#clmSeqNo#,#userId#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
</sqlMap>

