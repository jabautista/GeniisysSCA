<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GICLClaims">
	<cacheModel id="oneDayClient" type="MEMORY">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>
	
	<typeAlias alias="GICLClaimsClass" type="com.geniisys.gicl.entity.GICLClaims"/>
		
	<resultMap class="GICLClaimsClass" id="GICLClaimsResultMap">
		<result property="accountOfCode"			column="acct_of_cd"/>	
		<result property="assuredName"				column="assured_name"/>
		<result property="assuredName2"				column="assd_name2"/>
		<result property="assuredNo"				column="assd_no"/>
		<result property="blockId"					column="block_id" />
		<result property="catastrophicCode"			column="catastrophic_cd"/>
		<result property="catastrophicCd"			column="catastrophic_cd"/>
		<result property="cityCode"					column="city_cd"/>
		<result property="claimId" 					column="claim_id"/>
		<result property="claimAmount"				column="clm_amt"/>
		<result property="claimControl" 			column="clm_control"/>
		<result property="claimCoop" 				column="clm_coop"/>
		<result property="claimDistTag"				column="clm_dist_tag"/>
		<result property="claimFileDate"			column="clm_file_date"/>
		<result property="claimSequenceNo" 			column="clm_seq_no"/>
		<result property="claimSettlementDate"		column="clm_setl_date"/>
		<result property="claimStatusCd"			column="clm_stat_cd"/>
		<result property="claimYy" 					column="clm_yy"/>
		<result property="closeDate"				column="close_date"/>
		<result property="contactNumber"			column="contact_no"/>
		<result property="cpiBranchCd"				column="cpi_branch_cd"/>
		<result property="cpiRecNo"					column="cpi_rec_no"/>
		<result property="creditBranch"				column="cred_branch"/>
		<result property="csrNo"					column="csr_no"/>
		<result property="defProcessor"				column="def_processor"/>
		<result property="districtNumber"			column="district_no" />
		<result property="districtNo"				column="district_no" />
		<result property="dspLossDate"				column="dsp_loss_date"/>
		<result property="emailAddress"				column="email_address"/>
		<result property="entryDate"				column="entry_date"/>
		<result property="expiryDate"				column="expiry_date"/>
		<result property="expPaidAmount"			column="exp_pd_amt"/>
		<result property="expenseResAmount"			column="exp_res_amt"/>
		<result property="intermediaryNo"			column="intm_no"/>
		<result property="inHouseAdjustment"		column="in_hou_adj"/> 
		<result property="issueYy" 					column="issue_yy"/>
		<result property="issueCode" 				column="iss_cd"/>
		<result property="issCd" 					column="iss_cd"/>
		<result property="lineCode"					column="line_cd"/>
		<result property="lineCd"					column="line_cd"/>
		<result property="lineName"					column="line_name"/>
		<result property="locationCode"				column="location_cd" />
		<result property="lossCatCd"				column="loss_cat_cd"/>
		<result property="lossDate"					column="loss_date"/>
		<result property="lossDetails"				column="loss_dtls"/>
		<result property="lossLocation1"			column="loss_loc1"/>
		<result property="lossLocation2"			column="loss_loc2"/>
		<result property="lossLocation3"			column="loss_loc3"/>
		<result property="lossPaidAmount"			column="loss_pd_amt"/>
		<result property="lossResAmount"			column="loss_res_amt"/>
		<result property="maxEndorsementSequenceNumber" column="max_endt_seq_no"/>
		<result property="motorNumber"				column="motor_no"/>
		<result property="netPaidExpense"			column="net_pd_exp"/>
		<result property="netPaidLoss"				column="net_pd_loss"/>
		<result property="obligeeNo"				column="obligee_no"/>
		<result property="oldStatCd"				column="old_stat_cd"/>
		<result property="packPolNo"				column="pack_pol_no"/>
		<result property="packPolicyId"				column="pack_policy_id"/>
		<result property="packPolicy"				column="pack_policy_id"/>
		<result property="plateNumber"				column="plate_no"/>
		<result property="policyEffectivityDate"	column="pol_eff_date"/>
		<result property="polEffDate"				column="pol_eff_date"/>
		<result property="policyIssueCode" 			column="pol_iss_cd"/>
		<result property="policySequenceNo" 		column="pol_seq_no"/>
		<result property="provinceCode"				column="province_cd"/>
		<result property="reasonCode"				column="reason_cd"/>
		<result property="recoverySw"				column="recovery_sw"/>
		<result property="refreshSw"				column="refresh_sw"/>
		<result property="remarks"					column="remarks"/>
		<result property="renewNo" 					column="renew_no"/>
		<result property="reportedBy"				column="reported_by" />
		<result property="riCd"						column="ri_cd"/>
		<result property="serialNumber"				column="serial_no" />
		<result property="settlingAgentCode"		column="settling_agent_cd"/>
		<result property="specialInstructions"		column="special_instructions"/>
		<result property="sublineCd" 				column="subline_cd"/>		
		<result property="surveyAgentCode"			column="survey_agent_cd"/>
		<result property="totalTag"					column="total_tag"/>
		<result property="transactionNo"			column="tran_no"/>
		<result property="userId"					column="user_id" />
		<result property="zipCode"					column="zip_cd"/>
		
		<result property="userLastUpdate"			column="last_update" />
        <result property="clmStatDesc"				column="clm_stat_desc" /> 
        <result property="claimStatDesc" 			column="clm_stat_desc"/>
		<result property="dspRiName"				column="dsp_ri_name" />
		<result property="dspCityDesc"				column="dsp_city_desc" />
		<result property="dspProvinceDesc"  		column="dsp_province_desc" />
		<result property="dspCatDesc"				column="dsp_cat_desc" />
		<result property="dspLossCatDesc"			column="dsp_loss_cat_desc" />
		<result property="dspInHouAdjName"			column="dsp_in_hou_adj_name" />
		<result property="dspCredBrDesc"			column="dsp_cred_br_desc" />
		<result property="packPolFlag"	   	 		column="pack_pol_flag" />
		<result property="blockNo"	        		column="block_no" />
		<result property="issueDate"        		column="issue_date" />
		<result property="redistSw"         		column="redist_sw" />
		<result property="opNumber"					column="op_number"/>
		<result property="itemNo"					column="item_no"/>
		<result property="giclMortgageeExist"       column="gicl_mortgagee_exist" />
		<result property="giclItemPerilExist"		column="gicl_item_peril_exist"/>
		<result property="giclClmItemExist"			column="gicl_clm_item_exist"/>
		<result property="giclClmReserveExist"		column="gicl_clm_reserve_exist"/>
		<result property="dspSettlingName"			column="dsp_settling_name"/>
		<result property="dspSurveyName"			column="dsp_survey_name"/>
		<result property="claimNo"					column="dsp_claim_no"/>
		<result property="policyNo"					column="dsp_policy_no"/>
		<result property="perilCd" 					column="peril_cd"/>
		<result property="itemLimit" 				column="item_limit"/>
		<result property="dspAcctOf" 				column="dsp_acct_of"/>
		<result property="policyId"					column="policy_id"/>
		<result property="dspLocationDesc"			column="location_desc" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GICLClaimsResultMapGrid" extends="GICLClaimsResultMap">
		<result column="rownum_" 	property="rowNum" />
		<result column="count_"		property="rowCount"/>
	</resultMap>
	
	<resultMap class="GICLClaimsClass" 		id="ClaimsInformationResultMap">
		<result property="claimId"					column="CLAIM_ID" />
		<result property="claimNo"					column="CLAIM_NO" />
		<result property="policyNo"					column="POLICY_NO" />
		<result property="lineCode"					column="LINE_CD" />
		<result property="sublineCd"				column="SUBLINE_CD" />
		<result property="issueYy"					column="ISSUE_YY" />
		<result property="policySequenceNo"			column="POL_SEQ_NO" />
		<result property="renewNo"					column="RENEW_NO" />
		<result property="policyIssueCode"			column="POL_ISS_CD" />
		<result property="claimYy"					column="CLM_YY" />
		<result property="claimSequenceNo"			column="CLM_SEQ_NO" />
		<result property="issueCode"				column="ISS_CD" />
		<result property="assuredNo"				column="ASSD_NO" />
		<result property="assuredName"				column="DSP_ASSURED" />
		<result property="recoverySw"				column="RECOVERY_SW" />
		<result property="userId"					column="USER_ID" />
		<result property="lastUpdate"				column="LAST_UPDATE" />
		<result property="userLastUpdate"			column="LAST_UPDATE" />
		<result property="lossDate"					column="LOSS_DATE" />
		<result property="dspLossDate"				column="DSP_LOSS_DATE" />
		<result property="claimFileDate"			column="CLM_FILE_DATE" />
		<result property="entryDate"				column="ENTRY_DATE" />
		<result property="claimStatusCd"			column="CLM_STAT_CD" />
		<result property="claimStatDesc"			column="CLM_STAT_DESC" />
		<result property="clmStatDesc"				column="CLM_STAT_DESC" />
		<result property="claimSettlementDate"		column="CLM_SETL_DATE" />
		<result property="lossPaidAmount"			column="LOSS_PD_AMT" />
		<result property="lossResAmount"			column="LOSS_RES_AMT" />
		<result property="expPaidAmount"			column="EXP_PD_AMT" />
		<result property="inHouseAdjustment"		column="IN_HOU_ADJ" />
		<result property="dspInHouAdjName"			column="IN_HOU_ADJ_NAME" />
		<result property="intermediaryNo"			column="INTM_NO" />
		<result property="lossCatCd"				column="LOSS_CAT_CD" />
		<result property="dspLossCatDesc"			column="LOSS_CAT_DESC" />
		<result property="lossLocation1"			column="LOSS_LOC1" />
		<result property="lossLocation2"			column="LOSS_LOC2" />
		<result property="lossLocation3"			column="LOSS_LOC3" />
		<result property="policyEffectivityDate"	column="POL_EFF_DATE" />
		<result property="csrNo"					column="CSR_NO" />
		<result property="claimAmount"				column="CLM_AMT" />
		<result property="lossDetails"				column="LOSS_DTLS" />
		<result property="obligeeNo"				column="OBLIGEE_NO" />
		<result property="expenseResAmount"			column="EXP_RES_AMT" />
		<result property="riCd"						column="RI_CD" />
		<result property="dspRiName"				column="RI_NAME" />
		<result property="plateNumber"				column="PLATE_NO" />
		<result property="claimDistTag"				column="CLM_DIST_TAG" />
		<result property="oldStatCd"				column="OLD_STAT_CD" />
		<result property="closeDate"				column="CLOSE_DATE" />
		<result property="expiryDate"				column="EXPIRY_DATE" />
		<result property="accountOfCode"			column="ACCT_OF_CD" />
		<result property="dspAcctOfCdName"			column="ACCT_OF_CD_NAME" />
		<result property="packPolicyId"				column="PACK_POLICY_ID" />
		<result property="packPolNo"				column="PACK_POL_NO" />
		<result property="maxEndorsementSequenceNumber"	column="MAX_ENDT_SEQ_NO" />
		<result property="assignee"					column="ASSIGNEE" />
		<result property="remarks"					column="REMARKS" />
		<result property="catastrophicCd"			column="CATASTROPHIC_CD" />
		<result property="dspCatastrophicDesc"		column="CATASTROPHIC_DESC" />
		<result property="creditBranch"				column="CRED_BRANCH" />
		<result property="dspCredBrDesc"			column="CRED_BRANCH_NAME" />
		<result property="opNumber"				    column="DSP_OP_NUMBER" />
		<result property="totalTag"					column="TOTAL_TAG" />
		<result property="settlingAgentCode"		column="SETTLING_AGENT_CD"/>
		<result property="surveyAgentCode"			column="SURVEY_AGENT_CD"/>
		<result property="dspSettlingName"			column="DSP_SETTLING_NAME"/>
		<result property="dspSurveyName"			column="DSP_SURVEY_NAME"/>
		<result property="giclMortgageeExist"		column="GICL_MORTGAGEE_EXIST" />
		<result property="withRecovery"				column="RECOVERY_EXIST" />
		<result property="basicIntmSw"				column="BASIC_INTM_EXIST" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="ClaimsInformationTableGridMap" extends="ClaimsInformationResultMap">
		<result column="sdf_loss_date" 		property="sdfLossDate" /> <!-- added by steven 06.03.2013 -->
		<result column="sdf_clm_file_date"	property="sdfClaimFileDate"/> <!-- added by steven 06.03.2013 -->
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
		<result property="lineName"			column="LINE_NAME" /> <!-- added by gab 05.23.2016 SR 21694 -->
	</resultMap>
	
	<resultMap class="GICLClaimsClass" id="relatedClaimsMap">
		<result property="claimId"				column="claim_id" />
		<result property="lineCode"				column="line_cd" />
		<result property="claimNumber"			column="claim_no" />
		<result property="paidAmount"			column="paid_amt" />
		<result property="claimStatDesc"		column="clm_stat_desc" />
		<result property="claimFileDate"		column="clm_file_date" />
		<result property="strClaimFileDate"     column="str_clm_file_date" />
		<result property="claimSettlementDate"	column="clm_setl_date" />
		<result property="claimAmount"			column="claim_amt" />
		<result property="rowNum"				column="rownum_" />
		<result property="rowCount"				column="count_" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getClaimsTableGridListingMap">
		<result column="claim_id" 	property="claimId" />
		<result column="user_id"	property="dcbUserId" />
		<result column="rownum_" 	property="rowNum" />
		<result column="count_"		property="rowCount"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="claimListingMap">
		<result column="claim_id" 	    property="claimId" />
		<result column="claim_no"		property="claimNo" />
		<result column="policy_no"		property="policyNo" />
		<result column="claim_stat_desc"		property="claimStatDesc" />
		<result column="in_house_adjustment"	property="inHouseAdjustment" />
		<result column="plate_no"		property="plateNumber" />
		<result column="assured_name" 	property="assuredName" />
		<result column="pack_policy" 	property="packPolicy" />
		<result column="line_cd" 		property="lineCode" />
		<result column="subline_cd" 	property="sublineCd" />
		<result column="iss_cd" 		property="issueCode" />
		<result column="issue_yy" 		property="issueYy"/>
		<result column="clm_yy" 		property="claimYy" />
		<result column="clm_seq_no" 	property="claimSequenceNo" />
		<result column="pol_iss_cd" 	property="policyIssueCode" />
		<result column="pol_seq_no" 	property="policySequenceNo" />
		<result column="renew_no" 		property="renewNo" />
		<result column="rownum_" 		property="rowNum" />
		<result column="count_"			property="rowCount"/>
		<result column="loss_date" 		property="lossDate"/>
		<result column="dsp_loss_date"  property="dspLossDate"/>
		<result column="loss_cat_cd"    property="lossCatCd" />
		<result column="loss_cat_des"	property="lossCatDes" />
		<result column="expiry_date"	property="expiryDate" />
		<result column="incept_date"	property="inceptDate" />
		<result column="pol_eff_date"	property="polEffDate" />
		<result column="catastrophic_cd" property="catastrophicCd" />
		<result column="peril_cd"		property="perilCd" />
		<result column="item_limit"		property="itemLimit" />
		<result column="district_no" 	property="districtNo"/>
		<result column="block_id"	 	property="blockId"/>
		<result column="package_policy"	property="packagePolicy"/>
		<result column="grouped_item_title"	property="groupedItemTitle"/>
		<result column="assignee"		property="assignee"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="lossRecoveryTagListingMap">
		<result column="claim_id" 	    property="claimId" />
		<result column="claim_no"		property="claimNo" />
		<result column="policy_no"		property="policyNo" />
		<result column="claim_stat_desc"		property="claimStatDesc" />
		<result column="assured_name" 	property="assuredName" />
		<result column="in_house_adjustment"	property="inHouseAdjustment" />
		<result column="loss_date" 		property="lossDate"/>
		<result column="dsp_loss_date"  property="dspLossDate"/>
		<result column="loss_cat_cd"    property="lossCatCd" />
		<result column="loss_cat_des"	property="lossCatDes" />
		<result column="recovery_sw"	property="recoverySw" />
		<result column="recovery_exist"	property="recoveryExist" />
		<result column="dist_sw"	property="distSw" />
		<result column="entry_tag"	property="entryTag" />
		<result column="stat_sw"	property="statSw" />
		<result column="subline_cd" property="sublineCd"/>
		<result property="issueCode" 				column="iss_cd"/>
		<result property="lineCode"					column="line_cd"/>
		<result property="claimYy" column="clm_Yy"/>
		<result property="claimSequenceNo" column="clm_seq_no"/>
		<result property="policyIssueCode" column="pol_iss_cd"/>
		<result property="policySequenceNo" column="pol_Seq_No"/>
		<result property="renewNo" column="renew_No"/>
		<result column="rownum_" 		property="rowNum" />
		<result column="count_"			property="rowCount"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="lossRecoveryListingMap">
		<result column="recovery_id"	property="recoveryId" />
		<result column="rec_year"		property="recYear" />
		<result column="rec_seq_no"		property="recSeqNo" />
		<result column="line_cd"		property="lineCd2" />
		<result column="line_cd"		property="lineCd3" />
		<result column="iss_cd"			property="issCd2" />
		<result column="subline_cd"		property="sublineCd2" />
		<result column="issue_yy"		property="issueYy" />
		<result column="clm_stat_cd"	property="clmStatCd" />
		<result column="loss_cat_cd"	property="lossCatCd" />
		<result column="assd_no"		property="assdNo" />
		<result column="loss_date"		property="lossDate" />
		<result column="clm_file_date"	property="clmFileDate" />
		<result column="cancel_tag"		property="cancelTag" />
		<result column="claim_id"		property="claimId" />
		<result column="assured_name"	property="assuredName" />
		<result column="line_cd"		property="lineCd" />
		<result column="subline_cd"		property="sublineCd" />
		<result column="iss_cd"			property="issueCd" />
		<result column="clm_yy"			property="claimYy" />
		<result column="clm_seq_no"		property="claimSeqNo" />
		<result column="pol_iss_cd"		property="polIssCd" />
		<result column="pol_seq_no"		property="polSeqNo" />
		<result column="renew_no"		property="renewNo" />
		<result column="claim_no"		property="claimNo" />
		<result column="recovery_no"	property="recoveryNo" />
		<result column="policy_no"		property="policyNo" />
		<result column="wra" 	    	property="wra" />
		<result column="rec_stat_desc" 	property="recStatDesc" />
		<result column="rec_stat_cd" 	property="recStatCd" />
		<result column="loss_cat_des" 	property="lossCatDes" />
		<result column="dist" 			property="dist" />
		<result column="entry" 			property="entry" />
		<result column="rownum_" 		property="rowNum" />
		<result column="count_"			property="rowCount"/>
		<result column="clm_stat_desc"	property="clmStatDesc"/>	
		<result column="dsp_loss_date"	property="dspLossDate"/> 
		<result column="recovery_acct_id"  property="recoveryAcctId"/> 
	</resultMap>

	<resultMap id="claimsMenuMap" class="java.util.HashMap">
		<result column="basic_information" 	property="basicInformation" />
		<result column="item_information" 	property="itemInformation" />
		<result column="reserve" 			property="reserve" />
		<result column="lossexpense_history" property="lossexpenseHistory" />
		<result column="generate_advice" 	property="generateAdvice" />
		<result column="loss_recovery" 	    property="lossRecovery" />
		<result column="reports" 			property="reports" />
		<result column="recovery_information" property="recoveryInformation" />
		<result column="recovery_distribution" property="recoveryDistribution" />
		<result column="generate_recovery_acct_entries" property="generateRecAcctEnt" />
		<result column="claim_reserve" 		property="claimReserve" />
		<result column="pla" 				property="pla" />
		<result column="plr" 				property="plr" />
		<result column="sub_generate_advice" property="subGenerateAdvice" />
		<result column="generate_fla" 		property="generateFla" />
		<result column="generate_loa" 		property="generateLoa" />
		<result column="generate_cash_settlement" property="generateCashSettlement" />
	</resultMap>
	
	<resultMap class="GICLClaimsClass" id="GICLClaimsBaseClassResultMap">
		<result property="accountOfCode"	column="acct_of_cd" />
		<result property="assuredName"		column="assured_name" />
		<result property="assuredName2"		column="assd_name2" />
		<result property="assuredNo"		column="assd_no" />
		<result property="blockId"			column="block_id" />
		<result property="catastrophicCode"	column="catastrophic_cd" />
		<result property="cityCode"			column="city_cd" />
		<result property="claimId"			column="claim_id" />
		<result property="claimAmount"		column="clm_amt" />
		<result property="claimControl"		column="clm_control" />
		<result property="claimCoop"		column="clm_coop" />
		<result property="claimDistTag"		column="clm_dist_tag" />
		<result property="claimFileDate"	column="clm_file_date" />
		<result property="claimSequenceNo"	column="clm_seq_no" />
		<result property="claimSettlementDate"	column="clm_setl_date" />
		<result property="claimStatusCd"	column="clm_stat_cd" />
		<result property="claimYy"			column="clm_yy" />
		<result property="closeDate"		column="close_date" />
		<result property="contactNumber"	column="contact_no" />
		<result property="cpiBranchCd"		column="cpi_branch_cd" />
		<result property="cpiRecNo"			column="cpi_rec_no" />
		<result property="creditBranch"		column="cred_branch" />
		<result property="csrNo"			column="csr_no" />
		<result property="defProcessor"		column="def_processor" />
		<result property="districtNumber"	column="district_no" />
		<result property="dspLossDate"		column="dsp_loss_date" />
		<result property="emailAddress"		column="email_address" />
		<result property="entryDate"		column="entry_date" />
		<result property="expiryDate"		column="expiry_date" />
		<result property="expPaidAmount"	column="exp_pd_amt" />
		<result property="expenseResAmount"	column="exp_res_amt" />
		<result property="intermediaryNo"	column="intm_no" />
		<result property="inHouseAdjustment" column="in_hou_adj" />
		<result property="issueYy"			column="issue_yy" />
		<result property="issueCode"		column="iss_cd" />
		<result property="lastUpdate"		column="last_update" />
		<result property="lineCode"			column="line_cd" />
		<result property="locationCode"		column="location_cd" />
		<result property="lossCatCd"		column="loss_cat_cd" />
		<result property="lossDate"			column="loss_date" />
		<result property="lossDetails"		column="loss_dtls" />
		<result property="lossLocation1"	column="loss_loc1" />
		<result property="lossLocation2"	column="loss_loc2" />
		<result property="lossLocation3"	column="loss_loc3" />
		<result property="lossPaidAmount"	column="loss_pd_amt" />
		<result property="lossResAmount"	column="loss_res_amt" />
		<result property="maxEndorsementSequenceNumber" column="max_endt_seq_no" />
		<result property="motorNumber"		column="motor_no" />
		<result property="netPaidExpense"	column="net_pd_exp" />
		<result property="netPaidLoss"		column="net_pd_loss" />
		<result property="obligeeNo"		column="obligee_no" />
		<result property="oldStatCd"		column="old_stat_cd" />
		<result property="packPolicyId"		column="pack_policy_id" />
		<result property="plateNumber"		column="plate_no" />
		<result property="policyEffectivityDate" column="pol_eff_date" />
		<result property="policyIssueCode"	column="pol_iss_cd" />
		<result property="policySequenceNo"	column="pol_seq_no" />
		<result property="provinceCode"		column="province_cd" />
		<result property="reasonCode"		column="reason_cd" />
		<result property="recoverySw"		column="recovery_sw" />
		<result property="refreshSw"		column="refresh_sw" />
		<result property="remarks"			column="remarks" />
		<result property="renewNo"			column="renew_no" />
		<result property="reportedBy"		column="reported_by" />
		<result property="riCd"				column="ri_cd" />
		<result property="serialNumber"		column="subline_cd" />
		<result property="settlingAgentCode" column="settling_agent_cd" />
		<result property="specialInstructions" column="special_instructions" />
		<result property="sublineCd"		column="subline_cd" />
		<result property="surveyAgentCode"	column="survey_agent_cd" />
		<result property="totalTag"			column="total_tag" />
		<result property="transactionNo"	column="tran_no" />
		<result property="userId"			column="user_id" />
		<result property="zipCode"			column="zip_cd" />
	</resultMap>
	
	<resultMap id="lovMap" class="java.util.HashMap">
  		<result column="code" 				property="code" />			
	  	<result column="code_desc"			property="codeDesc"	/>
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<resultMap id="ClmListPerPackagePolicyLovResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
  		<result column="line_cd" 			property="lineCd" />			
	  	<result column="subline_cd"			property="sublineCd"/>
  		<result column="iss_cd" 			property="issCd" />
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="pack_policy_id"		property="packPolicyId"/>
  	</resultMap>
  	
  	<resultMap id="clmAssuredMap" class="java.util.HashMap">
  		<result column="assd_no" 			property="assdNo" />			
	  	<result column="assured_name"		property="assuredName"	/>
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<parameterMap class="map" id="updateClaimsBasicInfoMap">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="claimId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="clmStatCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="clmControl"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="clmCoop"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="unpaidPremium"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="updUserFlag"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
	</parameterMap>
	
	<resultMap id="getBasicIntmMap" class="java.util.HashMap">
  		<result column="claim_id" 			property="claimId" />			
	  	<result column="policy_no"			property="policyNo"	/>
	  	<result column="intm_no"			property="intmNo"	/>
	  	<result column="parent_intm_no"		property="parentIntmNo"	/>
	  	<result column="intm_type"			property="intmType"	/>
	  	<result column="intm_name"			property="intmName"	/>
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<resultMap class="GICLClaimsClass" id="GICLClaimsInfoResultMap">
  		<result column="claim_no"	    property="claimNumber"/>
  		<result column="policy_no"		property="policyNo"/>
  		<result column="assured_name"	property="assuredName"/>
  		<result column="loss_ctgry"		property="lossCtgry"/>
  		<result column="dsp_loss_date"	property="dspLossDate"/>
  		<result column="line_cd"		property="lineCd"/>
  	</resultMap>
  	
  	<resultMap class="java.util.HashMap" id="claimsPerPolicyDetailsResultMap">
		<result property="lineCode"					column="line_cd"/>
		<result property="sublineCd" 				column="subline_cd"/>
		<result property="issueCode" 				column="iss_cd"/>		
		<result property="policyIssueCode" 			column="pol_iss_cd"/>
		<result property="issueYy" 					column="issue_yy"/>
		<result property="policySequenceNo" 		column="pol_seq_no"/>
		<result property="renewNo" 					column="renew_no"/>
		<result property="claimYy" 					column="clm_yy"/>
		<result property="claimSequenceNo" 			column="clm_seq_no"/>
		<result property="assuredName"				column="assured_name"/>
		<result property="assuredNo"				column="assd_no"/>
		<result property="claimId" 					column="claim_id"/>
		<result property="entryDate"				column="entry_date"/>
		<result property="claimFileDate"			column="clm_file_date"/>
		<result property="dspLossDate"				column="dsp_loss_date"/>
		<result property="clmStatDesc"				column="clm_stat_desc" /> 
		<result property="plateNumber"				column="plate_no"/>
		<result property="serialNumber"				column="serial_no" />
		<result property="giclClmItemExist"			column="gicl_clm_item_exist"/>
		<result property="giclClmReserveExist"		column="gicl_clm_reserve_exist"/>
		<result property="lossPaidAmount"			column="loss_pd_amt"/>
		<result property="lossResAmount"			column="loss_res_amt"/>
		<result property="expPaidAmount"			column="exp_pd_amt"/>
		<result property="expenseResAmount"			column="exp_res_amt"/>
		<result property="totLossPaidAmount"		column="tot_loss_pd_amt"/>
		<result property="totLossResAmount"			column="tot_loss_res_amt"/>
		<result property="totExpPaidAmount"			column="tot_exp_pd_amt"/>
		<result property="totExpenseResAmount"		column="tot_exp_res_amt"/>
		<result property="rowNum" 					column="rownum_"/>
		<result property="rowCount" 				column="count_"/>
	</resultMap>	
	
	<resultMap class="GICLClaimsClass" id="getRelatedClaimsGICLS024Map">
  		<result column="claim_no"	    property="claimNumber"/>
  		<result column="policy_no"		property="policyNo"/>
  		<result column="line_cd"		property="lineCd"/>
  		<result column="dsp_loss_date"	property="dspLossDate"/>
  		<result column="loss_date"	property="lossDate"/>
  		<result column="assured_name"		property="assuredName"/>
  		<result column="loss_ctgry"	property="lossCtgry"/>
  		<result column="subline_cd"		property="sublineCd"/>
  		<result column="pol_iss_cd"	property="polIssCd"/>
  		<result column="issue_yy"		property="issueYy"/>
  		<result column="pol_seq_no"	property="polSeqNo"/>
  		<result column="renew_no"		property="renewNo"/>
  		<result column="claim_id"	property="claimId"/>
  		<result column="iss_cd"		property="issCd"/>
  		<result column="pol_eff_date"	property="polEffDate"/>
  		<result column="expiry_date"		property="expiryDate"/>
  		<result column="clm_file_date"	property="claimFileDate"/>
  		<result column="clm_stat_desc"		property="clmStatDesc"/>
  		<result column="catastrophic_cd"	property="catastrophicCode"/>
  		<result column="clm_yy"		property="claimYy"/>
  	</resultMap>
  	
  	<resultMap class="GICLClaimsClass" id="claimClosingResultMap">
   		<result property="claimNumber"					column="claim_no"/>
  		<result property="policyNo"						column="policy_no"/>
		<result property="lineCode"						column="line_cd"/>
		<result property="sublineCd" 					column="subline_cd"/>
		<result property="issCd"	 					column="iss_cd"/>		
		<result property="claimYy" 						column="clm_yy"/>
		<result property="claimSequenceNo" 				column="clm_seq_no"/>
		<result property="policyIssueCode" 				column="pol_iss_cd"/>
		<result property="issueYy" 						column="issue_yy"/>
		<result property="policySequenceNo"				column="pol_seq_no"/>
		<result property="renewNo" 						column="renew_no"/>
		<result property="assuredNo"					column="assd_no"/>
		<result property="assuredName"					column="assured_name"/>
    	<result property="claimId" 						column="claim_id"/>
		<result property="dspLossDate"					column="dsp_loss_date"/>
		<result property="claimFileDate"				column="clm_file_date"/>
		<result property="remarks"						column="remarks"/>
		<result property="closeDate" 					column="close_date"/>
		<result property="entryDate" 					column="entry_date"/>
		<result property="userLastUpdate"				column="last_update"/>
		<result property="inHouseAdjustment"	    	column="in_hou_adj"/>
		<result property="userId"						column="user_id"/>
		<result property="lossResAmount"				column="loss_res_amt"/>
		<result property="expenseResAmount"				column="exp_res_amt"/>
		<result property="lossPaidAmount"				column="loss_pd_amt"/>
		<result property="expPaidAmount"				column="exp_pd_amt"/>	
		<result property="claimControl"					column="clm_control"/>	
		<result property="claimCoop"					column="clm_coop"/>	
		<result property="recoverySw"					column="recovery_sw"/>	
		<result property="refreshSw"					column="refresh_sw"/>
		<result property="maxEndorsementSequenceNumber"	column="max_endt_seq_no" /> 
		<result property="lossDate"						column="loss_date"/>
		<result property="claimSettlementDate"			column="clm_setl_date"/>
		<result property="lossLocation1"				column="loss_loc1"/>
	    <result property="lossLocation2"				column="loss_loc2"/>
		<result property="lossLocation3"				column="loss_loc3"/>
		<result property="policyEffectivityDate"		column="pol_eff_date"/>
		<result property="expiryDate"					column="expiry_date"/>
		<result property="csrNo"						column="csr_no"/>
		<result property="lossCatCd"					column="loss_cat_cd"/>
		<result property="intermediaryNo"				column="intm_no"/>	
		<result property="claimAmount"					column="clm_amt"/>	
		<result property="lossDetails"					column="loss_dtls"/>	
		<result property="obligeeNo"					column="obligee_no"/>
		<result property="riCd"							column="ri_cd" /> 
		<result property="plateNumber"					column="plate_no"/>
		<result property="cpiRecNo"						column="cpi_rec_no"/>
		<result property="cpiBranchCd"					column="cpi_branch_cd"/>
	    <result property="oldStatCd"					column="old_stat_cd"/>
		<result property="catastrophicCode"				column="catastrophic_cd"/>
		<result property="accountOfCode"				column="acct_of_cd"/>
		<result property="claimStatusCd"				column="clm_stat_cd"/>
		<result property="claimStatDesc"				column="clm_stat_desc"/>
		<result property="polFlag"						column="pol_flag"/>
		<result property="clmSetld"						column="clm_setld"/>
		<result property="adviceExist"					column="advice_exist"/>
		<result property="chkPayment"					column="chk_payment"/>
		<result property="paytSw"						column="payt_sw"/>
		<result property="withRecovery"					column="with_recovery"/>
		<result property="dspCatDesc"					column="dsp_cat_desc"/>
		<result property="reasonDesc"					column="reason_desc"/>
		<result property="reasonCode"					column="reason_cd"/>
	</resultMap>
	
	<resultMap class="GICLClaimsClass" id="claimClosingResultMap2" extends="claimClosingResultMap">
    	<result property="rowNum" 						column="rownum_"/>
		<result property="rowCount" 					column="count_"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap"  id="GICLS251LovResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="assdNo" column="assd_no" />
		<result property="assdName" column="assd_name" />
		<result property="recoveryDetailsCount" column="recovery_details_count" />
	</resultMap>
	
	<!-- added by adpascual 07.2013 -->
	<!-- start here -->
	<resultMap class="java.util.HashMap" id="giclClaimListMap">
    	<result property="claimId" 					column="claim_id"/>
		<result property="lineCd" 					column="line_cd"/>
		<result property="sublineCd"				column="subline_cd"/>
		<result property="clmLineCd" 				column="clm_line_cd"/>
		<result property="clmSublineCd"				column="clm_subline_cd"/>		
		<result property="issCd" 					column="iss_cd"/>
		<result property="clmYy" 					column="clm_yy"/>
		<result property="clmSeqNo" 				column="clm_seq_no"/>
		<result property="polIssCd" 				column="pol_iss_cd"/>
		<result property="issueYy" 					column="issue_yy"/>
		<result property="polSeqNo" 				column="pol_seq_no"/>
		<result property="renewNo" 					column="renew_no"/>
		<result property="assuredName"				column="assured_name"/>
		<result property="claimStatus" 				column="clm_stat_desc"/>
		<result property="lossDate" 				column="loss_date"/>
		<result property="lossCategory"				column="loss_cat"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="clmListTableGridMap" extends="giclClaimListMap">
		<result column="ROWNUM_" 			property="rowNum" />			
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	<!-- end here -->
	<!--Added by pjsantos 11/08/2016 GENQA 5818  -->
	  <resultMap class="GICLClaimsClass"         id="ClaimsInformationResultMap2">
        <result property="claimId"                    	column="CLAIM_ID" />
        <result property="claimNo"                    	column="CLAIM_NO" />
        <result property="policyNo"                    	column="POLICY_NO" />
        <result property="lineCode"                    	column="LINE_CD" />
        <result property="sublineCd"                	column="SUBLINE_CD" />
        <result property="issueYy"                    	column="ISSUE_YY" />
        <result property="policySequenceNo"            	column="POL_SEQ_NO" />
        <result property="renewNo"                    	column="RENEW_NO" />
        <result property="policyIssueCode"            	column="POL_ISS_CD" />
        <result property="claimYy"                    	column="CLM_YY" />
        <result property="claimSequenceNo"            	column="CLM_SEQ_NO" />
        <result property="issueCode"                	column="ISS_CD" />
        <result property="assuredNo"                    column="ASSD_NO" />
        <result property="assuredName"                	column="DSP_ASSURED" />
        <result property="recoverySw"                	column="RECOVERY_SW" />
        <result property="userId"                    	column="USER_ID" />
        <result property="lastUpdate"                	column="LAST_UPDATE" />
        <result property="userLastUpdate"            	column="LAST_UPDATE" />
        <result property="lossDate"                    	column="LOSS_DATE" /> 
        <result property="dspLossDate"                	column="DSP_LOSS_DATE" />
        <result property="accountOfCode"            	column="ACCT_OF_CD" />
	    <result property="claimFileDate"            	column="CLM_FILE_DATE" />
        <result property="entryDate"                	column="ENTRY_DATE" /> 
        <result property="obligeeNo"                	column="OBLIGEE_NO" />
        <result property="claimStatusCd"            	column="CLM_STAT_CD" />
        <result property="claimStatDesc"            	column="CLM_STAT_DESC" />
        <result property="clmStatDesc"                	column="CLM_STAT_DESC" />
        <result property="claimSettlementDate"        	column="CLM_SETL_DATE" />
        <result property="lossPaidAmount"            	column="LOSS_PD_AMT" />
        <result property="lossResAmount"            	column="LOSS_RES_AMT" />
        <result property="expPaidAmount"            	column="EXP_PD_AMT" />
        <result property="inHouseAdjustment"        	column="IN_HOU_ADJ" />
        <result property="intermediaryNo"            	column="INTM_NO" />
        <result property="lossCatCd"                	column="LOSS_CAT_CD" />
        <result property="lossLocation1"           	 	column="LOSS_LOC1" />
        <result property="lossLocation2"            	column="LOSS_LOC2" />
        <result property="lossLocation3"            	column="LOSS_LOC3" />
        <result property="policyEffectivityDate"    	column="POL_EFF_DATE" />
        <result property="csrNo"                    	column="CSR_NO" />
        <result property="claimAmount"                	column="CLM_AMT" />
        <result property="lossDetails"                	column="LOSS_DTLS" />
        <result property="expenseResAmount"            	column="EXP_RES_AMT" />
        <result property="riCd"                        	column="RI_CD" />
        <result property="plateNumber"                	column="PLATE_NO" />
        <result property="claimDistTag"                	column="CLM_DIST_TAG" />
        <result property="oldStatCd"                	column="OLD_STAT_CD" />
        <result property="closeDate"                	column="CLOSE_DATE" />
        <result property="expiryDate"                	column="EXPIRY_DATE" /> 
        <result property="maxEndorsementSequenceNumber"    column="MAX_ENDT_SEQ_NO" />    
        <result property="packPolicyId"                	column="PACK_POLICY_ID" />        
        <result property="packPolNo"                	column="PACK_POL_NO" />
        <result property="assignee"                    	column="ASSIGNEE" />      
    </resultMap>
    <resultMap class="java.util.HashMap" id="ClaimsInformationTableGridMap2" extends="ClaimsInformationResultMap2">
		<result column="rownum_" 					property="rowNum" />
		<result column="count_"						property="rowCount"/>
		<result property="sdfLossDate"    		    column="SDF_LOSS_DATE" />
        <result property="sdfClaimFileDate"         column="SDF_CLM_FILE_DATE" />
        <result property="lineName"                	column="LINE_NAME" />        
	</resultMap>
    <!--pjsantos end  -->
	<select id="getGICLS251Lov" resultMap="GICLS251LovResultMap">
	    <!-- added By MarkS 11.11.2016 SR5836 optimization -->
		SELECT * FROM TABLE(gicls251_pkg.get_assured_lov (#userId#,
							                              #controlModule#,
							                              #findText#,
							                              #sortColumn#,
							                              #ascDescFlg#,
							                              #from#,
							                              #to#,
							                              #searchString#))
		<!-- Commented By MarkS 11.11.2016 SR5836 optimization -->
		<!-- SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * FROM TABLE(GICLS251_PKG.get_assured_lov(#userId#))
		                <isNull property="findText">
		                	WHERE UPPER(assd_name) LIKE UPPER(#searchString#)
		          			OR assd_no LIKE #searchString#
		                </isNull>
		                <isNotNull property="findText">
		                	WHERE UPPER(assd_name) LIKE UPPER(#findText#)
		          			OR assd_no LIKE #findText#
		                </isNotNull>
		          		<isEqual property="sortColumn" compareValue="assdNo">
  		                  		ORDER BY assd_no
  		                </isEqual>
  		                <isEqual property="sortColumn" compareValue="assdName">
  		                  		ORDER BY assd_name
  		                </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS251_PKG.get_assured_lov(#userId#))
		                  <isNull property="findText">
		                	WHERE UPPER(assd_name) LIKE UPPER(#searchString#)
		          			OR assd_no LIKE #searchString#
		                </isNull>
		                <isNotNull property="findText">
		                	WHERE UPPER(assd_name) LIKE UPPER(#findText#)
		          			OR assd_no LIKE #findText#
		                </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	 -->
	</select>
	
	<resultMap id="GICLS263MakeLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="make_cd" 		property="makeCd" />
		<result column="make" 		    property="make" />
		<result column="car_company" 	property="carCompany" />
		<result column="car_company_cd" property="carCompanyCd" />
	</resultMap>	
	
	<select id="getGICLS263MakeLov" resultMap="GICLS263MakeLOVResultMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT * FROM TABLE (GICLS263_PKG.get_make_lov_list(#userId#))
		     <isNull property="findText">
		     	    WHERE UPPER(MAKE) LIKE UPPER(#searchString#)
		         	OR MAKE_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(MAKE) LIKE UPPER(#findText#)
         		 	OR MAKE_CD LIKE #findText#
             </isNotNull>
             <isEqual property="sortColumn" compareValue="makeCd">
              	 ORDER BY make_cd
             </isEqual>
			 <isEqual property="sortColumn" compareValue="make">
			     ORDER BY make
			 </isEqual>
			 <isNotNull property="sortColumn">
			 <isEqual property="ascDescFlg" compareValue="ASC">
			 	ASC
			 </isEqual>
			 <isEqual property="ascDescFlg" compareValue="DESC">
			 	DESC
			 </isEqual>
			 </isNotNull>
		     ) a, (SELECT count(*) count_ 
		             FROM TABLE (GICLS263_PKG.get_make_lov_list(#userId#))
			 <isNull property="findText">
		     	    WHERE UPPER(MAKE) LIKE UPPER(#searchString#)
		         	OR MAKE_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(MAKE) LIKE UPPER(#findText#)
         		 	OR MAKE_CD LIKE #findText#
             </isNotNull>
		    ) b)WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="GICLS275CompanyLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="car_company" 	property="carCompany" />
		<result column="car_company_cd" property="carCompanyCd" />
	</resultMap>
	
	<select id="getGICLS275CompanyLov" resultMap="GICLS275CompanyLOVResultMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT * FROM TABLE (GICLS275_PKG.get_mcreplacementpart_lov_list(#searchString#, #carMake#, #modelYear#, #carPart#)) <!-- // Dren 10.12.2015 SR-SIT : 0004920 - Additional LOV parameters. -->
		     <isNull property="findText">
		     	    WHERE UPPER(CAR_COMPANY) LIKE UPPER(#searchString#)
		         	OR CAR_COMPANY_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(CAR_COMPANY) LIKE UPPER(#findText#)
         		 	OR CAR_COMPANY_CD LIKE #findText#
             </isNotNull>
             <isEqual property="sortColumn" compareValue="carCompanyCd">
              	 ORDER BY car_company_cd
             </isEqual>
			 <isEqual property="sortColumn" compareValue="carCompany">
			     ORDER BY car_company
			 </isEqual>
			 <isNotNull property="sortColumn">
			 <isEqual property="ascDescFlg" compareValue="ASC">
			 	ASC
			 </isEqual>
			 <isEqual property="ascDescFlg" compareValue="DESC">
			 	DESC
			 </isEqual>
			 </isNotNull>
		     ) a, (SELECT count(*) count_ 
		             FROM TABLE (GICLS275_PKG.get_mcreplacementpart_lov_list(#searchString#, #carMake#, #modelYear#, #carPart#)) <!-- // Dren 10.12.2015 SR-SIT : 0004920 - Additional LOV parameters. -->
			 <isNull property="findText">
		     	    WHERE UPPER(CAR_COMPANY) LIKE UPPER(#searchString#)
		         	OR CAR_COMPANY_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(CAR_COMPANY) LIKE UPPER(#findText#)
         		 	OR CAR_COMPANY_CD LIKE #findText#
             </isNotNull>
		    ) b)WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="GICLS275MakeLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="make" 	property="make" />
		<result column="make_cd" property="makeCd" />
	</resultMap>
	
	<select id="getGICLS275MakeLov" resultMap="GICLS275MakeLOVResultMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT * FROM TABLE (GICLS275_PKG.get_mcreplacementmake_lov_list(#searchString#, #carCompany#, #modelYear#, #carPart#)) <!-- // Dren 10.12.2015 SR-SIT : 0004920 - Additional LOV parameters. -->
		     <isNull property="findText">
		     	    WHERE UPPER(MAKE) LIKE UPPER(#searchString#)
		         	OR MAKE_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(MAKE) LIKE UPPER(#findText#)
         		 	OR MAKE_CD LIKE #findText#
             </isNotNull>
             <isEqual property="sortColumn" compareValue="makeCd">
              	 ORDER BY make_cd
             </isEqual>
			 <isEqual property="sortColumn" compareValue="make">
			     ORDER BY make
			 </isEqual>
			 <isNotNull property="sortColumn">
			 <isEqual property="ascDescFlg" compareValue="ASC">
			 	ASC
			 </isEqual>
			 <isEqual property="ascDescFlg" compareValue="DESC">
			 	DESC
			 </isEqual>
			 </isNotNull>
		     ) a, (SELECT count(*) count_ 
		             FROM TABLE (GICLS275_PKG.get_mcreplacementmake_lov_list(#searchString#, #carCompany#, #modelYear#, #carPart#)) <!-- // Dren 10.12.2015 SR-SIT : 0004920 - Additional LOV parameters. -->
		     <isNull property="findText">
		     	    WHERE UPPER(MAKE) LIKE UPPER(#searchString#)
		         	OR MAKE_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(MAKE) LIKE UPPER(#findText#)
         		 	OR MAKE_CD LIKE #findText#
             </isNotNull>
		    ) b)WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="GICLS275YearLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="model_year" 	property="modelYear" />
	</resultMap>
	
	<select id="getGICLS275YearLov" resultMap="GICLS275YearLOVResultMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT * FROM TABLE (GICLS275_PKG.get_mcreplacementyr_lov_list(#searchString#, #make#, #carCompany#, #carPart#)) <!-- // Dren 10.12.2015 SR-SIT : 0004920 - Additional LOV parameters. -->
		     <isNull property="findText">
		     	    WHERE MODEL_YEAR LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE MODEL_YEAR LIKE #findText#
             </isNotNull>  
              <isEqual property="sortColumn" compareValue="modelYear">
              	 ORDER BY model_year
             </isEqual>			
			 <isNotNull property="sortColumn">
			 <isEqual property="ascDescFlg" compareValue="ASC">
			 	ASC
			 </isEqual>
			 <isEqual property="ascDescFlg" compareValue="DESC">
			 	DESC
			 </isEqual>
			 </isNotNull>       
		     ) a, (SELECT count(*) count_ 
		             FROM TABLE (GICLS275_PKG.get_mcreplacementyr_lov_list(#searchString#, #make#, #carCompany#, #carPart#)) <!-- // Dren 10.12.2015 SR-SIT : 0004920 - Additional LOV parameters. -->
		     <isNull property="findText">
		     	    WHERE MODEL_YEAR LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE MODEL_YEAR LIKE #findText#
             </isNotNull>
		    ) b)WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="GICLS275PartsLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="loss_exp_cd" 	property="lossExpCd" />
		<result column="loss_exp_desc" 	property="lossExpDesc" />
	</resultMap>
	
	<select id="getGICLS275PartsLov" resultMap="GICLS275PartsLOVResultMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT * FROM TABLE (GICLS275_PKG.get_replacementparts_lov_list(#searchString#, #make#, #carCompany#, #modelYear#))
		     <isNull property="findText">
		     	    WHERE UPPER(LOSS_EXP_DESC) LIKE UPPER(#searchString#)
		         	OR LOSS_EXP_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(LOSS_EXP_DESC) LIKE UPPER(#findText#)
         		 	OR LOSS_EXP_CD LIKE #findText#
             </isNotNull>
             <isEqual property="sortColumn" compareValue="lossExpCd">
              	 ORDER BY loss_exp_cd
             </isEqual>
			 <isEqual property="sortColumn" compareValue="lossExpDesc">
			     ORDER BY loss_exp_desc
			 </isEqual>
			 <isNotNull property="sortColumn">
			 <isEqual property="ascDescFlg" compareValue="ASC">
			 	ASC
			 </isEqual>
			 <isEqual property="ascDescFlg" compareValue="DESC">
			 	DESC
			 </isEqual>
			 </isNotNull>
		     ) a, (SELECT count(*) count_ 
		             FROM TABLE (GICLS275_PKG.get_replacementparts_lov_list(#searchString#, #make#, #carCompany#, #modelYear#))
		     <isNull property="findText">
		     	    WHERE UPPER(LOSS_EXP_DESC) LIKE UPPER(#searchString#)
		         	OR LOSS_EXP_CD LIKE #searchString#
			 </isNull>
		     <isNotNull property="findText">
                    WHERE UPPER(LOSS_EXP_DESC) LIKE UPPER(#findText#)
         		 	OR LOSS_EXP_CD LIKE #findText#
             </isNotNull>
		    ) b)WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
		<resultMap id="GICLS266IntmLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="intm_name" 		property="intmName" />
		<result column="intm_no" 		property="intmNo" />
		<result column="recovery_details_count" property="recoveryDetailsCount" />
	</resultMap>	
	
	<select id="getGICLS266IntermediaryLov" resultMap="GICLS266IntmLOVResultMap">
		 <!--Modified by pjsantos 11/10/2016, for optimization GENQA 5835-->
		 <!-- SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM ( -->SELECT * FROM TABLE (GICLS266_PKG.get_intermediary_lov_list(#userId#, #searchString#, #findText#, #intmNo#, #intmName#, #sortColumn#, #ascDescFlg#, #from#, #to#))
		  <!--    <isNull property="findText">
		         WHERE UPPER(INTM_NAME) LIKE UPPER(NVL(#searchString#, INTM_NAME))
		         OR TO_CHAR(INTM_NO) = NVL(#searchString#, INTM_NO)
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(INTM_NAME) LIKE UPPER(NVL(#findText#, INTM_NAME))
		         OR TO_CHAR(INTM_NO) = NVL(#findText#, INTM_NO)
             </isNotNull>
             <isEqual property="sortColumn" compareValue="intmNo">
              	 ORDER BY intm_no
             </isEqual>
			 <isEqual property="sortColumn" compareValue="intmName">
			     ORDER BY intm_name
			 </isEqual>
			 <isNotNull property="sortColumn">
			 <isEqual property="ascDescFlg" compareValue="ASC">
			 	ASC
			 </isEqual>
			 <isEqual property="ascDescFlg" compareValue="DESC">
			 	DESC
			 </isEqual>
			 </isNotNull>
		     ) a, (SELECT count(*) count_ 
		             FROM TABLE (GICLS266_PKG.get_intermediary_lov_list(#userId#))
			 <isNull property="findText">
		         WHERE UPPER(INTM_NAME) LIKE UPPER(NVL(#searchString#, INTM_NAME))
		         OR TO_CHAR(INTM_NO) = NVL(#searchString#, INTM_NO)
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(INTM_NAME) LIKE UPPER(NVL(#findText#, INTM_NAME))
		         OR TO_CHAR(INTM_NO) = NVL(#findText#, INTM_NO)
             </isNotNull>
		    ) b)WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>
	
	
	<resultMap class="java.util.HashMap" id="ClmUserListResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="inHouAdj" column="in_hou_adj"/>
	</resultMap>
	
	<select id="getClmUserLOV" resultMap="ClmUserListResultMap" parameterClass="java.util.HashMap" >
		<!--Modified by pjsantos 11/10/2016, for optimization GENQA 5834  -->
		<!-- SELECT *       
  		  FROM (SELECT rownum rownum_ ,b.count_,a.*     
          		  FROM ( -->SELECT * FROM TABLE(gicls271_pkg.get_in_hou_adj_list(#userId#, #findText#, #searchString#, #sortColumn#, #ascDescFlg#, #from#, #to#))
          		<!--   <isNotNull property="findText">
          		  	WHERE UPPER(in_hou_adj) LIKE UPPER(#findText#) 
          		  </isNotNull>
          		  <isNull property="findText">
          		  	WHERE UPPER(in_hou_adj) LIKE UPPER(#searchString#) 
          		  </isNull>
          		  <isEqual property="sortColumn" compareValue="inHouAdj">
		                  		ORDER BY in_hou_adj
	                </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	 </isNotNull>) a,
               		   (SELECT count(*) count_ FROM TABLE(gicls271_pkg.get_in_hou_adj_list(#userId#))
               		   <isNotNull property="findText">
          		  	WHERE UPPER(in_hou_adj) LIKE UPPER(#findText#) 
          		  </isNotNull>
          		  <isNull property="findText">
          		  	WHERE UPPER(in_hou_adj) LIKE UPPER(#searchString#) 
          		  </isNull>) b)
 		 WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>
	
	<select id="getGiclClaimById" resultMap="GICLClaimsBaseClassResultMap" >
		SELECT * 
		  FROM gicl_claims 
		 WHERE claim_id = #claimId#
	</select>
	
	<!--Modified by Gzelle 06.15.2013 - added sortColumn  -->
	<select id="getRelatedClaims" resultMap="relatedClaimsMap" parameterClass="java.util.HashMap">
		 SELECT *       
  		  FROM (SELECT rownum rownum_ ,b.count_,a.*     
          		  FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_related_claims(#policyId#))
          		  	   <isEqual property="sortColumn" compareValue="claimNumber">
          		  	   		ORDER BY claim_no
          		  	   </isEqual>
          		  	   <isEqual property="sortColumn" compareValue="strClaimFileDate">
          		  	   		ORDER BY str_clm_file_date
          		  	   </isEqual>
          		  	   <isEqual property="sortColumn" compareValue="claimSettlementDate">
          		  	   		ORDER BY clm_setl_date
          		  	   </isEqual>
          		  	   <isEqual property="sortColumn" compareValue="claimAmount">
          		  	   		ORDER BY claim_amt
          		  	   </isEqual>
          		  	   <isEqual property="sortColumn" compareValue="paidAmount">
          		  	   		ORDER BY paid_amt
          		  	   </isEqual>
          		  	   <isEqual property="sortColumn" compareValue="claimStatDesc">
          		  	   		ORDER BY clm_stat_desc
          		  	   </isEqual>
	            	   <isNotNull property="sortColumn">
              		   	<isEqual property="ascDescFlg" compareValue="ASC">
              		   		ASC
              		   	</isEqual>
              		   	<isEqual property="ascDescFlg" compareValue="DESC">
              			 	DESC
              		   	</isEqual>
              	       </isNotNull>          		  	   
          		  	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(GICL_CLAIMS_PKG.get_related_claims(#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getClaimsTableGridListing" resultMap="claimListingMap" parameterClass="java.util.HashMap">
		SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM (SELECT * 
			                  FROM TABLE (GICL_CLAIMS_PKG.get_claim_listing(#filter.assuredName#, #filter.plateNumber#, #filter.claimStatDesc#, #filter.inHouseAdjustment#, #filter.lineCode#, #filter.sublineCd#, #filter.issueCode#, #filter.claimYy#, #filter.claimSequenceNo#, #filter.policyIssueCode#, #filter.policySequenceNo#, #filter.renewNo#))
				              <isEqual property="sortColumn" compareValue="assuredName">
			              		ORDER BY assured_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimStatDesc">
			              		ORDER BY claim_stat_desc
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="inHouseAdjustment">
			              		ORDER BY in_house_adjustment
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="plateNumber">
			              		ORDER BY plate_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (GICL_CLAIMS_PKG.get_claim_listing(#filter.assuredName#, #filter.plateNumber#, #filter.claimStatDesc#, #filter.inHouseAdjustment#, #filter.lineCode#, #filter.sublineCd#, #filter.issueCode#, #filter.claimYy#, #filter.claimSequenceNo#, #filter.policyIssueCode#, #filter.policySequenceNo#, #filter.renewNo#))) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey Jadlocon 09-08-2011 Duplicate Claim List -->
	<select id="getClaimsTableGridListing2" resultMap="claimListingMap" parameterClass="java.util.HashMap">
		SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM (SELECT * 
			                  FROM TABLE (GICL_CLAIMS_PKG.get_claim_listing(#filter.assuredName#, #filter.plateNumber#, #filter.claimStatDesc#, #filter.inHouseAdjustment#, #lineCd#, #filter.sublineCd#, #filter.issueCode#, #filter.claimYy#, #filter.claimSequenceNo#, #filter.policyIssueCode#, #filter.policySequenceNo#, #filter.renewNo#, #moduleId#, #userId#))
				              <dynamic prepend="WHERE ">
					  		  	<isNotEqual prepend="AND" property="allUserSw" compareValue="Y">
									in_house_adjustment = #userId#
								</isNotEqual>
					  		  </dynamic>
				              <isEqual property="sortColumn" compareValue="assuredName">
			              		ORDER BY assured_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimStatDesc">
			              		ORDER BY claim_stat_desc
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="inHouseAdjustment">
			              		ORDER BY in_house_adjustment
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="plateNumber">
			              		ORDER BY plate_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (GICL_CLAIMS_PKG.get_claim_listing(#filter.assuredName#, #filter.plateNumber#, #filter.claimStatDesc#, #filter.inHouseAdjustment#, #lineCd#, #filter.sublineCd#, #filter.issueCode#, #filter.claimYy#, #filter.claimSequenceNo#, #filter.policyIssueCode#, #filter.policySequenceNo#, #filter.renewNo#, #moduleId#, #userId#))			                
			                  <dynamic prepend="WHERE ">
					  		  	<isNotEqual prepend="AND" property="allUserSw" compareValue="Y">
									in_house_adjustment = #userId#
								</isNotEqual>
					  		  </dynamic>
			                  ) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="claimListing" resultMap="claimListingMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(gicl_claims_pkg.get_claim_listing(#filter.assuredName#, #filter.plateNumber#, #filter.claimStatDesc#, #filter.inHouseAdjustment#, #filter.lineCode#, #filter.sublineCd#, #filter.issueCode#, #filter.claimYy#, #filter.claimSequenceNo#, #filter.policyIssueCode#, #filter.policySequenceNo#, #filter.renewNo#))
	</select>
	
	<select id="getLossRecoveryTableGridListing" resultMap="lossRecoveryListingMap" parameterClass="java.util.HashMap">
		<!--Modified by pjsantos 11/11/2016, for optimization GENQA 5825  -->
		<!-- SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM ( -->SELECT * 
			                  FROM TABLE (GICL_CLAIMS_PKG.get_lost_recovery_listing(#moduleId#, #claimNo#, #policyNo#, #recoveryNo#, #assuredName#, 
			                  														#clmFileDate#, #lossDate#, #userId#, #lineCd#, #recStatDesc#,#sortColumn#,
			                  														#ascDescFlg#, #from#, #to#))
				              <dynamic prepend="WHERE ">
					  		  	<isNotNull property="recStatDesc" prepend="AND">
					  		  		UPPER(rec_stat_desc) like UPPER(#recStatDesc#)
					  		  	</isNotNull>
					  		  </dynamic>
				            <!--   <isEqual property="sortColumn" compareValue="assuredName">
			              		ORDER BY assured_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="recoveryNo">
			              		ORDER BY recovery_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="recStatDesc">
			              		ORDER BY rec_stat_desc
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>
				              ) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (GICL_CLAIMS_PKG.get_lost_recovery_listing(#moduleId#, #claimNo#, #policyNo#, #recoveryNo#, #assuredName#, #clmFileDate#, #lossDate#, #userId#, #lineCd#))
			                  <dynamic prepend="WHERE ">
					  		  	<isNotNull property="recStatDesc" prepend="AND">
					  		  		UPPER(rec_stat_desc) like UPPER(#recStatDesc#)
					  		  	</isNotNull>
					  		  </dynamic>
			                  ) b) 
			 WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>
  	
  	<select id="getClaimsBasicInfoDtls" resultMap="GICLClaimsResultMap">
  		SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_basic_info(#claimId#))
  	</select>
  	
  	<select id="initializeMenu" resultMap="claimsMenuMap">
  		SELECT * FROM TABLE(claims_menu_pkg.items(#claimId#, #lineCd#))
  	</select>
  	
  	<select id="getClmAssuredDtlLOV" resultMap="clmAssuredMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_assured(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #renewNo#))              
			          	  <isNotNull property="findText">
		                  WHERE (UPPER(assd_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	  </isNotNull>
			          	  <isNotNull property="sortColumn">
			          	  	  <isEqual property="sortColumn" compareValue="assdNo">
				              		ORDER BY assd_no
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="assuredName">
				              		ORDER BY assured_name
				              </isEqual>	
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_assured(#lineCd#, #sublineCd#, #polIssCd#, #issueYy#, #renewNo#))
		                  <isNotNull property="findText">
		                  WHERE (UPPER(assd_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="enableMenu" resultMap="claimsMenuMap">
  		SELECT * FROM TABLE(claims_menu_pkg.enable_menus(#claimId#, #param#))
  	</select>
  	
  	<procedure id="updateClaimsBasicInfo" parameterMap="updateClaimsBasicInfoMap">
  		BEGIN
  			giis_users_pkg.app_user := ?;
  			GICL_CLAIMS_PKG.update_gicl_claims_gicls010(?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
  	<procedure id="deleteClaimItemAttachments">
  		BEGIN
  			gicl_pictures_pkg.del_gicl_pictures(#claimId#, #itemNo#);
  		END;
  	</procedure>
  	
  	<select id="getBasicIntmDtls" resultMap="getBasicIntmMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE (GICL_CLAIMS_PKG.get_basic_intm_dtls(#claimId#))        
			          	  <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="parentIntmNo">
			              		ORDER BY parent_intm_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmType">
			              		ORDER BY intm_type
			              </isEqual>
			               <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_basic_intm_dtls(#claimId#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getClaimInfo" resultMap="GICLClaimsInfoResultMap">
		SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_claim_info_gicls041(#claimId#))
	</select>

	<procedure id="clmItemPostFormCommit" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_CLAIMS_PKG.clm_item_post_form_commit(#claimId#);
		END;
	</procedure>
	
	<parameterMap class="java.util.HashMap" id="checkClaimPlateNoMap">
		<parameter property="plateNo" 		jdbcType="VARCHAR" javaType="java.lang.String" 		mode="IN"/>
		<parameter property="dspLossDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="claimNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="result"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="checkClaimPlateNo" parameterMap="checkClaimPlateNoMap">
		BEGIN
			GICL_CLAIMS_PKG.check_plate_no(?,?,?,?);
		END;
	</procedure>
	
	<parameterMap class="java.util.HashMap" id="checkClaimMotorNoMap">
		<parameter property="motorNo" 		jdbcType="VARCHAR" javaType="java.lang.String" 		mode="IN"/>
		<parameter property="dspLossDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="claimNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="result"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="checkClaimMotorNo" parameterMap="checkClaimMotorNoMap">
		BEGIN
			GICL_CLAIMS_PKG.check_motor_no(?,?,?,?);
		END;
	</procedure>
	
	<parameterMap class="java.util.HashMap" id="checkClaimSerialNoMap">
		<parameter property="serialNo" 		jdbcType="VARCHAR" javaType="java.lang.String" 		mode="IN"/>
		<parameter property="dspLossDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="claimNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="result"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="checkClaimSerialNo" parameterMap="checkClaimSerialNoMap">
		BEGIN
			GICL_CLAIMS_PKG.check_serial_no(?,?,?,?);
		END;
	</procedure>
	
	<parameterMap class="map" id="checkClaimStatusMap">
		<parameter property="lineCode" 			jdbcType="VARCHAR" 	javaType="java.lang.String" 		mode="IN"/>
		<parameter property="sublineCd" 		jdbcType="VARCHAR" 	javaType="java.lang.String" 		mode="IN"/>
		<parameter property="issueCode" 		jdbcType="VARCHAR" 	javaType="java.lang.String" 		mode="IN"/>
		<parameter property="claimYy" 			jdbcType="NUMBER" 	javaType="java.lang.Integer" 		mode="IN"/>
		<parameter property="claimSequenceNo" 	jdbcType="NUMBER" 	javaType="java.lang.Integer" 		mode="IN"/>
		<parameter property="msgAlert" 			jdbcType="VARCHAR" 	javaType="java.lang.String" 		mode="OUT"/>
	</parameterMap>
	
	<procedure id="checkClaimStatus" parameterMap="checkClaimStatusMap">
		{CALL GICL_CLAIMS_PKG.check_claim_status(?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<resultMap class="java.util.HashMap" id="getBasicClaimDtlsMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimNo" 		column="claim_no"/>
		<result property="claimId" 		column="claim_id"/>
		<result property="clmStatCd" 	column="clm_stat_cd"/>
		<result property="clmFileDate" 	column="clm_file_date"/>
		<result property="lossResAmt" 	column="loss_res_amt"/>
		<result property="lossPdAmt" 	column="loss_pd_amt"/>
		<result property="clmStatDesc" column="clm_stat_desc"/>
	</resultMap>
	
	<select id="getBasicClaimDtls" resultMap="getBasicClaimDtlsMap" parameterClass="java.util.HashMap">		
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicl_claims_pkg.get_basic_claim_dtls(#packPolicyId#, #policyId#))
		                  <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY CLAIM_NO
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="lossResAmt">
			              		ORDER BY LOSS_RES_AMT
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="lossPdAmt">
			              		ORDER BY LOSS_PD_AMT
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="clmFileDate">
			              		ORDER BY CLM_FILE_DATE
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="clmStatDesc">
			              		ORDER BY CLM_STAT_DESC
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicl_claims_pkg.get_basic_claim_dtls(#packPolicyId#, #policyId#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="map" id="validateClmPolicyNoMap">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="sublineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="polIssCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="issueYy"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="polSeqNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="renewNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="lossDate"	    jdbcType="DATE"		javaType="java.util.Date"		mode="INOUT" />
		<parameter property="polEffDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="expiryDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="issueDate"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdName"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="acctOfCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="dspAcctOf"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" /> <!-- added by christian  -->
		<parameter property="obligeeNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="nbtPkPol"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="nbtPackPol"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="nbtPackPolicyId" jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert2"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert3"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="expDateSw"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="itemNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="plateNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="motorNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="serialNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="plateSw"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="packageSw"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<!-- added by jeffdojello 10.01.2013 -->
		<parameter property="menuLineCd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" /> 
		
	</parameterMap>
	
	<procedure id="validateClmPolicyNo" parameterMap="validateClmPolicyNoMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_policy_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											   ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 
											   ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>

	<parameterMap class="map" id="chkItemForTotalLossMap">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polSeqNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="renewNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="itemNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="msgAlert"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
		
	<procedure id="chkItemForTotalLoss" parameterMap="chkItemForTotalLossMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			chk_item_for_total_loss(?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="checkExistingClaimsMap">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polSeqNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="renewNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="plateNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="msgAlert"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="statusCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="totalTag"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
	
	<procedure id="checkExistingClaims" parameterMap="checkExistingClaimsMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			gicl_claims_pkg.check_existing_claim(?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<select id="checkTotalLossSettlement" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		 SELECT Check_Total_Loss_Settlement2(
                    0, NULL, #itemNo#, 
                    #lineCd#, #sublineCd#, #polIssCd#,
                    #issueYy#, #polSeqNo#, #renewNo#, 
                    #lossDate#, #polEffDate#, #expiryDate#)         
           FROM dual
	</select>
	
	<parameterMap class="map" id="validatePlateMotorSerialNoMap">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="sublineCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="polIssCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="issueYy"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="polSeqNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="renewNo"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="lossDate"	    jdbcType="DATE"		javaType="java.util.Date"		mode="INOUT" />
		<parameter property="polEffDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="expiryDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="issueDate"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdName"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="acctOfCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="obligeeNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="itemNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="plateNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="motorNo" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="serialNo" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="msgAlert"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert2"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert3"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="expDateSw"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="plateSw2"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="validatePol"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
	</parameterMap>
	
	<procedure id="validatePlateNoGICLS010" parameterMap="validatePlateMotorSerialNoMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_plate_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 
											  ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="validateMotorNoGICLS010" parameterMap="validatePlateMotorSerialNoMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_motor_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 
											  ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="validateSerialNoGICLS010" parameterMap="validatePlateMotorSerialNoMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_serial_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											  ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, 
											  ?, ?, ?, ?);
		END;
	</procedure>
	
	<resultMap class="java.util.HashMap" id="getPolicyNoLOVGICLS010MapGrid">
		<result column="policy_no" 				property="policyNo" />
		<result column="assd_name" 				property="assdName" />
		<result column="line_cd" 				property="lineCd" />
		<result column="subline_cd" 			property="sublineCd" />
		<result column="iss_cd" 				property="polIssCd" /> 
		<result column="issue_yy" 				property="issueYy" />
		<result column="pol_seq_no" 			property="polSeqNo" />
		<result column="renew_no" 				property="renewNo" />
        <result column="incept_date" 			property="inceptDate" />
        <result column="expiry_date" 			property="expiryDate" />
        <result column="motor_no" 				property="motorNo" />
        <result column="serial_no" 				property="serialNo" />
        <result column="plate_no" 				property="plateNo" />
		<result column="rownum_" 				property="rowNum" />
		<result column="count_"					property="rowCount"/>
	</resultMap>
	
	<select id="getPolicyNoLOVGICLS010" resultMap="getPolicyNoLOVGICLS010MapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICL_CLAIMS_PKG.get_policy_list(#param1#, #param2#))
		                  <isNotNull property="findText">
		                  WHERE policy_no LIKE #findText#
		                     OR assd_name LIKE #findText# 
		                     OR incept_date LIKE #findText# 
		                     OR expiry_date LIKE #findText# 
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="inceptDate">
			              		ORDER BY incept_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expiryDate">
			              		ORDER BY expiry_date
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GICL_CLAIMS_PKG.get_policy_list(#param1#, #param2#))
		                  <isNotNull property="findText">
		                  WHERE policy_no LIKE #findText#
		                     OR assd_name LIKE #findText# 
		                     OR incept_date LIKE #findText# 
		                     OR expiry_date LIKE #findText# 
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="map" id="checkLossDateTimeGICLS010Map">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polSeqNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="renewNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lossDate"	    	jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="sublineTime" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="alertAcceptDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="alertOverride"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="allowed"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
	
	<procedure id="checkLossDateTimeGICLS010" parameterMap="checkLossDateTimeGICLS010Map">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.check_loss_date_time(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											  	 ?, ?);
		END;
	</procedure>
	
	<select id="getSublineTime" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT get_subline_time(#lineCd#, #sublineCd#) FROM dual
	</select>
	
	<parameterMap class="map" id="validateLossDatePlateNoMap">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polSeqNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="renewNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="plateNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="itemNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="lossDate"	    	jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="polEffDate"	    jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="expiryDate"	    jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="time" 				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="msgAlert"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="count"				jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="checkLossDate"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="plateSw"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="serialNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="motorNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
	
	<procedure id="validateLossDatePlateNo" parameterMap="validateLossDatePlateNoMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_loss_date_plate_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											  	 		?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="validateLossTimeMap">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polSeqNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="renewNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lossDate"	    	jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="expiryDate"	    jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="userLevel" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="inHouAdj"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="nbtInHouAdjName"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="clmFileDate"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="riCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="dspRiName"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdName"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="acctOfCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="obligeeNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
		
	<procedure id="validateLossTime" parameterMap="validateLossTimeMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_loss_time(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
											   ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="checkClaimMap">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polSeqNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="renewNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="plateNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="claimId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lossDate"	    	jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="lossTime"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="expiryDate"	    jdbcType="DATE"		javaType="java.util.Date"		mode="IN" />
		<parameter property="timeFlag"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="override"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="userFlag"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="riCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="dspRiName"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="assdName"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="acctOfCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="obligeeNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
	
	<procedure id="checkClaimGICLS010" parameterMap="checkClaimMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.check_claim(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
										?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
										?);
		END;
	</procedure>
	
	<parameterMap class="map" id="validateCatastrophicCodeMap">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issCd"	    		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="clmYy"	    		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="clmSeqNo"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="claimId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="catCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
		<parameter property="catDesc"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="msgAlert"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>	
	
	<procedure id="validateCatastrophicCode" parameterMap="validateCatastrophicCodeMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_catastrophic_code(?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="getCheckLocationDtlMap">
		<parameter property="claimId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="fireItemExist"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="casItemExist"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="blockId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="districtNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="blockNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="location"		    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="valLoc"		    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="getCheckLocationDtl" parameterMap="getCheckLocationDtlMap">
		BEGIN
			GICL_CLAIMS_PKG.get_check_location_dtl(?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<insert id="setNewGiclClaims" parameterClass="GICLClaimsClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_CLAIMS_PKG.pre_ins_gicl_claims(
					   #claimId#,#lineCode#,#sublineCd#,#issueYy#,
					   #policySequenceNo#,#renewNo#,#policyIssueCode#,#claimYy#,#claimSequenceNo#,
					   #issueCode#,#claimControl#,#claimCoop#,#assuredNo#,
					   #recoverySw#,#claimFileDate#,#lossDate#,#entryDate#,
					   #userId#,#userLastUpdate#,#dspLossDate#,#claimStatusCd#,
					   #claimSettlementDate#,#lossPaidAmount#,#lossResAmount#,#expPaidAmount#,
					   #lossLocation1#,#lossLocation2#,#lossLocation3#,#inHouseAdjustment#,
					   #policyEffectivityDate#,#csrNo#,#lossCatCd#,#intermediaryNo#,
					   #claimAmount#,#lossDetails#,#obligeeNo#,#expenseResAmount#,
					   #assuredName#,#riCd#,#plateNumber#,#cpiRecNo#,
					   #cpiBranchCd#,#claimDistTag#,#assuredName2#,#oldStatCd#,
					   #closeDate#,#expiryDate#,#accountOfCode#,#maxEndorsementSequenceNumber#,
					   #remarks#,#catastrophicCode#,#creditBranch#,#netPaidLoss#,
					   #netPaidExpense#,#refreshSw#,#totalTag#,#reasonCode#,
					   #provinceCode#,#cityCode#,#zipCode#,#packPolicyId#,
					   #motorNumber#,#serialNumber#,#settlingAgentCode#,#surveyAgentCode#,
					   #transactionNo#,#contactNumber#,#emailAddress#,#specialInstructions#, 
					   #defProcessor#,#locationCode#,#blockId#,#districtNumber#,
					   #reportedBy#,#nbtClmStatCd#
					   );
		END;
	</insert>
	
	<insert id="setGiclClaims" parameterClass="GICLClaimsClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_CLAIMS_PKG.set_gicl_claims(
					   #claimId#,#lineCode#,#sublineCd#,#issueYy#,
					   #policySequenceNo#,#renewNo#,#policyIssueCode#,#claimYy#,#claimSequenceNo#,
					   #issueCode#,#claimControl#,#claimCoop#,#assuredNo#,
					   #recoverySw#,#claimFileDate#,#lossDate#,#entryDate#,
					   #userId#,#userLastUpdate#,#dspLossDate#,#claimStatusCd#,
					   #claimSettlementDate#,#lossPaidAmount#,#lossResAmount#,#expPaidAmount#,
					   #lossLocation1#,#lossLocation2#,#lossLocation3#,#inHouseAdjustment#,
					   #policyEffectivityDate#,#csrNo#,#lossCatCd#,#intermediaryNo#,
					   #claimAmount#,#lossDetails#,#obligeeNo#,#expenseResAmount#,
					   #assuredName#,#riCd#,#plateNumber#,#cpiRecNo#,
					   #cpiBranchCd#,#claimDistTag#,#assuredName2#,#oldStatCd#,
					   #closeDate#,#expiryDate#,#accountOfCode#,#maxEndorsementSequenceNumber#,
					   #remarks#,#catastrophicCode#,#creditBranch#,#netPaidLoss#,
					   #netPaidExpense#,#refreshSw#,#totalTag#,#reasonCode#,
					   #provinceCode#,#cityCode#,#zipCode#,#packPolicyId#,
					   #motorNumber#,#serialNumber#,#settlingAgentCode#,#surveyAgentCode#,
					   #transactionNo#,#contactNumber#,#emailAddress#,#specialInstructions#, 
					   #defProcessor#,#locationCode#,#blockId#,#districtNumber#,
					   #reportedBy#
					   );
		END;
	</insert>
	
	<procedure id="deleteWorkflowRec3" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			delete_workflow_rec3(#eventDesc#, #moduleId#, #userId#, #colValue#);
		END;
	</procedure>
	
	<parameterMap class="map" id="validateUnpaidPremGICLS010Map">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="claimId"	    	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="nbtClmStatCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="msgAlert"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="workflowMsgr"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="validateUnpaidPremGICLS010" parameterMap="validateUnpaidPremGICLS010Map">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.validate_unpaid_prem(?, ?, ?, ?);
		END;
	</procedure>
	
	<insert id="insClmItemAndPeril" parameterClass="GICLClaimsClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_CLAIMS_PKG.ins_clm_item_and_peril(
					 	#lineCode#,#sublineCd#,#policyIssueCode#,
					 	#issueYy#,#policySequenceNo#,#renewNo#,
					    #lossDate#,#expiryDate#,#policyEffectivityDate#,
					    #lossCatCd#,#claimId#
						);
		END;	
	</insert>
	
	<parameterMap class="map" id="postInsGICLS010Map">
		<parameter property="userId"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="lineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="polIssCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"	    	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="polSeqNo"	    	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="renewNo"	    	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="claimId"	    	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="msgAlert"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="workflowMsgr2"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="postInsGICLS010" parameterMap="postInsGICLS010Map">
		BEGIN
			giis_users_pkg.app_user := ?;
			GICL_CLAIMS_PKG.post_ins_gicls010(?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;	
	</procedure>
	
	<select id="createClaimId" resultClass="java.lang.Integer">
		SELECT claims_claim_id_s.NEXTVAL 
          FROM DUAL
	</select>
	
	<procedure id="refreshClaims" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			GICL_CLAIMS_PKG.refresh_claims(#claimId#, 
					#lineCd#, #sublineCd#, #polIssCd#,
                    #issueYy#, #polSeqNo#, #renewNo#, 
                    #expiryDate#, #polEffDate#, #dspLossDate#);
		END;
	</procedure>
	
	<select id="getUpdateLossRecoveryTagListing" resultMap="lossRecoveryTagListingMap" parameterClass="java.util.HashMap">
		SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM (SELECT * 
			                  FROM TABLE (GICL_CLAIMS_PKG.get_loss_cat_tag_listing(#claimNo#, #policyNo#, #lossCatDes#, #claimStatDesc#, #inHouseAdjustment#, #lineCd#, #dspLossDate#,#assuredName#,#clmSeqNo#,#renewNo#
			                  	,#policySequenceNo#,#policyIssueCode#,#claimYy#,#issueCode#,#sublineCd#,#userId#))
			                  <isNotNull property="filter">
							      WHERE 1=1
               			        <isNotEmpty prepend="AND" property="inHouseAdjustment">
               					  UPPER(in_house_adjustment) LIKE UPPER(#inHouseAdjustment#)
               			        </isNotEmpty>
                    		  </isNotNull>
				              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="assuredName">
			              		ORDER BY assured_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="lossCatDes">
			              		ORDER BY loss_cat_Des
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimStatDesc">
			              		ORDER BY claim_stat_desc
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="inHouseAdjustment">
			              		ORDER BY in_house_adjustment
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="dspLossDate">
			              		ORDER BY DSP_LOSS_DATE
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (GICL_CLAIMS_PKG.get_loss_cat_tag_listing(#claimNo#, #policyNo#, #lossCatDes#, #claimStatDesc#, #inHouseAdjustment#, #lineCd#, #dspLossDate#,#assuredName#,#clmSeqNo#,#renewNo#
			                  	,#policySequenceNo#,#policyIssueCode#,#claimYy#,#issueCode#,#sublineCd#,#userId#))
			                  	<isNotNull property="filter">
							        WHERE 1=1
               			          <isNotEmpty prepend="AND" property="inHouseAdjustment">
               					    UPPER(in_house_adjustment) LIKE UPPER(#inHouseAdjustment#)
               			          </isNotEmpty>
                    		    </isNotNull>) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
	</select>

	<select id="getClaimsPerPolicyGrid" resultMap="GICLClaimsResultMapGrid" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICL_CLAIMS_PKG.get_claims_per_policy(
		                  							#nbtLineCd#, #nbtSublineCd#, #nbtPolIssCd#,
                    								#nbtIssueYy#, #nbtPolSeqNo#, #nbtRenewNo#,
                    								#module#, #userId#))
                    	<isNotNull property="filter">
						 WHERE 1=1
               				<isNotEmpty prepend="AND"  property="lineCode">
               					line_cd LIKE #lineCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="sublineCd">
               					subline_cd LIKE #sublineCd#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="policyIssueCode">
               					pol_iss_cd LIKE #policyIssueCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="issueYy">
               					issue_yy LIKE #issueYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="policySequenceNo">
               					pol_seq_no LIKE #policySequenceNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="renewNo">
               					renew_no LIKE #renewNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="assuredName">
               					UPPER(assured_name) LIKE UPPER(#assuredName#)
               				</isNotEmpty>
                    	</isNotNull>
                    	<isEqual property="sortColumn" compareValue="lineCode sublineCd policyIssueCode issueYy policySequenceNo renewNo">
		            			ORDER BY line_cd 
		            			<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,subline_cd
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,pol_iss_cd	
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,issue_yy
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,pol_seq_no
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,renew_no
			          		</isEqual> 	
		          		<isEqual property="sortColumn" compareValue="assuredName">
		            		ORDER BY assured_name
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>						
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GICL_CLAIMS_PKG.get_claims_per_policy(
		                  							#nbtLineCd#, #nbtSublineCd#, #nbtPolIssCd#,
                    								#nbtIssueYy#, #nbtPolSeqNo#, #nbtRenewNo#,
                    								#module#, #userId#))
                    	<isNotNull property="filter">
						 WHERE 1=1
               				<isNotEmpty prepend="AND"  property="lineCode">
               					line_cd LIKE #lineCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="sublineCd">
               					subline_cd LIKE #sublineCd#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="policyIssueCode">
               					pol_iss_cd LIKE #policyIssueCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="issueYy">
               					issue_yy LIKE #issueYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="policySequenceNo">
               					pol_seq_no LIKE #policySequenceNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="renewNo">
               					renew_no LIKE #renewNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="assuredName">
               					UPPER(assured_name) LIKE UPPER(#assuredName#)
               				</isNotEmpty>
                    	</isNotNull>							
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#		
	</select>
	
	<select id="getClaimsPerPolicyDetailsGrid" resultMap="claimsPerPolicyDetailsResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.*, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GICL_CLAIMS_PKG.get_claims_per_policy2(
		                  							#lineCd#, #sublineCd#, #polIssCd#,
                    								#issueYy#, #polSeqNo#, #renewNo#,
                    								#module#, #userId#))
                    	 WHERE 1=1
                    	 <isNotEmpty property="clmFileDate">
               			 	<isNotNull prepend="AND"  property="asOfDate">
               			 		clm_file_date <![CDATA[ <= ]]> #asOfDate#
               			 	</isNotNull>
               			 	<isNotNull prepend="AND"  property="fromDate">
               			 		clm_file_date <![CDATA[ >= ]]> #fromDate#
		             		AND clm_file_date <![CDATA[ <= ]]> #toDate#
               			 	</isNotNull>
               			 </isNotEmpty> 	
               			 <isNotEmpty property="lossDate">
               			 	<isNotNull prepend="AND" property="asOfDate">
               			 		dsp_loss_date <![CDATA[ <= ]]> #asOfDate#
               			 	</isNotNull>
               			 	<isNotNull prepend="AND" property="fromDate">
               			 		dsp_loss_date <![CDATA[ >= ]]> #fromDate#
		             		AND dsp_loss_date <![CDATA[ <= ]]> #toDate#
               			 	</isNotNull>
               			 </isNotEmpty> 	 
               			 <isNotEmpty prepend="AND"  property="assuredName">
               				UPPER(assured_name) LIKE UPPER(NVL(#assuredName#, assured_name))
               			 </isNotEmpty>
               			 <isNotNull property="filter">
               			 	<isNotEmpty prepend="AND"  property="lineCode">
               					line_cd LIKE #lineCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="sublineCd">
               					subline_cd LIKE #sublineCd#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="policyIssueCode">
               					pol_iss_cd LIKE #policyIssueCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="claimYy">
               					clm_yy LIKE #claimYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="claimSequenceNo">
               					clm_seq_no LIKE #claimSequenceNo#
               				</isNotEmpty> 
               				<isNotEmpty prepend="AND"  property="entryDate">
               					entry_date = #entryDate#
               				</isNotEmpty> 
               				<isNotEmpty prepend="AND"  property="clmStatDesc">
               					clm_stat_desc LIKE #clmStatDesc#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="lossResAmount">
               					loss_res_amt = #lossResAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="expenseResAmount">
               					exp_res_amt = #expenseResAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="lossPaidAmount">
               					loss_pd_amt = #lossPaidAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="expPaidAmount">
               					exp_pd_amt = #expPaidAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="giclClmReserveExist">
               					gicl_clm_reserve_exist = UPPER(#giclClmReserveExist#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="plateNumber">
               					plate_no LIKE #plateNumber#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="serialNumber">
               					serial_no LIKE #serialNumber#
               				</isNotEmpty>
               			 </isNotNull> 	
               				<!-- <isEqual property="sortColumn" compareValue="lineCode sublineCd policyIssueCode claimYy claimSequenceNo"> -->
               				<isEqual property="sortColumn" compareValue="lineCode sublineCd issueCode claimYy claimSequenceNo">
		            			ORDER BY line_cd 
		            			<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,subline_cd
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,pol_iss_cd	
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,clm_yy
				              	<isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	</isNotNull>
				              	,clm_seq_no
			          		</isEqual> 
			          		<isEqual property="sortColumn" compareValue="lossResAmount">
			            		ORDER BY loss_res_amt
			          		</isEqual>   
			          		<isEqual property="sortColumn" compareValue="expenseResAmount">
			            		ORDER BY exp_res_amt
			          		</isEqual>   
			          		<isEqual property="sortColumn" compareValue="lossPaidAmount">
			            		ORDER BY loss_pd_amt
			          		</isEqual>   
			          		<isEqual property="sortColumn" compareValue="expPaidAmount">
			            		ORDER BY exp_pd_amt
			          		</isEqual>   
			          		<isEqual property="sortColumn" compareValue="plateNumber">
			            		ORDER BY plate_no
			          		</isEqual> 
			          		<isEqual property="sortColumn" compareValue="serialNumber">
			            		ORDER BY serial_no
			          		</isEqual>  
				          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
				              </isNotNull>	
		                  ) a, 
		               (SELECT COUNT (*) count_, SUM (loss_res_amt) tot_loss_res_amt,
						       SUM (loss_pd_amt) tot_loss_pd_amt, SUM (exp_res_amt) tot_exp_res_amt,
						       SUM (exp_pd_amt) tot_exp_pd_amt
		                  FROM TABLE (GICL_CLAIMS_PKG.get_claims_per_policy2(
		                  							#lineCd#, #sublineCd#, #polIssCd#,
                    								#issueYy#, #polSeqNo#, #renewNo#,
                    								#module#, #userId#))
                    	 WHERE 1=1
                    	 <isNotEmpty property="clmFileDate">
               			 	<isNotNull prepend="AND"  property="asOfDate">
               			 		clm_file_date <![CDATA[ <= ]]> #asOfDate#
               			 	</isNotNull>
               			 	<isNotNull prepend="AND"  property="fromDate">
               			 		clm_file_date <![CDATA[ >= ]]> #fromDate#
		             		AND clm_file_date <![CDATA[ <= ]]> #toDate#
               			 	</isNotNull>
               			 </isNotEmpty> 	
               			 <isNotEmpty property="lossDate">
               			 	<isNotNull prepend="AND" property="asOfDate">
               			 		dsp_loss_date <![CDATA[ <= ]]> #asOfDate#
               			 	</isNotNull>
               			 	<isNotNull prepend="AND" property="fromDate">
               			 		dsp_loss_date <![CDATA[ >= ]]> #fromDate#
		             		AND dsp_loss_date <![CDATA[ <= ]]> #toDate#
               			 	</isNotNull>
               			 </isNotEmpty>	
               			 <isNotEmpty prepend="AND"  property="assuredName">
               				UPPER(assured_name) LIKE UPPER(NVL(#assuredName#, assured_name))
               			 </isNotEmpty>
               			 <isNotNull property="filter">
               			 	<isNotEmpty prepend="AND"  property="lineCode">
               					line_cd LIKE #lineCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="sublineCd">
               					subline_cd LIKE #sublineCd#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="policyIssueCode">
               					pol_iss_cd LIKE #policyIssueCode#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="claimYy">
               					clm_yy LIKE #claimYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="claimSequenceNo">
               					clm_seq_no LIKE #claimSequenceNo#
               				</isNotEmpty> 
               				<isNotEmpty prepend="AND"  property="entryDate">
               					entry_date = #entryDate#
               				</isNotEmpty> 
               				<isNotEmpty prepend="AND"  property="clmStatDesc">
               					clm_stat_desc LIKE #clmStatDesc#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="lossResAmount">
               					loss_res_amt = #lossResAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="expenseResAmount">
               					exp_res_amt = #expenseResAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="lossPaidAmount">
               					loss_pd_amt = #lossPaidAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="expPaidAmount">
               					exp_pd_amt = #expPaidAmount#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="giclClmReserveExist">
               					gicl_clm_reserve_exist = UPPER(#giclClmReserveExist#)
               				</isNotEmpty>
               			 </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#		
	</select>
	
	<procedure id="updateLossTagRecovery" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #userId#; 
			GICL_CLAIMS_PKG.update_loss_tag_recovery(#claimId#, #recoverySw#);
		END;
	</procedure>
	
	<select id="getClaimPolLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list(#moduleId#))              
		   	 <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(NVL(#searchString#, CODE))
		            OR UPPER(CODE_DESC) LIKE UPPER(NVL(#searchString#, CODE_DESC))
		           <isNotNull prepend="AND" property="lineCdId">
		           	AND CODE IN $lineCdId$
		           </isNotNull>
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR UPPER(CODE_DESC) LIKE UPPER(#findText#)
         		   <isNotNull prepend="AND" property="lineCdId">
		           	AND CODE IN $lineCdId$
		           </isNotNull>
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list(#moduleId#))
		                <isNull property="findText">
					        WHERE UPPER(CODE) LIKE UPPER(NVL(#searchString#, CODE))
					           OR UPPER(CODE_DESC) LIKE UPPER(NVL(#searchString#, CODE_DESC))
					           <isNotNull prepend="AND" property="lineCdId">
					           	AND CODE IN $lineCdId$
					           </isNotNull>
					    </isNull>
					    <isNotNull property="findText">
			                WHERE UPPER(CODE) LIKE UPPER(#findText#)
			         		   OR UPPER(CODE_DESC) LIKE UPPER(#findText#)
			         		  <isNotNull prepend="AND" property="lineCdId">
					           	AND CODE IN $lineCdId$
					           </isNotNull>
			            </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmLineLOV2" resultMap="lovMap">
  		<!-- edited by MarkS 11.9.2016 SR5832 OPTIMIZATION -->
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               COUNT(1) OVER() count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list2(#moduleId#, #userId#))              
		   	 <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(NVL(#searchString#, CODE))
		            OR UPPER(CODE_DESC) LIKE UPPER(NVL(#searchString#, CODE_DESC))
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a) 
		 WHERE rownum_ BETWEEN #from# AND #to#
		 <!-- SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list2(#moduleId#, #userId#))              
		   	 <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(NVL(#searchString#, CODE))
		            OR UPPER(CODE_DESC) LIKE UPPER(NVL(#searchString#, CODE_DESC))
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list2(#moduleId#, #userId#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to# -->
  	</select>
  	
  	<select id="getClmSublineLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_subline_list(#lineCd#))              
			 <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(#searchString#)
		            OR CODE_DESC LIKE #searchString#
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_subline_list(#lineCd#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmIssLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_iss_list(#lineCd#, #sublineCd#))              
             <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(#searchString#)
		            OR CODE_DESC LIKE #searchString#
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_iss_list(#lineCd#, #sublineCd#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmIssLOV2" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_iss_list2(#lineCd#, #sublineCd#, #moduleId#, #userId#))              
             <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(NVL(#searchString#, CODE))
		            OR CODE_DESC LIKE NVL(#searchString#, CODE_DESC)
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_iss_list2(#lineCd#, #sublineCd#,  #moduleId#, #userId#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmIssueYyLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_issue_yy_list(#lineCd#, #sublineCd#))              
             <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(#searchString#)
		            OR CODE_DESC LIKE #searchString#
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_issue_yy_list(#lineCd#, #sublineCd#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  		<select id="getClmPackLineLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicls274_pkg.get_clm_pack_line_list)              
			            <isNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#searchLineCd#)
		             	</isNull>
			            <isNotNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#findText#)
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls274_pkg.get_clm_pack_line_list)
		                <isNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#searchLineCd#)
		             	</isNull>
			            <isNotNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#findText#)
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>


  	<select id="getClmPackSublineLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicls274_pkg.get_clm_pack_subline_list(#lineCd#))
		             	<isNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#searchSublineCd#)
		             	</isNull>
			            <isNotNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#findText#)
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls274_pkg.get_clm_pack_subline_list(#lineCd#))
		                <isNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#searchSublineCd#)
		             	</isNull>
			            <isNotNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#findText#)
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmPackIssLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicls274_pkg.get_clm_pack_iss_list(#lineCd#, #sublineCd#))              
			           <isNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#searchPolIssCd#)
		             	</isNull>
			            <isNotNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#findText#)
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls274_pkg.get_clm_pack_iss_list(#lineCd#, #sublineCd#))
		                <isNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#searchPolIssCd#)
		             	</isNull>
			            <isNotNull property="findText">
		                  WHERE UPPER(code) LIKE UPPER(#findText#)
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmPackIssueYyLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicls274_pkg.get_clm_issue_pack_yy_list(#lineCd#, #sublineCd#, #polIssCd#))              
			            <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls274_pkg.get_clm_issue_pack_yy_list(#lineCd#, #sublineCd#, #polIssCd#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmListPerPackagePolicyLov" resultMap="ClmListPerPackagePolicyLovResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (GICLS274_PKG.get_clm_pack_policy_lov(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#))
		                 <isNotNull property="findText">
		                 	WHERE	UPPER(line_cd) LIKE UPPER(#findText#)
		                 	OR		UPPER(subline_cd) LIKE UPPER(#findText#)
		                 	OR		UPPER(iss_cd) LIKE UPPER(#findText#)
		                 	OR		UPPER(issue_yy) LIKE UPPER(#findText#)
		                 	OR		UPPER(pol_seq_no) LIKE UPPER(#findText#)
		                 	OR		UPPER(renew_no) LIKE UPPER(#findText#)
		                 	OR		UPPER(assd_name) LIKE UPPER(#findText#)
		                 </isNotNull> 
			            <isEqual property="sortColumn" compareValue="lineCd">
		              		ORDER BY line_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="sublineCd">
		              		ORDER BY subline_cd
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="issCd">
		              		ORDER BY iss_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="issueYy">
		              		ORDER BY issue_yy
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="polSeqNo">
		              		ORDER BY pol_seq_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="renewNo">
		              		ORDER BY renew_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="assdName">
		              		ORDER BY assd_name
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GICLS274_PKG.get_clm_pack_policy_lov(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
  	
  	
  	<parameterMap class="java.util.HashMap"		id="checkUnpaidPremiumsMap">
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="evalId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="clmLossId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="payeeClassCd"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="payeeCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="polIssCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="clmFileDate"		jdbcType="DATE" 	javaType="java.util.Date"		mode="IN"/>
		<parameter property="issueYy"		  	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="polSeqNo"		  	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="renewNo"		  	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="ovrdExist"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="OUT"/>
		<parameter property="printFl"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
  	
  	<procedure id="checkUnpaidPremiums" parameterMap="checkUnpaidPremiumsMap">
  		BEGIN
  			giis_users_pkg.app_user := ?;
  			CHECK_UNPAID_PREMIUMS(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	
  	<parameterMap class="java.util.HashMap"		id="checkUnpaidPremiums2Map">
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="evalId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="polIssCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="clmFileDate"		jdbcType="DATE" 	javaType="java.util.Date"		mode="IN"/>
		<parameter property="issueYy"		  	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="polSeqNo"		  	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="renewNo"		  	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="printFl"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
  	
  	<procedure id="checkUnpaidPremiums2" parameterMap="checkUnpaidPremiums2Map">
  		BEGIN
  			giis_users_pkg.app_user := ?;
  			CHECK_UNPAID_PREMIUMS2(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	  
	<parameterMap class="map" id="getRecoveryAmountsGICLS010Map">
		<parameter property="claimId"				jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="recoverableAmt"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="INOUT"/>
		<parameter property="recoveredAmt"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="INOUT"/>
	</parameterMap>  	  	
  	  	
	<procedure id="getRecoveryAmountsGICLS010" parameterMap="getRecoveryAmountsGICLS010Map">
		{ CALL GICL_CLAIMS_PKG.get_recovery_amount(?, ?, ?) }
	</procedure>  	  	
	
	<select id="getRelatedClaimsGICLS024" resultMap="getRelatedClaimsGICLS024Map">
  		SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_related_claims2(#claimId#))
  	</select>
  	  	
  	<parameterMap class="java.util.HashMap"		id="checkClaimReqDocsMap">
  		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="hasDocs"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="hasCompletedDates"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>  	
  	<procedure id="checkClaimReqDocs" parameterMap="checkClaimReqDocsMap">
  		BEGIN
  			GICL_CLAIMS_PKG.CHECK_CLAIM_REQ_DOCS(?, ?, ?); 
  		END;
  	</procedure> 
  	
  	<select id="validateRenewNoGIACS007"  parameterClass="java.util.HashMap"  resultClass="java.lang.String">
  		SELECT DISTINCT 'X'
         FROM gicl_claims c, gipi_polbasic b
        WHERE 1 = 1
          AND clm_stat_cd NOT IN ('CD', 'CC', 'DN', 'WD')
          AND b.line_cd = c.line_cd
          AND b.subline_cd = c.subline_cd
          AND b.iss_cd = c.pol_iss_cd
          AND b.issue_yy = c.issue_yy
          AND b.pol_seq_no = c.pol_seq_no
          AND b.renew_no = c.renew_no
          AND b.line_cd = #lineCd#
          AND b.subline_cd = #sublineCd#
          AND b.iss_cd = #polIssCd#
          AND b.issue_yy = #issueYy#
          AND b.pol_seq_no = #polSeqNo#
          AND b.renew_no = #renewNo#
  	</select>
  	<!-- zxc -->
  	<select id="getClaimClosingTableGridListing" resultMap="claimClosingResultMap2" parameterClass="java.util.HashMap">
		SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM (SELECT * 
			                  FROM TABLE (gicls039_pkg.get_claim_closing_listing(#clmLineCd#, #clmSublineCd#, #clmIssCd#, #clmYy#, #clmSeqNo#, #polIssCd#, #polIssueYy#, #polSeqNo#, #polRenewNo#, #assdNo#, #searchBy#, #asOfDate#, #fromDate#, #toDate#, #statusControl#)) <!-- Kenneth 11.05.2015 SR5147 -->
				               WHERE check_user_per_iss_cd2(line_cd,iss_cd, #moduleId#, #userId#) = 1
				                 AND NVL(UPPER(remarks), '%') LIKE NVL(UPPER(#remarks#), '%') <!-- benjo 08.05.2015 UCPBGEN-SR-19632-->           			  
				              <isEqual property="sortColumn" compareValue="claimNumber">
			              		ORDER BY line_cd || '-' || subline_cd || '-' || iss_cd || '-' || 
                                        LTRIM (TO_CHAR (clm_yy, '00')) || '-' || LTRIM (TO_CHAR (clm_seq_no, '0000009'))
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY line_cd || '-' || subline_cd || '-' || pol_iss_cd || '-' || LTRIM (TO_CHAR (issue_yy, '00')) || '-' ||
                                        LTRIM (TO_CHAR (pol_seq_no, '0000009')) || '-' || LTRIM (TO_CHAR (renew_no, '00'))
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="assuredName">
			              		ORDER BY assured_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="claimStatDesc">
			              		ORDER BY clm_stat_desc
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (gicls039_pkg.get_claim_closing_listing(#clmLineCd#, #clmSublineCd#, #clmIssCd#, #clmYy#, #clmSeqNo#, #polIssCd#, #polIssueYy#, #polSeqNo#, #polRenewNo#, #assdNo#, #searchBy#, #asOfDate#, #fromDate#, #toDate#, #statusControl#)) <!-- Kenneth 11.05.2015 SR5147 -->
			                  WHERE check_user_per_iss_cd2(line_cd,iss_cd, #moduleId#, #userId#) = 1
			                    AND NVL(UPPER(remarks), '%') LIKE NVL(UPPER(#remarks#), '%') <!-- benjo 08.05.2015 UCPBGEN-SR-19632-->			                   
		               		  ) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
  	
	<parameterMap class="java.util.HashMap"		id="checkUserFunctionMap">
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="moduleId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="functionCd"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="functionName"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="functionExist"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="userValid"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
	<procedure id="checkUserFunction" parameterMap="checkUserFunctionMap">
  		BEGIN
  			GICL_CLAIMS_PKG.CHECK_USER_FUNCTION(?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	
  	<procedure id="saveBatchClaimCLosing" parameterClass="GICLClaimsClass"> 
		BEGIN
		    giis_users_pkg.app_user := #userId#;
			GICL_CLAIMS_PKG.UPDATE_BATCH_CLAIM_CLOSING(#claimId#, #userId#, #userLastUpdate#, #remarks#);
			gicls039_pkg.update_reason_cd(#claimId#, #reasonCode#);
		END;	
	</procedure>
	
	<select id="checkClaimToOpen"  parameterClass="java.lang.Integer"  resultClass="java.lang.String">
  		SELECT a.pol_flag
		  FROM gipi_polbasic a, gicl_claims b
	     WHERE b.claim_id = #claimId#
 		   AND a.line_cd = b.line_cd
 	       AND a.subline_cd = b.subline_cd
 		   AND a.iss_cd = b.pol_iss_cd
 		   AND a.issue_yy = b.issue_yy
 		   AND a.pol_seq_no = b.pol_seq_no
      	   AND a.renew_no = b.renew_no
		   AND NVL(a.endt_seq_no,0) = 0 
  	</select>
  	
  	<select id="getClaimClosingList" resultMap="claimClosingResultMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM TABLE (GICL_CLAIMS_PKG.get_claim_closing_listing(#userId#, #moduleId#, #statusControl#))
         <isNotNull property="filter">
          WHERE 1=1
		 	<isNotEmpty prepend="AND"  property="claimNumber">
				line_cd || '-' || subline_cd || '-' || iss_cd || '-' || 
	                     LTRIM (TO_CHAR (clm_yy, '00')) || '-' || LTRIM (TO_CHAR (clm_seq_no, '0000009')) LIKE UPPER(#claimNumber#)
			</isNotEmpty>
			<isNotEmpty prepend="AND"  property="policyNo">
				line_cd || '-' || subline_cd || '-' || pol_iss_cd || '-' || LTRIM (TO_CHAR (issue_yy, '00')) || '-' ||
	                     LTRIM (TO_CHAR (pol_seq_no, '0000009')) || '-' || LTRIM (TO_CHAR (renew_no, '00')) LIKE UPPER(#policyNo#)
			</isNotEmpty>
			<isNotEmpty prepend="AND"  property="assuredName">
				UPPER(assured_name) LIKE UPPER(#assuredName#)
			</isNotEmpty>
			<isNotEmpty prepend="AND"  property="claimStatDesc">
				clm_stat_desc LIKE UPPER(#claimStatDesc#)
			</isNotEmpty>
	  </isNotNull>
	</select>
	
	<parameterMap class="java.util.HashMap"		id="openClaimsMap">
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="lossDate"		    jdbcType="DATE" 	javaType="java.util.Date"   	mode="IN"/>
		<parameter property="chkReserve"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="INOUT"/>
		<parameter property="chkSpld"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="INOUT"/>
	</parameterMap>
	
	<procedure id="openClaims" parameterMap="openClaimsMap">
  		BEGIN
  			GICL_CLAIMS_PKG.OPEN_CLAIMS(?, ?, ?, ?); 
  		END;
  	</procedure>
  	
  	<parameterMap class="java.util.HashMap"		id="redistributeReserveGICLS039Map">
  	    <parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="polIssCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="issueYy"		    jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="policySequenceNo"	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="renewNo"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="policyEffectivityDate"	jdbcType="DATE" javaType="java.util.Date"   	mode="IN"/>
		<parameter property="expiryDate"		jdbcType="DATE" 	javaType="java.util.Date"   	mode="IN"/>
		<parameter property="dspLossDate"		jdbcType="DATE" 	javaType="java.util.Date"   	mode="IN"/>
		<parameter property="clmFileDate"		jdbcType="DATE" 	javaType="java.util.Date"   	mode="IN"/>
		<parameter property="catastrophicCode"	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
	</parameterMap>
	
  	<procedure id="redistributeReserveGICLS039" parameterMap="redistributeReserveGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			GICL_CLAIMS_PKG.REDISTRIBUTE_RESERVE_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	
  	<parameterMap class="java.util.HashMap"		id="reOpenGICLS039Map">
  	    <parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="refreshSw"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="maxEndorsementSequenceNumber" jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="dspLossDate"		jdbcType="DATE" 	javaType="java.util.Date"   	mode="IN"/>
		<parameter property="policyEffectivityDate"	jdbcType="DATE" javaType="java.util.Date"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="polIssCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="issueYy"		    jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="policySequenceNo"	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="renewNo"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		
		<parameter property="assdNo"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="acctOfCd"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="assuredName"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="assdName2"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
	</parameterMap>
	
  	<procedure id="reOpenGICLS039" parameterMap="reOpenGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			<!-- GICL_CLAIMS_PKG.REOPEN_CLAIMS(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); --> 
  			GICLS039_PKG.REOPEN_CLAIMS(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
   	<parameterMap class="java.util.HashMap"		id="confirmUserGICLS039Map">
  		<parameter property="type"				jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="clmYy"		    	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="claimSequenceNo"	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>		
		<parameter property="catastrophicCd"	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="selectType"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="statusControl"		jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="catPaytResFlag"	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="INOUT"/>
		<parameter property="catDesc"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="alertMessage"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
  	<procedure id="confirmUserGICLS039" parameterMap="confirmUserGICLS039Map">
  		BEGIN
  			<!-- GICL_CLAIMS_PKG.CONFIRM_USER_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); --> 
  			GICLS039_PKG.CONFIRM_USER_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
   	<parameterMap class="java.util.HashMap"		id="denyClaimsGICLS039Map">
   	    <parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="catastrophicCd"	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="clmYy"		    	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="claimSequenceNo"	jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>	
		<parameter property="clmStatCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="catPaytResFlag"	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="INOUT"/>	
		<parameter property="catDesc"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="alertMessage"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
  	<procedure id="denyClaimsGICLS039" parameterMap="denyClaimsGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			<!-- GICL_CLAIMS_PKG.DENY_CLAIMS_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); --> 
  			GICLS039_PKG.DENY_CLAIMS_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
  	<procedure id="withdrawClaimsGICLS039" parameterMap="denyClaimsGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			<!-- GICL_CLAIMS_PKG.WITHDRAW_CLAIMS_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); --> 
  			GICLS039_PKG.WITHDRAW_CLAIMS_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
  	<procedure id="cancelClaimsGICLS039" parameterMap="denyClaimsGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			<!-- GICL_CLAIMS_PKG.CANCEL_CLAIMS_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?); --> 
  			GICLS039_PKG.CANCEL_CLAIMS_GICLS039(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
  	<parameterMap class="java.util.HashMap"		id="checkClaimClosingMap">
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="prntdFla"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="chkTag"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<!-- <parameter property="paytSw"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/> -->
		<parameter property="batchChkbx"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>	
		<parameter property="tagAllow"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="param"				jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="msgAlert"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
  	<procedure id="checkClaimClosing"  parameterMap="checkClaimClosingMap">
		BEGIN
  			<!-- GICL_CLAIMS_PKG.CHK_CLM_CLOSING_GICLS039(?, ?, ?, ?, ?, ?, ?); --> 
  			GICLS039_PKG.CHK_CLM_CLOSING_GICLS039(?, ?, ?, ?, ?, ?, ?);
  		END;
  	</procedure>
  	
  	<parameterMap class="java.util.HashMap"		id="validateFlaGICLS039Map">
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="generateAll"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="printAll"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
  	<procedure id="validateFlaGICLS039"  parameterMap="validateFlaGICLS039Map">
		BEGIN
  			VALIDATE_FLA_GICLS039(?, ?, ?); 
  		END;
  	</procedure>
  	
  	<parameterMap class="java.util.HashMap"		id="closeClaimsGICLS039Map">
  	    <parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="claimId"			jdbcType="INTEGER" 	javaType="java.lang.Integer"   	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="remarks"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="recoverySw"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="closedStatus"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="alertMessage"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
  	<procedure id="closeClaimsGICLS039" parameterMap="closeClaimsGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			GICL_CLAIMS_PKG.CLOSE_CLAIMS(?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	
  	<procedure id="closeClaimsGICLS0392" parameterMap="closeClaimsGICLS039Map">
  		BEGIN
  		    giis_users_pkg.app_user := ?;
  			GICLS039_PKG.CLOSE_CLAIMS(?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	
	   <!--Modified by pjsantos 11/08/2016, for optimization GENQA 5818  -->
       <!-- <select id="getClaimInformationTableGrid" resultMap="ClaimsInformationTableGridMap" parameterClass="java.util.HashMap"> -->
		<select id="getClaimInformationTableGrid" resultMap="ClaimsInformationTableGridMap2" parameterClass="java.util.HashMap">
		
		<!-- SELECT *
			  FROM (SELECT rownum rownum_, 
						   b.count_, 
						   a.* 
					  FROM ( -->SELECT *  
							  FROM TABLE (GICL_CLAIMS_PKG.get_claims_information_listing(#lineCd#,#sublineCd#, #issueCode#, #claimYy#, #claimSequenceNo#,        
	                                                                                     #policyIssueCode#,#issueYy#,#policySequenceNo#,#renewNo#, #assuredName#,#plateNumber#,      
	                                                                                     #clmStatDesc#,#claimFileDate#, #lossDate#, #claimId#, #moduleId#,#userId#,
	                                                                                     #sortColumn#,#ascDescFlg#,#from#,#to#)) <!-- added claim_id by robert SR 21694 03.28.16 -->
							<!--   <isEqual property="sortColumn" compareValue="claimNo">
									ORDER BY claim_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="plateNumber">
									ORDER BY plate_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="clmStatDesc">
									ORDER BY clm_stat_desc
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="sdfClaimFileDate">
									ORDER BY sdf_clm_file_date
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="sdfLossDate">
									ORDER BY sdf_loss_date
							  </isEqual>
							  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							  </isNotNull>) a, 
						   (SELECT count(*) count_ 
							  FROM TABLE (GICL_CLAIMS_PKG.get_claims_information_listing(#lineCd#,#sublineCd#, #issueCode#, #claimYy#, #claimSequenceNo#,        
	                                                                                     #policyIssueCode#,#issueYy#,#policySequenceNo#,#renewNo#, #assuredName#,#plateNumber#,      
	                                                                                     #clmStatDesc#,#claimFileDate#, #lossDate#, #claimId#, #moduleId#,#userId#))) b) added claim_id by robert SR 21694 03.28.16
			 WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>
	
	<select id="getClaimInfoBasicDetails" resultMap="ClaimsInformationResultMap">
		SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_claims_info_basic_details(#claimId#))
	</select>
  	
  	<parameterMap class="java.util.HashMap"		id="initializeGICLS260ParamMap">
		<parameter property="claimId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="clmReserveExist"	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="lossExpExist"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="payeesExist"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="lossRecoveryExist"	jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
		<parameter property="giispLineCd"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="OUT"/>
	</parameterMap>
	
	<procedure id="initializeGICLS260Variables" parameterMap="initializeGICLS260ParamMap">
  		BEGIN
  			GICLS260_INITIALIZE_VARIABLES(?, ?, ?, ?, ?, ?); 
  		END;
  	</procedure>
  	
  	<select id="getClaimListLOV" parameterClass="java.util.HashMap" resultMap="clmListTableGridMap">		
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gicl_claims_pkg.get_claim_list_lov(#moduleId#, #lineCode#, #sublineCode#, #clmLineCode#, #clmSublineCode#, #issCode#, #polIssCode#, #clmYr#, #issueYr#, #clmSeqNum#, #polSeqNum#, #renewNum#, #userId#))
		                <isNotNull property="filter">
						 WHERE 1=1				 
               				<isNotEmpty prepend="AND"  property="sublineCd">
               					UPPER(subline_cd) LIKE UPPER(#sublineCd#)
               				</isNotEmpty>					 
               				<isNotEmpty prepend="AND"  property="clmSublineCd">
               					UPPER(clm_subline_cd) LIKE UPPER(#clmSublineCd#)
               				</isNotEmpty>               				
               				<isNotEmpty prepend="AND"  property="issCd">
               					UPPER(iss_cd) LIKE UPPER(#issCd#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="polIssCd">
               					UPPER(pol_iss_cd) LIKE UPPER(#polIssCd#)
               				</isNotEmpty>               				
               				<isNotEmpty prepend="AND"  property="issueYy">
               					issue_yy LIKE #issueYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="clmYy">
               					clm_yy LIKE #clmYy#
               				</isNotEmpty>               				
               				<isNotEmpty prepend="AND"  property="clmSeqNo">
               					clm_seq_no LIKE #clmSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="polSeqNo">
               					pol_seq_no LIKE #polSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="clmSeqNo">
               					clm_seq_no LIKE #clmSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="renewNo">
               					renew_no LIKE #renewNo#
               				</isNotEmpty>               			
               				<isNotEmpty prepend="AND"  property="assuredName">
               					UPPER(assured_name) LIKE UPPER(#assuredName#)
               				</isNotEmpty>                      					
                    	</isNotNull>
                    	  <isNull property="sortColumn">
			              		ORDER BY line_cd, subline_cd, iss_cd, clm_yy, clm_seq_no
			              </isNull>
			              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY line_cd||subline_cd||iss_cd||clm_yy||clm_seq_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY line_cd||subline_cd||pol_iss_cd||issue_yy||pol_seq_no||renew_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assuredName">
		              		ORDER BY assured_name
			              </isEqual>	
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
			              
		                   )a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicl_claims_pkg.get_claim_list_lov(#moduleId#, #lineCode#, #sublineCode#, #clmLineCode#, #clmSublineCode#, #issCode#, #polIssCode#, #clmYr#, #issueYr#, #clmSeqNum#, #polSeqNum#, #renewNum#, #userId#))
		                <isNotNull property="filter">
						 WHERE 1=1					 
               				<isNotEmpty prepend="AND"  property="sublineCd">
               					UPPER(subline_cd) LIKE UPPER(#sublineCd#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="clmSublineCd">
               					UPPER(clm_subline_cd) LIKE UPPER(#clmSublineCd#)
               				</isNotEmpty>               				
               				<isNotEmpty prepend="AND"  property="issCd">
               					UPPER(iss_cd) LIKE UPPER(#issCd#)
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="polIssCd">
               					UPPER(pol_iss_cd) LIKE UPPER(#polIssCd#)
               				</isNotEmpty>               				
               				<isNotEmpty prepend="AND"  property="issueYy">
               					issue_yy LIKE #issueYy#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="clmYy">
               					clm_yy LIKE #clmYy#
               				</isNotEmpty>               				
               				<isNotEmpty prepend="AND"  property="clmSeqNo">
               					clm_seq_no LIKE #clmSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="polSeqNo">
               					pol_seq_no LIKE #polSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="clmSeqNo">
               					clm_seq_no LIKE #clmSeqNo#
               				</isNotEmpty>
               				<isNotEmpty prepend="AND"  property="renewNo">
               					renew_no LIKE #renewNo#
               				</isNotEmpty>               			
               				<isNotEmpty prepend="AND"  property="assuredName">
               					UPPER(assured_name) LIKE UPPER(#assuredName#)
               				</isNotEmpty>                      					
                    	</isNotNull>)b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
  	<!-- added by Kris 07.29.2013 -->
  	<resultMap class="GICLClaimsClass" id="GICLGeneratePLAFLAResultMap">
		<result property="assuredName"		column="assured_name" />
		<result property="claimId"			column="claim_id" />
		<result property="claimSequenceNo"	column="clm_seq_no" />
		<result property="claimStatusCd"	column="clm_stat_cd" />
		<result property="claimStatDesc"	column="clm_stat_desc" />
		<result property="claimYy"			column="clm_yy" />
		<result property="inHouseAdjustment" column="in_hou_adj" />
		<result property="issueYy"			column="issue_yy" />
		<result property="issueCode"		column="iss_cd" />
		<result property="lineCode"			column="line_cd" />
		<result property="lossCatCd"		column="loss_cat_cd" />
		<result property="dspLossCatDesc"	column="loss_cat_desc" />
		<result property="lossDateStr"		column="loss_date" />
		<result property="policyIssueCode"	column="pol_iss_cd" />
		<result property="policySequenceNo"	column="pol_seq_no" />
		<result property="renewNo"			column="renew_no" />
		<result property="sublineCd"		column="subline_cd" />
		<result column="ROWNUM_" 			property="rowNum" />			
		<result column="COUNT_"				property="rowCount"/>		
	</resultMap>
  	<select id="getPLAListing" resultMap="GICLGeneratePLAFLAResultMap">
  		SELECT *
			  FROM (SELECT rownum rownum_, 
						   b.count_, 
						   a.* 
					  FROM (SELECT *  
							  FROM TABLE (GICLS051_PKG.get_pla_listing(#allUserSw#, #validTag#, #userId#, #moduleId#, #lineCd#))
							  <isEqual property="sortColumn" compareValue="lineCode sublineCd issueCode claimYy claimSequenceNo">
									ORDER BY line_cd, subline_cd, iss_cd, clm_yy, clm_seq_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="lineCode sublineCd policyIssueCode issueYy policySequenceNo renewNo">
									ORDER BY line_cd, subline_cd, pol_iss_cd, issue_yy, pol_seq_no, renew_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="assuredName">
									ORDER BY assured_name
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="inHouseAdjustment">
									ORDER BY in_hou_adj
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="claimStatDesc">
									ORDER BY clm_stat_desc
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="lossDateStr">
									ORDER BY TO_DATE(loss_date, 'MM-DD-YYYY')
							  </isEqual>
							  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							  </isNotNull>) a, 
						   (SELECT count(*) count_ 
							  FROM TABLE (GICLS051_PKG.get_pla_listing(#allUserSw#, #validTag#, #userId#, #moduleId#, #lineCd#))) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	<select id="getFLAListing" resultMap="GICLGeneratePLAFLAResultMap">
  		SELECT *
			  FROM (SELECT rownum rownum_, 
						   b.count_, 
						   a.* 
					  FROM (SELECT *  
							  FROM TABLE (GICLS051_PKG.get_fla_listing(#allUserSw#, #validTag#, #userId#, #moduleId#, #lineCd#))
							  <isEqual property="sortColumn" compareValue="lineCode sublineCd issueCode claimYy claimSequenceNo">
									ORDER BY line_cd, subline_cd, iss_cd, clm_yy, clm_seq_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="lineCode sublineCd policyIssueCode issueYy policySequenceNo renewNo">
									ORDER BY line_cd, subline_cd, pol_iss_cd, issue_yy, pol_seq_no, renew_no
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="assuredName">
									ORDER BY assured_name
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="inHouseAdjustment">
									ORDER BY in_hou_adj
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="claimStatDesc">
									ORDER BY clm_stat_desc
							  </isEqual>
							  <isEqual property="sortColumn" compareValue="lossDateStr">
									ORDER BY TO_DATE(loss_date, 'MM-DD-YYYY')
							  </isEqual>
							  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							  </isNotNull>) a, 
						   (SELECT count(*) count_ 
							  FROM TABLE (GICLS051_PKG.get_fla_listing(#allUserSw#, #validTag#, #userId#, #moduleId#, #lineCd#))) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getClmLineLOV" resultMap="lovMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list2(#moduleId#, #userId#))              
		   	 <isNull property="findText">
		         WHERE UPPER(CODE) LIKE UPPER(NVL(#searchString#, CODE))
		            OR UPPER(CODE_DESC) LIKE UPPER(NVL(#searchString#, CODE_DESC))
		     </isNull>
		     <isNotNull property="findText">
                 WHERE UPPER(CODE) LIKE UPPER(#findText#)
         		    OR CODE_DESC LIKE #findText#
             </isNotNull>
	          			<isEqual property="sortColumn" compareValue="code">
		            		ORDER BY code
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="codeDesc">
		            		ORDER BY code_desc
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GICL_CLAIMS_PKG.get_clm_line_list2(#moduleId#, #userId#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(code) LIKE UPPER(#findText#) OR UPPER(code_desc) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
	<resultMap class="java.util.HashMap" id="showReOpenRecoveryMap" extends="BaseEntity.TableGridResultMap">
		<result property="recoveryId"		column="recovery_id"/>
		<result property="claimId" 			column="claim_id" />
		<result property="recoveryNo"		column="recovery_no"/>
		<result property="claimNo"			column="claim_no"/>
		<result property="recoveryType"		column="recovery_type"/>
		<result property="status"			column="status"/>
		<result property="policyNo" 		column="policy_no"/>
		<result property="assdName"			column="assd_name"/>
		<result property="lossCatDesc"		column="loss_cat_desc"/>
		<result property="lossDate"			column="loss_date"/>
		<result property="clmFileDate"		column="clm_file_date"/>
		<result property="lawyerCd"			column="lawyer_cd"/>
		<result property="lawyerClassCd" 	column="lawyer_class_cd"/>
		<result property="lawyerName" 		column="lawyer_name"/>
		<result property="tpItemDesc" 		column="tp_item_desc"/>
		<result property="recoverableAmt" 	column="recoverable_amt"/>
		<result property="recoveredAmt"		column="recovered_amt"/>
		<result property="plateNo" 			column="plate_no"/>
		<result column="rownum_" 			property="rowNum" />			
		<result column="count_"				property="rowCount"/>
	</resultMap>
	
	<select id="showReOpenRecovery" resultMap="showReOpenRecoveryMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GICLS125_PKG.get_reopen_recovery(#claimId#, #moduleId#, #userId#, #lineCd#))	<!-- Gzelle 09162015 SR3292 -->
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="recoveryNo">
									UPPER(recovery_no) LIKE UPPER(#recoveryNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="claimNo">
									UPPER(claim_no) LIKE UPPER(#claimNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recoveryType">
									UPPER(recovery_type) LIKE UPPER(#recoveryType#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="status">
									UPPER(status) LIKE UPPER(#status#)
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="recoveryNo">
								ORDER BY recovery_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="claimNo">
								ORDER BY claim_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="recoveryType">
								ORDER BY recovery_type
							</isEqual>
							<isEqual property="sortColumn" compareValue="status">
								ORDER BY status
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GICLS125_PKG.get_reopen_recovery(#claimId#, #moduleId#, #userId#, #lineCd#))		<!-- Gzelle 09162015 SR3292 -->
						   <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="recoveryNo">
									UPPER(recovery_no) LIKE UPPER(#recoveryNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="claimNo">
									UPPER(claim_no) LIKE UPPER(#claimNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="recoveryType">
									UPPER(recovery_type) LIKE UPPER(#recoveryType#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="status">
									UPPER(status) LIKE UPPER(#status#)
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="java.util.HashMap"		id="gicls125ReopenRecoveryMap">
		<parameter property="claimId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="recoveryId"		jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String"   	mode="IN"/>
	</parameterMap>
	
	<procedure id="gicls125ReopenRecovery" parameterMap="gicls125ReopenRecoveryMap">
  		BEGIN
  			GICLS125_PKG.reopen_recovery_gicls125(?, ?, ?); 
  		END;
  	</procedure>
  	
	<procedure id="validateGiacParameterStatus" parameterClass="java.util.HashMap">
 		BEGIN
 			gicl_claims_pkg.validate_giac_param_stat;
 		END;
 	</procedure>
 	
 	<select id="validateGICLS010Line" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIIS_LINE_PKG.validate_gicls010_line(#polIssCd#, #moduleId#, #lineCd#, #userId#)
		  FROM DUAL
	</select> 
 	
 	 	<!-- Gzelle 07182104  -->
	<resultMap class="java.util.HashMap" id="exGratiaClaimsInquiryListResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="claim_id"    	property="claimId"/>
		<result column="claim_no"  		property="claimNo"/>
		<result column="line_cd"     	property="lineCd"/>
		<result column="subline_cd" 	property="sublineCd"/>
		<result column="iss_cd"     	property="issCd"/>
		<result column="clm_yy"     	property="clmYy"/>
		<result column="clm_seq_no"     property="clmSeqNo"/>
		<result column="clm_stat_cd"  	property="clmStatCd"/>
		<result column="clm_stat_desc"  property="clmStatDesc"/>
		<result column="assd_no" 		property="assdNo"/>
		<result column="assd_name"     	property="assdName"/>
		<result column="loss_pd_amt"    property="lossPdAmt"/>
		<result column="loss_res_amt"   property="lossResAmt"/>
		<result column="exp_pd_amt"     property="expPdAmt"/>
		<result column="exp_res_amt"    property="expResAmt"/>
		<result column="tot_loss_pd"    property="totLossPd"/>
		<result column="tot_loss_res"   property="totLossRes"/>
		<result column="tot_exp_pd"     property="totExpPd"/>
		<result column="tot_exp_res"    property="totExpRes"/>
		<result column="clm_file_date"  property="clmFileDate"/>
		<result column="loss_date"     	property="lossDate"/>
		<result column="pol_iss_cd"     property="polIssCd"/>
		<result column="issue_yy"     	property="issueYy"/>
		<result column="pol_seq_no"     property="polSeqNo"/>
		<result column="renew_no"     	property="renewNo"/>
		<result column="policy_no"     	property="policyNo"/>
	</resultMap>

	<resultMap class="java.util.HashMap" id="paymentDetaislListResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="claim_no"  		property="claimNo"/>
		<result column="policy_no"     	property="policyNo"/>
		<result column="loss_cat_des"   property="lossCatDes"/>
		<result column="loss_date" 		property="lossDate"/>
		<result column="item_no"     	property="itemNo"/>
		<result column="item_title"     property="itemTitle"/>
		<result column="peril_cd"     	property="perilCd"/>
		<result column="peril_name"  	property="perilName"/>
		<result column="hist_seq_no"  	property="histSeqNo"/>
		<result column="class_desc" 	property="classDesc"/>
		<result column="payee_name"     property="payeeName"/>
		<result column="assd_name"    	property="assdName"/>
		<result column="net_amt"   		property="netAmt"/>
		<result column="paid_amt"     	property="paidAmt"/>
		<result column="advise_amt"    	property="adviseAmt"/>
		<result column="ex_gratia_sw"   property="exGratiaSw"/>
	</resultMap>	
	 	
	<select id="getGicls273RecList" resultMap="exGratiaClaimsInquiryListResultMap"> 	
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(gicls273_pkg.get_rec_list(#searchBy#, #asOfDate#, #fromDate#, #toDate#, #userId#))
						  WHERE check_user_per_iss_cd2 (line_cd, iss_cd, 'GICLS273',#userId# ) = 1
						  <isNotNull property="filter">
							AND 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd">
									UPPER(line_cd) LIKE UPPER(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd">
									UPPER(subline_cd) LIKE UPPER(#sublineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd">
									UPPER(iss_cd) LIKE UPPER(#issCd#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="clmYy">
									clm_yy = #clmYy#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="clmSeqNo">
									clm_seq_no = #clmSeqNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="clmStatDesc">
									UPPER(clm_stat_desc) LIKE UPPER(#clmStatDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPdAmt">
									loss_pd_amt = #lossPdAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPdAmt">
									exp_pd_amt = #expPdAmt#
								</isNotEmpty>
						  </isNotNull>		  	      
		                  <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="clmStatDesc">
			              		ORDER BY clm_stat_desc
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lossResAmt">
			              		ORDER BY loss_res_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expResAmt">
			              		ORDER BY exp_res_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lossPdAmt">
			              		ORDER BY loss_pd_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expPdAmt">
			              		ORDER BY exp_pd_amt
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls273_pkg.get_rec_list(#searchBy#, #asOfDate#, #fromDate#, #toDate#, #userId#))
						  WHERE check_user_per_iss_cd2 (line_cd, iss_cd, 'GICLS273',#userId# ) = 1
						  <isNotNull property="filter">
							AND 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd">
									UPPER(line_cd) LIKE UPPER(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd">
									UPPER(subline_cd) LIKE UPPER(#sublineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd">
									UPPER(iss_cd) LIKE UPPER(#issCd#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="clmYy">
									clm_yy = #clmYy#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="clmSeqNo">
									clm_seq_no = #clmSeqNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="clmStatDesc">
									UPPER(clm_stat_desc) LIKE UPPER(#clmStatDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossResAmt">
									loss_res_amt = #lossResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expResAmt">
									exp_res_amt = #expResAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossPdAmt">
									loss_pd_amt = #lossPdAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="expPdAmt">
									exp_pd_amt = #expPdAmt#
								</isNotEmpty>
						  </isNotNull>			                  
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>

	<select id="getGicls273SubRecList" resultMap="paymentDetaislListResultMap"> 	
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(gicls273_pkg.get_sub_rec_list(#searchBy#, #asOfDate#, #fromDate#, #toDate#, #userId#, #claimId#))	
						  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									item_no = #itemNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="perilCd">
									peril_cd = #perilCd#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="perilName">
									UPPER(peril_name) LIKE UPPER(#perilName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="histSeqNo">
									hist_seq_no = #histSeqNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="classDesc">
									UPPER(class_desc) LIKE UPPER(#classDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="payeeName">
									UPPER(payee_name) LIKE UPPER(#payeeName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="netAmt">
									net_amt = #netAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="paidAmt">
									paid_amt = #paidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="adviseAmt">
									advise_amt = #adviseAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="exGratiaSw">
									UPPER(ex_gratia_sw) LIKE UPPER(#exGratiaSw#)
								</isNotEmpty>
						  </isNotNull>               			
               			<isEqual property="sortColumn" compareValue="itemNo itemTitle">
		            			ORDER BY item_no
			          	</isEqual> 		  	        	      
			              <isEqual property="sortColumn" compareValue="perilCd perilName">
			              		ORDER BY peril_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="histSeqNo">
			              		ORDER BY hist_seq_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="classDesc payeeName">
			              		ORDER BY class_desc
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="netAmt">
			              		ORDER BY net_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="paidAmt">
			              		ORDER BY paid_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="adviseAmt">
			              		ORDER BY advise_amt
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls273_pkg.get_sub_rec_list(#searchBy#, #asOfDate#, #fromDate#, #toDate#, #userId#, #claimId#))	
						  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									item_no = #itemNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="perilCd">
									peril_cd = #perilCd#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="perilName">
									UPPER(peril_name) LIKE UPPER(#perilName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="histSeqNo">
									hist_seq_no = #histSeqNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="classDesc">
									UPPER(class_desc) LIKE UPPER(#classDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="payeeName">
									UPPER(payee_name) LIKE UPPER(#payeeName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="netAmt">
									net_amt = #netAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="paidAmt">
									paid_amt = #paidAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="adviseAmt">
									advise_amt = #adviseAmt#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="exGratiaSw">
									UPPER(ex_gratia_sw) LIKE UPPER(#exGratiaSw#)
								</isNotEmpty>
						  </isNotNull>			                  		                  
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	
 	<!-- END -->
 	
 	<resultMap class="java.util.HashMap" id="gicls039AssuredLovResultMap" extends="BaseEntity.TableGridResultMap">
 		<result property="assdNo" column="assd_no"/>
 		<result property="assuredName" column="assured_name"/>
 	</resultMap>
 	
 	<select id="getGicls039AssuredLOV" resultMap="gicls039AssuredLovResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(gicls039_pkg.get_assured_lov(#findText#))													                	
               			<isEqual property="sortColumn" compareValue="assdNo">
		            			ORDER BY assd_no
			          	</isEqual> 		  	        	      
			              <isEqual property="sortColumn" compareValue="assuredName">
			              		ORDER BY assured_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(gicls039_pkg.get_assured_lov(#findText#))		                  		                  
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	 	  
 	</select>
 	
 	<resultMap class="java.util.HashMap" id="getReasonListMap">
 		<result column="count_"				property="rowCount"/>
 		<result column="rownum_"			property="rowNum"/>
		<result column="reason_cd" 			property="reasonCode" />
		<result column="reason_desc" 		property="reasonDesc" />
	</resultMap>
	
 	<select id="showReasonLOV" resultMap="getReasonListMap" parameterClass="java.util.HashMap">
		 SELECT * FROM TABLE (gicls039_pkg.get_reason_lov(#findText#, #sortColumn#, #ascDescFlg#, #from#, #to#))
	</select>
	
	<resultMap class="java.lang.String" id="getClaimItemAttachmentsResultMap">
		<result column="file_name" property="fileName" />
	</resultMap>
	
	<select id="getClaimItemAttachments" resultMap="getClaimItemAttachmentsResultMap" parameterClass="java.util.HashMap">
		SELECT file_name
		  FROM TABLE (gicl_pictures_pkg.get_gicl_pictures(#claimId#, #itemNo#))
	</select>
 	
</sqlMap>