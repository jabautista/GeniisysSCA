<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="GIACAgingParameters">

	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>

	<typeAlias alias="GIACAgingParameters" type="com.geniisys.giac.entity.GIACAgingParameters"/>
	
	<resultMap class="GIACAgingParameters" id="giacs310RecListMap" extends="BaseEntity.TableGridResultMap">
		<result column="aging_id" 				property="agingId" />
		<result column="gibr_gfun_fund_cd" 		property="gibrGfunFundCd" />
		<result column="fund_desc" 				property="fundDesc" />
		<result column="gibr_branch_cd" 		property="gibrBranchCd" />
		<result column="branch_name" 			property="branchName" />
		<result column="column_no" 				property="columnNo" />
		<result column="column_heading" 		property="columnHeading" />
		<result column="min_no_days" 			property="minNoDays" />
		<result column="max_no_days" 			property="maxNoDays" />
		<result column="over_due_tag" 			property="overDueTag" />
		<result column="rep_col_no" 			property="repColNo" />
		<result column="user_id" 				property="userId" />
		<result column="last_update" 			property="lastUpdate" />
		<result column="remarks" 				property="remarks" />
		<result column="cpi_rec_no" 			property="cpiRecNo" />
		<result column="cpi_branch_cd" 			property="cpiBranchCd" />
	</resultMap>
	
	<select id="getGiacs310RecList" resultMap="giacs310RecListMap">
		SELECT * 
			FROM (SELECT rownum rownum_,
						 b.count_,
						 a.*
					FROM (SELECT * 
							FROM TABLE (giacs310_pkg.get_rec_list(#moduleId#,#userId#))
							<isNotNull property="filter">
					   		  	WHERE 1=1
				   		  		<isNotEmpty prepend="AND" property="gibrGfunFundCd">
				   		  			UPPER(gibr_gfun_fund_cd) LIKE UPPER(#gibrGfunFundCd#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="gibrBranchCd">
				   		  			UPPER(gibr_branch_cd) LIKE UPPER(#gibrBranchCd#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="columnNo">
				   		  			column_no LIKE #columnNo#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="columnHeading">
				   		  			UPPER(column_heading) LIKE UPPER(#columnHeading#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="repColNo">
				   		  			rep_col_no LIKE #repColNo#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="minNoDays">
				   		  			min_no_days LIKE #minNoDays#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="maxNoDays">
				   		  			max_no_days LIKE #maxNoDays#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="overDueTag">
				   		  			UPPER(over_due_tag) LIKE UPPER(#overDueTag#)
				   		  		</isNotEmpty>
					   		</isNotNull>
							<isEqual property="sortColumn" compareValue="gibrGfunFundCd">
								ORDER BY gibr_gfun_fund_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="gibrBranchCd">
								ORDER BY gibr_branch_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="columnNo">
								ORDER BY column_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="columnHeading">
								ORDER BY column_heading
							</isEqual>
							<isEqual property="sortColumn" compareValue="repColNo">
								ORDER BY rep_col_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="minNoDays">
								ORDER BY min_no_days
							</isEqual>
							<isEqual property="sortColumn" compareValue="maxNoDays">
								ORDER BY max_no_days
							</isEqual>
							<isEqual property="sortColumn" compareValue="overDueTag">
								ORDER BY over_due_tag
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a, 
							(SELECT count(*) count_
							   FROM TABLE (giacs310_pkg.get_rec_list(#moduleId#,#userId#))
							 <isNotNull property="filter">
					   		  	WHERE 1=1
				   		  		<isNotEmpty prepend="AND" property="gibrGfunFundCd">
				   		  			UPPER(gibr_gfun_fund_cd) LIKE UPPER(#gibrGfunFundCd#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="gibrBranchCd">
				   		  			UPPER(gibr_branch_cd) LIKE UPPER(#gibrBranchCd#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="columnNo">
				   		  			column_no LIKE #columnNo#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="columnHeading">
				   		  			UPPER(column_heading) LIKE UPPER(#columnHeading#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="repColNo">
				   		  			rep_col_no LIKE #repColNo#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="minNoDays">
				   		  			min_no_days LIKE #minNoDays#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="maxNoDays">
				   		  			max_no_days LIKE #maxNoDays#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="overDueTag">
				   		  			UPPER(over_due_tag) LIKE UPPER(#overDueTag#)
				   		  		</isNotEmpty>
					   		 </isNotNull>) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getGiacs310FundCdLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="gibr_gfun_fund_cd" 	property="gibrGfunFundCd" />
		<result column="fund_desc" 			property="fundDesc" />
	</resultMap>
	
	<select id="getGiacs310FundCdLOV" resultMap="getGiacs310FundCdLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (giacs310_pkg.get_fund_cd_lov(#findText#))
                         <isEqual property="sortColumn" compareValue="gibrGfunFundCd">
                         	ORDER BY gibr_gfun_fund_cd
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="fundDesc">
                            ORDER BY fund_desc
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                            <isEqual property="ascDescFlg" compareValue="ASC">
                                ASC
                            </isEqual> 
                            <isEqual property="ascDescFlg" compareValue="DESC">
                                DESC
                            </isEqual>
                         </isNotNull>) a,
		          	   (SELECT count(*) count_ 
		  		   		    FROM TABLE (giacs310_pkg.get_fund_cd_lov(#findText#))) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getGiacs310BranchCdLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="gibr_branch_cd" 	property="gibrBranchCd" />
		<result column="branch_name"		property="branchName" />
	</resultMap>
	
	<select id="getGiacs310BranchCdLOV" resultMap="getGiacs310BranchCdLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (giacs310_pkg.get_branch_cd_lov(#moduleId#,#userId#,#findText#))
                         <isEqual property="sortColumn" compareValue="gibrBranchCd">
                         	ORDER BY gibr_branch_cd
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="branchName">
                            ORDER BY branch_name
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                            <isEqual property="ascDescFlg" compareValue="ASC">
                                ASC
                            </isEqual> 
                            <isEqual property="ascDescFlg" compareValue="DESC">
                                DESC
                            </isEqual>
                         </isNotNull>) a,
		          	   (SELECT count(*) count_ 
		  		   		    FROM TABLE (giacs310_pkg.get_branch_cd_lov(#moduleId#,#userId#,#findText#))) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiacs310BranchCdToLOV" resultMap="getGiacs310BranchCdLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (giacs310_pkg.get_branch_cd_to_lov(#moduleId#,#userId#,#findText#))
                         <isEqual property="sortColumn" compareValue="gibrBranchCd">
                         	ORDER BY gibr_branch_cd
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="branchName">
                            ORDER BY branch_name
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                            <isEqual property="ascDescFlg" compareValue="ASC">
                                ASC
                            </isEqual> 
                            <isEqual property="ascDescFlg" compareValue="DESC">
                                DESC
                            </isEqual>
                         </isNotNull>) a,
		          	   (SELECT count(*) count_ 
		  		   		    FROM TABLE (giacs310_pkg.get_branch_cd_to_lov(#moduleId#,#userId#,#findText#))) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiacs310BranchCdFromLOV" resultMap="getGiacs310BranchCdLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (giacs310_pkg.get_branch_cd_from_lov(#moduleId#,#userId#,#findText#))
                         <isEqual property="sortColumn" compareValue="gibrBranchCd">
                         	ORDER BY gibr_branch_cd
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="branchName">
                            ORDER BY branch_name
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                            <isEqual property="ascDescFlg" compareValue="ASC">
                                ASC
                            </isEqual> 
                            <isEqual property="ascDescFlg" compareValue="DESC">
                                DESC
                            </isEqual>
                         </isNotNull>) a,
		          	   (SELECT count(*) count_ 
		  		   		    FROM TABLE (giacs310_pkg.get_branch_cd_from_lov(#moduleId#,#userId#,#findText#))) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="setAgingParameters" parameterClass="GIACAgingParameters">
	    DECLARE
	    	v_rec giac_aging_parameters%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
 			
 			v_rec.aging_id := #agingId#;
 			v_rec.gibr_gfun_fund_cd := #gibrGfunFundCd#; 
			v_rec.gibr_branch_cd := #gibrBranchCd#; 
            v_rec.column_no := #columnNo#;
            v_rec.column_heading := #columnHeading#; 
            v_rec.min_no_days := #minNoDays#;
            v_rec.max_no_days := #maxNoDays#;
            v_rec.over_due_tag := #overDueTag#; 
            v_rec.rep_col_no := #repColNo#; 
            v_rec.user_id := #userId#; 
            v_rec.remarks := #remarks#;
 			
 			giacs310_pkg.set_rec(v_rec);
 		END;
 	</procedure>
 	
 	<procedure id="delAgingParameters" parameterClass="GIACAgingParameters">
	    DECLARE
	    	v_rec giac_aging_parameters%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
 			
 			v_rec.aging_id := #agingId#;
 			
 			giacs310_pkg.del_rec(v_rec);
 		END;
 	</procedure>
 	
 	<parameterMap id="copyRecordsGiacs310Map" class="map">
		<parameter property="appUser"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" /> <!-- shan 07.17.2014 -->
		<parameter property="fundCdFrom"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="branchCdFrom"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="fundCdTo"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="branchCdTo"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="userId"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
	</parameterMap>
	
	<procedure id="copyRecordsGiacs310" parameterMap="copyRecordsGiacs310Map">
		BEGIN
 			giis_users_pkg.app_user := ?;	<!-- shan 07.17.2014 -->	
			giacs310_pkg.copy_records(?, ?, ?, ?, ?);
		END;
	</procedure>
 	
</sqlMap>