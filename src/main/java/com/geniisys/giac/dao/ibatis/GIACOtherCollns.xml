<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap>
	<typeAlias alias="GIACOtherCollnsClass" type="com.geniisys.giac.entity.GIACOtherCollns" />
	
	<resultMap id="GIACOtherCollnsResultMap" class="com.geniisys.giac.entity.GIACOtherCollns">
		<result column="gacc_tran_id" 		property="gaccTranId" /> 
		<result column="item_no" 			property="itemNo" />
		<result column="transaction_type" 	property="transactionType" />
		<result column="collection_amt" 	property="collectionAmt" />
		<result column="gl_acct_id" 		property="glAcctId" />
		<result column="gl_acct_category" 	property="glAcctCategory" />
		<result column="gl_control_acct" 	property="glControlAcct" />
		<result column="gl_sub_acct_1" 		property="glSubAcct1" />
		<result column="gl_sub_acct_2" 		property="glSubAcct2" />
		<result column="gl_sub_acct_3" 		property="glSubAcct3" />
		<result column="gl_sub_acct_4" 		property="glSubAcct4" />
		<result column="gl_sub_acct_5" 		property="glSubAcct5" />
		<result column="gl_sub_acct_6" 		property="glSubAcct6" />
		<result column="gl_sub_acct_7" 		property="glSubAcct7" />
		<result column="gotc_gacc_tran_id" 	property="gotcGaccTranId" />
		<result column="gotc_item_no" 		property="gotcItemNo" />
		<result column="or_print_tag" 		property="orPrintTag" />
		<result column="sl_cd" 				property="slCd" />
		<result column="dsp_sl_name" 		property="dspSlName" />
		<result column="particulars" 		property="particulars" />
		<result column="old_trans_no" 		property="oldTransNo" />
		<result column="old_item_no" 		property="oldItemNo" />
		<result column="user_id" 			property="userId" />
		<result column="last_update" 		property="lastUpdate" />
		<result column="dsp_account_name" 	property="dspAccountName" />
		<result column="dsp_tran_year" 		property="dspTranYear" />
		<result column="dsp_tran_month" 	property="dspTranMonth" />
		<result column="dsp_tran_seq_no" 	property="dspTranSeqNo" />
		<result column="tran_type_meaning" 	property="tranTypeMeaning" />
		<result column="tran_type_desc" 	property="tranTypeDesc" />
		<result column="max_item"		 	property="maxItem" />
		<result column="total_amounts"		property="totalAmounts" />
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount" />
	</resultMap>
	
	<resultMap id="GIACS015AccountCdLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="gl_acct_category" 	property="glAcctCategory"/>
		<result column="gl_control_acct" 	property="glControlAcct"/>
		<result column="gl_sub_acct_1" 		property="glSubAcct1"/>
		<result column="gl_sub_acct_2" 		property="glSubAcct2"/>
		<result column="gl_sub_acct_3" 		property="glSubAcct3"/>
		<result column="gl_sub_acct_4" 		property="glSubAcct4"/>
		<result column="gl_sub_acct_5" 		property="glSubAcct5"/>
		<result column="gl_sub_acct_6" 		property="glSubAcct6"/>
		<result column="gl_sub_acct_7" 		property="glSubAcct7"/>
		<result column="gl_acct_name" 		property="glAcctName"/>
		<result column="gl_acct_id" 		property="glAcctId"/>
		<result column="gslt_sl_type_cd"	property="gsltSlTypeCd"/>
		<result column="gl_acct_code"		property="glAcctCode"/> 
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount" />
	</resultMap>
	
	<resultMap id="GIACS015SlCdLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="sl_cd" 				property="slCd"/>
		<result column="sl_name" 			property="slName"/>
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount" />
	</resultMap>
	
	<resultMap id="GIACS015TranTypeLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="transaction_type" 	property="transactionType" />
		<result column="tran_type_meaning" 	property="tranTypeMeaning" />
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount" />
	</resultMap>

    <resultMap id="GIACS015OldTranIdLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="tran_year" 			property="tranYear" />
		<result column="tran_month" 		property="tranMonth" />
		<result column="tran_seq_no" 		property="tranSeqNo" />
		<result column="old_item_no" 		property="OldItemNo" />
		<result column="collection_amt" 	property="collectionAmt" />
		<result column="collection_amt2" 	property="collectionAmt2" />
		<result column="gacc_tran_id" 		property="gaccTranId" />
		<result column="particulars" 		property="particulars" />
		<result column="transaction_type" 	property="transactionType" />
		<result column="gl_acct_category" 	property="glAcctCategory" />
		<result column="gl_control_acct" 	property="glControlAcct" />
		<result column="gl_sub_acct_1" 		property="glSubAcct1" />
		<result column="gl_sub_acct_2" 		property="glSubAcct2" />
		<result column="gl_sub_acct_3" 		property="glSubAcct3" />
		<result column="gl_sub_acct_4" 		property="glSubAcct4" />
		<result column="gl_sub_acct_5" 		property="glSubAcct5" />
		<result column="gl_sub_acct_6" 		property="glSubAcct6" />
		<result column="gl_sub_acct_7" 		property="glSubAcct7" />
		<result column="dsp_account_name" 	property="dspAccountName" />
		<result column="gl_acct_id" 		property="glAcctId"/>
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount" />
	</resultMap>
      
	<select id="getGIACOtherCollns" resultMap="GIACOtherCollnsResultMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, ROWNUM rownum_
		          FROM (SELECT *
		                  FROM TABLE (GIACS015_PKG.GET_OTHER_PAYMENTS(#gaccTranId#, #fundCd#))
 						  	<isNotNull property="filter">
								WHERE 1=1
								<isNotEmpty prepend="AND"  property="itemNo">
									upper(item_no) LIKE upper(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="tranTypeDesc">
									upper(tran_type_desc) LIKE upper(#tranTypeDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="oldTransNo">
									upper(old_trans_no) LIKE upper(#oldTransNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="oldItemNo">
									upper(old_item_no) LIKE upper(#oldItemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="dspAccountName">
									upper(dsp_account_name) LIKE upper(#dspAccountName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="particulars">
									upper(particulars) LIKE upper(#particulars#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="collectionAmt">
									upper(collection_amt) LIKE upper(#collectionAmt#)
								</isNotEmpty>
							</isNotNull>		                  
		                  <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="tranTypeDesc">
			              		ORDER BY tran_type_desc
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="oldTransNo">
			              		ORDER BY old_trans_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="oldItemNo">
			              		ORDER BY old_item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="dspAccountName">
			              		ORDER BY dsp_account_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="particulars">
			              		ORDER BY particulars
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="collectionAmt">
			              		ORDER BY collection_amt
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (GIACS015_PKG.GET_OTHER_PAYMENTS(#gaccTranId#, #fundCd#))
		                  <isNotNull property="filter">
								WHERE 1=1
								<isNotEmpty prepend="AND"  property="itemNo">
									upper(item_no) LIKE upper(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="tranTypeDesc">
									upper(tran_type_desc) LIKE upper(#tranTypeDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="oldTransNo">
									upper(old_trans_no) LIKE upper(#oldTransNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="oldItemNo">
									upper(old_item_no) LIKE upper(#oldItemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="dspAccountName">
									upper(dsp_account_name) LIKE upper(#dspAccountName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="particulars">
									upper(particulars) LIKE upper(#particulars#)
								</isNotEmpty>
								<isNotEmpty prepend="AND"  property="collectionAmt">
									upper(collection_amt) LIKE upper(#collectionAmt#)
								</isNotEmpty>
							</isNotNull>		 		
		                  ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIACS015AccountCdLov" resultMap="GIACS015AccountCdLovMap" parameterClass="java.util.HashMap"><!-- John Daniel; replaced with optimized code -->
	    SELECT *
		FROM ( SELECT ROWNUM rownum_,
					  COUNT(1) OVER() count_,
					  a.*
			   FROM ( SELECT *
			   		  FROM TABLE (GIACS015_PKG.get_gl_acct_list( #glAcctCategory#, #glControlAcct#, #glSubAcct1#,
			   		  											 #glSubAcct2#, #glSubAcct3#, #glSubAcct4#,
			   		  											 #glSubAcct5#, #glSubAcct6#, #glSubAcct7#))
			   		  					<isNotNull property="findText">
											WHERE (upper(gl_acct_code) LIKE upper(#findText#) OR
												upper(gl_acct_name) LIKE upper(#findText#)OR
												upper(gslt_sl_type_cd) LIKE upper(#findText#)OR
												upper(gl_acct_id) LIKE upper(#findText#))
										</isNotNull>
										<isEqual property="sortColumn" compareValue="glAcctCode">
						              		ORDER BY gl_acct_code
							            </isEqual>
							            <isEqual property="sortColumn" compareValue="glAcctName">
						              		ORDER BY gl_acct_name
							            </isEqual>
							            <isEqual property="sortColumn" compareValue="gsltSlTypeCd">
						              		ORDER BY gslt_sl_type_cd
							            </isEqual>
										  <isEqual property="sortColumn" compareValue="glAcctId">
						              		ORDER BY gl_acct_id
							            </isEqual>
							            <isNotNull property="sortColumn">
						              		<isEqual property="ascDescFlg" compareValue="ASC">
						              			ASC
						              		</isEqual>
						              		<isEqual property="ascDescFlg" compareValue="DESC">
						              			DESC
						              		</isEqual>
						              	</isNotNull>
			   ) a
		)
		WHERE rownum_ BETWEEN #from# AND #to#  	
	</select>
 	
 	<select id="getGIACS015SlCdLov" resultMap="GIACS015SlCdLovMap" parameterClass="java.util.HashMap">	<!-- John Daniel; replaced with optimized code -->
	    SELECT *
		FROM ( SELECT ROWNUM rownum_, 
					  COUNT(1) OVER() count_, 
					  a.* 
			   FROM ( SELECT * 
			   		  FROM TABLE(GIACS015_PKG.get_sl_lists(#fundCd#, #slTypeCd#, #slCd#))
			   		  	<isNotNull property="findText">
							WHERE (upper(sl_cd) LIKE upper(#findText#) OR
								upper(sl_name) LIKE upper(#findText#))
						</isNotNull>
						<isEqual property="sortColumn" compareValue="slCd">
		              		ORDER BY sl_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="slName">
		              		ORDER BY sl_name
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	</isNotNull>
			   ) a 	
		)
		WHERE rownum BETWEEN #from# AND #to#	
	</select>

	<select id="getGIACS015TranTypeLov" resultMap="GIACS015TranTypeLovMap" parameterClass="java.util.HashMap">	
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIACS015_PKG.get_transaction_type(#transactionType#))
          	   	<isNotNull property="findText">
					WHERE (upper(transaction_type) LIKE upper(#findText#) OR
						upper(tran_type_meaning) LIKE upper(#findText#))
				</isNotNull>
				<isEqual property="sortColumn" compareValue="transactionType">
              		ORDER BY transaction_type
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="tranTypeMeaning">
              		ORDER BY tran_type_meaning
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(GIACS015_PKG.get_transaction_type(#transactionType#))
	          	<isNotNull property="findText">
					WHERE (upper(transaction_type) LIKE upper(#findText#) OR
						upper(tran_type_meaning) LIKE upper(#findText#))
				</isNotNull>)b) 
	    WHERE rownum_ BETWEEN #from# AND #to# 	
	</select>

	<select id="getGIACS015OldTranIdLov" resultMap="GIACS015OldTranIdLovMap" parameterClass="java.util.HashMap">	
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIACS015_PKG.get_old_tran_no(#tranYear#, #tranMonth#, #tranSeqNo#, #gaccTranId#))
          	   	<isNotNull property="findText">
					WHERE (upper(tran_year) LIKE upper(#findText#) OR
						upper(tran_month) LIKE upper(#findText#)OR
						upper(tran_seq_no) LIKE upper(#findText#)OR
						upper(old_item_no) LIKE upper(#findText#)OR
						upper(collection_amt) LIKE upper(#findText#) OR
						upper(particulars) LIKE upper(#findText#))
				</isNotNull>
				<isEqual property="sortColumn" compareValue="tranYear">
              		ORDER BY tran_year
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="tranMonth">
              		ORDER BY tran_month
	            </isEqual>
	             <isEqual property="sortColumn" compareValue="tranSeqNo">
              		ORDER BY tran_seq_no
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="OldItemNo">
              		ORDER BY old_item_no
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="collectionAmt">
              		ORDER BY collection_amt
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="particulars">
              		ORDER BY particulars
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(GIACS015_PKG.get_old_tran_no(#tranYear#, #tranMonth#, #tranSeqNo#, #gaccTranId#))
	          	<isNotNull property="findText">
					WHERE (upper(tran_year) LIKE upper(#findText#) OR
						upper(tran_month) LIKE upper(#findText#)OR
						upper(tran_seq_no) LIKE upper(#findText#)OR
						upper(old_item_no) LIKE upper(#findText#)OR
						upper(collection_amt) LIKE upper(#findText#) OR
						upper(particulars) LIKE upper(#findText#))
				</isNotNull>)b) 
	    WHERE rownum_ BETWEEN #from# AND #to# 	
	</select>

	<insert id="setOtherCollnsDtls" parameterClass="GIACOtherCollnsClass">
  		DECLARE
  			v_other   giac_other_collections%ROWTYPE;
		BEGIN
			giis_users_pkg.app_user := #appUser#;
		  
			v_other.gacc_tran_id := #gaccTranId#;
			v_other.item_no := #itemNo#;
			v_other.transaction_type := #transactionType#;
			v_other.collection_amt := #collectionAmt#;
			v_other.gl_acct_id := #glAcctId#;
			v_other.gl_acct_category := #glAcctCategory#;
			v_other.gl_control_acct := #glControlAcct#;
			v_other.gl_sub_acct_1 := #glSubAcct1#;
			v_other.gl_sub_acct_2 := #glSubAcct2#;
			v_other.gl_sub_acct_3 := #glSubAcct3#;
			v_other.gl_sub_acct_4 := #glSubAcct4#;
			v_other.gl_sub_acct_5 := #glSubAcct5#;
			v_other.gl_sub_acct_6 := #glSubAcct6#;
			v_other.gl_sub_acct_7 := #glSubAcct7#;
			v_other.gotc_gacc_tran_id := #gotcGaccTranId#;
			v_other.gotc_item_no := #gotcItemNo#;
			v_other.or_print_tag := #orPrintTag#;
			v_other.sl_cd := #slCd#;
			v_other.particulars := #particulars#;
      		v_other.user_id := #appUser#;
		  
		  GIACS015_PKG.set_other_collns_dtls(v_other);
		END;
  	</insert>
  	
  	<procedure id="postFormsCommitGiacs015" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			GIACS015_PKG.post_forms_commit_giacs015(#gaccTranId#, #fundCd#, #branchCd#, #user#, #moduleName#, #orFlag#, #tranSource#);
		END;
	</procedure> 

	<select id="validateOldTranNoGIACS015" resultClass="string" parameterClass="java.util.HashMap">
		SELECT (GIACS015_PKG.validate_old_tran_no_giacs015(#gaccTranId#, #tranYear#, #tranMonth#, #tranSeqNo#)) FROM DUAL
	</select>
	
	<select id="validateOldItemNoGIACS015" resultClass="string" parameterClass="java.util.HashMap">
		SELECT (GIACS015_PKG.validate_old_item_no_giacs015(#gaccTranId#, #itemNo#)) FROM DUAL
	</select>
	
	<select id="validateItemNoGIACS015" resultClass="string" parameterClass="java.util.HashMap">
		 SELECT 'Y' FROM giac_other_collections 
          WHERE item_no = #itemNo#
            AND gacc_tran_id = #gaccTranId#
	</select>
	
	<procedure id="deleteOtherCollnsDtls" parameterClass="GIACOtherCollnsClass">
		BEGIN
			GIACS015_PKG.delete_other_collns_dtls(#gaccTranId#, #itemNo#);
		END;
	</procedure> 
	
	<select id="validateDeleteGiacs015" resultClass="string" parameterClass="java.util.HashMap">
		 SELECT (GIACS015_PKG.validate_delete_giacs015(#gaccTranId#, #itemNo#)) FROM DUAL
	</select>	
	
	<parameterMap class="Map" id="checkSLCodeParamMap"> <!-- added by John Daniel SR-5056 -->
		<parameter property="fundCd" javaType="String" jdbcType="VARCHAR"/>
		<parameter property="slTypeCd" javaType="String" jdbcType="NUMERIC"/>
		<parameter property="slCd" javaType="String" jdbcType="NUMERIC"/>
	</parameterMap>
		
	<select id="checkSLCode" parameterMap="checkSLCodeParamMap" resultClass="String"> <!-- added by John Daniel SR-5056 -->
		SELECT CASE 
			   WHEN EXISTS(
					SELECT 1 
					FROM giac_sl_lists
                    WHERE fund_cd = ?
                     AND sl_type_cd = ?
                     AND sl_cd = NVL (?, sl_cd)
                     AND active_tag = 'Y'
			   ) THEN 'Y'
			   ELSE 'N'
			   END
		FROM dual
	</select>
</sqlMap>