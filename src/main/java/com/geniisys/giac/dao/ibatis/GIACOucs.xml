<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap>

	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>

	<typeAlias alias="GIACOucsClass" type="com.geniisys.giac.entity.GIACOucs"/>
		
	<resultMap class="GIACOucsClass" id="GIACOucsResultMap">
		<result column="ouc_id"           		property="oucId"/>
		<result column="gibr_gfun_fund_cd"		property="gibrGfunFundCd"/>
		<result column="gibr_branch_cd"   		property="gibrBranchCd"/>
		<result column="ouc_cd"           		property="oucCd"/>
		<result column="ouc_name"         		property="oucName"/>
		<result column="user_id"          		property="userId"/>
		<result column="last_update"      		property="lastUpdate"/>
		<result column="cpi_rec_no"       		property="cpiRecCo"/>
		<result column="cpi_branch_cd"    		property="cpiBranchCd"/>
		<result column="claim_tag"        		property="claimTag"/>
		<result column="remarks"          		property="remarks"/>
	</resultMap>

	<resultMap class="GIACOucsClass" id="GIACOucsResultMapGrid" extends="GIACOucsResultMap">
		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
	</resultMap>

	<select id="getGiacOucsLOV" resultMap="GIACOucsResultMapGrid">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(GIAC_OUCS_PKG.get_giac_oucs_list(#fundCd#, #branchCd#))
		                  <isNotNull property="findText">
				          WHERE (UPPER(ouc_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(ouc_name) LIKE UPPER(#findText#)
				         	 )
				          </isNotNull>
		                  <isEqual property="sortColumn" compareValue="oucCd">
			              		ORDER BY ouc_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="oucName">
			              		ORDER BY ouc_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIAC_OUCS_PKG.get_giac_oucs_list(#fundCd#, #branchCd#))
		                 <isNotNull property="findText">
				         WHERE (UPPER(ouc_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(ouc_name) LIKE UPPER(#findText#)
				         	 )
				         </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>

	<resultMap class="GIACOucsClass" id="GIACOucsListResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="ouc_id"           		property="oucId"/>
		<result column="gibr_gfun_fund_cd"		property="gibrGfunFundCd"/>
		<result column="gibr_branch_cd"   		property="gibrBranchCd"/>
		<result column="ouc_cd"           		property="oucCd"/>
		<result column="ouc_name"         		property="oucName"/>
		<result column="user_id"          		property="userId"/>
		<result column="last_update"      		property="lastUpdate"/>
		<result column="claim_tag"        		property="claimTag"/>
		<result column="remarks"          		property="remarks"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GIACOucsListResultMap2" extends="GIACOucsListResultMap">
		<result column="dummy_ouc_id"           		property="dummyOucId"/>
	</resultMap>
	
	<select id="getGiacs305DeptList" resultMap="GIACOucsListResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(giacs305_pkg.get_dept_list(#fundCd#, #branchCd#, #claimTag#, #oucCd#, #oucName#))
		                  <isEqual property="sortColumn" compareValue="claimTag">
			              		ORDER BY claim_tag
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="oucCd">
			              		ORDER BY ouc_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="oucName">
			              		ORDER BY ouc_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(giacs305_pkg.get_dept_list(#fundCd#, #branchCd#, #claimTag#, #oucCd#, #oucName#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getGiacs305AllList" resultMap="GIACOucsListResultMap2">
		SELECT '1' rownum_, 
		       '1' count_,
		       a.*, 
		       a.ouc_id dummy_ouc_id
		       	FROM TABLE(giacs305_pkg.get_dept_list(#fundCd#, #branchCd#, #claimTag#, #oucCd#, #oucName#)) a
	</select>
	
	<procedure id="valAddOuc" parameterClass="java.lang.Integer">
 		BEGIN
 			giacs305_pkg.val_add_ouc(#oucCd#);
 		END;
 	</procedure>
	
	<procedure id="setOucs" parameterClass="GIACOucsClass">
	    DECLARE
	    	v_rec giac_oucs%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
 			
 			v_rec.ouc_id := #oucId#;
 			v_rec.gibr_gfun_fund_cd := #gibrGfunFundCd#;
 			v_rec.gibr_branch_cd := #gibrBranchCd#;
 			v_rec.ouc_cd := #oucCd#;
 			v_rec.ouc_name := #oucName#;
 			v_rec.user_id := #userId#;
 			v_rec.claim_tag := #claimTag#;
 			v_rec.remarks := #remarks#;
 			
 			giacs305_pkg.set_oucs(v_rec);
 		END;
 	</procedure>
 	
 	<procedure id="valDeleteOuc" parameterClass="java.lang.Integer">
 		BEGIN
 			giacs305_pkg.val_delete_ouc(#oucId#);
 		END;
 	</procedure>
 	
	<delete id="delOuc" parameterClass="java.lang.Integer">
		BEGIN
 			giacs305_pkg.del_ouc(#oucId#);
 		END;
 	</delete>
</sqlMap>