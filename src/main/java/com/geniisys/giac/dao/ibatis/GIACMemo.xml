<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap>
	<typeAlias alias="GIACMemo" type="com.geniisys.giac.entity.GIACMemo" />
	
	<resultMap id="getGIACMemoListMap" class="GIACMemo" extends="BaseEntity.TableGridResultMap" >
		<result column="GACC_TRAN_ID"			property="gaccTranId" />
		<result column="FUND_CD"			property="fundCd" />
		<result column="BRANCH_CD"			property="branchCd" />
		<result column="MEMO_TYPE"			property="memoType" />
		<result column="MEMO_DATE"			property="memoDate" />
		<result column="MEMO_YEAR"			property="memoYear" />
		<result column="MEMO_SEQ_NO"			property="memoSeqNo" />
		<result column="RECIPIENT"			property="recipient" />
		<result column="AMOUNT"			property="foreignAmount" />
		<result column="CURRENCY_CD"			property="currencyCd" />
		<result column="CURRENCY_RT"			property="currencyRt" />
		<result column="LOCAL_AMT"			property="localAmount" />
		<result column="PARTICULARS"			property="particulars" />
		<result column="MEMO_STATUS"			property="memoStatus" />
		<result column="USER_ID"			property="userId" />
		<result column="LAST_UPDATE"			property="lastUpdate" />
		<result column="LAST_UPDATE_STR"			property="lastUpdateStr" />
		<result column="DV_NO"				property="dvNo"/> <!-- Added by Jerome Bautista 12.14.2015 SR 3467 -->
		
		<result column="MEMO_NUMBER"			property="memoNumber" />
		<result column="MEAN_MEMO_TYPE"			property="meanMemoType" />
		<result column="MEAN_MEMO_STATUS"			property="meanMemoStatus" />
		<result column="FOREIGN_CURR_SNAME"			property="foreignCurrSname" />
		<result column="LOCAL_CURR_SNAME"			property="localCurrSname" />
		<result column="LOCAL_CURR_RT"			property="localCurrRt" />
		<result column="LOCAL_CURR_CD"			property="localCurrCd" />
		<result column="BRANCH_NAME"			property="branchName" />
		<result column="FUND_DESC"			property="fundDesc" />
		<result column="GRAC_RAC_CD"			property="graccRacCd" />
		<result column="DSP_MEMO_DATE"			property="dspMemoDate" />
		<result column="CANCEL_FLAG"			property="cancelFlag" />
		<result column="CHECK_APPLIED_CM_TAG"			property="checkAppliedCMTag" />
		<result column="CHECK_USER_TAG"			property="checkUserPerIssCdAcctgTag" />
		
		<result column="CLOSED_TAG"			property="closedTag" />
		<result column="TRAN_FLAG"			property="tranFlag" />
		<result column="ALLOW_TRAN_TAG"			property="allowTranForClosedMonthTag" />
		<result column="ALLOW_PRINT_TAG"			property="allowPrintForOpenCMDMTag" />
		<result column="ALLOW_CANCEL_TAG"			property="allowCancelTranForClosedMonthTag" />
	</resultMap>
	
	<resultMap id="getGIACMemoInfoMap" class="GIACMemo" >
		<result column="GACC_TRAN_ID"			property="gaccTranId" />
		<result column="FUND_CD"			property="fundCd" />
		<result column="BRANCH_CD"			property="branchCd" />
		<result column="MEMO_TYPE"			property="memoType" />
		<result column="MEMO_DATE"			property="memoDate" />
		<result column="MEMO_YEAR"			property="memoYear" />
		<result column="MEMO_SEQ_NO"			property="memoSeqNo" />
		<result column="RECIPIENT"			property="recipient" />
		<result column="AMOUNT"			property="foreignAmount" />
		<result column="CURRENCY_CD"			property="currencyCd" />
		<result column="CURRENCY_RT"			property="currencyRt" />
		<result column="LOCAL_AMT"			property="localAmount" />
		<result column="PARTICULARS"			property="particulars" />
		<result column="MEMO_STATUS"			property="memoStatus" />
		<result column="USER_ID"			property="userId" />
		<result column="LAST_UPDATE"			property="lastUpdate" />
		<result column="LAST_UPDATE_STR"			property="lastUpdateStr" />
		<result column="DV_NO"					property="dvNo"/> <!-- bonok :: 3.29.2016 :: UCPB SR 21228 AC-SPECS-2016-002 -->
		<result column="RI_COMM_VAT"			property="riCommVat"/> <!-- bonok :: 3.29.2016 :: UCPB SR 21228 AC-SPECS-2016-002 -->
		<result column="RI_COMM_AMT"			property="riCommAmt"/> <!-- bonok :: 3.29.2016 :: UCPB SR 21228 AC-SPECS-2016-002 -->
		
		<result column="MEMO_NUMBER"			property="memoNumber" />
		<result column="MEAN_MEMO_TYPE"			property="meanMemoType" />
		<result column="MEAN_MEMO_STATUS"			property="meanMemoStatus" />
		<result column="FOREIGN_CURR_SNAME"			property="foreignCurrSname" />
		<result column="LOCAL_CURR_SNAME"			property="localCurrSname" />
		<result column="LOCAL_CURR_RT"			property="localCurrRt" />
		<result column="LOCAL_CURR_CD"			property="localCurrCd" />
		<result column="BRANCH_NAME"			property="branchName" />
		<result column="FUND_DESC"			property="fundDesc" />
		<result column="GRAC_RAC_CD"			property="graccRacCd" />
		<result column="DSP_MEMO_DATE"			property="dspMemoDate" />
		<result column="CANCEL_FLAG"			property="cancelFlag" />
		<result column="CHECK_APPLIED_CM_TAG"			property="checkAppliedCMTag" />
		<result column="CHECK_USER_TAG"			property="checkUserPerIssCdAcctgTag" />
		
		<result column="CLOSED_TAG"			property="closedTag" />
		<result column="TRAN_FLAG"			property="tranFlag" />
		<result column="ALLOW_TRAN_TAG"			property="allowTranForClosedMonthTag" />
		<result column="ALLOW_PRINT_TAG"			property="allowPrintForOpenCMDMTag" />
		<result column="ALLOW_CANCEL_TAG"			property="allowCancelTranForClosedMonthTag" />
	</resultMap>
	
	<resultMap id="getRecipientsLOVMap" class="com.geniisys.common.entity.GIISIntermediary" extends="BaseEntity.TableGridResultMap">
		<result column="RECIPIENT_NAME"		property="intmName" />
		<result column="RECIPIENT_TYPE"		property="intmDesc" />
	</resultMap>
	
	<select id="getDefaultMemo" resultMap="getGIACMemoInfoMap" >
		SELECT *
  		  FROM TABLE(GIAC_CM_DM_PKG.get_default_memo_info())
	</select>
	
	<select id="getRecipientsLOV" parameterClass="java.util.HashMap" resultMap="getRecipientsLOVMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.*
		  		  FROM (SELECT * 
		  		  		  FROM TABLE(GIAC_CM_DM_PKG.get_recipient_list)
		  		  		<isNotNull property="findText">
		  		  		 WHERE (UPPER(recipient_name) LIKE UPPER(#findText#))
		  		  		    OR (UPPER(recipient_type) LIKE UPPER(#findText#))
		  		  		</isNotNull>
		  		  			<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="intmName">
									ORDER BY recipient_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="intmDesc">
									ORDER BY recipient_type
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
		  		  		) a,
		  			   (SELECT count(*) count_ 
		  			      FROM TABLE(GIAC_CM_DM_PKG.get_recipient_list)
		  			    <isNotNull property="findText">
		  		  		 WHERE (UPPER(recipient_name) LIKE UPPER(#findText#))
		  		  		    OR (UPPER(recipient_type) LIKE UPPER(#findText#))
		  		  		</isNotNull>
		  		  		) b)
		 WHERE rownum_ BETWEEN NVL(#from#, rownum_) AND NVL(#to#, rownum_)
	</select>
	
	<!-- <select id="getNextTranId" resultClass="java.lang.Integer">
		 SELECT acctran_tran_id_s.nextval FROM dual
	</select> -->	
	
	<select id="getGIACMemoInfo" resultMap="getGIACMemoInfoMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM TABLE(giac_cm_dm_pkg.get_memo_list(#branchCd#, #fundCd#, #gaccTranId#, #moduleId#, #tranStatus#, #userId#)) <!-- #tranStatus# Added by Jerome Bautista 12.14.2015 SR 3467 -->
	</select>
	
	<select id="getMemoList" resultMap="getGIACMemoListMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.*
		  		  FROM (SELECT * 
		  		          FROM TABLE(giac_cm_dm_pkg.get_memo_list(#branchCd#, #fundCd#, #gaccTranId#, #moduleId#, #tranStatus#, #userId#)) <!-- #tranStatus# Added by Jerome Bautista 12.14.2015 SR 3467 -->
		  		        <isNotNull property="filter">
		  		         WHERE 1 = 1
		  		         	<isNotEmpty prepend="AND" property="memoType">
		  		         		UPPER(memo_type) LIKE UPPER(#memoType#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="memoNumber">
		  		         		UPPER(memo_number) LIKE UPPER(#memoNumber#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="memoDate">
		  		         		memo_date = TO_DATE(#memoDate#, 'mm-dd-yyyy')
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="meanMemoStatus">
		  		         		UPPER(mean_memo_status) LIKE UPPER(#meanMemoStatus#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="recipient">
		  		         		UPPER(recipient) LIKE UPPER(#recipient#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="dvNo"> <!-- Added by Jerome Bautista 12.14.2015 SR 3467 -->
		  		         		UPPER(dv_no) LIKE UPPER (#dvNo#)
		  		         	</isNotEmpty>
		  		        </isNotNull>
		  		        <isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="memoType">
									ORDER BY memo_type
								</isEqual>
								<isEqual property="sortColumn" compareValue="memoNumber">
									ORDER BY memo_number
								</isEqual>
								<isEqual property="sortColumn" compareValue="memoDate">
									ORDER BY memo_date
								</isEqual>
								<isEqual property="sortColumn" compareValue="meanMemoStatus">
									ORDER BY mean_memo_status
								</isEqual>
								<isEqual property="sortColumn" compareValue="recipient">
									ORDER BY recipient
								</isEqual>
								<isEqual property="sortColumn" compareValue="dvNo"> <!-- Added by Jerome Bautista 12.14.2015 SR 3467 -->
									ORDER BY dv_no
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						</isNotNull>) a,
		  			   (SELECT count(*) count_ 
		  			      FROM TABLE(giac_cm_dm_pkg.get_memo_list(#branchCd#, #fundCd#, #gaccTranId#, #moduleId#, #tranStatus#, #userId#)) <!-- #tranStatus# Added by Jerome Bautista 12.14.2015 SR 3467 -->
		  			     <isNotNull property="filter">
		  		         WHERE 1 = 1
		  		         	<isNotEmpty prepend="AND" property="memoType">
		  		         		UPPER(memo_type) LIKE UPPER(#memoType#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="memoNumber">
		  		         		UPPER(memo_number) LIKE UPPER(#memoNumber#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="memoDate">
		  		         		memo_date = TO_DATE(#memoDate#, 'mm-dd-yyyy')
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="meanMemoStatus">
		  		         		UPPER(mean_memo_status) LIKE UPPER(#meanMemoStatus#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="recipient">
		  		         		UPPER(recipient) LIKE UPPER(#recipient#)
		  		         	</isNotEmpty>
		  		         	<isNotEmpty prepend="AND" property="dvNo"> <!-- Added by Jerome Bautista 12.14.2015 SR 3467 -->
		  		         		UPPER(dv_no) LIKE UPPER (#dvNo#)
		  		         	</isNotEmpty>
		  		        </isNotNull>) b)
		 WHERE rownum_ BETWEEN NVL(#from#, rownum_) AND NVL(#to#, rownum_)
	</select>
	
	<select id="getMemoSeqNo" parameterClass="java.lang.Integer" resultClass="java.lang.Integer">
		SELECT (giac_cm_dm_pkg.get_memo_seq_no(#gaccTranId#))
  		  FROM dual
	</select>
	
	<select id="getClosedTagGIACS071" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT (giac_cm_dm_pkg.get_closed_tag(#fundCd#, #branchCd#, #memoDate#)) closed_tag
  		  FROM dual
	</select>
	
	<select id="getTransactionFlag" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT GIAC_ACCTRANS_PKG.get_tran_flag(#tranId#) 
		  FROM DUAL
	</select> 
	
	<parameterMap class="GIACMemo" id="insertMemoParameterMap">
		<parameter property="gaccTranId"		jdbcType="INTEGER"  javaType="java.lang.Integer"	mode="INOUT" />
		<parameter property="fundCd"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="memoType"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="memoYear"			jdbcType="INTEGER" 	javaType="java.lang.Integer" 	mode="IN"/>
		<parameter property="memoDate"			jdbcType="DATE" 	javaType="java.util.Date" 		mode="IN"/>
		<parameter property="particulars"		jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="INOUT"/>
		<parameter property="lastUpdate"		jdbcType="DATE" 	javaType="java.util.Date" 		mode="INOUT"/>
		<parameter property="memoSeqNo"			jdbcType="INTEGER" 	javaType="java.lang.Integer" 	mode="INOUT"/>
		<parameter property="lastUpdateStr"		jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="INOUT"/>
	</parameterMap>
	
	<procedure id="insertMemoIntoAcctrans" parameterMap="insertMemoParameterMap" >
		DECLARE
			v_memo		giac_cm_dm%ROWTYPE;
		BEGIN
			GIAC_CM_DM_PKG.insert_memo_into_acctrans(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="saveMemo" parameterClass="GIACMemo" resultMap="getGIACMemoInfoMap">
		DECLARE
			v_memo		giac_cm_dm%ROWTYPE;
		BEGIN
			
			v_memo.gacc_tran_id := #gaccTranId#;
			v_memo.fund_cd 		:= #fundCd#;
			v_memo.branch_cd 	:= #branchCd#;
			v_memo.memo_type 	:= #memoType#;
			v_memo.memo_year 	:= #memoYear#;
			v_memo.memo_seq_no 	:= #memoSeqNo#;
			v_memo.memo_date 	:= #memoDate#;
			v_memo.memo_status 	:= #memoStatus#;
			v_memo.user_id 		:= #userId#;
			v_memo.last_update 	:= #lastUpdate#;
			v_memo.recipient 	:= #recipient#;
			v_memo.particulars 	:= #particulars#;
			v_memo.amount 		:= #foreignAmount#;
			v_memo.local_amt 	:= #localAmount#;
			v_memo.currency_cd 	:= #currencyCd#;
			v_memo.currency_rt 	:= #currencyRt#;
			v_memo.ri_comm_vat 	:= #riCommVat#; <!-- bonok :: 3.29.2016 :: UCPB SR 21228 AC-SPECS-2016-002 -->
			v_memo.ri_comm_amt 	:= #riCommAmt#; <!-- bonok :: 3.29.2016 :: UCPB SR 21228 AC-SPECS-2016-002 -->
					
			GIAC_CM_DM_PKG.set_cm_dm_info(v_memo);
		END;
	</procedure>
	
	<procedure id="doPostFormsCommitGIACS071" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #memo.userId#;
			GIAC_CM_DM_PKG.aeg_parameters_071(#memo.gaccTranId#, #moduleId#, #memo.branchCd#, #memo.fundCd#, #memo.userId#);
		END;
	</procedure>
	
	<parameterMap class="java.util.HashMap" id="cancelMemoParameterMap">
		<parameter property="gaccTranId"		jdbcType="INTEGER"  javaType="java.lang.Integer"	mode="IN" />
		<parameter property="fundCd"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="memoType"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="memoYear"			jdbcType="INTEGER" 	javaType="java.lang.Integer" 	mode="IN"/>
		<parameter property="memoSeqNo"			jdbcType="INTEGER" 	javaType="java.lang.Integer" 	mode="IN"/>
		<parameter property="memoDate"			jdbcType="DATE" 	javaType="java.util.Date" 		mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="tranFlag"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="message"			jdbcType="VARCHAR" 	javaType="java.lang.String" 	mode="OUT"/>		
	</parameterMap>
	
	<procedure id="cancelMemo" parameterMap="cancelMemoParameterMap" >
		{ CALL GIAC_CM_DM_PKG.cancel_cm_dm(?, ?, ?, ?, ?, ?, ?, ?, ?, ?) }
	</procedure>
	
	<procedure id="updateMemoStatus" parameterClass="java.util.HashMap">
		BEGIN
			GIAC_CM_DM_PKG.update_memo_status(#gaccTranId#, #memoStatus#, #userId#);
		END;
	</procedure>
	
	<select id="validateCurrSname" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT GIAC_CM_DM_PKG.validate_curr_sname(#currSname#)
		  FROM dual
	</select>
	
</sqlMap>