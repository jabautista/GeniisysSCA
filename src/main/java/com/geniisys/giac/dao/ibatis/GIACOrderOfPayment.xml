<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIACOrderOfPayment">

	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<!-- added john 10.20.2014 -->
	<typeAlias alias="giacOrRel" type="com.geniisys.giac.entity.GIACOrRel"/>
	
	<resultMap class="com.geniisys.giac.entity.GIACOrRel" id="giacOrRel">
		<result column="tran_id" 			property="tranId" />
		<result column="new_or_date" 		property="newOrDate" />     
		<result column="old_tran_id" 		property="oldTranId" />     
		<result column="old_or_no" 			property="oldOrNo" />       
		<result column="old_or_date" 		property="oldOrDate" />     
		<result column="new_or_pref_suf" 	property="newOrPrefSuf" /> 
		<result column="new_or_no" 			property="newOrNo" />       
		<result column="new_or_tag" 		property="newOrTag" />     
		<result column="old_or_pref_suf" 	property="oldOrPrefSuf" /> 
		<result column="old_or_tag" 		property="oldOrTag" />      
	</resultMap>
	
	<resultMap class="com.geniisys.giac.entity.GIACOrderOfPayment" id="GIACOrderOfPayment">
		<result column="payor" property="payor" />
		<result column="address_1" property="address1" />
		<result column="address_2" property="address2" />
		<result column="address_3" property="address3" />
		<result column="or_tag" property="orTag" />
		<result column="or_date" property="orDate" />
		<result column="particulars" property="particulars" />
		<result column="tin" property="tinNo" />
		<result column="gacc_tran_id" property="gaccTranId" />
	</resultMap>

	<resultMap class="com.geniisys.giac.entity.GIACOrderOfPayment"	id="GIACOrderOfPaymentDtl">
		<result column="gacc_tran_id" property="gaccTranId" />
		<result column="tran_no" property="transactionNo" />
		<result column="gibr_gfun_fund_cd" property="gibrGfunFundCd" />
		<result column="gibr_branch_cd" property="gibrBranchCd" />
		<result column="op_no" property="opNo" />
		<result column="op_date" property="opDate" />
		<result column="op_flag" property="opFlag" />
		<result column="op_tag" property="opTag" />
		<result column="or_no" property="orNo" />
		<result column="or_date" property="orDate" />
		<result column="or_flag" property="orFlag" />
		<result column="payor" property="payor" />
		<result column="collection_amt" property="collectionAmt" />
		<result column="gross_amt" property="grossAmt" />
		<result column="currency_cd" property="currencyCd" />
		<result column="gross_tag" property="grossTag" />
		<result column="address_1" property="address1" />
		<result column="address_2" property="address2" />
		<result column="address_3" property="address3" />
		<result column="particulars" property="particulars" />
		<result column="ri_comm_tag" property="riCommTag" />
	</resultMap>
	
	<resultMap class="com.geniisys.giac.entity.GIACOrderOfPayment" id="GIACOrderOfPaymentMap">
		<result column="gacc_tran_id" property="gaccTranId" />
		<result column="gibr_gfun_fund_cd" property="gibrGfunFundCd" />
		<result column="gibr_branch_cd" property="gibrBranchCd" />
		<result column="op_no" property="opNo" />
		<result column="op_date" property="opDate" />
		<result column="op_flag" property="opFlag" />
		<result column="or_no" property="orNo" />
		<result column="or_date" property="orDate" />
		<result column="or_flag" property="orFlag" />
		<result column="or_tag" property="orTag" />
		<result column="dcb_no" property="dcbNo" />
		<result column="payor" property="payor" />
		<result column="collection_amt" property="collectionAmt" />
		<result column="gross_amt" property="grossAmt" />
		<result column="cashier_cd" property="cashierCd" />
		<result column="currency_cd" property="currencyCd" />
		<result column="or_pref_suf" property="orPrefSuf" />
		<result column="gross_tag" property="grossTag" />
		<result column="address_1" property="address1" />
		<result column="address_2" property="address2" />
		<result column="address_3" property="address3" />
		<result column="particulars" property="particulars" />
		<result column="remit_date" property="remitDate" />
		<result column="prov_receipt_no" property="provReceiptNo" />
		<result column="intm_no" property="intmNo" />
		<result column="upload_tag" property="uploadTag" />
		<result column="cancel_date" property="cancelDate" />
		<result column="cancel_dcb_no" property="cancelDcbNo" />
		<result column="or_cancel_tag" property="orCancelTag" />
		<result column="with_pdc" property="withPdc" />
		<result column="tin" property="tinNo" />
		<result column="ri_comm_tag" property="riCommTag" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="giacORList">
		<result column="gacc_tran_id" property="gaccTranId" />
		<result column="item_no" property="itemNo" />
		<result column="dcb_no" property="dcbNo" />
		<result column="or_no" property="orNo" />
		<result column="or_date" property="orDate" />
		<result column="status" property="orStatus" />
		<result column="payor" property="payor" />
		<result column="dcb_bank_acct" property="dcbBankAcct" />
		<result column="gibr_branch_cd" property="branchCd" />
		<result column="gibr_gfun_fund_cd" property="fundCd" />
		<result column="or_tag" property="orTag" />
		<result column="or_flag" property="orFlag" />
		<result column="op_tag" property="opTag" />
		<result column="with_pdc" property="withPdc" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="giacORListTableGridMap">
		<result column="gacc_tran_id" 	property="gaccTranId" />
		<result column="item_no" 		property="itemNo" />
		<result column="dcb_no" 		property="dcbNo" />
		<result column="or_no" 			property="orNo" />
		<result column="or_date" 		property="orDate" />
		<result column="status" 		property="orStatus" />
		<result column="payor" 			property="payor" />
		<result column="dcb_bank_acct" 	property="dcbBankAcct" /> 
		<result column="gibr_branch_cd" property="branchCd" />
		<result column="gibr_gfun_fund_cd" property="fundCd" />
		<result column="or_tag" 		property="orTag" />
		<result column="or_flag" 		property="orFlag" />
		<result column="op_tag" 		property="opTag" />
		<result column="with_pdc"		property="withPdc" />
		<result column="or_tag_lbl" 	property="orTagLbl" />
		<result column="dcb_user_id"	property="dcbUserId" />
		<result column="user_id"		property="userId" />
		<result column="last_update"	property="lastUpdate" />
		<result column="rownum_" 		property="rowNum" />
		<result column="count_"			property="rowCount"/>
	</resultMap>
	
	<parameterMap class="map" id="payorIntmMap">
		<parameter property="issCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="tranId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="policyId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="payorBtn"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<!--<parameter property="msg"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	--></parameterMap>
	
	<parameterMap class="map" id="selectedPayorIntmMap">
		<parameter property="issCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="tranId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="policyId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		
		<parameter property="intmAdd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="addressAdd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="particularsAdd" jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="payorAdd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="payorBtn"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		
		<!-- <parameter property="payorAdd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="addressAdd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="intmAdd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="particularsAdd" jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="payorBtn"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" /> -->
		<parameter property="msg"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap class="map" id="updateGiacOrderOfPaymts">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="gaccTranId"	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="issCd"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="tranType"	    jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="instNo"	    jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="premAmt"	    jdbcType="NUMERIC"	javaType="java.math.BigDecimal"	mode="IN" />
		<parameter property="taxAmt"	    jdbcType="NUMERIC"	javaType="java.math.BigDecimal"	mode="IN" />
		<parameter property="tranSource"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="moduleName"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="msgAlert"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="workflowMsg"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="orPartSw"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT" />
	</parameterMap>
	
	<parameterMap class="map" id="spoilGiacOrderOfPaymts">
		<parameter property="appUser"		jdbcType="VARCHAR"	javaType="String"	mode="IN" />
		<parameter property="gaccTranId"	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="butLabel"	    jdbcType="VARCHAR"	javaType="java.lang.String"	    mode="IN" />
		<parameter property="orFlag"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="INOUT" />
		<parameter property="orTag"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="orPrefSuf"     jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="INOUT" />
		<parameter property="orNo"     		jdbcType="INTEGER"	javaType="java.lang.Long" 	    mode="INOUT" />
		<parameter property="gibrFundCd"    jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="gibrBranchCd"  jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="orDate"     	jdbcType="DATE"	    javaType="java.lang.String" 	mode="IN" />
		<parameter property="dcbNo"     	jdbcType="INTEGER"	javaType="java.lang.Integer" 	mode="IN" />
		<parameter property="callingForm"   jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="moduleName"    jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="orCancellation"    jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN" />
		<parameter property="payor"   	 	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="collectionAmt" jdbcType="INTEGER"	javaType="java.math.BigDecimal" mode="IN" />
		<parameter property="cashierCd"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="grossAmt" 		jdbcType="INTEGER"	javaType="java.math.BigDecimal" mode="IN" />
		<parameter property="grossTag"      jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="itemNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="message"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="OUT" />
	</parameterMap>
	
	<parameterMap class="map" id="insUpdGIOPMap">
		<parameter property="tranId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="branchCd"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="fundCd"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="orPref"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="orNo"     		jdbcType="INTEGER"	javaType="java.lang.Integer" 	mode="IN" />
		<parameter property="userId"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="pResult"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="OUT" />
	</parameterMap>
	
	<parameterMap class="map" id="insUpdORMap">
		<parameter property="appUser"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="tranId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="branchCd"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="fundCd"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="userId"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="orNo"     		jdbcType="INTEGER"	javaType="java.lang.Integer" 	mode="IN" />
		<parameter property="orPref"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
		<parameter property="docName"     	jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN" />
	</parameterMap>
	
	<parameterMap id="getUpdatedPayorItmDtlsMap" class="map">
		<parameter property="tranId" 	jdbcType="INTEGER" javaType="java.lang.Integer" mode="IN"/>
		<parameter property="policyId" 	jdbcType="INTEGER" javaType="java.lang.Integer" mode="IN"/>
	</parameterMap>
	
	<resultMap class="java.util.HashMap" id="getCreditMemoDtlsMap">
      	<result column="cm_no" property="cmNo" />
      	<result column="memo_date" property="memoDate"/>
      	<result column="amount" property="amount" />
      	<result column="currency_cd" property="currencyCd" />
      	<result column="currency_rt" property="currencyRt" />
      	<result column="local_amt" property="localAmt" />
      	<result column="short_name" property="shortName" />
      	<result column="cm_tran_id" property="cmTranId" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getCreditMemoDtlsListMap">
      	<result column="cm_no" 			property="cmNo" />
      	<result column="memo_date" 		property="memoDate"/>
      	<result column="amount" 		property="amount" />
      	<result column="currency_cd" 	property="currencyCd" />
      	<result column="currency_rt" 	property="currencyRt" />
      	<result column="local_amt" 		property="localAmt" />
      	<result column="short_name" 	property="shortName" />
      	<result column="cm_tran_id" 	property="cmTranId" />
      	<result column="fc_amount" 		property="fcAmount" />
      	<result column="rownum_" 		property="rowNum" />
		<result column="count_"			property="rowCount"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="batchORMap" extends="BaseEntity.TableGridResultMap">
		<result column="gacc_tran_id"		property="gaccTranId" />
		<result column="gibr_gfun_fund_cd"	property="gibrGfunFundCd" />
		<result column="gibr_branch_cd"		property="gibrBranchCd" />
		<result column="or_flag"			property="orFlag" />
		<result column="or_pref_suf"		property="orPrefSuf" />
		<result column="or_no"				property="orNo" />
		<result column="or_date"			property="orDate" />
		<result column="dsp_or_date"		property="dspOrDate" />
		<result column="dsp_or_pref"		property="dspOrPref" />
		<result column="dsp_or_no"			property="dspOrNo" />
		<result column="payor"				property="payor" />
		<result column="particulars"		property="particulars" />
		<result column="nbt_repl_or_tag"	property="nbtReplOrTag" />
		<result column="nbt_tran_flag"		property="nbtTranFlag" />
		<result column="generate_flag"		property="generateFlag" />
		<result column="printed_flag"		property="printedFlag" />
	</resultMap>
	
	<parameterMap id="defaultVatORMap" class="map">
		<parameter property="fundCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="branchCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="vatSeq"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="vatOrPref"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap id="defaultNonVatORMap" class="map">
		<parameter property="fundCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="branchCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="nonVatSeq"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="nonVatOrPref"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap id="defaultOtherORMap" class="map">
		<parameter property="fundCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="branchCd"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="otherSeq"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="otherOrPref"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap id="checkAllORsMap" class="map">
		<parameter property="orDate"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="payor"	    	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="message1"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="message2"	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="message3"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<resultMap id="batchORReportMap" class="java.util.HashMap">
      	<result column="gacc_tran_id" 		property="gaccTranId"/>
      	<result column="or_pref" 			property="orPref"/>
      	<result column="or_no" 				property="orNo" />
	</resultMap>
	
	<parameterMap id="batchCommSlipParamsMap" class="map">
		<parameter property="gaccTranIdList" jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="messageFlag"	 jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="orCount"		 jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="saveGIACOrderOfPaymentDetails" parameterClass="com.geniisys.giac.entity.GIACOrderOfPayment">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			giac_order_of_payts_pkg.set_giac_order_of_payts(
				#gaccTranId#, 
				#gibrGfunFundCd#,
				#gibrBranchCd#,
				#payor#,
				#collectionAmt#,
				#cashierCd#,
				#address1#,
				#address2#,
				#address3#,
				#particulars#,
				#orTag#,
				#orDate#,
				#dcbNo#,
				#grossAmt#,
				#grossTag#,
				#orFlag#,
				#opFlag#,
				#currencyCd#,
				#intmNo#,
				#tinNo#,
				#uploadTag#,
				#remitDate#,
				#provReceiptNo#,
				#orNo#,
				#orPrefSuf#,
				#riCommTag#);
		END;
	</procedure>
	
	<procedure id="validateCancelledORInput" parameterClass="java.util.HashMap" resultMap="GIACOrderOfPayment">  
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_cancelled_or_details(#orPrefSuf#, #orNo#))
	</procedure>
	
	<procedure id="getGIACOrderOfPayts" parameterClass="java.lang.Integer" resultMap="GIACOrderOfPaymentDtl">  
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_giac_order_of_payts_dtl(#tranId#))
	</procedure>
	
	<!-- Transfer this procedure if another DAO for CG_REF_CODES_PKG is created - emman 07.22.10 -->
	<procedure id="getRVMeaning" parameterClass="java.util.HashMap" resultClass="java.lang.String">  
		SELECT CG_REF_CODES_PKG.get_rv_meaning(#rvDomain#, #rvLowValue#) FROM dual
	</procedure>
	
	<select id="getOrTag" resultClass="java.lang.String" parameterClass="java.lang.Integer">
		SELECT giac_order_of_payts_pkg.get_or_tag(#tranId#) FROM dual
	</select>	
	
	
	<procedure id="getORList" resultMap="giacORList" parameterClass="java.util.HashMap" resultClass="com.geniisys.framework.util.PaginatedList">
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_or_list(#keyword#, #fund_cd#, #branch_cd#))
	</procedure>
	
	<select id="getORListTableGrid" resultMap="giacORListTableGridMap" parameterClass="java.util.HashMap">
		<!-- Modified by pjsantos 09/26/2016, for optimization GENQA 5687, added #orTag#, #sortColumn#, #ascDescFlg# -->
		<!--  SELECT * 
			  FROM (SELECT rownum rownum_, -->
			               <!-- b.count_,  --> <!-- mikel 01.22.2015; for optimization - SR 4000 --> 
			        <!--  a.* 
			          FROM ( --> SELECT * 
			                  FROM TABLE (giac_order_of_payts_pkg.get_or_list2(#fund_cd#, #branch_cd#, #filter.dcbNo#, #filter.orNo#, #filter.payor#, #orStatus#, #filter.orDate#, #filter.lastUpdate#, #filter.dcbUserId#, #user_id#, #cancel_or#, #orTag#, #sortColumn#, #ascDescFlg#, #from#, #to#)) <!-- mikel 01.22.2015; added #from#, for optimization - SR 4000 --> <!-- #filter.lastUpdate# - Added by Jerome Bautista 11.03.2015 SR 20144 --> 
			                 <!-- <isNotNull property="orTag">
			                  	<isEqual property="orTag" compareValue="G">
			                  		WHERE or_tag_lbl IS NULL
			                  	</isEqual>
			                  	<isEqual property="orTag" compareValue="M">
			                  		WHERE or_tag_lbl = '*'
			                  	</isEqual>
			                  </isNotNull>
			                  <isEqual property="sortColumn" compareValue="dcbNo">-->
			              		<!-- ORDER BY dcb_no --><!-- replaced by kenneth L. 09.24.2013 -->
			              	<!-- 	ORDER BY TO_NUMBER(REPLACE(dcb_no, '-', ''))
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="orNo">
				              		ORDER BY or_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="payor">
				              		ORDER BY payor
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="dcbBankAcct">
				              		ORDER BY dcb_bank_acct
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="orStatus">
				              		ORDER BY status
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="orDate">
				              		ORDER BY or_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="dcbUserId">
				              		ORDER BY dcb_user_id
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="userId">
				              		ORDER BY user_id
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="lastUpdate">
				              		ORDER BY last_update
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a ) --> <!-- , 
			               (SELECT count(*) count_
			                  FROM TABLE (giac_order_of_payts_pkg.get_or_list2(#fund_cd#, #branch_cd#, #filter.dcbNo#, #filter.orNo#, #filter.payor#, #orStatus#, #filter.orDate#, #filter.dcbUserId#, #user_id#, #cancel_or#, 0))
			                  <isNotNull property="orTag">
			                  	<isEqual property="orTag" compareValue="G">
			                  		WHERE or_tag_lbl IS NULL
			                  	</isEqual>
			                  	<isEqual property="orTag" compareValue="M">
			                  		WHERE or_tag_lbl = '*'
			                  	</isEqual>
			                  </isNotNull>) b) --> <!-- mikel 01.22.2015; for optimization - SR 4000 -->
			 <!--  WHERE rownum_ BETWEEN #from# AND #to#-->  <!-- edited by gab 10.272015 -->
	</select>
	
	<select id="getORListTableGrid2" resultMap="giacORListTableGridMap" parameterClass="java.util.HashMap">
		SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM (SELECT * 
			                  FROM TABLE (giac_order_of_payts_pkg.get_or_list3(#fund_cd#, #branch_cd#, #filter.dcbNo#, #filter.orNo#, #filter.payor#, #filter.orStatus#, #filter.orDate#, #filter.dcbUserId#, #filter.userId#, #user_id#, #cancel_or#))
			                  <isNotNull property="orTag">
			                  	<isEqual property="orTag" compareValue="G">
			                  		WHERE or_tag_lbl IS NULL
			                  	</isEqual>
			                  	<isEqual property="orTag" compareValue="M">
			                  		WHERE or_tag_lbl = '*'
			                  	</isEqual>
			                  </isNotNull>
			                  <isEqual property="sortColumn" compareValue="dcbNo">
			              		    ORDER BY dcb_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="orNo">
				              		ORDER BY or_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="payor">
				              		ORDER BY payor
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="dcbBankAcct">
				              		ORDER BY dcb_bank_acct
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="orStatus">
				              		ORDER BY status
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="orDate">
				              		ORDER BY or_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="dcbUserId">
				              		ORDER BY dcb_user_id
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="userId">
				              		ORDER BY user_id
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="lastUpdate">
				              		ORDER BY last_update
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (giac_order_of_payts_pkg.get_or_list3(#fund_cd#, #branch_cd#, #filter.dcbNo#, #filter.orNo#, #filter.payor#, #filter.orStatus#, #filter.orDate#, #filter.dcbUserId#, #filter.userId#, #user_id#, #cancel_or#))
			                  <isNotNull property="orTag">
			                  	<isEqual property="orTag" compareValue="G">
			                  		WHERE or_tag_lbl IS NULL
			                  	</isEqual>
			                  	<isEqual property="orTag" compareValue="M">
			                  		WHERE or_tag_lbl = '*'
			                  	</isEqual>
			                  </isNotNull>) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
  	
	<procedure id="getGIACOrDtl" parameterClass="java.lang.Integer" resultMap="GIACOrderOfPaymentMap">  
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_giac_or_dtl(#tranId#))
	</procedure><!--
	
	, ?); omitted from the procedure below, alfie 03-14-2011
	--><procedure id="updateAllPayorItmDtls" parameterMap="payorIntmMap">
		BEGIN
			
			update_all_payor_itm_dtls(?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="updateSelectedPayorItmDtls" parameterMap="selectedPayorIntmMap">
		BEGIN
			
			update_selected_payor_itm_dtls(?, ?, ?, ?, ?, ?, ?, ?, ? , ?, ?);
		END;
	</procedure>
	
	<procedure id="checkOrFlag" parameterClass="java.lang.Integer">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			giac_order_of_payts_pkg.check_or_flag(#gaccTranId#);
		END;
	</procedure>
	
	<procedure id="updateGiacOrderOfPaymts" parameterMap="updateGiacOrderOfPaymts">
	    BEGIN
	      giis_users_pkg.app_user := ?;
		  giac_order_of_payts_pkg.update_giac_order_of_payts(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="spoilOR" parameterMap="spoilGiacOrderOfPaymts">
		BEGIN
			giis_users_pkg.app_user := ?;
			giac_order_of_payts_pkg.process_spoil_or(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="giacs050InsUpdGIOP" parameterMap="insUpdGIOPMap">
		{ CALL giac_order_of_payts_pkg.ins_upd_GIOP_giacs050(?, ?, ?, ?, ?, ?, ?) }
	</procedure>

	<select id="getUpdatedPayorItmDtls" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT get_updated_payor_itm_dtls(#tranId#, #policyId#)
		  FROM dual
	</select>
	
	<procedure id="spoilPrintedOR" parameterMap="insUpdGIOPMap">
		{ CALL SPOIL_PRINTED_OR(?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<procedure id="insUpdORGiacs050" parameterMap="insUpdORMap">
		<!-- { CALL INS_UPD_OR_GIACS050(?, ?, ?, ?, ?, ?, ?) } -->
		BEGIN
			giis_users_pkg.app_user := ?;
			INS_UPD_OR_GIACS050(?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<select id="getCreditMemoDtls" resultMap="getCreditMemoDtlsMap" parameterClass="java.lang.String">
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_credit_memo_dtls(#fundCd#))
	</select>
	
	<select id="getCreditMemoDtlsList" resultMap="getCreditMemoDtlsListMap" parameterClass="java.util.HashMap">
		SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.* 
			          FROM (SELECT * 
			                  FROM TABLE (giac_order_of_payts_pkg.get_credit_memo_dtls_list(#fundCd#, #memoType#, #payMode#))
			                  <isNotNull property="findText">
			                  		WHERE UPPER(cm_no) LIKE UPPER(#findText#) 
			                  </isNotNull>
			                  <isEqual property="sortColumn" compareValue="cmNo">
			              		    ORDER BY cm_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="memoDate">
			              		    ORDER BY memo_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="amount">
			              		    ORDER BY amount
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="shortName">
			              		    ORDER BY short_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="currencyRt">
			              		    ORDER BY currency_rt
				              </isEqual>
				              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	  </isNotNull>) a, 
			               (SELECT count(*) count_
			                  FROM TABLE (giac_order_of_payts_pkg.get_credit_memo_dtls_list(#fundCd#, #memoType#, #payMode#))
			                  <isNotNull property="findText">
			                  		WHERE UPPER(cm_no) LIKE UPPER(#findText#) 
			                  </isNotNull>
			                  ) b) 
			 WHERE rownum_ BETWEEN #from# AND #to#
	</select>

	<select id="checkAttachedOR" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIAC_ORDER_OF_PAYTS_PKG.check_attached_OR(#dcbNo#, #fundCd#, #branchCd#, #tranDate#)
			FROM DUAL
	</select>
	
	<procedure id="uploadDCPGIACS050" parameterClass="java.lang.Integer">
		BEGIN
			UPLOAD_DPC.upd_guf(#gaccTranId#);
		END;
	</procedure>
	
	<select id="validateOr" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIAC_ORDER_OF_PAYTS_PKG.validate_or_no(#orPref#, #orNo#, #fundCd#, #branchCd#) FROM DUAL
	</select>
	
	<parameterMap class="java.util.HashMap" id="getNewOrOnErrorMap">
		<parameter property="branchCd"		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN" />
		<parameter property="fundCd"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="orPref"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="userId"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="orType"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="orNo"			jdbcType="INTEGER" javaType="java.lang.Integer" mode="OUT" />
		<parameter property="result"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="OUT" />
 	</parameterMap>
	
	<procedure id="getNewOrOnError" parameterMap="getNewOrOnErrorMap">
		BEGIN
			generate_or_no(?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="java.util.HashMap" id="validateORParamMap">
		<parameter property="userId"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="gaccTranId"	jdbcType="INTEGER" javaType="java.lang.Integer" mode="IN" />
		<parameter property="orPref"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="orNo"			jdbcType="INTEGER" javaType="java.lang.Integer" mode="INOUT" />
		<parameter property="branchCd"		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN" />
		<parameter property="fundCd"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="editOrNo"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="orType"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
 	</parameterMap>
 	
 	<procedure id="validateOR2" parameterMap="validateORParamMap">
 		BEGIN
 			giis_users_pkg.app_user := ?;
 			VALIDATE_OR_GIACS050(?, ?, ?, ?, ?, ?, ?);
 		END;
 	</procedure>
 	
 	<parameterMap class="java.util.HashMap" id="updateGIOPParamMap">
		<parameter property="userId"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN" />
		<parameter property="orNo"			jdbcType="INTEGER" javaType="java.lang.Integer" mode="INOUT" />
		<parameter property="orPref"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="editOrNo"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="gaccTranId"	jdbcType="INTEGER" javaType="java.lang.Integer" mode="IN" />
		<parameter property="fundCd"		jdbcType="VARCHAR" javaType="java.lang.String"  mode="IN" />
		<parameter property="branchCd"		jdbcType="VARCHAR" javaType="java.lang.String" 	mode="IN" />
 	</parameterMap>
 	
 	<procedure id="updateGIOPGiacs050" parameterMap="updateGIOPParamMap">
 		BEGIN
 			giis_users_pkg.app_user := ?;
 			UPDATE_GIOP_GIACS050(?, ?, ?, ?, ?, ?);
 		END;
 	</procedure>
 	
 	<!-- <procedure id="generateNewOR" parameterMap="updateGIOPParamMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			generate_or_no(?, ?, ?, ?, ?, ?);
		END;
	</procedure> -->
	
	<procedure id="insUpdGIOP" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			giac_order_of_payts_pkg.giacs050_ins_upd_GIOP(#tranId#, #branchCd#, #fundCd#, #orPref#, #orNo#, #editOrNo#);
		END;
	</procedure>
	
	<procedure id="updGORRGiacs050" parameterClass="map" >
		BEGIN
			giis_users_pkg.app_user := #userId#;
			giac_order_of_payts_pkg.upd_gorr_giacs050(#tranId#, #orPref#, #orNo#);
		END;
	</procedure>
	
	<procedure id="checkCommPayts">
		BEGIN
			giacs001_check_comm_payts(#gaccTranId#);
		END;
	</procedure>
	
	<procedure id="updateGIOPGiacs050Part1" parameterMap="updateGIOPParamMap">
 		BEGIN
 			giis_users_pkg.app_user := ?;
 			UPDATE_GIOP_GIACS050_P1(?, ?, ?, ?, ?, ?);
 		END;
 	</procedure>
 	
 	<procedure id="updateGIOPGiacs050Part2" parameterMap="updateGIOPParamMap">
 		BEGIN
 			giis_users_pkg.app_user := ?;
 			UPDATE_GIOP_GIACS050_P2(?, ?, ?, ?, ?, ?);
 		END;
 	</procedure>
 	
 	<procedure id="updateGIOPGiacs050Part3" parameterMap="updateGIOPParamMap">
 		BEGIN
 			giis_users_pkg.app_user := ?;
 			UPDATE_GIOP_GIACS050_P3(?, ?, ?, ?, ?, ?);
 		END;
 	</procedure>
 	
 	<procedure id="delGIACS050OR" parameterClass="map">
		BEGIN
			giac_acctrans_pkg.del_acc_giacs050(#tranId#, #fundCd#, #branchCd#);
		END;
	</procedure>
	
	<select id="getPayor" resultClass="java.lang.String">
		SELECT * FROM (SELECT payor
		  FROM giac_order_of_payts
		 WHERE gacc_tran_id = #tranId#)
	</select>
	
 	<procedure id="updateGIACOrderOfPaytCollectionAmt" parameterClass="java.lang.Integer">
		BEGIN
			giac_order_of_payts_pkg.update_colln_amt_gross_amt(#tranId#);
		END;
	</procedure>
	
	<procedure id="populateBatchORTempTable" parameterClass="java.util.HashMap">
		BEGIN
			GIACS053_PKG.populate_batch_or_temp_table(#fundCd#, #branchCd#, #calledByUpload#, #uploadQuery#);
		END;
	</procedure>
	
	<select id="getBatchORList" resultMap="batchORMap">
		SELECT *
	      FROM (SELECT rownum rownum_,
					   b.count_,
					   a.*
				  FROM (SELECT *
					      FROM TABLE(GIACS053_PKG.get_batch_or_list(#dspOrDate#, #payor#, #orType#))
				<isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="dspOrDate">
						ORDER BY TO_DATE(dsp_or_date, 'mm-dd-yyyy')
					</isEqual>
					<isEqual property="sortColumn" compareValue="dspOrPref dspOrNo">
						ORDER BY dsp_or_pref, dsp_or_no
					</isEqual>
					<isEqual property="sortColumn" compareValue="payor">
						ORDER BY TRIM(payor)
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				</isNotNull>) a,
				(SELECT count(*) count_
				  FROM TABLE(GIACS053_PKG.get_batch_or_list(#dspOrDate#, #payor#, #orType#))) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="checkAllORs" parameterMap="checkAllORsMap">
		CALL GIACS053_PKG.tag_all_ors(?, ?, ?, ?, ?)
	</procedure>
	
	<procedure id="uncheckAllORs">
		CALL GIACS053_PKG.untag_all_ors()
	</procedure>
	
	<select id="checkOR" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT GIAC_ORDER_OF_PAYTS_PKG.check_or(#gaccTranId#)
		  FROM DUAL
	</select>
	
	<procedure id="getDefaultVatOR" parameterMap="defaultVatORMap">
		CALL GIAC_ORDER_OF_PAYTS_PKG.get_default_vat_or(?, ?, ?, ?, ?)
	</procedure>
	
	<procedure id="getDefaultNonVatOR" parameterMap="defaultNonVatORMap">
		CALL GIAC_ORDER_OF_PAYTS_PKG.get_default_non_vat_or(?, ?, ?, ?, ?)
	</procedure>
	
	<procedure id="getDefaultOtherOR" parameterMap="defaultOtherORMap">
		CALL GIAC_ORDER_OF_PAYTS_PKG.get_default_other_or(?, ?, ?, ?, ?)
	</procedure>
	
	<select id="determineOrType" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIACS053_PKG.determine_or_type(#fundCd#, #gaccTranId#, #oneORSequence#, #vatNonVatSeries#)
		  FROM DUAL
	</select>
	
	<procedure id="updateGenerateFlag" parameterClass="java.util.HashMap">
		CALL GIACS053_PKG.save_generate_tag(#gaccTranId#, #generateFlag#)
	</procedure>
	
	<procedure id="generateOrNumbers" parameterClass="java.util.HashMap">
		CALL GIACS053_PKG.generate_or_numbers(#fundCd#, #branchCd#, #oneORSequence#, #vatNonVatSeries#, #vatPref#, #vatSeq#,
												#nonVatPref#, #nonVatSeq#, #otherPref#, #otherSeq#, #userId#)
	</procedure>
	
	<select id="getBatchORReportParams" parameterClass="java.util.HashMap" resultMap="batchORReportMap">
		SELECT *
		  FROM TABLE(GIACS053_PKG.get_batch_or_report_list(#orType#))
	</select>
	
	<procedure id="processPrintedBatchOR" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			GIACS053_PKG.process_printed_or(#fundCd#, #branchCd#, #orType#, #lastOrNo#, #userId#);
		END;
	</procedure>
	
	<select id="checkLastPrintedOR" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIACS053_PKG.check_last_printed_or(#lastOrNo#, #lastOrPrinted#, #orType#)
		  FROM DUAL
	</select>
	
	<procedure id="spoilBatchOR" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			GIACS053_PKG.spoil_batch_or(#lastOrNo#, #orType#, #fundCd#, #branchCd#, #userId#);
		END;
	</procedure>
	
	<procedure id="spoilSelectedOR" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			GIACS053_PKG.spoil_or_record(#gaccTranId#, #orPref#, #orNo#, #fundCd#, #branchCd#, #userId#);
		END;
	</procedure>
	
	<procedure id="getBatchCommSlipParams" parameterMap="batchCommSlipParamsMap">
		CALL GIACS053_PKG.get_batch_comm_slip_params(?, ?, ?)
	</procedure>

<!-- GIACS214 : shan 12.05.2013 -->
	<resultMap class="com.geniisys.gipi.entity.GIPIPolbasic" id="giacs214PolbasicResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyId"		column="POLICY_ID"/>
		<result property="lineCd"		column="LINE_CD"/>
		<result property="sublineCd"	column="SUBLINE_CD"/>
		<result property="issCd"		column="ISS_CD"/>
		<result property="issueYy"		column="ISSUE_YY"/>
		<result property="polSeqNo"		column="POL_SEQ_NO"/>
		<result property="endtIssCd"	column="ENDT_ISS_CD"/>
		<result property="endtYy"		column="ENDT_YY"/>
		<result property="endtSeqNo"	column="ENDT_SEQ_NO"/>
		<result property="endtType"		column="ENDT_TYPE"/>
		<result property="refPolNo"		column="REF_POL_NO"/>
		<result property="assdNo"		column="ASSD_NO"/>
		<result property="assdName"		column="ASSD_NAME"/>
	</resultMap>
	
	<select id="getGiacs214PolbasicListing" resultMap="giacs214PolbasicResultMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT *
  						  FROM TABLE(GIACS214_PKG.GET_POLBASIC_LIST(#assdNo#, #userId#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="lineCd">
  								UPPER(line_cd) LIKE UPPER(#lineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="sublineCd">
  								UPPER(subline_cd) LIKE UPPER(#sublineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="issCd">
  								UPPER(iss_cd) LIKE UPPER(#issCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="issueYy">
  								issue_yy = #issueYy#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="polSeqNo">
  								pol_seq_no = #polSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtSeqNo">
  								endt_seq_no = #endtSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtType">
  								UPPER(endt_type) LIKE UPPER(#endtType#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtIssCd">
  								UPPER(endt_iss_cd) LIKE UPPER(#endtIssCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtYy">
  								endt_yy = #endtYy#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="refPolNo">
  								UPPER(ref_pol_no) LIKE UPPER(#refPolNo#)
  							</isNotEmpty>
  						</isNotNull>
  						<isNotNull property="sortColumn">
  							<isEqual property="sortColumn" compareValue="refPolNo">
  								ORDER BY ref_pol_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="lineCd">
  								ORDER BY line_cd
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="sublineCd">
  								ORDER BY subline_cd
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="issCd">
  								ORDER BY iss_cd
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="issueYy">
  								ORDER BY issue_yy
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="polSeqNo">
  								ORDER BY pol_seq_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="endtSeqNo">
  								ORDER BY endt_seq_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="endtType">
  								ORDER BY endt_type
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="endtIssCd">
  								ORDER BY endt_iss_cd
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="endtYy">
  								ORDER BY endt_yy
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="ASC">
  								ASC
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="DESC">
  								DESC
  							</isEqual>
  						</isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_
  						  FROM TABLE(GIACS214_PKG.GET_POLBASIC_LIST(#assdNo#, #userId#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="lineCd">
  								UPPER(line_cd) LIKE UPPER(#lineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="sublineCd">
  								UPPER(subline_cd) LIKE UPPER(#sublineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="issCd">
  								UPPER(iss_cd) LIKE UPPER(#issCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="issueYy">
  								issue_yy = #issueYy#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="polSeqNo">
  								pol_seq_no = #polSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtSeqNo">
  								endt_seq_no = #endtSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtType">
  								UPPER(endt_type) LIKE UPPER(#endtType#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtIssCd">
  								UPPER(endt_iss_cd) LIKE UPPER(#endtIssCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="endtYy">
  								endt_yy = #endtYy#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="refPolNo">
  								UPPER(ref_pol_no) LIKE UPPER(#refPolNo#)
  							</isNotEmpty>
  						</isNotNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs214InvoiceResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyId"			column="POLICY_ID"/>
		<result property="issCd"			column="ISS_CD"/>
		<result property="premSeqNo"		column="PREM_SEQ_NO"/>
		<result property="nbtPolicyNo"		column="NBT_POLICY_NO"/>
		<result property="dspAssdName"		column="DSP_ASSD_NAME"/>
		<result property="dspIssPremSeq"	column="DSP_ISS_PREM_SEQ"/>
		<result property="dspBalanceAmtDue"	column="DSP_BALANCE_AMT_DUE"/>
		<result property="dspPremBalanceDue" column="DSP_PREM_BALANCE_DUE"/>
		<result property="dspTaxBalanceDue"	column="DSP_TAX_BALANCE_DUE"/>
		<result property="dspCurrency"		column="DSP_CURRENCY"/>
		<result property="dspCurrencyRt"	column="DSP_CURRENCY_RT"/>
	</resultMap>
	
	<select id="getGiacs214InvoiceListing" resultMap="giacs214InvoiceResultMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT *
  						  FROM TABLE(GIACS214_PKG.GET_INVOICE_LIST(#policyId#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="dspIssPremSeq">
  								UPPER(dsp_iss_prem_seq) LIKE UPPER(#dspIssPremSeq#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspBalanceAmtDue">
  								dsp_balance_amt_due = #dspBalanceAmtDue#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspPremBalanceDue">
  								dsp_prem_balance_due = #dspPremBalanceDue#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspTaxBalanceDue">
  								dsp_tax_balance_due = #dspTaxBalanceDue#
  							</isNotEmpty>
  						</isNotNull>
  						<isNotNull property="sortColumn">
  							<isEqual property="sortColumn" compareValue="dspIssPremSeq">
  								ORDER BY dsp_iss_prem_Seq
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspBalanceAmtDue">
  								ORDER BY dsp_balance_amt_due
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspPremBalanceDue">
  								ORDER BY dsp_prem_balance_due
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspTaxBalanceDue">
  								ORDER BY dsp_tax_balance_due
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="ASC">
  								ASC
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="DESC">
  								DESC
  							</isEqual>
  						</isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_
  						  FROM TABLE(GIACS214_PKG.GET_INVOICE_LIST(#policyId#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="dspIssPremSeq">
  								UPPER(dsp_iss_prem_seq) LIKE UPPER(#dspIssPremSeq#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspBalanceAmtDue">
  								dsp_balance_amt_due = #dspBalanceAmtDue#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspPremBalanceDue">
  								dsp_prem_balance_due = #dspPremBalanceDue#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspTaxBalanceDue">
  								dsp_tax_balance_due = #dspTaxBalanceDue#
  							</isNotEmpty>
  						</isNotNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs214AgingSoaDetailsResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="a020AssdNo"		column="A020_ASSD_NO"/>
		<result property="issCd"			column="ISS_CD"/>
		<result property="premSeqNo"		column="PREM_SEQ_NO"/>
		<result property="dspIssPremSeq"	column="DSP_ISS_PREM_SEQ"/>
		<result property="dspCurrency"		column="DSP_CURRENCY"/>
		<result property="dspCurrencyRt"	column="DSP_CURRENCY_RT"/>
		<result property="instNo"			column="INST_NO"/>
		<result property="totalAmountDue"	column="TOTAL_AMOUNT_DUE"/>
		<result property="totalPayments"	column="TOTAL_PAYMENTS"/>
		<result property="balanceAmtDue"	column="BALANCE_AMT_DUE"/>
		<result property="premBalanceDue"	column="PREM_BALANCE_DUE"/>
		<result property="taxBalanceDue"	column="TAX_BALANCE_DUE"/>
	</resultMap>
	
	<select id="getGiacs214AgingSoaDetails" resultMap="giacs214AgingSoaDetailsResultMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT *
  						  FROM TABLE(GIACS214_PKG.GET_AGING_SOA_DETAILS(#assdNo#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="dspIssPremSeq">
  								UPPER(dsp_iss_prem_seq) LIKE UPPER(#dspIssPremSeq#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="instNo">
  								inst_no = #instNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspCurrency">
  								UPPER(dsp_currency) LIKE UPPER(#dspCurrency#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspCurrencyRt">
  								dsp_currency_rt = #dspCurrencyRt#
  							</isNotEmpty>
  						</isNotNull>
  						<isNotNull property="sortColumn">
  							<isEqual property="sortColumn" compareValue="dspIssPremSeq">
  								ORDER BY dsp_iss_prem_seq
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="instNo">
  								ORDER BY inst_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspCurrency">
  								ORDER BY dsp_currency
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspCurrencyRt">
  								ORDER BY dsp_currency_rt
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="ASC">
  								ASC
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="DESC">
  								DESC
  							</isEqual>
  						</isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_
  						  FROM TABLE(GIACS214_PKG.GET_AGING_SOA_DETAILS(#assdNo#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="dspIssPremSeq">
  								UPPER(dsp_iss_prem_seq) LIKE UPPER(#dspIssPremSeq#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="instNo">
  								inst_no = #instNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspCurrency">
  								UPPER(dsp_currency) LIKE UPPER(#dspCurrency#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspCurrencyRt">
  								dsp_currency_rt = #dspCurrencyRt#
  							</isNotEmpty>
  						</isNotNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>

<!-- end GIACS214 -->

	<select id="checkAPDCPaytDtl" parameterClass="java.lang.Integer" resultClass="java.lang.String">
		SELECT GIAC_ORDER_OF_PAYTS_PKG.check_apdc_payt_dtl(#gaccTranId#)
  		  FROM DUAL
	</select>
	
	<!--john 10.14.2014  -->
	<resultMap class="java.util.HashMap" id="giacs001CancelledOrMap" extends="BaseEntity.TableGridResultMap">
		<result property="orPrefSuf" 		column="or_pref_suf" />
		<result property="orNo" 			column="or_no" />
		<result property="payor" 			column="payor" />
		<result property="particulars" 		column="particulars" />
		<result property="address1" 		column="address_1" />
		<result property="address2" 		column="address_2" />
		<result property="address3" 		column="address_3" />
		<result property="orDate" 			column="or_date" />
		<result property="orTag" 			column="or_tag" />
		<result property="tin" 				column="tin" />
		<result property="gaccTranId" 		column="gacc_tran_id" />
		<result property="rowNum" 			column="rownum_"/>
		<result property="rowCount" 		column="count_"/>
	</resultMap>
	
	<select id="getGiacs001CancelledOr" resultMap="giacs001CancelledOrMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIAC_ORDER_OF_PAYTS_PKG.get_cancelled_or_list(#userId#))
		                 <isNotNull property="findText">
					         WHERE (UPPER(or_pref_suf) LIKE (#findText#) 
					         	 OR (or_no) LIKE (#findText#)
					         	 OR UPPER(payor) LIKE (#findText#)
					         	 OR UPPER(particulars) LIKE (#findText#)  
					         	 )
				         </isNotNull>          
			          	  <isNotNull property="sortColumn">
			          	 	  <isEqual property="sortColumn" compareValue="orPrefSuf">
				              		ORDER BY or_pref_suf
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="orNo">
				              		ORDER BY or_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="payor">
				              		ORDER BY payor
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="particulars">
				              		ORDER BY particulars
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>    
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GIAC_ORDER_OF_PAYTS_PKG.get_cancelled_or_list(#userId#))
			              <isNotNull property="findText">
					          WHERE (UPPER(or_pref_suf) LIKE (#findText#) 
					         	 OR (or_no) LIKE (#findText#)
					         	 OR UPPER(payor) LIKE (#findText#)
					         	 OR UPPER(particulars) LIKE (#findText#)  
					         	 )
				          </isNotNull> 
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="cnclCollnBreakDownMap">
		<result property="itemNo" 			column="item_no" />
		<result property="payMode" 			column="pay_mode" />
		<result property="bankCd" 			column="bank_cd" />
		<result property="checkClass" 		column="check_class" />
		<result property="checkNo" 			column="check_no" />
		<result property="checkDate" 		column="check_date" />
		<result property="amount" 			column="amount" />
		<result property="currencyCd" 		column="currency_cd" />
		<result property="currencyRt" 		column="currency_rt" />
		<result property="fcurrencyAmt" 	column="fcurrency_amt" />
		<result property="dcbBankCd" 		column="dcb_bank_cd"/>
		<result property="dcbBankAcctCd" 	column="dcb_bank_acct_cd"/>
		<result property="bankSname" 		column="bank_sname"/>
		<result property="shortName" 		column="short_name"/>
		<result property="grossAmt" 		column="gross_amt"/>     
		<result property="commissionAmt"	column="commission_amt"/>
		<result property="vatAmt" 			column="vat_amt"/>       
		<result property="fcGrossAmt" 		column="fc_gross_amt"/>  
		<result property="fcCommAmt" 		column="fc_comm_amt"/>   
		<result property="fcTaxAmt" 		column="fc_tax_amt"/>    
	</resultMap>
	
	<select id="getCnclCollnBreakDown" resultMap="cnclCollnBreakDownMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_cncl_colln_breakdown(#gaccTranId#))
	</select>
	
	
	<!-- added john 10.20.2014 -->
	<procedure id="getGiacOrRel" parameterClass="java.lang.Integer" resultMap="giacOrRel">  
		SELECT * FROM TABLE(giac_order_of_payts_pkg.get_giac_or_rel(#gaccTranId#))
	</procedure>
	
	<!-- added john 10.22.2014 -->
	<procedure id="saveGiacOrRel" parameterClass="giacOrRel">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			giac_order_of_payts_pkg.save_giac_or_rel(
				#tranId#, 
				#newOrTag#,
				#oldTranId#,
				#oldOrDate#,
				#oldOrPrefSuf#,
				#oldOrNo#,
				#oldOrTag#,
				#userId#);
		END;	
	</procedure>
	
	<procedure id="checkAcctRecordStatus" parameterClass="java.util.HashMap">
 		BEGIN
 			check_acct_record_status(#tranId#, #moduleId#);
 		END;
 	</procedure>
	
</sqlMap>