<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap>
	<typeAlias alias="GIACOutFaculPremPaymtClass" type="com.geniisys.giac.entity.GIACOutFaculPremPaymt" />
	
	<resultMap class="com.geniisys.framework.util.BaseEntity" id="BaseEntityResultMap">
		<result property="rowNum" 			column="rownum_" />
		<result property="rowCount" 		column="count_" />
	</resultMap>

	<resultMap class="map" id="GIACOutFaculPremPaymtMap" >
		<result property="lineCd"       column="LINE_CD" />
		<result property="binderYY"     column="BINDER_YY" />
		<result property="binderSeqNo"  column="BINDER_SEQ_NO" />
		<result property="rowNum" 		column="rownum_" />
		<result property="rowCount" 	column="count_" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GIACOutFaculPremPaymtMap2">
		<result property="lineCd" 			column="LINE_CD" />
		<result property="binderYY" 		column="BINDER_YY" />
		<result property="binderSeqNo" 		column="BINDER_SEQ_NO" />
		<result property="policyNo" 		column="POLICY_NO"/>
		<result property="endtType" 		column="ENDT_TYPE"/>
		<result property="assdNo" 			column="ASSD_NO"/>
		<result property="assdName" 		column="ASSD_NAME"/>
		<result property="remarks" 			column="REMARKS"/>
		<result property="disbursementAmt" 	column="DISBURSEMENT_AMT"/>
		<result property="disbursementAmtLocal" 	column="DISBURSEMENT_AMT_LOCAL"/>
		<result property="binderId" 		column="BINDER_ID" />
		<result property="paytGaccTranId" 	column="PAYT_GACC_TRAN_ID" />	<!-- SR-19631 : shan 08.17.2015 -->
		<result property="recordNo" 		column="RECORD_NO" />	<!-- SR-19631 : shan 08.17.2015 -->
		<result property="refNo" 			column="REF_NO" />	<!-- SR-19631 : shan 08.17.2015 -->
		<result property="premAmt" 			column="PREM_AMT" />
		<result property="premVat" 			column="PREM_VAT" />
		<result property="commAmt" 			column="COMM_AMT" />
		<result property="commVat" 			column="COMM_VAT" />
		<result property="wholdingTax" 		column="WHOLDING_VAT" />
		<result property="currencyCd" 		column="CURRENCY_CD" />
		<result property="currencyRt" 		column="CURRENCY_RT" />
		<result property="currencyDesc" 	column="CURRENCY_DESC" />
		<result property="policyId" 		column="POLICY_ID" />
		<result property="issCd" 			column="POL_ISS_CD" />
		<result property="premSeqNo" 		column="PREM_SEQ_NO" />
		<result property="message" 			column="MESSAGE"/>
		<result property="rowNum" 			column="rownum_" />
		<result property="rowCount" 		column="count_"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="binderMap">
		<result property="lineCd" 			column="LINE_CD" />
		<result property="binderYY" 		column="BINDER_YY" />
		<result property="binderSeqNo" 		column="BINDER_SEQ_NO" />
		<result property="policyNo" 		column="POLICY_NO"/>
		<result property="endtType" 		column="ENDT_TYPE"/>
		<result property="assdNo" 			column="ASSD_NO"/>
		<result property="assdName" 		column="ASSD_NAME"/>
		<result property="remarks" 			column="REMARKS"/>
		<result property="disbursementAmt" 	column="DISBURSEMENT_AMT"/>
		<result property="binderId" 		column="BINDER_ID" />
		<result property="paytGaccTranId" 	column="PAYT_GACC_TRAN_ID" />	<!-- SR-19631 : shan 08.17.2015 -->
		<result property="recordNo" 		column="RECORD_NO" />	<!-- SR-19631 : shan 08.17.2015 -->
		<result property="refNo" 			column="REF_NO" />	<!-- SR-19631 : shan 08.17.2015 -->
		<result property="riCd" 			column="RI_CD" />
		<result property="riName" 			column="RI_NAME" />
		<result property="tranType" 		column="TRANSACTION_TYPE" />
		<result property="premAmt" 			column="PREM_AMT" />
		<result property="premVat" 			column="PREM_VAT" />
		<result property="commAmt" 			column="COMM_AMT" />
		<result property="commVat" 			column="COMM_VAT" />
		<result property="wholdingTax" 		column="WHOLDING_VAT" />
		<result property="currencyCd" 		column="CURRENCY_CD" />
		<result property="currencyRt" 		column="CURRENCY_RT" />
		<result property="currencyDesc" 	column="CURRENCY_DESC" />
		<result property="policyId" 		column="POLICY_ID" />
		<result property="issCd" 			column="POL_ISS_CD" />
		<result property="premSeqNo" 		column="PREM_SEQ_NO" />
		<result property="orPrintTag" 		column="OR_PRINT_TAG"/>
		<result property="cmTag" 			column="CM_TAG"/>
		<result property="message" 			column="MESSAGE"/>
		<result property="totalAmt" 		column="total_amt"/>
		<result property="rowNum" 			column="rownum_" />
		<result property="rowCount" 		column="count_"/>
	</resultMap>
	<resultMap class="java.util.HashMap" id="binderMap2">
		<result property="lineCd" 			column="LINE_CD" />
		<result property="binderYY" 		column="BINDER_YY" />
		<result property="binderSeqNo" 		column="BINDER_SEQ_NO" />
		<result property="policyNo" 		column="POLICY_NO"/>
		<result property="endtType" 		column="ENDT_TYPE"/>
		<result property="assdNo" 			column="ASSD_NO"/>
		<result property="assdName" 		column="ASSD_NAME"/>
		<result property="remarks" 			column="REMARKS"/>
		<result property="disbursementAmt" 	column="DISBURSEMENT_AMT"/>
		<result property="binderId" 		column="BINDER_ID" />
		<result property="riCd" 			column="RI_CD" />
		<result property="riName" 			column="RI_NAME" />
		<result property="tranType" 		column="TRANSACTION_TYPE" />
		<result property="premAmt" 			column="PREM_AMT" />
		<result property="premVat" 			column="PREM_VAT" />
		<result property="commAmt" 			column="COMM_AMT" />
		<result property="commVat" 			column="COMM_VAT" />
		<result property="wholdingTax" 		column="WHOLDING_VAT" />
		<result property="currencyCd" 		column="CURRENCY_CD" />
		<result property="currencyRt" 		column="CURRENCY_RT" />
		<result property="currencyDesc" 	column="CURRENCY_DESC" />
		<result property="policyId" 		column="POLICY_ID" />
		<result property="issCd" 			column="POL_ISS_CD" />
		<result property="premSeqNo" 		column="PREM_SEQ_NO" />
		<result property="message" 			column="MESSAGE"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="breakdownMap">
		<result property="premAmt" 			column="RI_PREM_AMT" />
		<result property="premVat" 			column="RI_PREM_VAT" />
		<result property="commAmt" 			column="RI_COMM_AMT" />
		<result property="commVat" 			column="RI_COMM_VAT" />
		<result property="wholdingTax" 		column="RI_WHOLDING_VAT" />
	</resultMap>
	
	<parameterMap class="map" id="getOverrideDisbursementMap">
		<parameter property="transactionType"	    jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="binderYY"	    		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="lineCd"	    		jdbcType="VARCHAR"	javaType="java.lang.String"	    mode="IN" />
		<parameter property="binderSeqNo"	    	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="binderId"	    		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="disbursementAmt"	    jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT" />
		<parameter property="message"	    		jdbcType="VARCHAR"	javaType="java.lang.String"	    mode="OUT" />
	</parameterMap>
	
	<parameterMap class="map" id="getRevertDisbursementAmtMap">
		<parameter property="binderId"	    		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="transactionType"	    jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="gaccTranId"	    	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="lineCd"	    		jdbcType="VARCHAR"	javaType="java.lang.String"	    mode="IN" />
		<parameter property="riCd"	    			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="disbursementAmt"	    jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT" />
		<parameter property="message"	    		jdbcType="VARCHAR"	javaType="java.lang.String"	    mode="OUT" />
	</parameterMap>
	
	<select id="getBinderListTableGrid" parameterClass="map" resultMap="GIACOutFaculPremPaymtMap" remapResults="true">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls(#tranType#, #riCd#, #lineCd#, #binderYY#))) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls(#tranType#, #riCd#, #lineCd#, #binderYY#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
		 SELECT * FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls(#tranType#, #riCd#, #lineCd#, #binderYY#))
	</select>
	
	<select id="getBinderListTableGrid2" parameterClass="java.util.HashMap" resultMap="GIACOutFaculPremPaymtMap2">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		              COUNT(1) OVER() count_, <!-- Commented by MarkS 04/06/2017 --> 			
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls(#tranType#, #riCd#, #lineCd#, #binderYY#, #gaccTranId#, #userId#, #moduleName#, #binderSeqNo#))
		                 WHERE 1=1
		                 <!-- AND disbursement_amt != 0 -->
		                 AND TRUNC(disbursement_amt, 2) != 0 <!-- bonok :: 5.10.2016 :: SR 20296 :: to disregard unnecessary decimal places (hundredth place onwards) upon conversion -->
		                  	<isNotNull property="notIn" prepend="AND">
						  		 <!-- BINDER_ID NOT IN $notIn$ --> <!-- SR-19631 : shan 08.17.2015 --> 
						  		 DECODE(#tranType#, 1, binder_id, 3, binder_id, binder_id||payt_gacc_tran_id) NOT IN $notIn$ <!-- edited by MarkS 04/06/2017 SR23893 -->
						  	</isNotNull>
						  	<isEqual property="tranType" compareValue="1" prepend="AND">
						  		disbursement_amt >= 0
						  	</isEqual>
						  	<isEqual property="tranType" compareValue="2" prepend="AND">
						  		disbursement_amt BETWEEN -999999999999999999 AND -1
						  	</isEqual>
						  	<isEqual property="tranType" compareValue="3" prepend="AND">
						  		disbursement_amt BETWEEN -999999999999999999 AND -1
						  	</isEqual>
						  	<isEqual property="tranType" compareValue="4" prepend="AND">
						  		disbursement_amt >= 0
						  	</isEqual>
		                  	<isEqual property="sortColumn" compareValue="lineCd" >
			              		ORDER BY LINE_CD
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="binderYY">
			              		ORDER BY BINDER_YY
				            </isEqual>
				             <isEqual property="sortColumn" compareValue="binderSeqNo">
			              		ORDER BY BINDER_SEQ_NO
				            </isEqual>
				             <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY POLICY_NO
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="disbursementAmt">
			              		ORDER BY DISBURSEMENT_AMT
				            </isEqual>
				             <isEqual property="sortColumn" compareValue="refNo">	<!-- SR-19631 : shan 08.19.2015 -->
			              		ORDER BY REF_NO
				            </isEqual>
		                  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	 </isNotNull>
		                  ) a) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="validateBinderNo" parameterClass="map" resultMap="binderMap2">
		SELECT * FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls(#tranType#, #riCd#, #lineCd#, #binderYY#, #gaccTranId#, #userId#, #moduleName#, #binderSeqNo#))
	</select>
	
	<select id="getBreakdownAmts" parameterClass="map" resultMap="breakdownMap">
		SELECT * FROM TABLE (giri_binder_pkg.get_breakdown_amts(#riCd#, #lineCd#, #binderYY#, #binderSeqNo#, #disbursementAmt#))
	</select>
	
	<select id="getAllOutFaculPremPayts2" parameterClass="java.util.HashMap" resultMap="binderMap">   <!-- added by steven 5.16.2012 -->
	SELECT *
			  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.*,
			                (SELECT NVL(sum(disbursement_amt),0) FROM TABLE(giac_outfacul_prem_payts_pkg.get_giac_outfacul_prem_payts (#gaccTranId#, #userId#, #moduleName#))) total_amt
			          FROM (SELECT * 
			          			FROM TABLE(giac_outfacul_prem_payts_pkg.get_giac_outfacul_prem_payts (#gaccTranId#, #userId#, #moduleName#))
			            		<isNotNull property="filter">
									WHERE 1=1
									<isNotEmpty prepend="AND"  property="tranType">
										TRANSACTION_TYPE LIKE #tranType#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="riName">
										ri_name LIKE UPPER(#riName#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="lineCd">
										line_cd LIKE UPPER(#lineCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderYY">
										binder_YY LIKE #binderYY#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderSeqNo">
										binder_seq_no LIKE #binderSeqNo#
									</isNotEmpty>
								</isNotNull>
					            <isEqual property="sortColumn" compareValue="tranType">
				              		ORDER BY TRANSACTION_TYPE
					            </isEqual>
					            <isEqual property="sortColumn" compareValue="riName">
				              		ORDER BY ri_name
					            </isEqual>
					            <isEqual property="sortColumn" compareValue="lineCd binderYY binderSeqNo">
									ORDER BY line_cd 
									<isNotNull property="sortColumn">
								          <isEqual property="ascDescFlg" compareValue="ASC">
								              	ASC
								           </isEqual>
								           <isEqual property="ascDescFlg" compareValue="DESC">
								            	DESC
								           </isEqual>
								    </isNotNull>, 
								            binder_YY
								    <isNotNull property="sortColumn">
								            <isEqual property="ascDescFlg" compareValue="ASC">
								              	ASC
								            </isEqual>
								            <isEqual property="ascDescFlg" compareValue="DESC">
								              	DESC
								            </isEqual>
								    </isNotNull>, binder_seq_no
								</isEqual>
					            <isEqual property="sortColumn" compareValue="disbursementAmt">
				              		ORDER BY disbursement_amt
					            </isEqual>
					            <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	 </isNotNull>) a,
			               (SELECT count(*) count_
			                 FROM TABLE(giac_outfacul_prem_payts_pkg.get_giac_outfacul_prem_payts (#gaccTranId#, #userId#, #moduleName#))
			                 <isNotNull property="filter">
									WHERE 1=1
									<isNotEmpty prepend="AND"  property="tranType">
										TRANSACTION_TYPE LIKE (#tranType#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="riName">
										ri_name LIKE #riName#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="lineCd">
										line_cd LIKE #lineCd#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderYY">
										binder_YY LIKE upper(#binderYY#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderSeqNo">
										binder_seq_no LIKE upper(#binderSeqNo#)
									</isNotEmpty>
								</isNotNull>) b)
                          	 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getAllOutFaculPremPayts" parameterClass="java.util.HashMap" resultMap="binderMap">
		SELECT * FROM TABLE(giac_outfacul_prem_payts_pkg.get_giac_outfacul_prem_payts (#gaccTranId#, #userId#, #moduleName#))
	</select>
	
	<insert id="saveOutFaculPremPayts" parameterClass="GIACOutFaculPremPaymtClass">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			giac_outfacul_prem_payts_pkg.save_giac_outfacul_prem_payts
							(#gaccTranId#, #binderId#, #riCd#, #tranType#,
							 #disbursementAmt#, #premAmt#, #premVat#, #commAmt#, 
							 #commVat#, #wholdingTax#, #remarks#, #currencyCd#,
							 #convertRate#, #foreignCurrAmt#, #orPrintTag#, 
							 #cmTag#, #userId#, #recordNo#);	<!-- SR-19631 : shan 08.17.2015 -->
		END;
	</insert>
	
	<delete id="deletedOutFaculPremPayt" parameterClass="java.util.HashMap">
		BEGIN
			giac_outfacul_prem_payts_pkg.delete_giac_outfacul_prem(#gaccTranId#, #binderId#, #riCd#, #recordNo#);
		END;
	</delete>
	
	<select id="getDisbursementAmt" resultClass="java.math.BigDecimal" parameterClass="java.util.HashMap">
		SELECT giac_outfacul_prem_payts_pkg.get_list_disb_amt(#tranType#, #riCd#, #lineCd#, #binderYY#, #binderId#, #binderSeqNo#, #convertRate#, #policyId#, #allowDef#, #gaccTranId#) FROM DUAL <!-- SR-19631 : shan 08.18.2015 -->
	</select>
	
	<procedure id="getOverrideDisbursement" parameterMap="getOverrideDisbursementMap">
		BEGIN
			giac_outfacul_prem_payts_pkg.get_override_disbursement_amt(?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="getRevertDisbursementAmt" parameterMap="getRevertDisbursementAmtMap">
		BEGIN
			giac_outfacul_prem_payts_pkg.get_disb_amt_for_but_revert(?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<select id="getOverrideDetails" parameterClass="java.util.HashMap" resultMap="binderMap2">
		 <!-- SELECT * FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls(#tranType#, #riCd#, #lineCd#, #binderYY#, #gaccTranId#, 'CPI', #moduleName#, #binderSeqNo#))
		 	 SR-19631 : shan 08.13.2015 -->
		 SELECT * FROM TABLE (giac_outfacul_prem_payts_pkg.get_binder_dtls_for_override(#tranType#, #riCd#, #lineCd#, #binderYY#, #gaccTranId#, #overrideUser#, #moduleName#, #binderSeqNo#))
	</select>
	
	<parameterMap id="validateBinderNoMap" class="map">
		<parameter property="tranType"			jdbcType="VARCHAR"	javaType="java.lang.String"  	mode="IN"/>
		<parameter property="riCd"				jdbcType="VARCHAR"	javaType="java.lang.String"  	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="binderYY"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="binderSeqNo"		jdbcType="VARCHAR"	javaType="java.lang.String"  	mode="IN"/>
		<parameter property="overrideDef"		jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="disbursementAmt"	jdbcType="INTEGER"	javaType="java.math.BigDecimal" mode="OUT"/>
		<parameter property="message"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="OUT"/>
	</parameterMap>
	
	<procedure id="validateBinderNo2" parameterMap="validateBinderNoMap">
		BEGIN
			giac_outfacul_prem_payts_pkg.VALIDATE_BINDER_NO2(?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<!-- SR-19792, 19840 : shan 08.06.2015 -->
	<select id="getAllOutFaculPremPaytsDtls" parameterClass="java.util.HashMap" resultMap="binderMap">   <!-- added by steven 5.16.2012 -->
		SELECT *
		  FROM (SELECT rownum rownum_, 
			               b.count_, 
			               a.*,
			               (SELECT NVL(sum(disbursement_amt),0) FROM TABLE(giac_outfacul_prem_payts_pkg.get_outfacul_prem_payts_dtls (#gaccTranId#))) total_amt
			          FROM (SELECT * 
			          			FROM TABLE(giac_outfacul_prem_payts_pkg.get_outfacul_prem_payts_dtls (#gaccTranId#))
			            		<isNotNull property="filter">
									WHERE 1=1
									<isNotEmpty prepend="AND"  property="tranType">
										TRANSACTION_TYPE LIKE #tranType#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="riName">
										ri_name LIKE UPPER(#riName#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="lineCd">
										line_cd LIKE UPPER(#lineCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderYY">
										binder_YY LIKE #binderYY#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderSeqNo">
										binder_seq_no LIKE #binderSeqNo#
									</isNotEmpty>
								</isNotNull>
					            <isEqual property="sortColumn" compareValue="tranType">
				              		ORDER BY TRANSACTION_TYPE
					            </isEqual>
					            <isEqual property="sortColumn" compareValue="riName">
				              		ORDER BY ri_name
					            </isEqual>
					            <isEqual property="sortColumn" compareValue="lineCd binderYY binderSeqNo">
									ORDER BY line_cd 
									<isNotNull property="sortColumn">
								          <isEqual property="ascDescFlg" compareValue="ASC">
								              	ASC
								           </isEqual>
								           <isEqual property="ascDescFlg" compareValue="DESC">
								            	DESC
								           </isEqual>
								    </isNotNull>, 
								            binder_YY
								    <isNotNull property="sortColumn">
								            <isEqual property="ascDescFlg" compareValue="ASC">
								              	ASC
								            </isEqual>
								            <isEqual property="ascDescFlg" compareValue="DESC">
								              	DESC
								            </isEqual>
								    </isNotNull>, binder_seq_no
								</isEqual>
					            <isEqual property="sortColumn" compareValue="disbursementAmt">
				              		ORDER BY disbursement_amt
					            </isEqual>
					            <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              	 </isNotNull>) a,
			               (SELECT count(*) count_
			                 FROM TABLE(giac_outfacul_prem_payts_pkg.get_outfacul_prem_payts_dtls (#gaccTranId#))
			                 <isNotNull property="filter">
									WHERE 1=1
									<isNotEmpty prepend="AND"  property="tranType">
										TRANSACTION_TYPE LIKE (#tranType#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="riName">
										ri_name LIKE #riName#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="lineCd">
										line_cd LIKE #lineCd#
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderYY">
										binder_YY LIKE upper(#binderYY#)
									</isNotEmpty>
									<isNotEmpty prepend="AND"  property="binderSeqNo">
										binder_seq_no LIKE upper(#binderSeqNo#)
									</isNotEmpty>
								</isNotNull>) b)
                          	 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	<!-- end SR-19792, 19840 -->
	
	<!-- SR-19631 : shan 08.17.2015 -->
	<select id="getNextRecNoGiacs019" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT (NVL(MAX(record_no), 0) + 1) next_record_no
	     FROM giac_outfacul_prem_payts 
	    WHERE transaction_type IN (2, 4)
	      AND gacc_tran_id = #gaccTranId#
	</select>
	
	<procedure id="updateRevColumnsGiac019" parameterClass="java.util.HashMap">
		BEGIN			
			giis_users_pkg.app_user := #userId#;
			giac_outfacul_prem_payts_pkg.update_rev_columns(#paytGaccTranId#, #riCd#, #binderId#, #userId#, #gaccTranId#, #revRecordNo#, #addDelSw#);			
		END;
	</procedure>
	
	<procedure id="renumberGiacs019" parameterClass="java.util.HashMap">
		BEGIN			
			giis_users_pkg.app_user := #userId#;
			giac_outfacul_prem_payts_pkg.renumber_outfacul_prem_payts(#gaccTranId#, #userId#);			
		END;
	</procedure>
	<!-- end SR-19631 -->
</sqlMap>