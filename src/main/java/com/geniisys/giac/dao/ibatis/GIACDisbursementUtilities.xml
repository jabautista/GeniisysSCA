<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="GIACDisbursementUtilities">

	<parameterMap class="map" id="giacs045ValidateReqNoParameterMap">
		<parameter property="documentCdFrom"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="lineCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docYearFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docMmFrom"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docSeqNoFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="refIdFrom"			jdbcType="VARCHAR"	javaType="java.lang.Integer"	mode="OUT"/>
		<parameter property="fundCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="tranIdFrom"		jdbcType="VARCHAR"	javaType="java.lang.Integer"	mode="OUT"/>
		<parameter property="tranDateFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="check"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<resultMap class="java.util.HashMap" id="giacs408BillInfoDtlsMap">
		<result column="nbt_line_cd" 		property="lineCd" />
		<result column="nbt_subline_cd"		property="sublineCd"/>
		<result column="nbt_assd_no" 		property="assdNo" />
		<result column="dsp_assd_name"		property="assdName"/>
		<result column="dsp_policy_no" 		property="policyNo" />
		<result column="v_comm_amt"			property="commAmt"/>
		<result column="banca_dtls_btn"		property="bancaDtlsBtn"/>
		<result column="tran_no"			property="tranNo"/>
		<result column="tran_flag"			property="tranFlag"/>
		<result column="dsp_tran_flag"		property="dspTranFlag"/>
		<result column="tran_date"			property="tranDate"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="giacs408InvoiceCommInfoListResultMap"  extends="BaseEntity.TableGridResultMap">
		<result column="intm_no" 			property="intmNo" />
		<result column="dsp_intm_name" 		property="intmName" />
		<result column="prnt_intmdry" 		property="prntIntmdry" />
		<result column="share_percentage" 	property="sharePercentage" />
		<result column="premium_amt" 		property="premiumAmt" />
		<result column="commission_amt" 	property="commissionAmt" />
		<result column="wholding_tax" 		property="wholdingTax" />
		<result column="nbt_netcomm_amt" 	property="netCommAmt" />
		<result column="tran_no" 			property="tranNo" />
		<result column="remarks" 			property="remarks" />
		<result column="dsp_tran_flag" 		property="tranFlag" />
		<result column="tran_date" 			property="tranDate" />
		<result column="delete_sw" 			property="deleteSw" />
		<result column="nbt_wtax_rate" 		property="wtaxRate" />
		<result column="nbt_original_share" property="originalShare" />
		<result column="comm_rec_id" 		property="commRecId" />
		<result column="user_id" 			property="userId" />
		<result column="post_date" 			property="postDate" />
		<result column="tran_flag" 			property="tranFlag" />
		<result column="dsp_tran_flag" 		property="dspTranFlag" />
		<result column="posted_by" 			property="postedBy" />
		<result column="fund_cd" 			property="fundCd" />
		<result column="branch_cd" 			property="branchCd" />
		<result column="iss_cd" 			property="issCd" />
		<result column="prem_seq_no" 		property="premSeqNo" />
		<result column="policy_id" 			property="policyId" />
		<result column="tot_share_percentage" property="totSharePercentage" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="giacs408PerilInfoListResultMap"  extends="BaseEntity.TableGridResultMap">
		<result column="dsp_peril_name" 	property="perilName" />
		<result column="premium_amt" 		property="premiumAmt" />
		<result column="commission_rt" 		property="commissionRt" />
		<result column="commission_amt" 	property="commissionAmt" />
		<result column="wholding_tax" 		property="wholdingTax" />
		<result column="comm_rec_id" 		property="commRecId" />
		<result column="intm_no" 			property="intmNo" />
		<result column="iss_cd" 			property="issCd" />
		<result column="prem_seq_no" 		property="premSeqNo" />
		<result column="peril_cd" 			property="perilCd" />
		<result column="tran_date" 			property="tranDate" />
		<result column="tran_no" 			property="tranNo" />
		<result column="tran_flag" 			property="tranFlag" />
		<result column="comm_peril_id" 		property="commPerilId" />
		<result column="delete_sw" 			property="deleteSw" />
		<result column="fund_cd" 			property="fundCd" />
		<result column="branch_cd" 			property="branchCd" />
		<result column="tran_no" 			property="tranNo" />
   		<result column="dsp_netcomm_amt"    property="netCommAmt" />
   		<result column="tot_premium_amt" 	property="totalPremiumAmt" />
   		<result column="tot_commission_amt" property="totalCommissionAmt" />
		<result column="tot_wholding_tax" 	property="totalWholdingTax" />
		<result column="tot_netcomm_amt"    property="totalNetCommAmt" />
		<result column="record_status"    	property="recordStatus" />
	</resultMap>
	
	<procedure id="giacs045ValidateRequestNo" parameterMap="giacs045ValidateReqNoParameterMap">
		CALL GIACS045_PKG.validate_request_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>

	<parameterMap class="map" id="giacs045checkCreateTransactionParameterMap">
		<parameter property="tranDateFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdTo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="giacs045checkCreateTransaction" parameterMap="giacs045checkCreateTransactionParameterMap">
		CALL GIACS045_PKG.check_create_transaction(?, ?)
	</procedure>
	
	<parameterMap class="map" id="giacs045InsertIntoAcctransParameterMap">
		<parameter property="fundCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranDateFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranIdAcc"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<procedure id="giacs045InsertIntoAcctrans" parameterMap="giacs045InsertIntoAcctransParameterMap">
		CALL GIACS045_PKG.insert_into_acctrans(?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="giacs045CopyPaymentRequestParameterMap">
		<parameter property="documentCdFrom"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="lineCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docYearFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docMmFrom"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docSeqNoFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="documentCdTo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdTo"		jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="lineCdTo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docYearTo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docMmTo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="docSeqNoTo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="refIdFrom"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="refIdTo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="tranDateFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranIdAcc"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="giacs045CopyPaymentRequest" parameterMap="giacs045CopyPaymentRequestParameterMap">
		CALL GIACS045_PKG.copy_payment_request(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="giacs045CopyWithHoldingParameterMap">
		<parameter property="tranIdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranIdAcc"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="giacs045CopyWithHolding" parameterMap="giacs045CopyWithHoldingParameterMap">
		CALL GIACS045_PKG.copy_withholding(?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="giacs045CopyInputVatParameterMap">
		<parameter property="tranIdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranIdAcc"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="giacs045CopyInputVat" parameterMap="giacs045CopyInputVatParameterMap">
		CALL GIACS045_PKG.copy_input_vat(?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="giacs045CopyAcctgEntriesLooperParameterMap">
		<parameter property="tranIdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="fundCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdFrom"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCdTo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranIdAcc"			jdbcType="VARCHAR"	javaType="java.lang.String" 	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<resultMap class="java.util.HashMap" id="giacs408ValidateBillNoMap">
		<result property="issCd" 		column="iss_cd"/>
		<result property="premSeqNo" 	column="prem_seq_no"/>
		<result property="policyId" 	column="policy_id"/>
		<result property="premAmt" 		column="prem_amt"/>
	</resultMap>
	
	<procedure id="giacs045CopyAcctgEntriesLooper" parameterMap="giacs045CopyAcctgEntriesLooperParameterMap">
		CALL GIACS045_PKG.copy_acctg_entries_looper(?, ?, ?, ?, ?, ?)
	</procedure>
	
	<select id="giacs045ValidateDocumentCd" resultClass="java.lang.String">
		SELECT GIACS045_PKG.validate_document_cd(#documentCd#) FROM DUAL
	</select>
	
	<select id="giacs045ValidateBranchCdFrom" resultClass="java.lang.String">
		SELECT GIACS045_PKG.validate_branch_cd_from(#documentCd#, #branchCdFrom#) FROM DUAL
	</select>
	
	<select id="giacs045ValidateLineCd" resultClass="java.lang.String">
		SELECT GIACS045_PKG.validate_line_cd(#documentCd#, #branchCdFrom#, #lineCd#) FROM DUAL
	</select>
	
	<select id="giacs045ValidateDocYear" resultClass="java.lang.String">
		SELECT GIACS045_PKG.validate_doc_year(#documentCd#, #branchCdFrom#, #lineCd#, #docYear#) FROM DUAL
	</select>
	
	<select id="giacs045ValidateDocMm" resultClass="java.lang.String">
		SELECT GIACS045_PKG.validate_doc_mm(#documentCd#, #branchCdFrom#, #lineCd#, #docYear#, #docMm#) FROM DUAL
	</select>
	
	<select id="giacs045ValidateBranchCdTo" resultClass="java.lang.String">
		SELECT GIACS045_PKG.validate_branch_cd_to(#userId#, #branchCdTo#) FROM DUAL
	</select>

	<select id="giacs408ValidateBillNo" resultMap="giacs408ValidateBillNoMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(GIACS408_PKG.validate_giacs408_bill_no(#issCd#, #premSeqNo#, #userId#))
	</select>
	
	<select id="getGIACS408PerilInfoList" resultMap="giacs408PerilInfoListResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*,
		               (SELECT sum(premium_amt) FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))) tot_premium_amt,
		               (SELECT sum(commission_amt) FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))) tot_commission_amt,
		               (SELECT sum(wholding_tax) FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))) tot_wholding_tax,
		               (SELECT sum(dsp_netcomm_amt) FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))) tot_netcomm_amt
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))
			        	<isNotNull property="filter">
				          WHERE 1=1
						 	<isNotEmpty prepend="AND"  property="perilName">
								UPPER(dsp_peril_name) LIKE UPPER(#perilName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="premiumAmt">
								premium_amt = #premiumAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionRt">
								commission_rt = #commissionRt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionAmt">
								commission_amt = #commissionAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="wholdingTax">
								wholding_tax = #wholdingTax#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="netCommAmt">
								dsp_netcomm_amt = #netCommAmt#
							</isNotEmpty>
						</isNotNull>
			        	<isEqual property="sortColumn" compareValue="perilName">
		              		ORDER BY dsp_peril_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="premiumAmt">
		              		ORDER BY premium_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="commissionRt">
		              		ORDER BY commission_rt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="commissionAmt">
		              		ORDER BY commission_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="wholdingTax">
		              		ORDER BY wholding_tax
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="netCommAmt">
		              		ORDER BY dsp_netcomm_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))
		                <isNotNull property="filter">
				          WHERE 1=1
						 	<isNotEmpty prepend="AND"  property="perilName">
								UPPER(dsp_peril_name) LIKE UPPER(#perilName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="premiumAmt">
								premium_amt = #premiumAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionRt">
								commission_rt = #commissionRt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionAmt">
								commission_amt = #commissionAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="wholdingTax">
								wholding_tax = #wholdingTax#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="netCommAmt">
								dsp_netcomm_amt = #netCommAmt#
							</isNotEmpty>
						</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
		
	<select id="getGIACS408BillInfoDtls" resultMap="giacs408BillInfoDtlsMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(GIACS408_PKG.populate_bill_information(#policyId#, #issCd#, #premSeqNo#, #userId#))
	</select>
	
	<select id="getGIACS408InvoiceCommInfoList" resultMap="giacs408InvoiceCommInfoListResultMap">
		SELECT * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*,
		               (SELECT SUM(share_percentage) 
		                  FROM TABLE (giacs408_pkg.populate_invoice_comm_info(#issCd#, #premSeqNo#))
				          WHERE 1=1
				        <isNotNull property="posted">
				        	<isEqual property="posted" compareValue="Y">
				          		AND tran_flag = 'P' 
				          		AND NVL(delete_sw, 'N') = 'N' 
				          		AND comm_rec_id = #commRecId#
				          	</isEqual>
				        </isNotNull>
					 	<isNotNull property="nbtShowAll">
						 	<isEqual property="nbtShowAll" compareValue="N">
								AND tran_flag = 'U' 
								AND NVL(delete_sw,'N') = 'N'
							</isEqual>
						</isNotNull>) tot_share_percentage
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.populate_invoice_comm_info(#issCd#, #premSeqNo#))
				          WHERE 1=1
				        <isNotNull property="posted">
				        	<isEqual property="posted" compareValue="Y">
				          		AND tran_flag = 'P' 
				          		AND NVL(delete_sw, 'N') = 'N' 
				          		AND comm_rec_id = #commRecId#
				          	</isEqual>
				        </isNotNull>
					 	<isNotNull property="nbtShowAll">
						 	<isEqual property="nbtShowAll" compareValue="N">
								AND tran_flag = 'U' 
								AND NVL(delete_sw,'N') = 'N'
							</isEqual>
						</isNotNull>
						<isNotNull property="filter">	
						 	<isNotEmpty prepend="AND"  property="intmName">
								UPPER(dsp_intm_name) LIKE UPPER(#intmName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="prntIntmdry">
								UPPER(prnt_intmdry) LIKE UPPER(#prntIntmdry#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="sharePercentage">
								share_percentage LIKE UPPER(#sharePercentage#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="premiumAmt">
								premium_amt LIKE UPPER(#premiumAmt#)
							</isNotEmpty>
						</isNotNull>
			        	<isEqual property="sortColumn" compareValue="intmName">
		              		ORDER BY dsp_intm_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="prntIntmdry">
		              		ORDER BY prnt_intmdry
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="sharePercentage">
		              		ORDER BY share_percentage
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="premiumAmt">
		              		ORDER BY premium_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.populate_invoice_comm_info(#issCd#, #premSeqNo#))
		                   WHERE 1=1
		                  <isNotNull property="posted">
					          <isEqual property="posted" compareValue="Y">
					          		  AND tran_flag = 'P' 
					          		  AND NVL(delete_sw, 'N') = 'N' 
					          	  	  AND comm_rec_id = #commRecId#
					            	</isEqual>
					          </isNotNull>
					 	  <isNotNull property="nbtShowAll">
						 	  <isEqual property="nbtShowAll" compareValue="N">
								  AND tran_flag = 'U' 
								  AND NVL(delete_sw,'N') = 'N'
							  </isEqual>
						  </isNotNull>
		                  <isNotNull property="filter">
						 	<isNotEmpty prepend="AND"  property="intmName">
								UPPER(dsp_intm_name) LIKE UPPER(#intmName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="prntIntmdry">
								UPPER(prnt_intmdry) LIKE UPPER(#prntIntmdry#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="sharePercentage">
								share_percentage LIKE UPPER(#sharePercentage#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="premiumAmt">
								premium_amt LIKE UPPER(#premiumAmt#)
							</isNotEmpty>
						</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<parameterMap class="map" id="chkBillNoParameterMap">
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="polFlag"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="premAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT"/>
		<parameter property="commAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT"/>
		<parameter property="exist"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>

	<procedure id="giacs408ChkBillNoOnSelect" parameterMap="chkBillNoParameterMap">
		CALL GIACS408_PKG.chk_bill_no_onselect(?, ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="populateInvoiceCommPerilMap" >
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"		jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="policyId"		jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="fundCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="userId"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="populateInvoiceCommPeril" parameterMap="populateInvoiceCommPerilMap" >
		CALL GIACS408_PKG.query_gnci_gncp(?, ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="validateInvCommShareMap" >
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="currentTotalShare"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"		mode="IN"/>
		<parameter property="sharePercentage"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="INOUT"/>
		<parameter property="message"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<procedure id="validateInvCommShare" parameterMap="validateInvCommShareMap" >
		CALL GIACS408_PKG.validate_inv_comm_share(?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<resultMap class="java.util.HashMap" id="giacs408InvCommHistoryListResultMap"  extends="BaseEntity.TableGridResultMap">
		<result column="iss_cd" 			property="issCd" />
		<result column="prem_seq_no" 		property="premSeqNo" />
		<result column="intm_no" 			property="intmNo" />
		<result column="intm_name" 			property="intmName" />
		<result column="commission_amt" 	property="commissionAmt" />
		<result column="wholding_tax" 		property="wholdingTax" />
		<result column="intm_no2" 			property="intmNo2" />
		<result column="intm_name2"			property="intmName2" />
		<result column="commission_amt2" 	property="commissionAmt2" />
		<result column="wholding_tax2" 		property="wholdingTax2" />
		<result column="tran_flag2" 		property="tranFlag2" />
		<result column="delete_sw2" 		property="deleteSw2" />
		<result column="post_date2" 		property="postDate2" />
		<result column="posted_by2" 		property="postedBy2" />
		<result column="user_id2" 			property="userId2" />
	</resultMap>
	
	<select id="getGIACS408InvCommHistoryList" resultMap="giacs408InvCommHistoryListResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.get_invoice_comm_history(#issCd#, #premSeqNo#))
			          	  <isNotNull property="sortColumn">
			          	  	<isEqual property="sortColumn" compareValue="intmNo intmName commissionAmt wholdingTax">
			              		ORDER BY intm_no, intm_name, commission_amt, wholding_tax
			              	</isEqual>
			              	<isEqual property="sortColumn" compareValue="intmNo2 intmName2 commissionAmt2 wholdingTax2">
			              		ORDER BY intm_no2, intm_name2, commission_amt2, wholding_tax2
			              	</isEqual>
			              	<isEqual property="sortColumn" compareValue="tranFlag2 deleteSw2 postDate2 postedBy2 userId2">
			              		ORDER BY tran_flag2, delete_sw2, post_date2, posted_by2, user_id2
			              	</isEqual>
			              	<isEqual property="ascDescFlg" compareValue="ASC">
			              		ASC
			              	</isEqual>
			              	<isEqual property="ascDescFlg" compareValue="DESC">
			              		DESC
			              	</isEqual>
			              </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.get_invoice_comm_history(#issCd#, #premSeqNo#))
		                  <isNotNull property="sortColumn">
			          	  	<isEqual property="sortColumn" compareValue="intmNo intmName commissionAmt wholdingTax">
			              		ORDER BY intm_no, intm_name, commission_amt, wholding_tax
			              	</isEqual>
			               	<isEqual property="sortColumn" compareValue="intmNo2 intmName2 commissionAmt2 wholdingTax2">
			              		ORDER BY intm_no2, intm_name2, commission_amt2, wholding_tax2
			              	</isEqual>
			              	<isEqual property="sortColumn" compareValue="tranFlag2 deleteSw2 postDate2 postedBy2 userId2">
			              		ORDER BY tran_flag2, delete_sw2, post_date2, posted_by2, user_id2
			              	</isEqual>
			              	<isEqual property="ascDescFlg" compareValue="ASC">
			              		ASC
			              	</isEqual>
			              	<isEqual property="ascDescFlg" compareValue="DESC">
			              		DESC
			              	</isEqual>
			              </isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap class="java.util.HashMap" id="objInsertUpdateInvperlResultMap">
		<result column="peril_cd" 			property="perilCd" />
		<result column="dsp_peril_name" 	property="perilName" />
		<result column="comm_peril_id" 		property="commPerilId" />
		<result column="premium_amt" 		property="premiumAmt" />
		<result column="commission_rt" 		property="commissionRt" />		
		<!-- <result column="commission_amt" 	property="commissionAmt" />
		<result column="wholding_tax" 		property="wholdingTax" /> -->
	</resultMap>
	
	<select id="getObjInsertUpdateInvperl" resultMap="objInsertUpdateInvperlResultMap">
		SELECT * FROM TABLE (giacs408_pkg.get_obj_insert_update_invperl(#recordStatus#, #lineCd#, #sublineCd#, #issCd#, #premSeqNo#, #premAmt#, #premiumAmt#, #intmNo#, #policyId#))
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs408IntmNoLOVResultMap"  extends="BaseEntity.TableGridResultMap">
		<result column="intm_no" 			property="intmNo" />
		<result column="dsp_intm_name" 		property="intmName" />
		<result column="dsp_intm_type" 		property="intmType" />
		<result column="nbt_wtax_rate" 		property="wtaxRate" />
		<result column="prnt_intmdry" 		property="parentIntmdry" />
	</resultMap>
	
	<select id="getGIACS408IntmNoLOV" resultMap="giacs408IntmNoLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.get_giacs408_intm_lov(#issCd#, #premSeqNo#, #fundCd#, #branchCd#))
		                 WHERE (UPPER(dsp_intm_name) LIKE UPPER(NVL(#findText#, dsp_intm_name))
		                  	    OR intm_no LIKE NVL(#findText#, intm_no))
		                  <isNotNull property="notIn">
						   		AND intm_no NOT IN $notIn$
						  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY dsp_intm_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.get_giacs408_intm_lov(#issCd#, #premSeqNo#, #fundCd#, #branchCd#))
		                 WHERE (UPPER(dsp_intm_name) LIKE UPPER(NVL(#findText#, dsp_intm_name))
		                  	    OR intm_no LIKE NVL(#findText#, intm_no))
		                  <isNotNull property="notIn">
						  		AND intm_no NOT IN $notIn$
						  </isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<parameterMap class="map" id="validatePerilCommRtMap" >
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="commPerilId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="commPaid"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="commissionRt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="INOUT"/>
		<parameter property="message"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<!-- Deo [03.07.2017]: add start (SR-5944) -->
		<parameter property="lineCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sublineCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="perilCd"			jdbcType="VARCHAR"	javaType="java.lang.Integer"	mode="IN"/>
		<!-- Deo [03.07.2017]: add ends (SR-5944) -->
	</parameterMap>
	
	<procedure id="validatePerilCommRt" parameterMap="validatePerilCommRtMap">
		CALL GIACS408_PKG.validate_peril_commission_rt(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?) <!-- Deo [03.07.2017]: added last 4 parameters (SR-5944) -->
	</procedure>
	
	<select id="giacs408RecomputeCommissionRt" resultClass="java.math.BigDecimal" parameterClass="java.util.HashMap">
		SELECT (giacs408_pkg.RECOMPUTE_COMM_RATE(#issCd#, #premSeqNo#, #policyId#, #intmNo#, #lineCd#, #sublineCd#, #perilCd#)) FROM DUAL
	</select>
	
	<select id="getRecomputeCommRateList" resultMap="giacs408PerilInfoListResultMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*,
		               (SELECT sum(premium_amt) FROM TABLE (giacs408_pkg.recompute_comm_rate_list(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#, #issCd#, #premSeqNo#))) tot_premium_amt,
		               (SELECT sum(commission_amt) FROM TABLE (giacs408_pkg.recompute_comm_rate_list(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#, #issCd#, #premSeqNo#))) tot_commission_amt,
		               (SELECT sum(wholding_tax) FROM TABLE (giacs408_pkg.recompute_comm_rate_list(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#, #issCd#, #premSeqNo#))) tot_wholding_tax,
		               (SELECT sum(dsp_netcomm_amt) FROM TABLE (giacs408_pkg.recompute_comm_rate_list(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#, #issCd#, #premSeqNo#))) tot_netcomm_amt
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.recompute_comm_rate_list(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#, #issCd#, #premSeqNo#))
			        	<isNotNull property="filter">
				          WHERE 1=1
						 	<isNotEmpty prepend="AND"  property="perilName">
								UPPER(dsp_peril_name) LIKE UPPER(#perilName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="premiumAmt">
								premium_amt = #premiumAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionRt">
								commission_rt = #commissionRt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionAmt">
								commission_amt = #commissionAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="wholdingTax">
								wholding_tax = #wholdingTax#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="netCommAmt">
								dsp_netcomm_amt = #netCommAmt#
							</isNotEmpty>
						</isNotNull>
			        	<isEqual property="sortColumn" compareValue="perilName">
		              		ORDER BY dsp_peril_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="premiumAmt">
		              		ORDER BY premium_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="commissionRt">
		              		ORDER BY commission_rt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="commissionAmt">
		              		ORDER BY commission_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="wholdingTax">
		              		ORDER BY wholding_tax
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="netCommAmt">
		              		ORDER BY dsp_netcomm_amt
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.recompute_comm_rate_list(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#, #issCd#, #premSeqNo#))
		                <isNotNull property="filter">
				          WHERE 1=1
						 	<isNotEmpty prepend="AND"  property="perilName">
								UPPER(dsp_peril_name) LIKE UPPER(#perilName#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="premiumAmt">
								premium_amt = #premiumAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionRt">
								commission_rt = #commissionRt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="commissionAmt">
								commission_amt = #commissionAmt#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="wholdingTax">
								wholding_tax = #wholdingTax#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="netCommAmt">
								dsp_netcomm_amt = #netCommAmt#
							</isNotEmpty>
						</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="giacs408RecomputeWtaxRate" resultClass="java.math.BigDecimal" parameterClass="java.lang.Integer">
		SELECT (giacs408_pkg.RECOMPUTE_WTAX_RATE(#intmNo#)) FROM DUAL
	</select>
	
	<parameterMap class="map" id="cancelInvoiceCommissionMap" >
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="cancelInvoiceCommission" parameterMap="cancelInvoiceCommissionMap" >
		CALL GIACS408_PKG.CANCEL_INVOICE_COMMISSION(?, ?, ?)
	</procedure>
	
		
	<parameterMap class="map" id="updateCommInvMap" >
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="policyId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="sharePercentage"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="premiumAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="commissionAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="wholdingTax"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="tranDate"			jdbcType="DATE"		javaType="java.util.Date"		mode="IN"/>
		<parameter property="tranFlag"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="deleteSw"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="remarks"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="giacs408UpdateCommInv" parameterMap="updateCommInvMap" >
		CALL GIACS408_PKG.UPDATE_COMM_INVOICE(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="updateCommInvPerilMap" >
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="commPerilId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="premiumAmt"		jdbcType="NUMBER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="commissionRt"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="commissionAmt"		jdbcType="NUMBER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="wholdingTax"		jdbcType="NUMBER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="deleteSw"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="tranNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="tranFlag"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="perilCd"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="giacs408UpdateCommInvPeril" parameterMap="updateCommInvPerilMap" >
		CALL GIACS408_PKG.UPDATE_COMM_INVOICE_PERIL(?, ?, ?, ?, ?, ?, ?, ?, ?, ?,
		                                            ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="keyCommitGIACS408Map" >
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="keyCommitGIACS408" parameterMap="keyCommitGIACS408Map" >
		CALL GIACS408_PKG.KEY_COMMIT_GIACS408(?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="checkInvPytGIACS408Map" >
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="message"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<procedure id="checkInvPytGIACS408" parameterMap="checkInvPytGIACS408Map" >
		CALL GIACS408_PKG.CHECK_INV_PAYT(?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="checkRecordGIACS408Map" >
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="allowCOI"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="vRecord"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<procedure id="checkRecordGIACS408" parameterMap="checkRecordGIACS408Map" >
		CALL GIACS408_PKG.CHECK_RECORD(?, ?, ?, ?)
	</procedure>
	
	<procedure id="keyDelRecGIACS408" parameterMap="checkInvPytGIACS408Map" >
		CALL GIACS408_PKG.KEY_DEL_REC_GIACS408(?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="postInvCommGIACS408Map" >
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="intmNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="postInvCommGIACS408" parameterMap="postInvCommGIACS408Map" >
		CALL GIACS408_PKG.GIACS408_POST_CHANGES(?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<resultMap class="java.util.HashMap" id="giacs408BancTypeResultMap">
		<result column="banc_type_cd" 			property="bancTypeCd" />
		<result column="banc_type_desc" 		property="bancTypeDesc" />
		<result column="rate" 					property="rate" />
		<result column="user_id" 				property="userId" />
		<result column="last_update" 			property="lastUpdate" />
	</resultMap>
	
	<select id="getGiacs408BancType" resultMap="giacs408BancTypeResultMap">
		SELECT * FROM TABLE (giacs408_pkg.get_giis_banc_type(#policyId#))
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs408BancTypeLOVMap"  extends="BaseEntity.TableGridResultMap">
		<result column="banc_type_cd" 			property="bancTypeCd" />
		<result column="banc_type_desc" 		property="bancTypeDesc" />
		<result column="rate" 					property="rate" />
	</resultMap>
	
	<select id="getBancaTypeLov" resultMap="giacs408BancTypeLOVMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.get_giis_banc_type_lov)
		                  <isNotNull property="findText">
		                  	WHERE UPPER(banc_type_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(banc_type_desc) LIKE UPPER(#findText#)
		                  	   OR rate LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="bancTypeCd">
			              		ORDER BY banc_type_cd
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="bancTypeDesc">
			              		ORDER BY banc_type_desc
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="rate">
			              		ORDER BY rate
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.get_giis_banc_type_lov)
		                  <isNotNull property="findText">
		                  	WHERE UPPER(banc_type_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(banc_type_desc) LIKE UPPER(#findText#)
		                  	   OR rate LIKE UPPER(#findText#)
		                  </isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs408BancTypeDtlsResultMap"  extends="BaseEntity.TableGridResultMap">
		<result column="banc_type_cd" 		property="bancTypeCd" />
		<result column="item_no" 			property="itemNo" />
		<result column="intm_no" 			property="intmNo" />
		<result column="intm_type" 			property="intmType" />
		<result column="nbt_intm_name" 		property="nbtIntmName" />
		<result column="share_percentage" 	property="sharePercentage" />
		<result column="remarks" 			property="remarks" />
		<result column="user_id" 			property="userId" />
		<result column="last_update" 		property="lastUpdate" />
		<result column="fixed_tag" 			property="fixedTag" />
	</resultMap>
	
	<select id="getgiacs408BancTypeDtlsList" resultMap="giacs408BancTypeDtlsResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.get_giis_banc_type_dtl(#policyId#,#vModBtyp#,#issCd#,#premSeqNo#))
		                  <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmType">
			              		ORDER BY intm_type
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="nbtIntmName">
			              		ORDER BY nbt_intm_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.get_giis_banc_type_dtl(#policyId#,#vModBtyp#,#issCd#,#premSeqNo#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getgiacs408BancTypeDtls2List" resultMap="giacs408BancTypeDtlsResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.get_giis_banc_type_dtl2(#bancTypeCd#,#vModBtyp#,#issCd#,#premSeqNo#))
		                  <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmType">
			              		ORDER BY intm_type
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="nbtIntmName">
			              		ORDER BY nbt_intm_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.get_giis_banc_type_dtl2(#bancTypeCd#,#vModBtyp#,#issCd#,#premSeqNo#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs408BancIntmLOVMap"  extends="BaseEntity.TableGridResultMap">
		<result column="intm_no" 			property="intmNo" />
		<result column="intm_name" 			property="intmName" />
		<result column="intm_type" 			property="intmType" />
	</resultMap>
	
	<select id="getBancIntmLov" resultMap="giacs408BancIntmLOVMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (SELECT * 
		                  FROM TABLE (giacs408_pkg.get_banc_intm_lov(#paramIntmType#))
		                  <isNotNull property="findText">
		                  	WHERE intm_no LIKE #findText#
		                  	   OR UPPER(intm_name) LIKE UPPER(#findText#)
		                  	   OR UPPER(intm_type) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmType">
			              		ORDER BY intm_type
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (giacs408_pkg.get_banc_intm_lov(#paramIntmType#))
		                  <isNotNull property="findText">
		                  	WHERE intm_no LIKE #findText#
		                  	   OR UPPER(intm_name) LIKE UPPER(#findText#)
		                  	   OR UPPER(intm_type) LIKE UPPER(#findText#)
		                  </isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<parameterMap class="map" id="checkBancAssuranceMap">
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="vBancSw"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="vbancType"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="vFixedTag"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="vIntmType"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="vIntmCnt"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT"/>
		<parameter property="vModBtyp"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="paramIntmType"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="ityp"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="commRecId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmType"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="bancTypeCd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="checkBancAssurance" parameterMap="checkBancAssuranceMap">
		BEGIN
			giacs408_pkg.check_bancassurance(?,?,?,?,?,?,?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<parameterMap class="map" id="applyBancAssuranceMap" >
		<parameter property="vModBtyp"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="fundCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="bancaNbtBancTypeCd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PolicyId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="b140IssCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PremSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
	</parameterMap>

	<procedure id="applyBancAssurance" parameterMap="applyBancAssuranceMap" >
		BEGIN
			giacs408_pkg.apply_banc_assurance(?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="insInvTabMap" >
		<parameter property="userId"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PremAmt"			jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="sharePercentage"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="intmNo"				jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="b140NbtLineCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140IssCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PremSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="bancaNbtBancTypeCd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="fundCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PolicyId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
	</parameterMap>

	<procedure id="insInvTab" parameterMap="insInvTabMap" >
		BEGIN
			giacs408_pkg.ins_inv_tab(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="applyBancAssuranceNMap" >
		<parameter property="b140IssCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PremSeqNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"				jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="modTag"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="userId"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PremAmt"			jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="sharePercentage"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="b140NbtLineCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="bancaNbtBancTypeCd"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="fundCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PolicyId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
	</parameterMap>

	<procedure id="applyBancAssuranceN" parameterMap="applyBancAssuranceNMap" >
		BEGIN
			giacs408_pkg.apply_banc_assurance_n(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="recomputeCommRateMap" >
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sublineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140IssCd"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="b140PremSeqNo"	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="b140PolicyId"	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="perilCd"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="commissionRt"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT"/>
		<parameter property="commissionAmt"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT"/>
		<parameter property="premiumAmt"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="INOUT"/>
		<parameter property="wholdingTax"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT"/>
		<parameter property="nbtWtaxRate"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="dspNetcommAmt"	jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT"/>
	</parameterMap>

	<procedure id="recomputeCommRate" parameterMap="recomputeCommRateMap" >
		BEGIN
			giacs408_pkg.recompute_comm_rate_giacs408(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="deleteCommInvMap" >
		<parameter property="fundCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="commRecId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="intmNo"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
	</parameterMap>	
	
	<procedure id="giacs408DeleteCommInv" parameterMap="deleteCommInvMap" >
		BEGIN
			giacs408_pkg.delete_comm_invoice(?, ?, ?, ?);
		END;
	</procedure>
	
	<parameterMap class="map" id="getAdjustedPremAmtMap" >
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="intmNo"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sharePercentage"	jdbcType="NUMERIC"	javaType="java.math.BigDecimal"	mode="IN"/>
		<parameter property="policyId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="premAmt"			jdbcType="NUMERIC"	javaType="java.math.BigDecimal"	mode="INOUT"/>
	</parameterMap>	
	
	<procedure id="getAdjustedPremAmt" parameterMap="getAdjustedPremAmtMap">
		CALL GIACS408_PKG.get_adjusted_prem_amt(?, ?, ?, ?, ?, ?)
	</procedure>
	
	<resultMap class="java.util.HashMap" id="giacs408PerilListResultMap">
		<result column="dsp_peril_name" 	property="perilName" />
		<result column="premium_amt" 		property="premiumAmt" />
		<result column="commission_rt" 		property="commissionRt" />
		<result column="commission_amt" 	property="commissionAmt" />
		<result column="wholding_tax" 		property="wholdingTax" />
		<result column="comm_rec_id" 		property="commRecId" />
		<result column="intm_no" 			property="intmNo" />
		<result column="iss_cd" 			property="issCd" />
		<result column="prem_seq_no" 		property="premSeqNo" />
		<result column="peril_cd" 			property="perilCd" />
		<result column="tran_date" 			property="tranDate" />
		<result column="tran_no" 			property="tranNo" />
		<result column="tran_flag" 			property="tranFlag" />
		<result column="comm_peril_id" 		property="commPerilId" />
		<result column="delete_sw" 			property="deleteSw" />
		<result column="fund_cd" 			property="fundCd" />
		<result column="branch_cd" 			property="branchCd" />
		<result column="tran_no" 			property="tranNo" />
   		<result column="dsp_netcomm_amt"    property="netCommAmt" />
		<result column="record_status"    	property="recordStatus" />
	</resultMap>
	
	<select id="getGiacs408PerilList" resultMap="giacs408PerilListResultMap">
		SELECT * 
		  FROM TABLE (giacs408_pkg.populate_peril_info(#fundCd#, #branchCd#, #commRecId#, #intmNo#, #lineCd#))
	</select>
	
	<resultMap class="java.util.HashMap" id="giacs408InvoiceCommListResultMap">
		<result column="intm_no" 			property="intmNo" />
		<result column="dsp_intm_name" 		property="intmName" />
		<result column="prnt_intmdry" 		property="prntIntmdry" />
		<result column="share_percentage" 	property="sharePercentage" />
		<result column="premium_amt" 		property="premiumAmt" />
		<result column="commission_amt" 	property="commissionAmt" />
		<result column="wholding_tax" 		property="wholdingTax" />
		<result column="nbt_netcomm_amt" 	property="netCommAmt" />
		<result column="tran_no" 			property="tranNo" />
		<result column="remarks" 			property="remarks" />
		<result column="dsp_tran_flag" 		property="tranFlag" />
		<result column="tran_date" 			property="tranDate" />
		<result column="delete_sw" 			property="deleteSw" />
		<result column="nbt_wtax_rate" 		property="wtaxRate" />
		<result column="nbt_original_share" property="originalShare" />
		<result column="comm_rec_id" 		property="commRecId" />
		<result column="user_id" 			property="userId" />
		<result column="post_date" 			property="postDate" />
		<result column="tran_flag" 			property="tranFlag" />
		<result column="dsp_tran_flag" 		property="dspTranFlag" />
		<result column="posted_by" 			property="postedBy" />
		<result column="fund_cd" 			property="fundCd" />
		<result column="branch_cd" 			property="branchCd" />
		<result column="iss_cd" 			property="issCd" />
		<result column="prem_seq_no" 		property="premSeqNo" />
		<result column="policy_id" 			property="policyId" />
	</resultMap>
	
	<select id="getGIACS408InvoiceCommList" resultMap="giacs408InvoiceCommListResultMap">
		SELECT *
		  FROM TABLE (giacs408_pkg.populate_invoice_comm_info(#issCd#, #premSeqNo#))
		 WHERE 1=1
		  	<isNotNull property="posted">
	        	<isEqual property="posted" compareValue="Y">
	          		AND tran_flag = 'P' 
	          		AND NVL(delete_sw, 'N') = 'N' 
	          		AND comm_rec_id = #commRecId#
	          	</isEqual>
	        </isNotNull>
		 	<isNotNull property="nbtShowAll">
			 	<isEqual property="nbtShowAll" compareValue="N">
					AND tran_flag = 'U' 
					AND NVL(delete_sw,'N') = 'N'
				</isEqual>
			</isNotNull>
	</select>		                  
</sqlMap>
