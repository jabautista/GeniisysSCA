<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIACRecapDtlExt">

	<resultMap id="giacRecapDtlMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="ROW_TITLE"			property="rowTitle"/>
		<result column="DIRECT_AMT"			property="directAmt"/>
		<result column="DIRECT_AUTH"		property="directAuth"/>
		<result column="DIRECT_ASEAN"		property="directAsean"/>
		<result column="DIRECT_OTH"			property="directOth"/>
		<result column="DIRECT_NET"			property="directNet"/>
		<result column="INW_AUTH"			property="inwAuth"/>
		<result column="INW_ASEAN"			property="inwAsean"/>
		<result column="INW_OTH"			property="inwOth"/>
		<result column="RET_AUTH"			property="retAuth"/>
		<result column="RET_ASEAN"			property="retAsean"/>
		<result column="RET_OTH"			property="retOth"/>
		<result column="NET_WRITTEN"		property="netWritten"/>
	</resultMap>
	
	<resultMap id="giacRecapLineDtlMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="ROW_TITLE"			property="rowTitle"/>
		<result column="DIRECT_AMT"			property="directAmt"/>
		<result column="DIRECT_AUTH"		property="directAuth"/>
		<result column="DIRECT_ASEAN"		property="directAsean"/>
		<result column="DIRECT_OTH"			property="directOth"/>
		<result column="DIRECT_NET"			property="directNet"/>
		<result column="INW_AUTH"			property="inwAuth"/>
		<result column="INW_ASEAN"			property="inwAsean"/>
		<result column="INW_OTH"			property="inwOth"/>
		<result column="RET_AUTH"			property="retAuth"/>
		<result column="RET_ASEAN"			property="retAsean"/>
		<result column="RET_OTH"			property="retOth"/>
		<result column="NET_WRITTEN"		property="netWritten"/>
		<result column="DIRECT_AMT_TOTAL"	property="directAmtTotal"/>
		<result column="DIRECT_AUTH_TOTAL"	property="directAuthTotal"/>
		<result column="DIRECT_ASEAN_TOTAL"	property="directAseanTotal"/>
		<result column="DIRECT_OTH_TOTAL"	property="directOthTotal"/>
		<result column="DIRECT_NET_TOTAL"	property="directNetTotal"/>
		<result column="INW_AUTH_TOTAL"		property="inwAuthTotal"/>
		<result column="INW_ASEAN_TOTAL"	property="inwAseanTotal"/>
		<result column="INW_OTH_TOTAL"		property="inwOthTotal"/>
		<result column="RET_AUTH_TOTAL"		property="retAuthTotal"/>
		<result column="RET_ASEAN_TOTAL"	property="retAseanTotal"/>
		<result column="RET_OTH_TOTAL"		property="retOthTotal"/>
		<result column="NET_WRITTEN_TOTAL"	property="netWrittenTotal"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="recapVariablesMap">
		<result column="RECAP_FROM_DATE"	property="recapFromDate"/>
		<result column="RECAP_TO_DATE"		property="recapToDate"/>
	</resultMap>
	
	<select id="getRecapPremiumDetails" resultMap="giacRecapDtlMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_premium_details)
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_premium_details)
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapLossPdDetails" resultMap="giacRecapDtlMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_losspd_details)
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_losspd_details)
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapCommDetails" resultMap="giacRecapDtlMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_comm_details)
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_comm_details)
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapTsiDetails" resultMap="giacRecapDtlMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_tsi_details)
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_tsi_details)
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapOsLossDetails" resultMap="giacRecapDtlMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_osloss_details)
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_osloss_details)
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapPremiumLineDetails" resultMap="giacRecapLineDtlMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*,
            		   c.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_premium_line_details(#line#))
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_premium_line_details(#line#))
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b,
				(SELECT SUM(direct_amt) direct_amt_total,
 		                SUM(direct_auth) direct_auth_total,
 		                SUM(direct_asean) direct_asean_total,
 		                SUM(direct_oth) direct_oth_total,
 		                SUM(direct_net) direct_net_total,
		                SUM(inw_auth) inw_auth_total,
		                SUM(inw_asean) inw_asean_total,
		                SUM(inw_oth) inw_oth_total,
		                SUM(ret_auth) ret_auth_total,
		                SUM(ret_asean) ret_asean_total,
		                SUM(ret_oth) ret_oth_total,
		                SUM(net_written) net_written_total
		           FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_premium_line_details(#line#))
		          WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))) c)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapLossPdLineDetails" resultMap="giacRecapLineDtlMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*,
            		   c.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_losspd_line_details(#line#))
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_losspd_line_details(#line#))
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b,
				(SELECT SUM(direct_amt) direct_amt_total,
 		                SUM(direct_auth) direct_auth_total,
 		                SUM(direct_asean) direct_asean_total,
 		                SUM(direct_oth) direct_oth_total,
 		                SUM(direct_net) direct_net_total,
		                SUM(inw_auth) inw_auth_total,
		                SUM(inw_asean) inw_asean_total,
		                SUM(inw_oth) inw_oth_total,
		                SUM(ret_auth) ret_auth_total,
		                SUM(ret_asean) ret_asean_total,
		                SUM(ret_oth) ret_oth_total,
		                SUM(net_written) net_written_total
		           FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_losspd_line_details(#line#))
		          WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))) c)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapCommLineDetails" resultMap="giacRecapLineDtlMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*,
            		   c.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_comm_line_details(#line#))
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_comm_line_details(#line#))
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b,
				(SELECT SUM(direct_amt) direct_amt_total,
 		                SUM(direct_auth) direct_auth_total,
 		                SUM(direct_asean) direct_asean_total,
 		                SUM(direct_oth) direct_oth_total,
 		                SUM(direct_net) direct_net_total,
		                SUM(inw_auth) inw_auth_total,
		                SUM(inw_asean) inw_asean_total,
		                SUM(inw_oth) inw_oth_total,
		                SUM(ret_auth) ret_auth_total,
		                SUM(ret_asean) ret_asean_total,
		                SUM(ret_oth) ret_oth_total,
		                SUM(net_written) net_written_total
		           FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_comm_line_details(#line#))
		          WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))) c)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapTsiLineDetails" resultMap="giacRecapLineDtlMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*,
            		   c.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_tsi_line_details(#line#))
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_tsi_line_details(#line#))
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b,
				(SELECT SUM(direct_amt) direct_amt_total,
 		                SUM(direct_auth) direct_auth_total,
 		                SUM(direct_asean) direct_asean_total,
 		                SUM(direct_oth) direct_oth_total,
 		                SUM(direct_net) direct_net_total,
		                SUM(inw_auth) inw_auth_total,
		                SUM(inw_asean) inw_asean_total,
		                SUM(inw_oth) inw_oth_total,
		                SUM(ret_auth) ret_auth_total,
		                SUM(ret_asean) ret_asean_total,
		                SUM(ret_oth) ret_oth_total,
		                SUM(net_written) net_written_total
		           FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_tsi_line_details(#line#))
		          WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))) c)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapOsLossLineDetails" resultMap="giacRecapLineDtlMap" parameterClass="java.util.HashMap">
		SELECT *
          FROM (SELECT ROWNUM rownum_,
            		   b.count_,
            		   a.*,
            		   c.*
                  FROM (SELECT *
                          FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_osloss_line_details(#line#))
                         WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
                          	<isEqual property="sortColumn" compareValue="rowTitle">
								ORDER BY row_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAmt">
								ORDER BY direct_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAuth">
								ORDER BY direct_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directAsean">
								ORDER BY direct_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="directOth">
								ORDER BY direct_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="directNet">
								ORDER BY direct_net
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAuth">
								ORDER BY inw_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwAsean">
								ORDER BY inw_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="inwOth">
								ORDER BY inw_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAuth">
								ORDER BY ret_auth
							</isEqual>
							<isEqual property="sortColumn" compareValue="retAsean">
								ORDER BY ret_asean
							</isEqual>
							<isEqual property="sortColumn" compareValue="retOth">
								ORDER BY ret_oth
							</isEqual>
							<isEqual property="sortColumn" compareValue="netWritten">
								ORDER BY net_written
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
               (SELECT COUNT(*) count_
                  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_osloss_line_details(#line#))
                 WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))
				) b,
				(SELECT SUM(direct_amt) direct_amt_total,
 		                SUM(direct_auth) direct_auth_total,
 		                SUM(direct_asean) direct_asean_total,
 		                SUM(direct_oth) direct_oth_total,
 		                SUM(direct_net) direct_net_total,
		                SUM(inw_auth) inw_auth_total,
		                SUM(inw_asean) inw_asean_total,
		                SUM(inw_oth) inw_oth_total,
		                SUM(ret_auth) ret_auth_total,
		                SUM(ret_asean) ret_asean_total,
		                SUM(ret_oth) ret_oth_total,
		                SUM(net_written) net_written_total
		           FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_osloss_line_details(#line#))
		          WHERE UPPER(row_title) LIKE UPPER(NVL(#rowTitle#, row_title))) c)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getRecapVariables" resultMap="recapVariablesMap">
		SELECT *
		  FROM TABLE(GIAC_RECAP_DTL_EXT_PKG.get_recap_variables)
	</select>
	
	<procedure id="extractRecap" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			RECAP_WEB(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<procedure id="extractRecapLoss" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			RECAP_LOSS_WEB(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<procedure id="extractRecapOsLoss" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			RECAP_OSLOSS_WEB(TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<procedure id="extractRecapSummary" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			RECAP_SUMMARY_WEB;
		END;
	</procedure>
	
	<procedure id="extractRecapLosspd" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			RECAP_SUMMARY_LOSSPD_WEB;
		END;
	</procedure>
	
	<procedure id="extractRecapOsloss" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			RECAP_SUMMARY_OSLOSS_WEB;
		END;
	</procedure>
	
	<procedure id="getCount" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			GET_COUNT_WEB;
		END;
	</procedure>
	
	<procedure id="keepDates" parameterClass="java.util.HashMap">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			GIAC_RECAP_DTL_EXT_PKG.keep_dates(#fromDate#, #toDate#);
		END;
	</procedure>
	
	<select id="checkDataFetched" resultClass="java.lang.Integer">
		SELECT GIAC_RECAP_DTL_EXT_PKG.check_data_fetched
		  FROM DUAL
	</select>
	
</sqlMap>