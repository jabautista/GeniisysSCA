<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIACPdcPremColln">

	<cacheModel id="oneDayClient" type="MEMORY">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>

	<typeAlias alias="GIACPdcPremColln" type="com.geniisys.giac.entity.GIACPdcPremColln"/>
	
	<resultMap class="GIACPdcPremColln" id="giacPdcPremColln">
		<result column="pdc_id" property="pdcId"></result>
		<result column="transaction_type" property="tranType"></result>
		<result column="iss_cd" property="issCd"></result>
		<result column="prem_seq_no" property="premSeqNo"></result>
		<result column="inst_no" property="instNo"></result>
		<result column="collection_amt" property="collnAmt"></result>
		<result column="currency_cd" property="currCd"></result>
		<result column="currency_rt" property="currRt"></result>
		<result column="fcurrency_amt" property="fCurrAmt"></result>
		<result column="premium_amt" property="premAmt"></result>
		<result column="tax_amt" property="taxAmt"></result>
		<result column="insert_tag" property="insertTag"></result>
	</resultMap>
	
	<resultMap class="GIACPdcPremColln"  id="getDatedChksDtlsTGResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="pdc_id" property="pdcId"></result>
		<result column="transaction_type" property="tranType"></result>
		<result column="iss_cd" property="issCd"></result>
		<result column="prem_seq_no" property="premSeqNo"></result>
		<result column="inst_no" property="instNo"></result>
		<result column="collection_amt" property="collnAmt"></result>
		<result column="currency_cd" property="currCd"></result>
		<result column="currency_rt" property="currRt"></result>
		<result column="fcurrency_amt" property="fCurrAmt"></result>
		<result column="premium_amt" property="premAmt"></result>
		<result column="tax_amt" property="taxAmt"></result>
		<result column="insert_tag" property="insertTag"></result>
		<result column="rownum_" property="rowNum" />
		<result column="count_" property="rowCount" />
	</resultMap>
	
	<resultMap class="GIACPdcPremColln" id="giacPdcPremColln2" extends="BaseEntity.TableGridResultMap">
		<result column="pdc_id" 			property="pdcId"></result>
		<result column="transaction_type" 	property="tranType"></result>
		<result column="iss_cd" 			property="issCd"></result>
		<result column="prem_seq_no" 		property="premSeqNo"></result>
		<result column="inst_no" 			property="instNo"></result>
		<result column="collection_amt" 	property="collnAmt"></result>
		<result column="currency_cd" 		property="currCd"></result>
		<result column="currency_rt" 		property="currRt"></result>
		<result column="fcurrency_amt" 		property="fCurrAmt"></result>
		<result column="premium_amt" 		property="premAmt"></result>
		<result column="tax_amt" 			property="taxAmt"></result>
		<result column="insert_tag" 		property="insertTag"></result>
		<result column="last_update" 		property="lastUpdate"></result>
		<result column="policy_no" 			property="policyNo"/>
		<result column="assd_name" 			property="assdName"/>
		<result column="tran_type_desc" 	property="tranTypeDesc"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GIACPdcPremCollnResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="pdc_id" 			property="pdcId"></result>
		<result column="transaction_type" 	property="tranType"></result>
		<result column="iss_cd" 			property="issCd"></result>
		<result column="prem_seq_no" 		property="premSeqNo"></result>
		<result column="inst_no" 			property="instNo"></result>
		<result column="collection_amt" 	property="collnAmt"></result>
		<result column="currency_cd" 		property="currCd"></result>
		<result column="currency_rt" 		property="currRt"></result>
		<result column="fcurrency_amt" 		property="fCurrAmt"></result>
		<result column="premium_amt" 		property="premAmt"></result>
		<result column="tax_amt" 			property="taxAmt"></result>
		<result column="insert_tag" 		property="insertTag"></result>
		<result column="last_update" 		property="lastUpdate"></result>
		<result column="policy_no" 			property="policyNo"/>
		<result column="assd_name" 			property="assdName"/>
		<result column="tran_type_desc" 	property="tranTypeDesc"/>
	</resultMap>
	
	<resultMap class="GIACPdcPremColln" id="giacPdcPremChildDelete">
		<result column="pdc_id" property="pdcId"></result>
		<result column="transaction_type" property="tranType"></result>
		<result column="iss_cd" property="issCd"></result>
		<result column="prem_seq_no" property="premSeqNo"></result>
	</resultMap>
	
	<select id="getDatedChksDtls" parameterClass="java.lang.Integer" resultMap="giacPdcPremColln">
		SELECT * FROM TABLE(giac_pdc_prem_colln_pkg.get_dated_checks_dtls(#gaccTranId#))
	</select>
	
	<parameterMap class="map" id="pdcPremCollnParameterMap">
		<parameter property="pdcId"			jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="tranType"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="instNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="instNoCount"	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="taxAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT" />
		<parameter property="premiumAmt"	jdbcType="INTEGER"	javaType="java.math.BigDecimal" mode="OUT" />
		<parameter property="collnAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal" mode="OUT" />
		<parameter property="assuredName"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="policyNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="message"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap class="map" id="pdcPremCollnDtlsParameterMap">
		<parameter property="issCd"			jdbcType="VARCHAR"  javaType="java.lang.String"		mode="IN" />
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="instNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="INOUT" />
		<parameter property="premiumAmt"	jdbcType="INTEGER"  javaType="java.math.BigDecimal"	mode="OUT" />
		<parameter property="taxAmt"		jdbcType="INTEGER"  javaType="java.math.BigDecimal"	mode="OUT" />
		<parameter property="collnAmt"		jdbcType="INTEGER"	javaType="java.math.BigDecimal"	mode="OUT" />
		<parameter property="assuredName"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="policyNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap class="map" id="updatePdcPremCollnParameterMap">
		<parameter property="premSeqNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN" />
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="intermediary"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="policyId"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT" />
		<parameter property="add1"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="add2"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="add3"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="mail"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<parameterMap class="java.util.HashMap" id="PdcPremCollnUpdateParamMap">
		<parameter property="apdcId"		jdbcType="NUMBER"	javaType="java.lang.String"		mode="IN" />
		<parameter property="pdcId"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" />
		<parameter property="premSeqNo"		jdbcType="NUMBER"	javaType="java.lang.String"		mode="IN" />
		<parameter property="updateFlag"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN" /> <!-- benjo 11.08.2016 SR-5802 -->
		<parameter property="payor"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="address1"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="address2"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="address3"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="intmNo"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="intmName"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="apdcParticulars"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
		<parameter property="pdcParticulars"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<!-- benjo 11.08.2016 SR-5802 -->
	<resultMap class="java.util.HashMap" id="getPolicyInvoicesGiacs090Map">
		<result column="tran_type"      	property="tranType" />
		<result column="tran_type_desc"     property="tranTypeDesc" />
		<result column="line_cd"      		property="lineCd" />
		<result column="subline_cd"      	property="sublineCd" />
		<result column="iss_cd"      		property="issCd" />
		<result column="prem_seq_no"        property="premSeqNo" />
		<result column="inst_no"      		property="instNo" />
		<result column="balance_amt_due"    property="collnAmt" />
		<result column="f_balance_amt_due"  property="fCurrAmt" />
		<result column="prem_balance_due"   property="premAmt" />
		<result column="tax_balance_due"    property="taxAmt" />
		<result column="assd_name"      	property="assdName" />
		<result column="policy_no"      	property="policyNo" />
		<result column="currency_cd"      	property="currCd" />
		<result column="currency_desc"      property="currDesc" />
		<result column="currency_rt"      	property="currRt" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getPackInvoicesGiacs090TGMap" extends="getPolicyInvoicesGiacs090Map">
		<result property="rowNum" 		column="rownum_"/>
		<result property="rowCount" 	column="count_"/>
	</resultMap>
	<!-- end SR-5802 -->
	
	<select id="getPostDatedChecksDtls" parameterClass="java.util.HashMap" resultMap="giacPdcPremColln2">
		SELECT /*+ NO_CPU_COSTING */ * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIAC_PDC_PREM_COLLN_PKG.get_post_dated_checks_dtls(#pdcId#))) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIAC_PDC_PREM_COLLN_PKG.get_post_dated_checks_dtls(#pdcId#))) b
		         WHERE collection_amt LIKE #filter.collnAmt#
		           AND UPPER(NVL(iss_cd, ' ')) LIKE #filter.issCd#
		           AND transaction_type LIKE #filter.tranType#) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIACPdcPremCollnListing" parameterClass="java.util.HashMap" resultMap="GIACPdcPremCollnResultMap">
		SELECT /*+ NO_CPU_COSTING */ * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIAC_PDC_PREM_COLLN_PKG.get_pdc_prem_colln_listing(#pdcId#))) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIAC_PDC_PREM_COLLN_PKG.get_pdc_prem_colln_listing(#pdcId#))) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	
	<select id="getPdcPremCollnList" parameterClass="java.lang.Integer" resultMap="giacPdcPremChildDelete">
	    SELECT pdc_id, transaction_type, iss_cd, prem_seq_no FROM (TABLE(GIAC_PDC_PREM_COLLN_PKG.get_post_dated_checks_dtls(#pdcId#)))
	</select>
	
	<procedure id="validatePremSeqNo" parameterMap="pdcPremCollnParameterMap" parameterClass="java.util.Map">
		{CALL GIAC_PDC_PREM_COLLN_PKG.validate_prem_seq_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<procedure id="getPdcPremCollnDtls" parameterMap="pdcPremCollnDtlsParameterMap">
		{CALL GIAC_PDC_PREM_COLLN_PKG.get_pdc_prem_colln_dtls(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<insert id="insertPdcPremColln" parameterClass="GIACPdcPremColln">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			GIAC_PDC_PREM_COLLN_PKG.insert_pdc_prem_colln(#pdcId#, #tranType#, #issCd#, #premSeqNo#, #instNo#, #collnAmt#,
													      #currCd#, #currRt#, #fCurrAmt#, #premAmt#, #taxAmt#, #insertTag#);
		END;
	</insert>
	
	<update id="updatePdcPremColln" parameterClass="java.util.Map">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			GIAC_PDC_PREM_COLLN_PKG.update_pdc_prem_colln(#pdcId#, #tranType#, #issCd#, #premSeqNo#, #instNo#, #collnAmt#,
													      #currCd#, #currRt#, #fCurrAmt#, #premAmt#, #taxAmt#, #insertTag#,
													      #newPremSeqNo#, #newTranType#);
		END;
	</update>
	
	<procedure id="setPdcPremColln" parameterClass="GIACPdcPremColln">
		DECLARE
		  	v_colln giac_pdc_prem_colln%ROWTYPE;
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			
			v_colln.pdc_id 			:= #pdcId#;
			v_colln.transaction_type:= #tranType#;
			v_colln.iss_cd 			:= #issCd#;
			v_colln.prem_seq_no 	:= #premSeqNo#;
			v_colln.inst_no 		:= #instNo#;
			v_colln.collection_amt 	:= #collnAmt#;
			v_colln.currency_cd 	:= #currCd#;
			v_colln.currency_rt 	:= #currRt#;
			v_colln.fcurrency_amt 	:= #fCurrAmt#;
			v_colln.premium_amt		:= #premAmt#;
			v_colln.tax_amt 		:= #taxAmt#;
			v_colln.insert_tag 		:= #insertTag#;
			
			GIAC_PDC_PREM_COLLN_PKG.set_giac_pdc_prem_colln(v_colln);
		END;
	</procedure>
	
	<delete id="deletePdcPremColln" parameterClass="java.util.Map">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			GIAC_PDC_PREM_COLLN_PKG.delete_giac_pdc_prem_colln(#pdcId#, #tranType#, #issCd#, #premSeqNo#);
		END;
	</delete>

	<delete id="delPdcPremColln" parameterClass="java.util.Map">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			GIAC_PDC_PREM_COLLN_PKG.del_giac_pdc_prem_colln(#pdcId#, #issCd#, #premSeqNo#);
		END;
	</delete>	
	
	<procedure id="fetchPremCollnUpdateValues" parameterMap="updatePdcPremCollnParameterMap">
		{CALL UPDATE_PREM_COLLN_PKG.fetch_prem_colln_update_values(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<select id="getParticulars" parameterClass="map" resultClass="java.lang.String">
		SELECT UPDATE_PREM_COLLN_PKG.get_particulars_2A(#apdcId#, #pdcId#, #itemNo#) FROM DUAL
	</select>
	
	<select id="getParticulars2" parameterClass="map" resultClass="java.lang.String">
		SELECT UPDATE_PREM_COLLN_PKG.get_particulars_2(#apdcId#, #currParticulars#) FROM DUAL
	</select>

	<procedure id="getPremCollnUpdateValues" parameterMap="PdcPremCollnUpdateParamMap">
		{CALL GIAC_PDC_PREM_COLLN_PKG.get_prem_colln_update_values(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)} <!-- benjo 11.08.2016 SR-5802 -->
	</procedure>
	
	<select id="getDatedChksDtlsTG"  resultMap="getDatedChksDtlsTGResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(giac_pdc_prem_colln_pkg.get_dated_checks_dtls(#gaccTranId#))
			          	<isEqual property="sortColumn" compareValue="b160TaxCd">
			            	ORDER BY b160_tax_cd
			          	</isEqual>
			          	<isEqual property="sortColumn" compareValue="taxName">
			            	ORDER BY tax_name
			          	</isEqual>
			          	<isEqual property="sortColumn" compareValue="taxAmt">
			            	ORDER BY tax_amt
			          	</isEqual>
			           	<isNotNull property="sortColumn">
			              	<isEqual property="ascDescFlg" compareValue="ASC">
			              		ASC
			              	</isEqual>
			              	<isEqual property="ascDescFlg" compareValue="DESC">
			              		DESC
			              	</isEqual>
			            </isNotNull>  
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(giac_pdc_prem_colln_pkg.get_dated_checks_dtls(#gaccTranId#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- benjo 11.08.2016 SR-5802 -->
	<select id="getRefPolNoGiacs090" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT giac_pdc_prem_colln_pkg.get_ref_pol_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#) FROM DUAL
	</select>
	
	<select id="validatePolicyGiacs090" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT giac_pdc_prem_colln_pkg.validate_policy(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #checkDue#) FROM DUAL
	</select>
	
	<procedure id="getPolicyInvoicesGiacs090" resultMap="getPolicyInvoicesGiacs090Map" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(giac_pdc_prem_colln_pkg.get_policy_invoices(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #checkDue#))
	</procedure>
	
	<select id="getPackInvoicesGiacs090" parameterClass="java.util.HashMap" resultMap="getPackInvoicesGiacs090TGMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (giac_pdc_prem_colln_pkg.get_pack_invoices_tg (#packLineCd#, #packSublineCd#, #packIssCd#, #packIssueYy#, #packPolSeqNo#, #packRenewNo#, #packCheckDue#))
		                  <isNotNull property="filter">
							WHERE 1=1
							<isNotEmpty prepend="AND" property="lineCd">
								UPPER(line_cd) LIKE UPPER(#lineCd#)
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="sublineCd">
								UPPER(subline_cd) LIKE UPPER(#sublineCd#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="issCd">
								UPPER(iss_cd) LIKE UPPER(#issCd#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="premSeqNo">
								UPPER(prem_seq_no) LIKE UPPER(#premSeqNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="instNo">
								UPPER(inst_no) LIKE UPPER(#instNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="collnAmt">
								UPPER(balance_amt_due) LIKE UPPER(#collnAmt#)
							</isNotEmpty>
						  </isNotNull>
			              <isNull property="sortColumn">
								ORDER BY line_cd, subline_cd, iss_cd, prem_seq_no, inst_no
						  </isNull>
						  <isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="lineCd">
									ORDER BY line_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="sublineCd">
									ORDER BY subline_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="issCd">
									ORDER BY iss_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="premSeqNo">
									ORDER BY prem_seq_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="instNo">
									ORDER BY inst_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="collnAmt">
									ORDER BY balance_amt_due
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giac_pdc_prem_colln_pkg.get_pack_invoices_tg (#packLineCd#, #packSublineCd#, #packIssCd#, #packIssueYy#, #packPolSeqNo#, #packRenewNo#, #packCheckDue#))
		                  <isNotNull property="filter">
							WHERE 1=1
							<isNotEmpty prepend="AND" property="lineCd">
								UPPER(line_cd) LIKE UPPER(#lineCd#)
							</isNotEmpty>	
							<isNotEmpty prepend="AND" property="sublineCd">
								UPPER(subline_cd) LIKE UPPER(#sublineCd#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="issCd">
								UPPER(iss_cd) LIKE UPPER(#issCd#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="premSeqNo">
								UPPER(prem_seq_no) LIKE UPPER(#premSeqNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="instNo">
								UPPER(inst_no) LIKE UPPER(#instNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND" property="collnAmt">
								UPPER(balance_amt_due) LIKE UPPER(#collnAmt#)
							</isNotEmpty>
						  </isNotNull>
		                  ) b) 
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- end SR-5802 -->

</sqlMap>