<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIACBatchCheck">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<resultMap class="java.util.HashMap" id="prevExtractResultMap">
		<result property="fromDate"		column="from_date"/>
		<result property="toDate"		column="vto_date"/>
		<result property="dateTag"		column="date_tag"/>
		<result property="vExists"		column="v_exists"/>
	</resultMap>

	<resultMap class="java.util.HashMap" id="mainTablesResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd" 		column="line_cd"/>
		<result property="lineName" 	column="line_name"/>
		<result property="glAcctSname" 	column="gl_acct_sname"/>
		<result property="premAmt" 		column="prem_amt"/>
		<result property="balance" 		column="balance"/>
		<result property="difference"	column="difference"/>
		<result property="baseAmt"		column="base_amt"/>
		<result property="premAmtTotal"		column="prem_amt_tot"/>
		<result property="balanceTotal"	column="balance_tot"/>
		<result property="differenceTotal"	column="difference_tot"/>
		
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="grossDtlResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyNo" 	column="policy_no"/>
		<result property="polFlag" 		column="pol_flag"/>
		<result property="uwAmount" 	column="uw_amount"/>
		<result property="glAmount" 	column="gl_amount"/>
		<result property="difference" 	column="difference"/>
		<result property="uwAmtTotal" 	column="uw_amount_tot"/>
		<result property="glTotal"		column="gl_amount_tot"/>
		<result property="diffTotal" 	column="difference_tot"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="faculDtlResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyNo" 	column="policy_no"/>
		<result property="binderNo"		column="binder_no"/>
		<result property="uwAmount" 	column="uw_amount"/>
		<result property="glAmount" 	column="gl_amount"/>
		<result property="difference" 	column="difference"/>
		<result property="uwAmtTotal" 	column="uw_amount_tot"/>
		<result property="glTotal"		column="gl_amount_tot"/>
		<result property="diffTotal" 	column="difference_tot"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="treatyDtlResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyNo" 	column="policy_no"/>
		<result property="distNo" 		column="dist_no"/>
		<result property="uwAmount" 	column="uw_amount"/>
		<result property="glAmount" 	column="gl_amount"/>
		<result property="difference" 	column="difference"/>
		<result property="uwAmtTotal" 	column="uw_amount_tot"/>
		<result property="glTotal"		column="gl_amount_tot"/>
		<result property="diffTotal" 	column="difference_tot"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="claimDtlResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="claimNo" 		column="claim_no"/>
		<result property="itemNo" 		column="item_no"/>
		<result property="perilName" 	column="peril_name"/>
		<result property="brdrxAmt" 	column="brdrx_amt"/>
		<result property="glAmount" 	column="gl_amount"/>
		<result property="difference" 	column="difference"/>
		<result property="brdrxTotal" 	column="brdrx_amt_tot"/>
		<result property="glTotal" 		column="gl_amount_tot"/>
		<result property="diffTotal" 	column="difference_tot"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="claimTabResultMap" extends="BaseEntity.TableGridResultMap">
        <result property="lineCd"		column="line_cd"/>
        <result property="lineName" 	column="line_name"/>
        <result property="glAcctSname" 	column="gl_acct_sname"/>
        <result property="brdrxAmt"		column="brdrx_amt"/>
        <result property="balance"		column="balance"/>
        <result property="fromDate"		column="from_date"/>
        <result property="toDate"		column="to_date"/>
        <result property="userId"		column="user_id"/>
        <result property="dateTag"		column="date_tag"/>
        <result property="baseAmt"		column="base_amt"/>
        <result property="difference"	column="difference"/>
        <result property="premAmtTotal"	column="brdrx_tot"/>
        <result property="balanceTotal"	column="balance_tot"/>
        <result property="differenceTotal"	column="difference_tot"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="netResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd"		column="line_cd"/>
		<result property="lineName" 	column="line_name"/>
		<result property="grossAmt"		column="gross_amt"/>
		<result property="faculAmt"		column="facul_amt"/>
		<result property="treatyAmt" 	column="treaty_amt"/>
		<result property="difference" 	column="difference"/>
		<result property="grossTotal" 	column="gross_total"/>
		<result property="faculTotal" 	column="facul_total"/>
		<result property="treatyTotal" 	column="treaty_total"/>
		<result property="diffTotal" 	column="diff_total"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="totalNetResultMap">
		<result property="grossAmtTotal"	column="gross_amt"/>
		<result property="faculAmtTotal"	column="facul_amt"/>
		<result property="treatyAmtTotal" 	column="treaty_amt"/>
		<result property="differenceTotal" 	column="difference"/>
	</resultMap>

	<resultMap class="java.util.HashMap" id="totalResultMap">
		<result property="premAmtTotal"		column="prem_amt"/>
		<result property="balanceTotal"		column="balance"/>
		<result property="differenceTotal" 	column="difference"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="totalDetailResultMap">
		<result property="premAmtTotal"		column="prem_amt"/>
	</resultMap>
		
	<parameterMap class="java.util.HashMap" id="extractParametersMap">
		<parameter property="appUser"	jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>
		<parameter property="fromDate"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="toDate"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="dateTag"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="batchType"	jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>
		<parameter property="tab"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="userId"	jdbcType="VARCHAR"	javaType="java.lang.String" mode="IN"/>
		<parameter property="message"	jdbcType="VARCHAR"	javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<select id="getPrevExtractParams" resultMap="prevExtractResultMap">
  		SELECT * FROM TABLE(giacs354_web_pkg.check_prev_extract(#batchType#, #appUser#))
  	</select>  	
	
	<select id="getGross" resultMap="mainTablesResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_gross(#fromDate#, #toDate#, #dateTag#, #userId#, #lineName#, #glAcctSname#, #premAmt#, #balance#, #difference#))
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isEqual property="sortColumn" compareValue="glAcctSname">
			              		ORDER BY gl_acct_sname
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="premAmt">
			              		ORDER BY prem_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="balance">
			              		ORDER BY balance
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_gross(#fromDate#, #toDate#, #dateTag#, #userId#, #lineName#, #glAcctSname#, #premAmt#, #balance#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	

	<select id="getGrossDtl" resultMap="grossDtlResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_gross_dtl(#lineCd#, #baseAmt#, #userId#, #policyNo#, #polFlag#, #uwAmount#, #glAmount#, #difference#))
			              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="polFlag">
			              		ORDER BY pol_flag
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="uwAmount">
			              		ORDER BY uw_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="glAmount">
			              		ORDER BY gl_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_gross_dtl(#lineCd#, #baseAmt#, #userId#, #policyNo#, #polFlag#, #uwAmount#, #glAmount#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	
	<select id="getFacul" resultMap="mainTablesResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_facul(#fromDate#, #toDate#, #dateTag#, #userId#, #lineName#, #glAcctSname#, #premAmt#, #balance#, #difference#))
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isEqual property="sortColumn" compareValue="glAcctSname">
			              		ORDER BY gl_acct_sname
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="premAmt">
			              		ORDER BY prem_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="balance">
			              		ORDER BY balance
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_facul(#fromDate#, #toDate#, #dateTag#, #userId#, #lineName#, #glAcctSname#, #premAmt#, #balance#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
		
	<select id="getFaculDtl" resultMap="faculDtlResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_facul_dtl(#lineCd#, #baseAmt#, #userId#, #policyNo#, #binderNo#, #uwAmount#, #glAmount#, #difference#))
			              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="binderNo">
			              		ORDER BY binder_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="uwAmount">
			              		ORDER BY uw_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="glAmount">
			              		ORDER BY gl_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_facul_dtl(#lineCd#, #baseAmt#, #userId#, #policyNo#, #binderNo#, #uwAmount#, #glAmount#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>			

	<select id="getTreaty" resultMap="mainTablesResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_treaty(#fromDate#, #toDate#, #dateTag#, #userId#, #lineName#, #glAcctSname#, #premAmt#, #balance#, #difference#))
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isEqual property="sortColumn" compareValue="glAcctSname">
			              		ORDER BY gl_acct_sname
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="premAmt">
			              		ORDER BY prem_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="balance">
			              		ORDER BY balance
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_treaty(#fromDate#, #toDate#, #dateTag#, #userId#, #lineName#, #glAcctSname#, #premAmt#, #balance#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>		

	<select id="getTreatyDtl" resultMap="treatyDtlResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_treaty_dtl(#lineCd#, #baseAmt#, #userId#, #policyNo#, #distNo#, #uwAmount#, #glAmount#, #difference#))
			              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="distNo">
			              		ORDER BY dist_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="uwAmount">
			              		ORDER BY uw_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="glAmount">
			              		ORDER BY gl_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_treaty_dtl(#lineCd#, #baseAmt#, #userId#, #policyNo#, #distNo#, #uwAmount#, #glAmount#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getNet" resultMap="netResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_net(#userId#, #lineName#))
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="grossAmt">
			              		ORDER BY gross_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="faculAmt">
			              		ORDER BY facul_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="treatyAmt">
			              		ORDER BY treaty_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_net(#userId#, #lineName#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getTotalNet" resultMap="totalNetResultMap">
	    SELECT SUM(gross_amt) gross_amt,SUM(facul_amt) facul_amt,SUM(treaty_amt) treaty_amt,SUM(difference) difference FROM TABLE(giacs354_web_pkg.get_net)
	</select>	

	<select id="getTotalGross" resultMap="totalResultMap">
	   SELECT SUM(prem_amt) prem_amt, SUM(balance) balance, SUM(difference) difference FROM TABLE(giacs354_web_pkg.get_gross(#fromDate#, #toDate#, #dateTag#, #userId#))
	</select>				
	
	<select id="getTotalFacul" resultMap="totalResultMap">
	   SELECT SUM(prem_amt) prem_amt, SUM(balance) balance, SUM(difference) difference FROM TABLE(giacs354_web_pkg.get_facul(#fromDate#, #toDate#, #dateTag#, #userId#))
	</select>	
	
	<select id="getTotalTreaty" resultMap="totalResultMap">
	   SELECT SUM(prem_amt) prem_amt, SUM(balance) balance, SUM(difference) difference FROM TABLE(giacs354_web_pkg.get_treaty(#fromDate#, #toDate#, #dateTag#, #userId#))
	</select>
	
	<select id="getTotalGrossDtl" resultMap="totalDetailResultMap">
	    SELECT SUM(uw_amount) prem_amt FROM TABLE(giacs354_web_pkg.get_gross_dtl(#lineCd#, #baseAmt#, #userId#))
	</select>	

	<select id="getTotalFaculDtl" resultMap="totalDetailResultMap">
	    SELECT SUM(prem_amt) prem_amt FROM TABLE(giacs354_web_pkg.get_facul_dtl(#lineCd#))
	</select>	
	
	<select id="getTotalTreatyDtl" resultMap="totalDetailResultMap">
	    SELECT SUM(prem_amt) prem_amt FROM TABLE(giacs354_web_pkg.get_treaty_dtl(#lineCd#))
	</select>
	
	<select id="getTotalOutstandingDtl" resultMap="totalDetailResultMap">
	    SELECT SUM(prem_amt) prem_amt FROM TABLE(giacs354_web_pkg.get_treaty_dtl(#lineCd#))
	</select>
	
	<select id="getTotalPaidDtl" resultMap="totalDetailResultMap">
	    SELECT SUM(prem_amt) prem_amt FROM TABLE(giacs354_web_pkg.get_treaty_dtl(#lineCd#))
	</select>
	
	<select id="getOutstandingTab" resultMap="claimTabResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_os_loss(#userId#, #lineName#, #glAcctSname#, #brdrxAmt#, #balance#, #difference#))
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isEqual property="sortColumn" compareValue="glAcctSname">
			              		ORDER BY gl_acct_sname
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="brdrxAmt">
			              		ORDER BY brdrx_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="balance">
			              		ORDER BY balance
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_os_loss(#userId#, #lineName#, #glAcctSname#, #brdrxAmt#, #balance#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPaidTab" resultMap="claimTabResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_losses_paid(#userId#, #lineName#, #glAcctSname#, #brdrxAmt#, #balance#, #difference#))
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isEqual property="sortColumn" compareValue="glAcctSname">
			              		ORDER BY gl_acct_sname
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="brdrxAmt">
			              		ORDER BY brdrx_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="balance">
			              		ORDER BY balance
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_losses_paid(#userId#, #lineName#, #glAcctSname#, #brdrxAmt#, #balance#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getOutstandingDtl" resultMap="claimDtlResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_os_loss_dtl(#lineCd#, #baseAmt#, #userId#, #claimNo#, #itemNo#, #perilName#, #brdrxAmt#, #glAmount#, #difference#))
			              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="perilName">
			              		ORDER BY peril_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="brdrxAmt">
			              		ORDER BY brdrx_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="glAmount">
			              		ORDER BY gl_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_os_loss_dtl(#lineCd#, #baseAmt#, #userId#, #claimNo#, #itemNo#, #perilName#, #brdrxAmt#, #glAmount#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPaidDtl" resultMap="claimDtlResultMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(giacs354_web_pkg.get_losses_paid_dtl(#lineCd#, #baseAmt#, #userId#, #claimNo#, #itemNo#, #perilName#, #brdrxAmt#, #glAmount#, #difference#))
			              <isEqual property="sortColumn" compareValue="claimNo">
			              		ORDER BY claim_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="perilName">
			              		ORDER BY peril_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="brdrxAmt">
			              		ORDER BY brdrx_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="glAmount">
			              		ORDER BY gl_amount
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="difference">
			              		ORDER BY difference
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>		                  
							) a,
						(SELECT count(*) count_ 
							FROM TABLE(giacs354_web_pkg.get_losses_paid_dtl(#lineCd#, #baseAmt#, #userId#, #claimNo#, #itemNo#, #perilName#, #brdrxAmt#, #glAmount#, #difference#))
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getTotalOutstanding" resultMap="totalResultMap">
	   SELECT SUM(brdrx_amt) prem_amt, SUM(balance) balance, SUM(difference) difference FROM TABLE(giacs354_web_pkg.get_os_loss(#userId#))
	</select>
	
	<select id="getTotalPaid" resultMap="totalResultMap">
	   SELECT SUM(brdrx_amt) prem_amt, SUM(balance) balance, SUM(difference) difference FROM TABLE(giacs354_web_pkg.get_losses_paid(#userId#))
	</select>
	
	<procedure id="extractBatchChecking" parameterMap="extractParametersMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			giacs354_web_pkg.extract_records(?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<procedure id="checkBatchRecords" parameterClass="java.util.HashMap">
		BEGIN
			giacs354_web_pkg.check_records(#batchType#, #fromDate#, #toDate#, #userId#);
		END;
	</procedure>
	
	<procedure id="checkDetails" parameterClass="java.util.HashMap">
		BEGIN
			giacs354_web_pkg.check_details(#lineCd#, #baseAmt#, #userId#, #table#);
		END;
	</procedure>
</sqlMap>