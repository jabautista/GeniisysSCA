<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIISSplOverrideRt">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>
	
	<typeAlias alias="GIISSplOverrideRt" type="com.geniisys.common.entity.GIISSplOverrideRt"/>
	
	<resultMap class="java.util.HashMap" id="giiss202IssLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="iss_cd"			property="issCd"/>
		<result column="iss_name"		property="issName"/>
	</resultMap>
	
	<select id="getGiiss202IssLov" resultMap="giiss202IssLovResultMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIISS202_PKG.get_iss_lov(#lineCd#, #userId#))
          		  <isNotNull property="findText">
				  	WHERE 1=1
		  			<isNotEmpty prepend="AND"  property="findText">
		  				UPPER(iss_cd) LIKE UPPER(#findText#)
		  				OR UPPER(iss_name) LIKE UPPER(#findText#)
		  			</isNotEmpty>
				  </isNotNull>
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="issCd">
						ORDER BY iss_cd
					</isEqual>
					<isEqual property="sortColumn" compareValue="issName">
						ORDER BY iss_name
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(GIISS202_PKG.get_iss_lov(#lineCd#, #userId#))
             	<isNotNull property="findText">
			  	WHERE 1=1
	  			<isNotEmpty prepend="AND"  property="findText">
	  				UPPER(iss_cd) LIKE UPPER(#findText#)
	  				OR UPPER(iss_name) LIKE UPPER(#findText#)
	  			</isNotEmpty>
			  </isNotNull>
               ) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss202CopyIssLov" resultMap="giiss202IssLovResultMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIISS202_PKG.get_cpoy_iss_lov)
          		  <isNotNull property="findText">
				  	WHERE 1=1
		  			<isNotEmpty prepend="AND"  property="findText">
		  				UPPER(iss_cd) LIKE UPPER(#findText#)
		  				OR UPPER(iss_name) LIKE UPPER(#findText#)
		  			</isNotEmpty>
				  </isNotNull>
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="issCd">
						ORDER BY iss_cd
					</isEqual>
					<isEqual property="sortColumn" compareValue="issName">
						ORDER BY iss_name
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(GIISS202_PKG.get_cpoy_iss_lov)
             	<isNotNull property="findText">
			  	WHERE 1=1
	  			<isNotEmpty prepend="AND"  property="findText">
	  				UPPER(iss_cd) LIKE UPPER(#findText#)
	  				OR UPPER(iss_name) LIKE UPPER(#findText#)
	  			</isNotEmpty>
			  </isNotNull>
               ) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss202LineLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"			property="lineCd"/>
		<result column="line_name"		property="lineName"/>
	</resultMap>
	
	<select id="getGiiss202LineLov" resultMap="giiss202LineLovResultMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIISS202_PKG.get_line_lov(#issCd#, #userId#))
          		  <isNotNull property="findText">
				  	WHERE 1=1
		  			<isNotEmpty prepend="AND"  property="findText">
		  				UPPER(line_cd) LIKE UPPER(#findText#)
		  				OR UPPER(line_name) LIKE UPPER(#findText#)
		  			</isNotEmpty>
				  </isNotNull>
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="lineCd">
						ORDER BY line_cd
					</isEqual>
					<isEqual property="sortColumn" compareValue="lineName">
						ORDER BY line_name
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(GIISS202_PKG.get_line_lov(#issCd#, #userId#))
             	<isNotNull property="findText">
			  	WHERE 1=1
	  			<isNotEmpty prepend="AND"  property="findText">
	  				UPPER(line_cd) LIKE UPPER(#findText#)
	  				OR UPPER(line_name) LIKE UPPER(#findText#)
	  			</isNotEmpty>
			  </isNotNull>
               ) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss202SublineLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="subline_cd"			property="sublineCd"/>
		<result column="subline_name"		property="sublineName"/>
	</resultMap>
	
	<select id="getGiiss202SublineLov" resultMap="giiss202SublineLovResultMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIISS202_PKG.get_subline_lov(#lineCd#, #userId#))
          		  <isNotNull property="findText">
				  	WHERE 1=1
		  			<isNotEmpty prepend="AND"  property="findText">
		  				UPPER(subline_cd) LIKE UPPER(#findText#)
		  				OR UPPER(subline_name) LIKE UPPER(#findText#)
		  			</isNotEmpty>
				  </isNotNull>
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="sublineCd">
						ORDER BY subline_cd
					</isEqual>
					<isEqual property="sortColumn" compareValue="sublineName">
						ORDER BY subline_name
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(GIISS202_PKG.get_subline_lov(#lineCd#, #userId#))
             	<isNotNull property="findText">
			  	WHERE 1=1
	  			<isNotEmpty prepend="AND"  property="findText">
	  				UPPER(subline_cd) LIKE UPPER(#findText#)
	  				OR UPPER(subline_name) LIKE UPPER(#findText#)
	  			</isNotEmpty>
			  </isNotNull>
               ) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss202RecListResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="iss_cd" property="issCd" />
		<result column="intm_no" property="intmNo" />
		<result column="line_cd" property="lineCd" />
		<result column="subline_cd" property="sublineCd" />
		<result column="peril_cd" property="perilCd" />
		<result column="peril_name" property="perilName" />
		<result column="comm_rate" property="commRate" />
		<result column="user_id" property="userId" />
		<result column="last_update" property="lastUpdate" />
		<result column="remarks" property="remarks" />
	</resultMap>
	
	<select id="getGiiss202RecList" resultMap="giiss202RecListResultMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIISS202_PKG.get_rec_list(#issCd#, #intmNo#, #lineCd#, #sublineCd#))
          		  <isNotNull property="filter">
			      	WHERE 1=1
           			<isNotEmpty prepend="AND" property="perilName">
           			  UPPER(peril_name) LIKE UPPER(#perilName#)
           			</isNotEmpty>
           			<isNotEmpty prepend="AND" property="commRate">
           			  comm_rate = #commRate#
           			</isNotEmpty>
                  </isNotNull>
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="perilName">
						ORDER BY peril_name
					</isEqual>
					<isEqual property="sortColumn" compareValue="commRate">
						ORDER BY comm_rate
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(GIISS202_PKG.get_rec_list(#issCd#, #intmNo#, #lineCd#, #sublineCd#))
             	<isNotNull property="filter">
			      	WHERE 1=1
           			<isNotEmpty prepend="AND" property="perilName">
           			  UPPER(peril_name) LIKE UPPER(#perilName#)
           			</isNotEmpty>
           			<isNotEmpty prepend="AND" property="commRate">
           			  comm_rate = #commRate#
           			</isNotEmpty>
                  </isNotNull>
               ) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss202PerilLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="peril_cd" property="perilCd" />
		<result column="peril_name" property="perilName" />
		<result column="peril_meaning" property="perilMeaning" />
	</resultMap>
	
	<select id="getGiiss202PerilLov" resultMap="giiss202PerilLovResultMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIISS202_PKG.get_peril_lov(#lineCd#, #selectedPeril#))
				  WHERE peril_cd NOT IN $selectedPeril$
				  <isNotNull property="findText">
		  			<isNotEmpty prepend="AND"  property="findText">
		  				(TO_CHAR(peril_cd) LIKE #findText#
		  				OR UPPER(peril_name) LIKE UPPER(#findText#))
		  			</isNotEmpty>
				  </isNotNull>
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="perilName">
						ORDER BY peril_name
					</isEqual>
					<isEqual property="sortColumn" compareValue="perilMeaning">
						ORDER BY peril_meaning
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(GIISS202_PKG.get_peril_lov(#lineCd#, #selectedPerils#))
               WHERE peril_cd NOT IN $selectedPeril$
               <isNotNull property="findText">
		  			<isNotEmpty prepend="AND"  property="findText">
		  				(TO_CHAR(peril_cd) LIKE #findText#
		  				OR UPPER(peril_name) LIKE UPPER(#findText#))
		  			</isNotEmpty>
				  </isNotNull>
               ) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss202SelectedPerils" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT giiss202_pkg.get_selected_perils(#issCd#, #intmNo#, #lineCd#, #sublineCd#) from DUAL
	</select>
	
	<procedure id="setGiiss202" parameterClass="GIISSplOverrideRt">
	    DECLARE
	    	v_rec giis_spl_override_rt%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
 			
 			v_rec.intm_no := #intmNo#;
			v_rec.iss_cd := #issCd#;
			v_rec.line_cd := #lineCd#;
			v_rec.subline_cd := #sublineCd#;
			v_rec.peril_cd := #perilCd#;
			v_rec.comm_rate := #commRate#;
			v_rec.user_id := #userId#;
			v_rec.last_update := #lastUpdate#;
			v_rec.remarks := #remarks#;
 			
 			giiss202_pkg.set_rec(v_rec);
 		END;
 	</procedure>
 	
 	<delete id="delGiiss202" parameterClass="GIISSplOverrideRt">
		BEGIN
 			giiss202_pkg.del_rec(#issCd#, #intmNo#, #lineCd#, #sublineCd#, #perilCd#);
 		END;
 	</delete>
 	
 	<delete id="populateGiiss202" parameterClass="java.util.HashMap">
		BEGIN
 			giiss202_pkg.populate(#issCd#, #intmNo#, #lineCd#, #sublineCd#, #userId#);
 		END;
 	</delete>
 	
 	<delete id="copyGiiss202" parameterClass="java.util.HashMap">
		BEGIN
 			giiss202_pkg.copy(#intmNoFrom#, #issCdFrom#, #intmNoTo#,
							  #issCdTo#, #lineCd#, #sublineCd#, #userId#);
 		END;
 	</delete>
 	
 	<resultMap class="java.util.HashMap" id="giiss202HistoryResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="iss_cd" property="issCd" />
		<result column="intm_no" property="intmNo" />
		<result column="line_cd" property="lineCd" />
		<result column="subline_cd" property="sublineCd" />
		<result column="peril_cd" property="perilCd" />
		<result column="peril_name" property="perilName" />
		<result column="old_comm_rate" property="oldCommRate" />
		<result column="new_comm_rate" property="newCommRate" />
		<result column="eff_date" property="effDate" />
		<result column="expiry_date" property="expiryDate" />
	</resultMap>
	
	<select id="getGiiss202History" resultMap="giiss202HistoryResultMap" parameterClass="java.util.HashMap"> 		 
 		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(GIISS202_PKG.get_history(#issCd#, #intmNo#, #lineCd#, #sublineCd#, #oldCommRate#, #newCommRate#))
						WHERE 1 = 1
						  <isNotNull property="perilName">
		                	    AND UPPER(peril_name) LIKE UPPER(#perilName#)
		                  </isNotNull>
		                  <isNotNull property="effDate">
		                	    AND eff_date = #effDate#
		                  </isNotNull>
		                  <isNotNull property="expiryDate">
		                	    AND expiry_date = #expiryDate#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="effDate">
			              		ORDER BY eff_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expiryDate">
			              		ORDER BY expiry_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="perilName">
			              		ORDER BY peril_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="oldCommRate">
			              		ORDER BY old_comm_rate
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="newCommRate">
			              		ORDER BY new_comm_rate
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIISS202_PKG.get_history(#issCd#, #intmNo#, #lineCd#, #sublineCd#, #oldCommRate#, #newCommRate#))
						WHERE 1 = 1
						  <isNotNull property="perilName">
		                	    AND UPPER(peril_name) LIKE UPPER(#perilName#)
		                  </isNotNull>
		                  <isNotNull property="effDate">
		                	    AND eff_date = #effDate#
		                  </isNotNull>
		                  <isNotNull property="expiryDate">
		                	    AND expiry_date = #expiryDate#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
</sqlMap>