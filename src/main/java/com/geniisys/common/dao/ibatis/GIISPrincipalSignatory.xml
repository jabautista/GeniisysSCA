<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIISPrincipalSignatory">
	<typeAlias alias="GIISPrincipalSignatory" type="com.geniisys.common.entity.GIISPrincipalSignatory"/>
	
	<resultMap class="java.lang.Integer" id="getPrincipalSignatoriesIDsMap">
		<result column="prin_id" property="prinId"/>
	</resultMap>
	<resultMap class="GIISPrincipalSignatory" id="GIISPrincipalSignatoryMap"  extends="BaseEntity.TableGridResultMap">
		<result property="prinSignor"		column="prin_signor"/>
		<result property="designation"		column="designation"/>
		<result property="prinId"			column="prin_id"/>
		<result property="resCert"			column="res_cert"/>
		<result property="issueDate"		column="issue_date"/>
		<result property="issuePlace"		column="issue_place"/>
		<result property="remarks"			column="remarks"/>
		<result property="userId"			column="user_id"/>
		<result property="lastUpdate"		column="last_update"/>
		<result property="address"			column="address"/>
		<result property="controlTypeCd"	column="control_type_cd" />
		<result property="controlTypeDesc"	column="control_type_desc" />
		<result property="bondSw"			column="bond_sw" />
		<result property="indemSw"			column="indem_sw" />
		<result property="ackSw"			column="ack_sw" />
		<result property="certSw"			column="cert_sw" />
		<result property="riSw"				column="ri_sw" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GIISPrincipalSignatoryMap2"  extends="GIISPrincipalSignatoryMap">
		<result property="dummyPrinId"			column="prin_id"/>
	</resultMap>
	
	<select id="getPrincipalSignatories" resultMap="GIISPrincipalSignatoryMap2">
		SELECT *
		  FROM (SELECT a.*, b.count_, ROWNUM rownum_
		          FROM (SELECT *
		                  FROM TABLE
		                          (giis_prin_signtry_pkg.get_principal_signatories
		                                                                        (#assdNo#)
		                          )
		                          <isNotNull property="filter">
										WHERE 1=1
										<isNotEmpty prepend="AND"  property="prinId">
											upper(prin_id) LIKE upper(#prinId#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="prinSignor">
											upper(prin_signor) LIKE upper(#prinSignor#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="designation">
											upper(designation) LIKE upper(#designation#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="resCert">
											upper(res_cert) LIKE upper(#resCert#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="issueDate">
											issue_date LIKE #issueDate#
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="issuePlace">
											upper(issue_place) LIKE upper(#issuePlace#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="address">
											upper(address) LIKE upper(#address#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="controlTypeDesc">
											upper(control_type_desc) LIKE upper(#controlTypeDesc#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="bondSw">
											upper(bond_sw) LIKE upper(#bondSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="indemSw">
											upper(indem_sw) LIKE upper(#indemSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="ackSw">
											upper(ack_sw) LIKE upper(#ackSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="certSw">
											upper(cert_sw) LIKE upper(#certSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="riSw">
											upper(ri_sw) LIKE upper(#riSw#)
										</isNotEmpty>
									</isNotNull>
		                          <isEqual property="sortColumn" compareValue="prinId">
					              		ORDER BY prin_id
					              </isEqual>
		                          <isEqual property="sortColumn" compareValue="prinSignor">
					              		ORDER BY prin_signor
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="designation">
					              		ORDER BY designation
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="resCert">
					              		ORDER BY res_cert
					              </isEqual>
					               <isEqual property="sortColumn" compareValue="issueDate">
					              		ORDER BY issue_Date
					              </isEqual>	
					               <isEqual property="sortColumn" compareValue="issuePlace">
					              		ORDER BY issue_Place
					              </isEqual>	
					               <isEqual property="sortColumn" compareValue="controlTypeDesc">
					              		ORDER BY control_type_desc
					              </isEqual>
					               <isEqual property="sortColumn" compareValue="address">
					              		ORDER BY address
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="bondSw">
					              		ORDER BY bond_sw
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="indemSw">
					              		ORDER BY indem_sw
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="ackSw">
					              		ORDER BY ack_sw
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="certSw">
					              		ORDER BY cert_sw
					              </isEqual>
					              <isEqual property="sortColumn" compareValue="riSw">
					              		ORDER BY ri_sw
					              </isEqual>
					              <isNotNull property="sortColumn">
					              		<isEqual property="ascDescFlg" compareValue="ASC">
					              			ASC
					              		</isEqual>
					              		<isEqual property="ascDescFlg" compareValue="DESC">
					              			DESC
					              		</isEqual>
					              </isNotNull>
		                          ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE
		                          (giis_prin_signtry_pkg.get_principal_signatories
		                                                                        (#assdNo#)
		                          )
		                          <isNotNull property="filter">
										WHERE 1=1
										<isNotEmpty prepend="AND"  property="prinId">
											upper(prin_id) LIKE upper(#prinId#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="prinSignor">
											upper(prin_signor) LIKE upper(#prinSignor#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="designation">
											upper(designation) LIKE upper(#designation#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="resCert">
											upper(res_cert) LIKE upper(#resCert#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="issueDate">
											issue_date LIKE #issueDate#
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="issuePlace">
											upper(issue_place) LIKE upper(#issuePlace#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="address">
											upper(address) LIKE upper(#address#) 
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="controlTypeDesc">
											upper(control_type_desc) LIKE upper(#controlTypeDesc#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="bondSw">
											upper(bond_sw) LIKE upper(#bondSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="indemSw">
											upper(indem_sw) LIKE upper(#indemSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="ackSw">
											upper(ack_sw) LIKE upper(#ackSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="certSw">
											upper(cert_sw) LIKE upper(#certSw#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="riSw">
											upper(ri_sw) LIKE upper(#riSw#)
										</isNotEmpty>
									</isNotNull>
		                          ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPrincipalSignatoryIDList" parameterClass="java.lang.Integer" resultMap="getPrincipalSignatoriesIDsMap">
	SELECT prin_id
	   FROM TABLE (giis_prin_signtry_pkg.get_principal_signatories(#assdNo#))
	</select>
	
	<select id="validatePrincipalId" parameterClass="java.util.Map" resultClass="String">
		select count(*) cosign_name from GIIS_COSIGNOR_RES 
		 where cosign_name = #id# 
		   and assd_no = #assdNo#  <!-- added by Halley 10.07.13 -->
	</select>
	
	<select id="validateCTCNo" resultClass="String" parameterClass="String">
		SELECT giis_prin_signtry_pkg.validate_ctc_no(#ctcNo#) FROM DUAL
	</select>
	
	<select id="validateCTCNo2" resultClass="String" parameterClass="java.util.Map">
		SELECT giis_prin_signtry_pkg.validate_ctc_no2(#ID1#,#ID2#,#CTCNo1#,#CTCNo2#) FROM DUAL
	</select>
	<!--<parameterMap class="map" id="saveGIISPrincipalSignatoryMap"></parameterMap>
	-->
	<procedure id="saveGIISPrincipalSignatory" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
			giis_prin_signtry_pkg.set_principal_signatory (
								    #prinSignor#,
								    #designation#,
								    #prinId#,
								    #resCert#,
								    #issuePlace#,
								    to_date(#issueDate#,'MM-DD-YYYY'),
								    #userId#,
								    #remarks#,
								    #address#,
								    #assdNo#,
								    #controlTypeCd#,
								    #bondSw#,
								    #indemSw#,
								    #ackSw#,
								    #certSw#,
								    #riSw#);
		END;
	</procedure>
	
<!-- 	added by steven 05.23.2014 -->
	<resultMap id="getControlTypeLOVMap"	class="java.util.HashMap"  extends="BaseEntity.TableGridResultMap">
		<result column="CONTROL_TYPE_CD"	property="controlTypeCd" />
		<result column="CONTROL_TYPE_DESC"	property="controlTypeDesc" />
	</resultMap>
	
	<resultMap id="giiss022PrincipalMap"	class="java.util.HashMap"  extends="BaseEntity.TableGridResultMap">
		<result column="assd_name"				property="assdName" />
		<result column="assd_no"				property="assdNo" />
		<result column="mail_addr1"				property="mailAddr1" />
		<result column="mail_addr2"				property="mailAddr2" />
		<result column="mail_addr3"				property="mailAddr3" />
		<result column="designation"			property="designation" />
		<result column="active_tag"				property="activeTag" />
		<result column="user_id"				property="userId" />
		<result column="industry_nm"			property="indutryNm" />
		<result column="industry_cd"			property="industryCd" />
		<result column="birthdate"				property="birthDate" />
		<result column="corp_tag"				property="cordTag" />
		<result column="control_type_cd"		property="controlTypeCd" />
		<result column="control_type_desc"		property="controlTypeDesc" />
		<result column="principal_res_no"		property="principalResNo" />
		<result column="principal_res_date"		property="principalResDate" />
		<result column="principal_res_place"	property="principalResPlace" />
		<result column="def_control_type_cd"  	property="defControlTypeCd"/>
		<result column="def_control_type_desc"  property="defControlTypeDesc"/>
	</resultMap>
	
	<select id="getGiiss022ControlTypeLOV" resultMap="getControlTypeLOVMap">
		SELECT *
			FROM (SELECT rownum rownum_,
			b.count_,
			a.*
			FROM (SELECT *
				FROM TABLE(giis_prin_signtry_pkg.get_control_type_lov(#findText#))
			<isNotNull property="sortColumn">
				<isEqual property="sortColumn" compareValue="controlTypeCd">
					ORDER BY control_type_cd
				</isEqual>
				<isEqual property="sortColumn" compareValue="controlTypeDesc">
					ORDER BY control_type_desc
				</isEqual>
				<isEqual property="ascDescFlg" compareValue="ASC">
					ASC
				</isEqual>
				<isEqual property="ascDescFlg" compareValue="DESC">
					DESC
				</isEqual>
			</isNotNull>
			) a,
			(SELECT count(*) count_
				FROM TABLE(giis_prin_signtry_pkg.get_control_type_lov(#findText#))
			) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss022Principal" resultMap="giiss022PrincipalMap">
		SELECT *
		  FROM (SELECT a.*, 
		               b.count_, 
		               ROWNUM rownum_
		          FROM (SELECT *
		                  FROM TABLE (giis_prin_signtry_pkg.get_assured(#assdNo#))
		                          	<isNotNull property="filter">
										WHERE 1=1
										<isNotEmpty prepend="AND"  property="assdName">
											assd_name LIKE upper(#assdName#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="controlTypeDesc">
											control_type_desc LIKE upper(#controlTypeDesc#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="principalResNo">
											principal_res_no LIKE upper(#principalResNo#)
										</isNotEmpty>
									</isNotNull>
			                        <isEqual property="sortColumn" compareValue="assdName">
						              		ORDER BY assd_name
						            </isEqual>
						             <isEqual property="sortColumn" compareValue="controlTypeDesc">
						              		ORDER BY control_type_desc
						            </isEqual>
						             <isEqual property="sortColumn" compareValue="principalResNo">
						              		ORDER BY principal_res_no
						            </isEqual>
					                <isNotNull property="sortColumn">
					              		<isEqual property="ascDescFlg" compareValue="ASC">
					              			ASC
					              		</isEqual>
					              		<isEqual property="ascDescFlg" compareValue="DESC">
					              			DESC
					              		</isEqual>
					                </isNotNull>
		                          ) a,
		               (SELECT COUNT (*) count_
		                  FROM TABLE (giis_prin_signtry_pkg.get_assured(#assdNo#))
		                            <isNotNull property="filter">
										WHERE 1=1
										<isNotEmpty prepend="AND"  property="assdName">
											assd_name LIKE upper(#assdName#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="controlTypeDesc">
											control_type_desc LIKE upper(#controlTypeDesc#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="principalResNo">
											principal_res_no LIKE upper(#principalResNo#)
										</isNotEmpty>
									</isNotNull>
		                          ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss022PrinSign" resultMap="GIISPrincipalSignatoryMap2">
		SELECT a.*, '1' count_, '1' rownum_
		                  FROM TABLE
		                          (giis_prin_signtry_pkg.get_principal_signatories(#assdNo#)) a
		                          
	</select>
</sqlMap>