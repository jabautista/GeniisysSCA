<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIISIntermediary">

	<cacheModel id="oneDayClient" type="MEMORY">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>
	
	<resultMap id="GIISIntermediaryMap" class="com.geniisys.common.entity.GIISIntermediary">
		<result column="INTM_NAME" 		property="intmName" />
		<result column="PARENT_INTM_NO" property="parentIntmNo" />
		<result column="INTM_NO" 		property="intmNo" />
		<result column="INTM_TYPE" 		property="intmType" />
		<result column="REF_INTM_CD" 	property="refIntmCd" />
	</resultMap>
	
	<resultMap id="GIISIntermediaryPayorDetailsMap" class="com.geniisys.common.entity.GIISIntermediary">
		<result column="INTM_NAME" property="intmName" />
		<result column="MAIL_ADDR1" property="mailAddr1" />
		<result column="MAIL_ADDR2" property="mailAddr2" />
		<result column="MAIL_ADDR3" property="mailAddr3" />
		<result column="TIN" property="tin" />
		<result column="PAYOR_TYPE" property="payorType" />
		<result column="INTM_NO"   property="intmNo" />
	</resultMap>
	
	<resultMap id="GIISIntermediaryGIACIntmNoLOVMap" class="com.geniisys.common.entity.GIISIntermediary">
		<result column="INTM_NAME" 		property="intmName" />
		<result column="INTM_NO" 		property="intmNo" />
		<result column="REF_INTM_CD"    property="refIntmCd" />
		<result column="ISS_CD" 	    property="issCd" />
		<result column="LIC_TAG" 	    property="licTag" />
	</resultMap>
	
	<resultMap class="com.geniisys.common.entity.GIISIntermediary" id="GIPICommInvoiceIntmMap">
		<result column="intm_no" 		property="intmNo"/>
		<result column="intm_name"		property="intmName"/>
	</resultMap>
	
	<resultMap id="gipis085IntmNameLovResultMap" class="com.geniisys.common.entity.GIISIntermediary">
		<result column="REF_INTM_CD" 	   property="refIntmCd" 	 jdbcType="VARCHAR2" />
		<result column="INTM_NAME" 		   property="intmName" 	 	 jdbcType="VARCHAR2" />
		<result column="PARENT_INTM_NO"    property="parentIntmNo" 	 jdbcType="NUMBER" />
		<result column="PARENT_INTM_NAME"  property="parentIntmName" jdbcType="VARCHAR2" />
		<result column="INTM_NO"    	   property="intmNo" 		 jdbcType="NUMBER" />
		<result column="WTAX_RATE"    	   property="defaultTaxRate" jdbcType="NUMBER" />
		<result column="INTM_TYPE"  	   property="intmType" 	 	 jdbcType="VARCHAR2" />
		<result column="ACTIVE_TAG"  	   property="activeTag"	 	 jdbcType="VARCHAR2" />
	</resultMap>
	
	<resultMap id="GIPIS085GIISIntmLovResultMap" class="com.geniisys.common.entity.GIISIntermediary" extends="BaseEntity.TableGridResultMap">
		<result column="REF_INTM_CD" 	   property="refIntmCd" 	 jdbcType="VARCHAR2" />
		<result column="INTM_NAME" 		   property="intmName" 	 	 jdbcType="VARCHAR2" />
		<result column="PARENT_INTM_NO"    property="parentIntmNo" 	 jdbcType="NUMBER" />
		<result column="PARENT_INTM_NAME"  property="parentIntmName" jdbcType="VARCHAR2" />
		<result column="INTM_NO"    	   property="intmNo" 		 jdbcType="NUMBER" />
		<result column="WTAX_RATE"    	   property="defaultTaxRate" jdbcType="NUMBER" />
		<result column="INTM_TYPE"  	   property="intmType" 	 	 jdbcType="VARCHAR2" />
		<result column="ACTIVE_TAG"  	   property="activeTag"	 	 jdbcType="VARCHAR2" />
		<result column="parent_intm_lic_tag"  	   property="parentIntmLicTag" 	 	 jdbcType="VARCHAR2" />
		<result column="parent_intm_special_rate"  	   property="parentIntmSpecialRate"	 	 jdbcType="VARCHAR2" />
		<result column="SHARE_PERCENTAGE"  property="sharePercentage" jdbcType="NUMBER" />
		<result column="lic_tag"  	   	   property="licTag" 	 	 jdbcType="VARCHAR2" /> <!--added by christian 08.25.2012-->
		<result column="special_rate"  	   property="specialRate" 	 jdbcType="VARCHAR2" /> <!--added by christian 08.25.2012-->
	</resultMap>	
	
	<resultMap id="GIISIntmListingMap" class="com.geniisys.common.entity.GIISIntermediary" >  
	   	<result column="INTM_NO"    	   property="intmNo" />
	   	<result column="INTM_NAME" 		   property="intmName"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
   </resultMap>
   
   <parameterMap class="map" id="validateIntmNoMap">
		<parameter property="intmNo"		jdbcType="NUMBER"	javaType="java.lang.Integer"  mode="IN"/>
		<parameter property="intmName"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
	</parameterMap>
	
	<resultMap id="GIISIntermediaryGIIM002IntmNoLOVMap" class="com.geniisys.common.entity.GIISIntermediary">
		<result column="INTM_NO" 		property="intmNo" />
		<result column="INTM_NAME" 		property="intmName" />
		<result column="REF_INTM_CD"    property="refIntmCd" />
		<result column="ACTIVE_TAG"     property="activeTag" />
		<result property="rowNum"		column="ROWNUM_"/>
		<result property="rowCount"		column="COUNT_"/>
	</resultMap>
	
	<resultMap id="getGiacs286IntmLovMap" class="com.geniisys.common.entity.GIISIntermediary">
		<result column="INTM_NO" 		property="intmNo" />
		<result column="INTM_NAME" 		property="intmName" />
		<result column="REF_INTM_CD"    property="refIntmCd" />
		<result property="rowNum"		column="ROWNUM_"/>
		<result property="rowCount"		column="COUNT_"/>
	</resultMap>
	
	<resultMap id="getGiacs288IntmLovMap" class="com.geniisys.common.entity.GIISIntermediary" extends="getGiacs286IntmLovMap">
		<result column="ISS_CD" 		property="issCd" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GIPIS200IntermediaryResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="intmNo" 	column="intm_no"/>		
		<result property="intmName" 	column="intm_name"/>								
	</resultMap> 
	
	<select id="getGIISIntermediary" resultMap="GIISIntermediaryMap">
		SELECT INTM_NAME, PARENT_INTM_NO, INTM_NO, INTM_TYPE, REF_INTM_CD FROM TABLE(Giis_Intermediary_Pkg.get_giis_intm_all_list(#intmNo#))
  	</select>
  	
  	<select id="getGIISIntermediaryParentName" resultClass="java.lang.String" parameterClass="java.lang.Integer">
		SELECT (Giis_Intermediary_Pkg.get_giis_parent_intm_name(#parentIntmNo#)) FROM DUAL		
  	</select>
  	
  	<select id="getDefaultTaxRate" resultClass="java.math.BigDecimal" parameterClass="java.lang.Integer">
  		<!-- SELECT wtax_rate FROM giis_intermediary WHERE intm_no = #intmNo# -->  <!-- Changed by Kenneth 06.22.2015 SR 4682 -->
  		SELECT wtax_rate
  		  FROM giis_intermediary
 		 WHERE intm_no IN (SELECT DECODE (lic_tag, 'Y', intm_no, parent_intm_no)
                     		 FROM giis_intermediary
                    		WHERE intm_no = #intmNo#)
  	</select>
  	
  	<select id="getPayorLOV" resultMap="GIISIntermediaryPayorDetailsMap" resultClass="com.geniisys.framework.util.PaginatedList">
  		SELECT * FROM TABLE(Giis_Intermediary_Pkg.get_intm_payor_list(#keyword#)) ORDER BY 1
  	</select>
  	
  	<select id="getPayorLOV2" resultMap="GIISIntermediaryPayorDetailsMap" resultClass="com.geniisys.framework.util.PaginatedList">
  		SELECT * FROM TABLE(Giis_Intermediary_Pkg.get_intm_payor_list2(#keyword#, #riCommTag#)) ORDER BY 1
  	</select>
  	
  	<select id="getAllGIISIntermediaryLOV" resultMap="GIISIntermediaryGIACIntmNoLOVMap">
  		SELECT * FROM TABLE(Giis_Intermediary_Pkg.get_all_intermediary_list) ORDER BY 2
  	</select>
  	
  	<select id="getGIPICommInvoiceIntmList" parameterClass="java.util.HashMap" resultMap="GIPICommInvoiceIntmMap">
  		SELECT * FROM TABLE(GIIS_INTERMEDIARY_PKG.get_comm_invoice_intm_list(#tranType#, #issCd#, #premSeqNo#, #intmName#))
  	</select>
  	
  	<select id="getIntermediaryListing2" parameterClass="java.lang.String" resultMap="GIPICommInvoiceIntmMap">
  		SELECT * FROM TABLE(Giis_Intermediary_Pkg.get_intm_list2(#keyword#))
  		 ORDER BY intm_name
 	</select>
 	
 	<select id="getBancaIntermediaryListing" parameterClass="java.util.HashMap" resultMap="GIPICommInvoiceIntmMap">
  		SELECT * FROM TABLE(Giis_Intermediary_Pkg.get_banca_intm_list(#keyword#,#bancTypeCd#,#intmType#))
  		 ORDER BY intm_no
 	</select>
 	
 	<select id="getGipis085IntmNameLov" parameterClass="java.util.HashMap" resultMap="gipis085IntmNameLovResultMap">
		SELECT * 
		  FROM TABLE(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME1_LIST(#assdNo#, #lineCd#, #keyword#))
	</select>
	
	<select id="getGipis085IntmNameLov3" parameterClass="java.util.HashMap" resultMap="gipis085IntmNameLovResultMap">
		SELECT * 
		  FROM TABLE(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME2_LIST(#assdNo#, #lineCd#, #parId#, #keyword#))
	</select>
	
	<select id="getGipis085IntmNameLov5" resultMap="gipis085IntmNameLovResultMap">
		SELECT * 
		  FROM TABLE(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME3_LIST(#keyword#))
	</select>
	
	 <select id="getIntmCdNameLOV" resultMap="GIISIntmListingMap" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (Giis_Intermediary_Pkg.get_intm_list2(#keyword#))
		                  <isNotNull property="findText">
		                  WHERE UPPER(INTM_NO) LIKE UPPER(#findText#)
		                  OR UPPER(INTM_NAME) LIKE UPPER(#findText#)  <!-- added by steven 12/11/2012 -->
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (Giis_Intermediary_Pkg.get_intm_list2(#keyword#))
		                  <isNotNull property="findText">
		                  WHERE UPPER(intm_no) LIKE UPPER(#findText#)
		                   OR UPPER(INTM_NAME) LIKE UPPER(#findText#)  <!-- added by steven 12/11/2012 -->
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
		
	<select id="getGIPIS085IntermediaryLOV" resultMap="GIPIS085GIISIntmLovResultMap" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE 
		                  <isEqual property="defaultIntm" compareValue="false">
			              	(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME5_LIST(#assdNo#, #lineCd#, #parId#, #findText#)) <!-- modified by koks 08/12/2015 -->
			              </isEqual>
		                  <isEqual property="defaultIntm" compareValue="true">
		                  	<isEqual property="parType" compareValue="P">
		                  		<isEqual property="polFlag" compareValue="2">
		                  			(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME1_LIST_RENEWAL(#findText#, #parId#, #assdNo#, #lineCd#)) <!-- benjo 09.07.2016 SR-5604 -->
		                  		</isEqual>
		                  		<isNotEqual property="polFlag" compareValue="2">
		                  			(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME1_LIST(#assdNo#, #lineCd#, #findText#))
		                  		</isNotEqual>
		                  	</isEqual>
			              	<isEqual property="parType" compareValue="E">
			              		(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME2_LIST(#assdNo#, #lineCd#, #parId#, #findText#))
			              	</isEqual>
			              </isEqual>
			              <isNotNull property="notIn">
						  		WHERE intm_no NOT IN $notIn$
						  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="refIntmCd">
			              		ORDER BY ref_intm_cd
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE 
		                  <isEqual property="defaultIntm" compareValue="false">
			              	(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME5_LIST(#assdNo#, #lineCd#, #parId#, #findText#))	<!-- modified by koks 08/12/2015 -->
			              </isEqual>
		                  <isEqual property="defaultIntm" compareValue="true">
		                  	<isEqual property="parType" compareValue="P">
		                  		<isEqual property="polFlag" compareValue="2">
		                  			(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME1_LIST_RENEWAL(#findText#, #parId#, #assdNo#, #lineCd#)) <!-- benjo 09.07.2016 SR-5604 -->
		                  		</isEqual>
		                  		<isNotEqual property="polFlag" compareValue="2">
		                  			(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME1_LIST(#assdNo#, #lineCd#, #findText#))
		                  		</isNotEqual>
		                  	</isEqual>
			              	<isEqual property="parType" compareValue="E">
			              		(GIIS_INTERMEDIARY_PKG.GET_INTM_NAME2_LIST(#assdNo#, #lineCd#, #parId#, #findText#))
			              	</isEqual>
			              </isEqual>
			              <isNotNull property="notIn">
						  		WHERE intm_no NOT IN $notIn$
						  </isNotNull>
		                  	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="map" id="getPremWarrLetterMap">
		<parameter property="claimId" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="assdName" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="reportId" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="IN"/>
		<parameter property="nbtMail1" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="nbtMail2" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="nbtMail3" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="nbtAttn" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
		<parameter property="msgAlert" 	javaType="java.lang.String" jdbcType="VARCHAR" mode="OUT"/>
	</parameterMap>
	
	<procedure id="getPremWarrLetter" parameterMap="getPremWarrLetterMap">
		{CALL Giis_Intermediary_Pkg.get_prem_warr_letter(?, ?, ?, ?, ?, ?, ?, ?)}
	</procedure>
	
	<procedure id="validatePurgeIntmNo" parameterMap="validateIntmNoMap">
		CALL GIIS_INTERMEDIARY_PKG.validate_purge_intm_no(?, ?)
	</procedure>
	
	<select id="getPrintExpReportIntmLOV"	resultMap="GIISIntmListingMap" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (select intm_no, intm_name from table(giis_intermediary_pkg.get_intm_list)
		          		  <isNotNull property="findText">
		          		  		WHERE (intm_no LIKE #findText#
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giis_intermediary_pkg.get_intm_list)
		                  <isNotNull property="findText">
		          		  		WHERE (intm_no LIKE #findText#
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="validateIntmNoGiexs006" resultMap="GIPICommInvoiceIntmMap" parameterClass="java.lang.Integer">
  		SELECT * FROM TABLE(giis_intermediary_pkg.validate_intm_no_giexs006(#intmNo#))
  	</select>
  	
	<select id="getGIIMM002IntmLOV" resultMap="GIISIntermediaryGIIM002IntmNoLOVMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_INTERMEDIARY_PKG.get_intm_name4_list)
		          		  <isNotNull property="findText">
		          		  		WHERE (intm_no LIKE #findText#
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="refIntmCd">
			              		ORDER BY ref_intm_cd
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_INTERMEDIARY_PKG.get_intm_name4_list)
		                  <isNotNull property="findText">
		          		  		WHERE (intm_no LIKE #findText#
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
	
	<resultMap id="GIISIntmLOVResultMap" class="com.geniisys.common.entity.GIISIntermediary" extends="BaseEntity.TableGridResultMap">
		<result column="INTM_NAME" 		property="intmName" />
		<result column="INTM_NO" 		property="intmNo" />
		<result column="REF_INTM_CD"    property="refIntmCd" />
		<result column="ISS_CD" 	    property="issCd" />
		<result column="LIC_TAG" 	    property="licTag" />
	</resultMap>	
	
	<select id="getGIISIntmLOV" resultMap="GIISIntmLOVResultMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (Giis_Intermediary_Pkg.get_giis_intm_lov(#findText#))		                  
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="refIntmCd">
			              		ORDER BY ref_intm_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="issCd">
			              		ORDER BY iss_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="licTag">
			              		ORDER BY lic_tag
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (Giis_Intermediary_Pkg.get_giis_intm_lov(#findText#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIACS180IntmNoLOV" resultMap="GIISIntermediaryGIIM002IntmNoLOVMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_INTERMEDIARY_PKG.get_giacs180_intm_lov(#intmType#))		         
		        <isNotNull property="filter">
		         WHERE 1 = 1
		        		<isNotEmpty prepend="AND" property="intmNo">
	  		         		intm_no = #intmNo#
	  		         	</isNotEmpty>
	  		         	<isNotEmpty prepend="AND" property="intmName">
	  		         		UPPER(intm_name) LIKE UPPER(#intmName#)
	  		         	</isNotEmpty>
		        </isNotNull>
		        <isNotNull property="findText">
                    WHERE ( UPPER(intm_no) LIKE UPPER(#findText#) 
                  			OR UPPER(intm_name) LIKE UPPER(#findText#) )
	           </isNotNull>
	           <isNull property="findText">
		           <isNotNull property="filterText">
	                    WHERE ( UPPER(intm_no) LIKE UPPER(#filterText#) 
	                  			OR UPPER(intm_name) LIKE UPPER(#filterText#) )
		           </isNotNull>
	          </isNull>
		        <isNotNull property="sortColumn">
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="ascDescFlg" compareValue="ASC">
								ASC
						  </isEqual>
						  <isEqual property="ascDescFlg" compareValue="DESC">
								DESC
						  </isEqual>
			    </isNotNull>) a, 
               (SELECT count(*) count_ 
                  FROM TABLE (GIIS_INTERMEDIARY_PKG.get_giacs180_intm_lov(#intmType#))
                <isNotNull property="filter">
                 WHERE 1 = 1
		        		<isNotEmpty prepend="AND" property="intmNo">
	  		         		intm_no = #intmNo#
	  		         	</isNotEmpty>
	  		         	<isNotEmpty prepend="AND" property="intmName">
	  		         		UPPER(intm_name) LIKE UPPER(#intmName#)
	  		         	</isNotEmpty>
		        </isNotNull>
		        <isNotNull property="findText">
                    WHERE ( UPPER(intm_no) LIKE UPPER(#findText#) 
                  			OR UPPER(intm_name) LIKE UPPER(#findText#) )
	           </isNotNull>
	           <isNull property="findText">
		           <isNotNull property="filterText">
	                    WHERE ( UPPER(intm_no) LIKE UPPER(#filterText#) 
	                  			OR UPPER(intm_name) LIKE UPPER(#filterText#) )
		           </isNotNull>
	          </isNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getGIACS180IntmNoLOV2" resultMap="GIISIntmListingMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(giacs180_pkg.get_giacs180_intm_lov(#userId#))		         
		        <isNotNull property="filter">
		         WHERE 1 = 1
		        		<isNotEmpty prepend="AND" property="intmNo">
	  		         		intm_no = #intmNo#
	  		         	</isNotEmpty>
	  		         	<isNotEmpty prepend="AND" property="intmName">
	  		         		UPPER(intm_name) LIKE UPPER(#intmName#)
	  		         	</isNotEmpty>
		        </isNotNull>
		        <isNotNull property="findText">
                    WHERE ( UPPER(intm_no) LIKE UPPER(#findText#) 
                  			OR UPPER(intm_name) LIKE UPPER(#findText#) )
	           </isNotNull>
	           <isNull property="findText">
		           <isNotNull property="filterText">
	                    WHERE ( UPPER(intm_no) LIKE UPPER(#filterText#) 
	                  			OR UPPER(intm_name) LIKE UPPER(#filterText#) )
		           </isNotNull>
	          </isNull>
		        <isNotNull property="sortColumn">
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="ascDescFlg" compareValue="ASC">
								ASC
						  </isEqual>
						  <isEqual property="ascDescFlg" compareValue="DESC">
								DESC
						  </isEqual>
			    </isNotNull>) a, 
               (SELECT count(*) count_ 
                  FROM TABLE (giacs180_pkg.get_giacs180_intm_lov(#userId#))
                <isNotNull property="filter">
                 WHERE 1 = 1
		        		<isNotEmpty prepend="AND" property="intmNo">
	  		         		intm_no = #intmNo#
	  		         	</isNotEmpty>
	  		         	<isNotEmpty prepend="AND" property="intmName">
	  		         		UPPER(intm_name) LIKE UPPER(#intmName#)
	  		         	</isNotEmpty>
		        </isNotNull>
		        <isNotNull property="findText">
                    WHERE ( UPPER(intm_no) LIKE UPPER(#findText#) 
                  			OR UPPER(intm_name) LIKE UPPER(#findText#) )
	           </isNotNull>
	           <isNull property="findText">
		           <isNotNull property="filterText">
	                    WHERE ( UPPER(intm_no) LIKE UPPER(#filterText#) 
	                  			OR UPPER(intm_name) LIKE UPPER(#filterText#) )
		           </isNotNull>
	          </isNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
	
	<select id="getGIACS512IntmNoLOV" resultMap="GIISIntermediaryGIIM002IntmNoLOVMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_INTERMEDIARY_PKG.get_giacs512_intm_lov)		         
		        <isNotNull property="filter">
		         WHERE 1 = 1
		        		<isNotEmpty prepend="AND" property="intmNo">
	  		         		intm_no = #intmNo#
	  		         	</isNotEmpty>
	  		         	<isNotEmpty prepend="AND" property="intmName">
	  		         		UPPER(intm_name) LIKE UPPER(#intmName#)
	  		         	</isNotEmpty>
		        </isNotNull>
		        <isNotNull property="findText">
                    WHERE ( UPPER(intm_no) LIKE UPPER(#findText#) 
                  			OR UPPER(intm_name) LIKE UPPER(#findText#) )
	           </isNotNull>
	           <!-- modified by pol cruz, 08/27/2013  -->
	           <isNull property="findText">
                    WHERE ( intm_no LIKE NVL(#searchString#, intm_no) 
                  			OR UPPER(intm_name) LIKE UPPER(NVL(#searchString#, intm_name)))
               </isNull>
		        <isNotNull property="sortColumn">
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="ascDescFlg" compareValue="ASC">
								ASC
						  </isEqual>
						  <isEqual property="ascDescFlg" compareValue="DESC">
								DESC
						  </isEqual>
			    </isNotNull>) a, 
               (SELECT count(*) count_ 
                  FROM TABLE (GIIS_INTERMEDIARY_PKG.get_giacs512_intm_lov)
                <isNotNull property="filter">
                 WHERE 1 = 1
		        		<isNotEmpty prepend="AND" property="intmNo">
	  		         		intm_no = #intmNo#
	  		         	</isNotEmpty>
	  		         	<isNotEmpty prepend="AND" property="intmName">
	  		         		UPPER(intm_name) LIKE UPPER(#intmName#)
	  		         	</isNotEmpty>
		        </isNotNull>
		        <isNotNull property="findText">
                    WHERE ( UPPER(intm_no) LIKE UPPER(#findText#) 
                  			OR UPPER(intm_name) LIKE UPPER(#findText#) )
	           </isNotNull>
	           <!-- modified by pol cruz, 08/27/2013  -->
	           <isNull property="findText">
                    WHERE ( intm_no LIKE NVL(#searchString#, intm_no) 
                  			OR UPPER(intm_name) LIKE UPPER(NVL(#searchString#, intm_name)))
               </isNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
	
	<!-- added by : Kenneth L. 08.05.2013 :for giexs008 -->
	<select id="getGiexs008IntmLov" resultMap="GIISIntmListingMap" parameterClass="java.util.HashMap">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(giexs008_pkg.get_intm_lov)
          	   	 <isNull property="findText">
					WHERE intm_no LIKE upper(NVL(#search#, intm_no)) OR intm_name LIKE upper(NVL(#search#, intm_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE intm_no LIKE upper(#findText#) OR intm_name LIKE upper(#findText#)
				 </isNotNull>
					
	            <isEqual property="sortColumn" compareValue="intmNo">
              		ORDER BY intm_no
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="intmName">
              		ORDER BY intm_name
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(giexs008_pkg.get_intm_lov)
	            <isNull property="findText">
					WHERE intm_no LIKE upper(NVL(#search#, intm_no)) OR intm_name LIKE upper(NVL(#search#, intm_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE intm_no LIKE upper(#findText#) OR intm_name LIKE upper(#findText#)
				 </isNotNull>)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>	

	<!-- added by : Kenneth L. 07.16.2013 :for giacs286 -->
	<select id="getGiacs286IntmLov" resultMap="getGiacs286IntmLovMap" parameterClass="java.util.HashMap">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(giis_intermediary_pkg.get_giacs286_intm_lov)
          	   	 <isNull property="findText">
					WHERE intm_no LIKE upper(NVL(#search#, intm_no)) OR intm_name LIKE upper(NVL(#search#, intm_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE intm_no LIKE upper(#findText#) OR intm_name LIKE upper(#findText#)
				 </isNotNull>
					
	            <isEqual property="sortColumn" compareValue="intmNo">
              		ORDER BY intm_no
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="refIntmCd">
              		ORDER BY ref_intm_cd
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="intmName">
              		ORDER BY intm_name
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(giis_intermediary_pkg.get_giacs286_intm_lov)
	            <isNull property="findText">
					WHERE intm_no LIKE upper(NVL(#search#, intm_no)) OR intm_name LIKE upper(NVL(#search#, intm_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE intm_no LIKE upper(#findText#) OR intm_name LIKE upper(#findText#)
				 </isNotNull>)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>	
 	
	<!-- jomsdiago 07.19.2013 for GICLS220 -->
	<select id="getGICLS220IntmLOV" resultMap="GIISIntmListingMap" parameterClass="java.util.HashMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * FROM TABLE (GICLS220_PKG.get_gicls220_intm_lov)
		          		<isNotNull property="findText">
		          			WHERE UPPER(intm_no) LIKE UPPER(NVL(#findText# || '%', intm_no))
		          			   OR UPPER(intm_name) LIKE UPPER(NVL(#findText# || '%', intm_name))
		          		</isNotNull>
		          		<isNotNull property="sortColumn">
		          			<isEqual property="sortColumn" compareValue="intmNo">
		          				ORDER BY intm_no
		          			</isEqual>
		          			<isEqual property="sortColumn" compareValue="intmName">
		          				ORDER BY intm_name
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="ASC">
		          				ASC
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="DESC">
		          				DESC
		          			</isEqual>
		          		</isNotNull>
		          		) a,
		          		(SELECT count(*) count_ FROM TABLE (GICLS220_PKG.get_gicls220_intm_lov)
		          		 <isNotNull property="findText">
		          			WHERE UPPER(intm_no) LIKE UPPER(NVL(#findText# || '%', intm_no))
		          			   OR UPPER(intm_name) LIKE UPPER(NVL(#findText# || '%', intm_name))
		          		 </isNotNull>
		          		) b		  
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>

<!-- Gzelle 08.05.2013 -->
	<resultMap class="java.util.HashMap" id="reportedClaimsIntmLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="intm_no"			property="intmNo" />
		<result column="intm_name"			property="intmName" />
	</resultMap>
	
	<select id="getReportedClmIntmLOV" resultMap="reportedClaimsIntmLOVResultMap" parameterClass="java.util.HashMap">		 
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, b.count_, a.*
  		  		  FROM (SELECT * FROM TABLE(gicls540_pkg.get_rep_clm_intm_lov)
						<isNull property="findText">
						 WHERE upper(intm_no) LIKE upper(NVL(#search#, intm_no))
						</isNull>
						<isNotNull property="findText">
						 WHERE upper(intm_no) LIKE upper(#findText#)
						    OR upper(intm_name) LIKE upper(#findText#)
						</isNotNull>
	            	<isEqual property="sortColumn" compareValue="intmNo">
              			ORDER BY intm_no
	            	</isEqual>
	            	<isEqual property="sortColumn" compareValue="intmName">
              			ORDER BY intm_name
	            	</isEqual>
	            	<isNotNull property="sortColumn">
              			<isEqual property="ascDescFlg" compareValue="ASC">
              				ASC
              			</isEqual>
              			<isEqual property="ascDescFlg" compareValue="DESC">
              				DESC
              			</isEqual>
              		</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(gicls540_pkg.get_rep_clm_intm_lov)
				 <isNull property="findText">
				WHERE upper(intm_no) LIKE upper(NVL(#search#, intm_no))
				 </isNull>
				 <isNotNull property="findText">
				WHERE upper(intm_no) LIKE upper(#findText#)
				   OR upper(intm_name) LIKE upper(#findText#)
				 </isNotNull>
				)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>

  	<select id="getParentIntmNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT gicls540_pkg.get_sub_agent(#intmNo#) FROM DUAL
	</select>
 <!--End-->	
 	
 	<select id="getGIACS288IntmLOV" resultMap="getGiacs288IntmLovMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_INTERMEDIARY_PKG.get_giacs288_intm_lov(#intmType#, #moduleId#, #userId#, #findText#))
		        <isNotNull property="sortColumn">
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="refIntmCd">
			              		ORDER BY ref_intm_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
			              <isEqual property="ascDescFlg" compareValue="ASC">
								ASC
						  </isEqual>
						  <isEqual property="ascDescFlg" compareValue="DESC">
								DESC
						  </isEqual>
			    </isNotNull>) a, 
               (SELECT count(*) count_ 
                  FROM TABLE (GIIS_INTERMEDIARY_PKG.get_giacs288_intm_lov(#intmType#, #moduleId#, #userId#, #findText#))) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
 	
 	
 	
 	<resultMap class="java.util.HashMap" id="GIACS153IntmNoLOVResMap" extends="BaseEntity.TableGridResultMap">
		<result column="intm_no"	property="intmNo" />
		<result column="intm_name"		property="intmName" />
	</resultMap>
	
	<select id="getGIACS153IntmNoLOV" resultMap="GIACS153IntmNoLOVResMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT *
		                  FROM TABLE(GIIS_INTERMEDIARY_PKG.get_giacs153_intm_no_lov)
			          	  	    <isNull property="findText">
				                	WHERE intm_no LIKE NVL(#searchString#, intm_no)
				          			OR UPPER(intm_name) LIKE UPPER(NVL(#searchString#, intm_name))
				                </isNull>
				                <isNotNull property="findText">
				                	WHERE intm_no LIKE NVL(#findText#, intm_no)
				          			OR UPPER(intm_name) LIKE UPPER(NVL(#findText#, intm_name))
				                </isNotNull>
								<isNotNull property="sortColumn">
									<isEqual property="sortColumn" compareValue="intmNo">
										ORDER BY intm_no
									</isEqual>
									<isEqual property="sortColumn" compareValue="intmName">
										ORDER BY intm_name
									</isEqual>
									<isEqual property="ascDescFlg" compareValue="ASC">
										ASC
									</isEqual>
									<isEqual property="ascDescFlg" compareValue="DESC">
										DESC
									</isEqual>
								</isNotNull>
							) a,
							(SELECT count(*) count_
							FROM TABLE(GIIS_INTERMEDIARY_PKG.get_giacs153_intm_no_lov)
							   <isNull property="findText">
				                	WHERE intm_no LIKE NVL(#searchString#, intm_no)
				          			OR UPPER(intm_name) LIKE UPPER(NVL(#searchString#, intm_name))
				                </isNull>
				                <isNotNull property="findText">
				                	WHERE intm_no LIKE NVL(#findText#, intm_no)
				          			OR UPPER(intm_name) LIKE UPPER(NVL(#findText#, intm_name))
				                </isNotNull>
			                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="map" id="extractIntmProdCollnParamMap">
		<parameter property="branchParam"			jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="branchCd"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="intmNo"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="paramDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="fromDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="toDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="userId"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="count"			jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
	</parameterMap>
 	
 	<procedure id="extractIntmProdColln" parameterMap="extractIntmProdCollnParamMap">
		CALL p_intm_prod.extract_intm_prod_colln(?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="extractWebParamMap">
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="intmNo"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="dateParam"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="fromDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="toDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="issParam"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="userId"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="count"			jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
	</parameterMap>
	
	<procedure id="extractWeb" parameterMap="extractWebParamMap">
		CALL p_intm_prod.extract_web(?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<select id="getGIPIS200IntermediaryLOV" resultMap="GIPIS200IntermediaryResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPIS200_PKG.get_intermediary_lov(#lineCd#,#userId#))		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(intm_no) LIKE UPPER(#intermediary#)
				                 OR UPPER(intm_name) LIKE UPPER(#intermediary#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(intm_no) LIKE UPPER(#findText#)
				                 OR UPPER(intm_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(GIPIS200_PKG.get_intermediary_lov(#lineCd#,#userId#))		                 
		                  <isNull property="findText">
				                 WHERE UPPER(intm_no) LIKE UPPER(#intermediary#)
				                 OR UPPER(intm_name) LIKE UPPER(#intermediary#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(intm_no) LIKE UPPER(#findText#)
				                 OR UPPER(intm_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>				
			             	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
 	
 	<!-- GIISS203 : shan 10.30.2013 -->
	<resultMap class="com.geniisys.common.entity.GIISIntermediary" id="giiss203ResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="intm_no"     		property="intmNo"/>
		<result column="intm_name"  		property="intmName"/>
		<result column="ref_intm_cd"     	property="refIntmCd"/>
		<result column="active_tag"  		property="activeTag"/>
		<result column="parent_intm_no"     property="parentIntmNo"/>
		<result column="parent_intm_name"  	property="parentIntmName"/>
		<result column="intm_type"     		property="intmType"/>
		<result column="intm_type_desc" 	property="intmTypeDesc"/>
		<result column="user_id"     		property="userId"/>
		<result column="last_update" 		property="lastUpdate"/>
		<result column="remarks"     		property="remarks"/>
	</resultMap>
	
	<select id="getGiiss203RecList" resultMap="giiss203ResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(giiss203_pkg.get_rec_list(#intmNo#, #intmName#, #activeTag#, #intmType#))
		  	      		  	WHERE 1=1
		  	      		  		  $setWhere$
		  	      		  <isNotNull property="filter">
		  	      		  		<isNotEmpty prepend="AND" property="refIntmCd">
		  	      		  			UPPER(ref_intm_cd) LIKE UPPER(#refIntmCd#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="intmTypeDesc">
		  	      		  			UPPER(intm_type_desc) LIKE UPPER(#intmTypeDesc#)
		  	      		  		</isNotEmpty>
		  	      		  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="refIntmCd">
			              		ORDER BY ref_Intm_Cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="activeTag">
			              		ORDER BY active_tag
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmTypeDesc">
			              		ORDER BY intm_type_desc
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="parentIntmName">
			              		ORDER BY parent_intm_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="remarks">
			              		ORDER BY remarks
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="userId">
			              		ORDER BY user_id
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(giiss203_pkg.get_rec_list(#intmNo#, #intmName#, #activeTag#, #intmType#))
		  	      		  	WHERE 1=1
		  	      		  		  $setWhere$
		  	      		  <isNotNull property="filter">
		  	      		  		<isNotEmpty prepend="AND" property="refIntmCd">
		  	      		  			UPPER(ref_intm_cd) LIKE UPPER(#refIntmCd#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="intmTypeDesc">
		  	      		  			UPPER(intm_type_desc) LIKE UPPER(#intmTypeDesc#)
		  	      		  		</isNotEmpty>
		  	      		  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	
	
	<procedure id="setIntermediary" parameterClass="com.geniisys.common.entity.GIISIntermediary">
	    DECLARE
	    	v_rec GIIS_INTERMEDIARY%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
 			
 			v_rec.intm_no := #intmNo#;
 			v_rec.intm_name := #intmName#;
 			v_rec.ref_intm_cd := #refIntmCd#;
 			v_rec.active_tag := #activeTag#;  
 			v_rec.user_id := #userId#;
 			v_rec.remarks := #remarks#;
 			
 			giiss203_pkg.set_rec(v_rec);
 		END;
 	</procedure>
 	
 	<parameterMap class="java.util.HashMap" id="valDelGiiss203Map">
  		<parameter property="intmNo"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
  		<parameter property="msg"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
  		<parameter property="ctrlSw1"		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT"/>
  	</parameterMap>
 	
 	<procedure id="valDeleteIntermediary" parameterMap="valDelGiiss203Map" resultClass="java.util.HashMap">
 		BEGIN
 			giiss203_pkg.val_del_rec(?, ?, ?);
 		END;
 	</procedure>
 	<!-- 
 	<procedure id="valAddIntermediary" parameterClass="java.lang.Integer">
 		BEGIN
 			giiss203_pkg.val_add_rec(#intmNo#);
 		END;
 	</procedure> 	
 	
	<delete id="delIntermediary" parameterClass="java.lang.Integer">
		BEGIN
 			giiss203_pkg.del_rec(#intmNo#);
 		END;
 	</delete> -->
<!-- end GIISS203 : shan 11.07.2013 -->

<!-- GIISS076 : shan 11.11.2013 -->
	<select id="getRequireWtaxGiiss076" resultClass="java.lang.String">
		SELECT giisp.v('REQUIRE_WTAX')
          FROM dual
	</select>	
	
	<resultMap class="com.geniisys.common.entity.GIISIntermediary" id="giiss076ResultMap">
		<result column="intm_no"     		property="intmNo"/>
		<result column="ref_intm_cd"     	property="refIntmCd"/>
		<result column="ca_no"     			property="caNo"/>
		<result column="ca_date"     		property="caDateChar"/>
		<result column="designation"     	property="designation"/>
		<result column="intm_name"  		property="intmName"/>
		<result column="parent_intm_no"     property="parentIntmNo"/>
		<result column="parent_designation" property="parentDesignation"/>
		<result column="parent_intm_name"  	property="parentIntmName"/>
		<result column="iss_cd"  			property="issCd"/>
		<result column="iss_name"  			property="issName"/>
		<result column="contact_person"  	property="contactPerson"/>
		<result column="phone_no"  			property="phoneNo"/>
		<result column="old_intm_no"		property="oldIntmNo"/>
		<result column="whtax_id"  			property="whtaxId"/>
		<result column="whtax_code"			property="whtaxCode"/>
		<result column="whtax_desc"			property="whtaxDesc"/>
		<result column="tin"  				property="tin"/>
		<result column="wtax_rate"  		property="wtaxRate"/>
		<result column="birthdate" 			property="birthdateChar"/>
		<result column="master_intm_no"		property="masterIntmNo"/>
		<result column="intm_type"     		property="intmType"/>
		<result column="intm_type_desc" 	property="intmTypeDesc"/>
		<result column="co_intm_type"     	property="coIntmType"/>
		<result column="co_intm_type_name"	property="coIntmTypeName"/>
		<result column="payt_terms"     	property="paytTerms"/>
		<result column="payt_terms_desc" 	property="paytTermsDesc"/>
		<result column="mail_addr1"     	property="mailAddr1"/>
		<result column="mail_addr2"     	property="mailAddr2"/>
		<result column="mail_addr3"     	property="mailAddr3"/>
		<result column="bill_addr1"     	property="billAddr1"/>
		<result column="bill_addr2"     	property="billAddr2"/>
		<result column="bill_addr3"     	property="billAddr3"/>
		<result column="prnt_intm_tin_sw"  	property="prntIntmTinSw"/>
		<result column="special_rate"  		property="specialRate"/>
		<result column="lf_tag"  			property="lfTag"/>
		<result column="corp_tag"  			property="corpTag"/>
		<result column="active_tag"  		property="activeTag"/>
		<result column="lic_tag"  			property="licTag"/>
		<result column="input_vat_rate"  	property="inputVatRate"/>
		<result column="nickname"  			property="nickname"/>
		<result column="email_add"  		property="emailAdd"/>
		<result column="fax_no"  			property="faxNo"/>
		<result column="cp_no"  			property="cpNo"/>
		<result column="sun_no"  			property="sunNo"/>
		<result column="globe_no"  			property="globeNo"/>
		<result column="smart_no"  			property="smartNo"/>
		<result column="home_add"  			property="homeAdd"/>
		<result column="user_id"     		property="userId"/>
		<result column="last_update" 		property="lastUpdate"/>
		<result column="remarks"     		property="remarks"/>
	</resultMap>

	<select id="getGiiss076Record" resultMap="giiss076ResultMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(GIISS076_PKG.GET_INTM_RECORD(#intmNo#))
	</select>
	
	<select id="valIntmNameGiiss076" parameterClass="java.lang.String" resultClass="java.lang.Integer">
 		SELECT count(*) 
 		  FROM GIIS_INTERMEDIARY
 		 WHERE UPPER(intm_name) = UPPER(#intmName#)
 	</select>
 	
 	<select id="getParentTinGiiss076" parameterClass="java.lang.Integer" resultClass="java.lang.String">
 		SELECT tin 
 		  FROM GIIS_INTERMEDIARY
 		 WHERE intm_no = #parentIntmNo#
 	</select>
 			
	<select id="checkMobilePrefixGiiss076" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIISS076_PKG.check_mobile_prefix(#param#, #prefix#) FROM DUAL
	</select>
		
	<select id="getIntermediaryNoSequence" resultClass="java.lang.Integer">
		SELECT intermediary_intm_no_s.NEXTVAL FROM DUAL
	</select>
	
	<procedure id="valDeleteGiiss076" parameterClass="java.lang.Integer">
 		BEGIN
 			giiss076_pkg.val_del_rec(#intmNo#);
 		END;
 	</procedure>
 	
 	<procedure id="deleteGiiss076" parameterClass="java.lang.Integer">
 		BEGIN
 			giiss076_pkg.del_rec(#intmNo#);
 		END;
 	</procedure>
 	
 	<procedure id="setGiiss076" parameterClass="com.geniisys.common.entity.GIISIntermediary">
	    DECLARE
	    	v_rec GIIS_INTERMEDIARY%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#; 			
 			
 			v_rec.intm_no          := #intmNo#;
			v_rec.intm_name        := #intmName#;		 	
			v_rec.co_intm_type     := #coIntmType#;
			v_rec.intm_type        := #intmType#;
			v_rec.tin              := #tin#;
			v_rec.corp_tag         := #corpTag#;
			v_rec.special_rate     := #specialRate#;
			v_rec.lic_tag          := #licTag#;
			v_rec.mail_addr1       := #mailAddr1#; 
			v_rec.mail_addr2       := #mailAddr2#; 
			v_rec.mail_addr3       := #mailAddr3#; 
			v_rec.bill_addr1       := #billAddr1#; 
			v_rec.bill_addr2       := #billAddr2#; 
			v_rec.bill_addr3       := #billAddr3#; 
			v_rec.iss_cd           := #issCd#; 
			v_rec.phone_no         := #phoneNo#; 
			v_rec.birthdate        := #birthdate#; 
			v_rec.contact_pers     := #contactPerson#; 
			v_rec.designation      := #designation#; 
			v_rec.parent_intm_no   := #parentIntmNo#;
			v_rec.ca_no            := #caNo#; 
			v_rec.lf_tag           := #lfTag#; 
			v_rec.ref_intm_cd      := #refIntmCd#; 
			v_rec.payt_terms       := #paytTerms#; 
			v_rec.wtax_rate        := #wtaxRate#; 
			v_rec.active_tag       := #activeTag#; 
			v_rec.whtax_id         := #whtaxId#; 
			v_rec.input_vat_rate   := #inputVatRate#; 
			v_rec.prnt_intm_tin_sw := #prntIntmTinSw#; 
			v_rec.old_intm_no      := #oldIntmNo#; 
			v_rec.ca_date          := #caDate#; 
			v_rec.nickname         := #nickname#; 
			v_rec.cp_no            := #cpNo#; 
			v_rec.email_add        := #emailAdd#; 
			v_rec.fax_no           := #faxNo#; 
			v_rec.home_add         := #homeAdd#; 
			v_rec.master_intm_no   := #masterIntmNo#; 
			v_rec.sun_no           := #sunNo#; 
			v_rec.smart_no         := #smartNo#; 
			v_rec.globe_no         := #globeNo#;
 			v_rec.user_id 		   := #userId#;
 			v_rec.remarks 		   := #remarks#;
 			
 			giiss076_pkg.set_rec(v_rec, #chgItem#, #vIntmType#, #vWtaxRate#, #recordStatus#);
 		END;
 	</procedure>
	
	<resultMap class="java.util.HashMap" id="giiss076WhtaxLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="gibrBranchCd"		column="GIBR_BRANCH_CD"/>
		<result property="whtaxId"			column="WHTAX_ID"/>
		<result property="whtaxCode"		column="WHTAX_CODE"/>
		<result property="whtaxDesc"		column="WHTAX_DESC"/>
	</resultMap>
	
	<select id="getGIISS076WhtaxLOV" resultMap="giiss076WhtaxLOVMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIISS076_PKG.GET_WHTAX_LOV(#userId#))
		                  <isNotNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#findText#) 
			              		   OR TRIM(whtax_code) LIKE #findText# 
			              		   OR whtax_desc LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#searchString#) 
			              		   OR whtax_code LIKE #searchString# 
			              		   OR whtax_desc LIKE UPPER(#searchString#)
			              </isNull>
			              <isNotNull property="sortColumn">
			          	  	  <isEqual property="sortColumn" compareValue="gibrBranchCd">
				              		ORDER BY gibr_branch_cd
				              </isEqual>
			          	  	  <isEqual property="sortColumn" compareValue="whtaxCode">
				              		ORDER BY whtax_code
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="whtaxDesc">
				              		ORDER BY whtax_desc
				              </isEqual>	
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GIISS076_PKG.GET_WHTAX_LOV(#userId#))
		                  <isNotNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#findText#) 
			              		   OR TRIM(whtax_code) LIKE #findText# 
			              		   OR whtax_desc LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#searchString#) 
			              		   OR whtax_code LIKE #searchString# 
			              		   OR whtax_desc LIKE UPPER(#searchString#)
			              </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss076CoIntmTypeLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="coIntmType"		column="CO_INTM_TYPE"/>
		<result property="typeName"			column="TYPE_NAME"/>
	</resultMap>
	
	<select id="getGIISS076CoIntmTypeLOV" resultMap="giiss076CoIntmTypeLOVMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIISS076_PKG.GET_CO_INTM_TYPE_LOV(#issCd#))
		                  <isNotNull property="findText">
			              		WHERE co_intm_type LIKE UPPER(#findText#)  OR type_name LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE co_intm_type LIKE UPPER(#searchString#) OR type_name LIKE UPPER(#searchString#)
			              </isNull>
			              <isNotNull property="sortColumn">
			          	  	  <isEqual property="sortColumn" compareValue="coIntmType">
				              		ORDER BY co_intm_type
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="typeName">
				              		ORDER BY type_name
				              </isEqual>	
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GIISS076_PKG.GET_CO_INTM_TYPE_LOV(#issCd#))
		                  <isNotNull property="findText">
			              		WHERE co_intm_type LIKE UPPER(#findText#)  OR type_name LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE co_intm_type LIKE UPPER(#searchString#) OR type_name LIKE UPPER(#searchString#)
			              </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss076PaytTermsLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="paytTerms" 		column="PAYT_TERMS"/>
		<result property="paytTermsDesc" 	column="PAYT_TERMS_DESC"/>
	</resultMap>
	
	<select id="getGIISS076PaytTermsLOV" resultMap="giiss076PaytTermsLOVMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIISS076_PKG.GET_PAYT_TERMS_LOV)
		                  <isNotNull property="findText">
			              		WHERE payt_terms LIKE UPPER(#findText#) OR payt_terms_desc LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE payt_terms LIKE UPPER(#searchString#) OR payt_terms_desc LIKE UPPER(#searchString#)
			              </isNull>
			              <isNotNull property="sortColumn">
			          	  	  <isEqual property="sortColumn" compareValue="paytTerms">
				              		ORDER BY payt_terms
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="paytTermsDesc">
				              		ORDER BY payt_terms_desc
				              </isEqual>	
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GIISS076_PKG.GET_PAYT_TERMS_LOV)
		                  <isNotNull property="findText">
			              		WHERE payt_terms LIKE UPPER(#findText#) OR payt_terms_desc LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE payt_terms LIKE UPPER(#searchString#) OR payt_terms_desc LIKE UPPER(#searchString#)
			              </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss076ParentIntmLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="parentIntmNo" 		column="INTM_NO"/>
		<result property="parentDesignation" 	column="DESIGNATION"/>
		<result property="parentIntmName" 		column="INTM_NAME"/>
		<result property="parentTin" 			column="TIN"/>
	</resultMap>
	
	<select id="getGIISS076ParentIntmLOV" resultMap="giiss076ParentIntmLOVMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIISS076_PKG.GET_PARENT_INTM_LOV)
		                  <isNotNull property="findText">
			              		WHERE TRIM(TO_CHAR(intm_no, '000000000009')) LIKE #findText# 
			              		   OR designation LIKE UPPER(#findText#) 
			              		   OR intm_name LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE TRIM(TO_CHAR(intm_no, '000000000009')) LIKE #searchString#
			              		   OR designation LIKE UPPER(#searchString#) 
			              		   OR intm_name LIKE UPPER(#searchString#)
			              </isNull>
			              <isNotNull property="sortColumn">
			          	  	  <isEqual property="sortColumn" compareValue="parentIntmNo">
				              		ORDER BY intm_no
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="parentDesignation">
				              		ORDER BY designation
				              </isEqual>	
			          	  	  <isEqual property="sortColumn" compareValue="parentIntmName">
				              		ORDER BY intm_name
				              </isEqual>
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GIISS076_PKG.GET_PARENT_INTM_LOV)
		                  <isNotNull property="findText">
			              		WHERE TRIM(TO_CHAR(intm_no, '000000000009')) LIKE #findText# 
			              		   OR designation LIKE UPPER(#findText#) 
			              		   OR intm_name LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE TRIM(TO_CHAR(intm_no, '000000000009')) LIKE #searchString#
			              		   OR designation LIKE UPPER(#searchString#) 
			              		   OR intm_name LIKE UPPER(#searchString#)
			              </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss076MasterIntmMap" extends="BaseEntity.TableGridResultMap">
		<result property="masterIntmNo"		column="MASTER_INTM_NO"/>
		<result property="intmNo"			column="INTM_NO"/>
		<result property="oldIntmNo"		column="OLD_INTM_NO"/>
		<result property="intmName"			column="INTM_NAME"/>
		<result property="userId"			column="USER_ID"/>
		<result property="lastUpdate"		column="LAST_UPDATE"/>
	</resultMap>
	
	<select id="getGiiss0076MasterIntmDetails" resultMap="giiss076MasterIntmMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * 
		  	              FROM TABLE(giiss076_pkg.get_master_intm_details(#masterIntmNo#))
		  	      		 WHERE 1=1
		  	      		  <isNotNull property="filter">
		  	      		  		<isNotEmpty prepend="AND" property="intmNo">
		  	      		  			intm_no = #intmNo#
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="intmName">
		  	      		  			UPPER(intm_name) LIKE UPPER(#intmName#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="oldIntmNo">
		  	      		  			old_intm_no = #oldIntmNo#
		  	      		  		</isNotEmpty>
		  	      		  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="oldIntmNo">
			              		ORDER BY old_intm_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(giiss076_pkg.get_master_intm_details(#masterIntmNo#))
		  	      		 WHERE 1=1
		  	      		  <isNotNull property="filter">
		  	      		  		<isNotEmpty prepend="AND" property="intmNo">
		  	      		  			intm_no = #intmNo#
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="intmName">
		  	      		  			UPPER(intm_name) LIKE UPPER(#intmName#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="oldIntmNo">
		  	      		  			old_intm_no = #oldIntmNo#
		  	      		  		</isNotEmpty>
		  	      		  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap class="java.util.HashMap" id="giiss076IntmHistMap" extends="BaseEntity.TableGridResultMap">
		<result property="intmNo"			column="INTM_NO"/>
		<result property="effDate"			column="EFF_DATE"/>
		<result property="expiryDate"		column="EXPIRY_DATE"/>
		<result property="oldIntmType"		column="OLD_INTM_TYPE"/>
		<result property="intmType"			column="INTM_TYPE"/>
		<result property="oldWtaxRate"		column="OLD_WTAX_RATE"/>
		<result property="wtaxRate"			column="WTAX_RATE"/>
		<result property="corpTag"			column="CORP_TAG"/>
		<result property="licTag"			column="LIC_TAG"/>
		<result property="activeTag"		column="ACTIVE_TAG"/>
		<result property="specialRate"		column="SPECIAL_RATE"/>
	</resultMap>
	
	<select id="getGiiss0076IntmHist" resultMap="giiss076IntmHistMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * 
		  	              FROM TABLE(giiss076_pkg.get_intm_hist(#intmNo#))
		  	      		 WHERE 1=1
		  	      		  <isNotNull property="filter">
		  	      		  		<isNotEmpty prepend="AND" property="effDate">
		  	      		  			TO_DATE(eff_date, 'MM-DD-YYYY') = TO_DATE(#effDate#, 'MM-DD-YYYY')
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="expiryDate">
		  	      		  			TO_DATE(expiry_date, 'MM-DD-YYYY') = TO_DATE(#expiryDate#, 'MM-DD-YYYY')
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="oldIntmType">
		  	      		  			UPPER(old_intm_type) LIKE UPPER(#oldIntmType#)
		  	      		  		</isNotEmpty>		  	      		  		
		  	      		  		<isNotEmpty prepend="AND" property="intmType">
		  	      		  			UPPER(intm_type) LIKE UPPER(#intmType#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="oldWtaxRate">
		  	      		  			old_wtax_rate = #oldWtaxRate#
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="wtaxRate">
		  	      		  			wtax_rate = #wtaxRate#
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="corpTag">
		  	      		  			UPPER(corp_tag) LIKE UPPER(#corpTag#)
		  	      		  		</isNotEmpty>		  	      		  		
		  	      		  		<isNotEmpty prepend="AND" property="licTag">
		  	      		  			UPPER(lic_tag) LIKE UPPER(#licTag#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="activeTag">
		  	      		  			UPPER(active_tag) LIKE UPPER(#activeTag#)
		  	      		  		</isNotEmpty>		  	      		  		
		  	      		  		<isNotEmpty prepend="AND" property="specialRate">
		  	      		  			UPPER(special_rate) LIKE UPPER(#specialRate#)
		  	      		  		</isNotEmpty>
		  	      		  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="effDate">
			              		ORDER BY eff_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expiryDate">
			              		ORDER BY expiry_date
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="oldIntmType">
			              		ORDER BY old_intm_type
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="intmType">
			              		ORDER BY intm_type
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="oldWtaxRate">
			              		ORDER BY old_wtax_rate
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="wtaxRate">
			              		ORDER BY wtax_rate
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="corpTag">
			              		ORDER BY corp_tag
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="licTag">
			              		ORDER BY lic_tag
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="activeTag">
			              		ORDER BY active_tag
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="specialRate">
			              		ORDER BY special_rate
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(giiss076_pkg.get_intm_hist(#intmNo#))
		  	      		 WHERE 1=1
		  	      		  <isNotNull property="filter">
		  	      		  		<isNotEmpty prepend="AND" property="effDate">
		  	      		  			TO_DATE(eff_date, 'MM-DD-YYYY') = TO_DATE(#effDate#, 'MM-DD-YYYY')
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="expiryDate">
		  	      		  			TO_DATE(expiry_date, 'MM-DD-YYYY') = TO_DATE(#expiryDate#, 'MM-DD-YYYY')
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="oldIntmType">
		  	      		  			UPPER(old_intm_type) LIKE UPPER(#oldIntmType#)
		  	      		  		</isNotEmpty>		  	      		  		
		  	      		  		<isNotEmpty prepend="AND" property="intmType">
		  	      		  			UPPER(intm_type) LIKE UPPER(#intmType#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="oldWtaxRate">
		  	      		  			old_wtax_rate = #oldWtaxRate#
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="wtaxRate">
		  	      		  			wtax_rate = #wtaxRate#
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="corpTag">
		  	      		  			UPPER(corp_tag) LIKE UPPER(#corpTag#)
		  	      		  		</isNotEmpty>		  	      		  		
		  	      		  		<isNotEmpty prepend="AND" property="licTag">
		  	      		  			UPPER(lic_tag) LIKE UPPER(#licTag#)
		  	      		  		</isNotEmpty>
		  	      		  		<isNotEmpty prepend="AND" property="activeTag">
		  	      		  			UPPER(active_tag) LIKE UPPER(#activeTag#)
		  	      		  		</isNotEmpty>		  	      		  		
		  	      		  		<isNotEmpty prepend="AND" property="specialRate">
		  	      		  			UPPER(special_rate) LIKE UPPER(#specialRate#)
		  	      		  		</isNotEmpty>
		  	      		  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<parameterMap class="java.util.HashMap" id="copyIntermediaryGiiss076Map">
		<parameter property="intmNo"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="newIntmNo"		jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="OUT"/>
	</parameterMap>	
	
	<procedure id="copyIntermediaryGiiss076" parameterMap="copyIntermediaryGiiss076Map">
		CALL GIISS076_PKG.COPY_INTM_RECORD(?, ?)
	</procedure>
<!-- end GIISS076 : shan -->

	<select id="valCommRate" resultClass="java.lang.String">
		SELECT giis_intermediary_pkg.val_comm_rate(#intmNo#, #lineCd#, #sublineCd#, #issCd#, #perilCd#, #commRate#) FROM DUAL
	</select>
	
	<select id="getCommInvDfltIntms" resultClass="java.lang.Integer">
		SELECT intm_no FROM TABLE
		<isEqual property="parType" compareValue="P">
			<isEqual property="polFlag" compareValue="2">
		    	(giis_intermediary_pkg.get_intm_name1_list_renewal('', #parId#, #assdNo#, #lineCd#)) <!-- benjo 09.07.2016 SR-5604 -->
			</isEqual>
		    <isNotEqual property="polFlag" compareValue="2">
		    	(giis_intermediary_pkg.get_intm_name1_list(#assdNo#, #lineCd#, ''))
			</isNotEqual>
		</isEqual>
		<isEqual property="parType" compareValue="E">
			(giis_intermediary_pkg.get_intm_name2_list(#assdNo#, #lineCd#, #parId#, ''))
		</isEqual>
	</select>
	
	<!-- benjo 09.18.2015 -->
	<resultMap id="getGIPIS901AIntmLOVResultMap" class="com.geniisys.common.entity.GIISIntermediary" >  
	   	<result property="intmNo"		 column="INTM_NO" />
	   	<result property="intmName"		 column="INTM_NAME"/>
	   	<result property="intmType"      column="INTM_TYPE"/>
		<result property="intmTypeDesc"  column="INTM_DESC"/>
		<result property="rowNum"		 column="ROWNUM_"/>
		<result property="rowCount"		 column="COUNT_"/>
    </resultMap>
   
	<select id="getGIPIS901AIntmLOV"	resultMap="getGIPIS901AIntmLOVResultMap"	parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (select intm_no, intm_name, intm_type, intm_desc from table(giis_intermediary_pkg.get_gipis901a_intm_lov(#intmType#, #intmNo#)) <!-- benjo 11.16.2015 PHILFIRE-SR-20983 -->
		          		  <isNotNull property="findText">
		          		  		WHERE (intm_no LIKE #findText#
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giis_intermediary_pkg.get_gipis901a_intm_lov(#intmType#, #intmNo#)) <!-- benjo 11.16.2015 PHILFIRE-SR-20983 -->
		                  <isNotNull property="findText">
		          		  		WHERE (intm_no LIKE #findText#
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<!-- benjo 09.07.2016 SR-5604 -->
  	<select id="getGIISS006BIntmLOV"  resultMap="GIISIntmListingMap"  parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (giis_intermediary_pkg.get_intm_list)
		          		  <isNotNull property="findText">
		          		  		WHERE (   UPPER(intm_no) LIKE UPPER(#findText#)
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="intmNo">
			              		ORDER BY intm_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="intmName">
			              		ORDER BY intm_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giis_intermediary_pkg.get_intm_list)
		                  <isNotNull property="findText">
		          		  		WHERE (   UPPER(intm_no) LIKE UPPER(#findText#)
		          		  		       OR UPPER(intm_name) LIKE UPPER(#findText#)
		          		  		      )
		          		  </isNotNull>
		          		  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<!-- nieko 02092017, SR 23817 -->
  	<resultMap class="java.util.HashMap" id="giiss076WhtaxLOVMap2" extends="BaseEntity.TableGridResultMap">
		<result property="gibrBranchCd"		column="GIBR_BRANCH_CD"/>
		<result property="whtaxId"			column="WHTAX_ID"/>
		<result property="whtaxCode"		column="WHTAX_CODE"/>
		<result property="whtaxDesc"		column="WHTAX_DESC"/>
		<result property="percentRate"		column="PERCENT_RATE"/>
	</resultMap>
	
	<select id="getGIISS076WhtaxLOV2" resultMap="giiss076WhtaxLOVMap2" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIISS076_PKG.GET_WHTAX_LOV2(#userId#))
		                  <isNotNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#findText#) 
			              		   OR TRIM(whtax_code) LIKE #findText# 
			              		   OR whtax_desc LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#searchString#) 
			              		   OR whtax_code LIKE #searchString# 
			              		   OR whtax_desc LIKE UPPER(#searchString#)
			              </isNull>
			              <isNotNull property="sortColumn">
			          	  	  <isEqual property="sortColumn" compareValue="gibrBranchCd">
				              		ORDER BY gibr_branch_cd
				              </isEqual>
			          	  	  <isEqual property="sortColumn" compareValue="whtaxCode">
				              		ORDER BY whtax_code
				              </isEqual>
			                  <isEqual property="sortColumn" compareValue="whtaxDesc">
				              		ORDER BY whtax_desc
				              </isEqual>	
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
			               (SELECT count(*) count_ 
			                  FROM TABLE (GIISS076_PKG.GET_WHTAX_LOV2(#userId#))
		                  <isNotNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#findText#) 
			              		   OR TRIM(whtax_code) LIKE #findText# 
			              		   OR whtax_desc LIKE UPPER(#findText#)
			              </isNotNull>
			              <isNull property="findText">
			              		WHERE gibr_branch_cd LIKE UPPER(#searchString#) 
			              		   OR whtax_code LIKE #searchString# 
			              		   OR whtax_desc LIKE UPPER(#searchString#)
			              </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- nieko 02092017, end -->
</sqlMap>