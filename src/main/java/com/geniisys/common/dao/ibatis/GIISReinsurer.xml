<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIISReinsurer">

	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
	<typeAlias alias="GIISReinsurer" type="com.geniisys.common.entity.GIISReinsurer" />
	
	<resultMap class="com.geniisys.common.entity.GIISReinsurer" id="GIISReinsurerResultMap">
		<result column="ri_cd" 	 				property="riCd" />
		<result column="local_foreign_sw" 		property="localForeignSw"/>
		<result column="ri_status_cd" 			property="riStatusCd"/>
		<result column="ri_name" 				property="riName" />
		<result column="ri_Sname" 				property="riSname" />
		<result column="mail_address1" 			property="mailAddress1"/>
		<result column="mail_address2" 			property="mailAddress2"/>
		<result column="mail_address3" 			property="mailAddress3"/>
		<result column="bill_address1" 			property="billAddress1" />
		<result column="bill_address2" 			property="billAddress2" />
		<result column="bill_address3" 			property="billAddress3" />
		<result column="phone_no" 				property="phoneNo"/>
		<result column="fax_no" 				property="faxNo"/>
		<result column="telex_no" 				property="telexNo"/>
		<result column="thru_ri_cd" 			property="thruRiCd"/>
		<result column="contact_pers" 			property="contactPers"/>
		<result column="attention" 				property="attention"/>
		<result column="int_tax_rt" 			property="intTaxRt"/>
		<result column="pres_and_xos" 			property="presAndXos"/>
		<result column="liscence_no" 			property="liscenceNo"/>
		<result column="max_line_net_ret" 		property="maxLineNetRet"/>
		<result column="max_net_ret" 			property="maxNetRet"/>
		<result column="tot_asset" 				property="totAsset"/>
		<result column="tot_liab" 				property="totLiab"/>
		<result column="tot_net_worth" 			property="totNetWorth"/>
		<result column="capital_struc" 			property="capitalStruc"/>
		<result column="ri_type" 				property="riType"/>
		<result column="eff_date" 				property="effDate"/>
		<result column="expiry_date" 			property="expiryDate"/>
		<result column="user_id" 				property="userId"/>
		<result column="last_update" 			property="lastUpdate"/>
		<result column="remarks" 				property="remarks"/>
		<result column="cpi_rec_no" 			property="cpiRecNo"/>
		<result column="cpi_branch_cd" 			property="cpiBranchCd"/>
		<result column="cp_no" 					property="cpNo"/>
		<result column="sun_no" 				property="sunNo"/>
		<result column="smart_no" 				property="smartNo"/>
		<result column="globe_no" 				property="globeNo"/>
		<result column="input_vat_rate" 		property="inputVatRate"/>
		<result column="ri_tin" 				property="riTin"/>
	</resultMap>
	
	<resultMap class="com.geniisys.common.entity.GIISReinsurer" id="GIISReinsurerResultGridMap" extends="BaseEntity.TableGridResultMap">
		<result column="ri_cd" 	 				property="riCd" />
		<result column="local_foreign_sw" 		property="localForeignSw"/>
		<result column="ri_status_cd" 			property="riStatusCd"/>
		<result column="ri_name" 				property="riName" />
		<result column="ri_Sname" 				property="riSname" />
		<result column="mail_address1" 			property="mailAddress1"/>
		<result column="mail_address2" 			property="mailAddress2"/>
		<result column="mail_address3" 			property="mailAddress3"/>
		<result column="bill_address1" 			property="billAddress1" />
		<result column="bill_address2" 			property="billAddress2" />
		<result column="bill_address3" 			property="billAddress3" />
		<result column="phone_no" 				property="phoneNo"/>
		<result column="fax_no" 				property="faxNo"/>
		<result column="telex_no" 				property="telexNo"/>
		<result column="thru_ri_cd" 			property="thruRiCd"/>
		<result column="contact_pers" 			property="contactPers"/>
		<result column="attention" 				property="attention"/>
		<result column="int_tax_rt" 			property="intTaxRt"/>
		<result column="pres_and_xos" 			property="presAndXos"/>
		<result column="liscence_no" 			property="liscenceNo"/>
		<result column="max_line_net_ret" 		property="maxLineNetRet"/>
		<result column="max_net_ret" 			property="maxNetRet"/>
		<result column="tot_asset" 				property="totAsset"/>
		<result column="tot_liab" 				property="totLiab"/>
		<result column="tot_net_worth" 			property="totNetWorth"/>
		<result column="capital_struc" 			property="capitalStruc"/>
		<result column="ri_type" 				property="riType"/>
		<result column="eff_date" 				property="effDate"/>
		<result column="expiry_date" 			property="expiryDate"/>
		<result column="user_id" 				property="userId"/>
		<result column="last_update" 			property="lastUpdate"/>
		<result column="remarks" 				property="remarks"/>
		<result column="cpi_rec_no" 			property="cpiRecNo"/>
		<result column="cpi_branch_cd" 			property="cpiBranchCd"/>
		<result column="cp_no" 					property="cpNo"/>
		<result column="sun_no" 				property="sunNo"/>
		<result column="smart_no" 				property="smartNo"/>
		<result column="globe_no" 				property="globeNo"/>
		<result column="input_vat_rate" 		property="inputVatRate"/>
		<result column="ri_tin" 				property="riTin"/>
	</resultMap>
	
	<resultMap class="com.geniisys.common.entity.GIISReinsurer" id="GIISReinsurerResultMap5">
		<result column="ri_cd" 				property="riCd" />
		<result column="ri_name" 			property="riName" />
	</resultMap>
	
	<resultMap class="com.geniisys.common.entity.GIISReinsurer" id="GIISReinsurerLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="ri_cd" 	 	property="riCd" />
		<result column="ri_name" 	property="riName" />
		<result column="ri_sname" 	property="riSname"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="GIISReinsurerResultMapGrid">
		<result property="riCd"						column="ri_cd"/>
		<result property="riName"				column="ri_name"/>
		<result property="rowNum"			column="rownum_"/>
		<result property="rowCount"			column="count_"/>
	</resultMap>
	<!-- pjdiaz 01/30/2013 -->
	<resultMap class="com.geniisys.common.entity.GIISReinsurer" id="GIISReinsurerCedantLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="ri_cd" 	 		property="riCd" />
		<result column="ri_name" 		property="riName" />
		<result column="ROWNUM_" 		property="rowNum"/>
		<result column="COUNT_" 		property="rowCount"/>
	</resultMap>
	<!-- fons 09/16/2013 -->
	<resultMap class="java.util.HashMap" id="GIIS030ReinsurerResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="ri_cd" 	 				property="riCd" />
		<result column="local_foreign_sw" 		property="localForeignSw"/>
		<result column="ri_status_cd" 			property="riStatusCd"/>
		<result column="ri_name" 				property="riName" />
		<result column="ri_sname" 				property="riSname" />
		<result column="mail_address1" 			property="mailAddress1"/>
		<result column="mail_address2" 			property="mailAddress2"/>
		<result column="mail_address3" 			property="mailAddress3"/>
		<result column="bill_address1" 			property="billAddress1" />
		<result column="bill_address2" 			property="billAddress2" />
		<result column="bill_address3" 			property="billAddress3" />
		<result column="phone_no" 				property="phoneNo"/>
		<result column="fax_no" 				property="faxNo"/>
		<result column="telex_no" 				property="telexNo"/>
		<result column="contact_pers" 			property="contactPers"/>
		<result column="attention" 				property="attention"/>
		<result column="int_tax_rt" 			property="intTaxRt"/>
		<result column="pres_and_xos" 			property="presAndXos"/>
		<result column="liscence_no" 			property="liscenceNo"/>
		<result column="max_line_net_ret" 		property="maxLineNetRet"/>
		<result column="max_net_ret" 			property="maxNetRet"/>
		<result column="tot_asset" 				property="totAsset"/>
		<result column="tot_liab" 				property="totLiab"/>
		<result column="tot_net_worth" 			property="totNetWorth"/>
		<result column="capital_struc" 			property="capitalStruc"/>
		<result column="ri_type" 				property="riType"/>
		<result column="eff_date" 				property="effDate"/>
		<result column="expiry_date" 			property="expiryDate"/>
		<result column="user_id" 				property="userId"/>
		<result column="last_update" 			property="lastUpdate"/>
		<result column="remarks" 				property="remarks"/>		
		<result column="cp_no" 					property="cpNo"/>
		<result column="sun_no" 				property="sunNo"/>
		<result column="smart_no" 				property="smartNo"/>
		<result column="globe_no" 				property="globeNo"/>
		<result column="input_vat_rate" 		property="inputVatRate"/>
		<result column="ri_tin" 				property="riTin"/>
		<result column="facilities" 			property="facilities"/>	
		<result column="ri_status_desc" 		property="riStatusDesc"/>	
		<result column="ri_type_desc" 			property="riTypeDesc"/>	
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="validateGIISS030MobileNoResultMap">
		<result property="message" column="message"/>
		<result property="defCheck" column="def_check"/>	
	</resultMap>
	
	<procedure id="getGIISReinsurer" parameterClass="java.lang.String" resultMap="GIISReinsurerResultMap5">
		SELECT * FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list5(#keyword#))
	</procedure>
	
	<select id="getGIISReinsurerLOV3" resultMap="GIISReinsurerResultMapGrid">   <!-- added by steven 5.17.2012 -->
		SELECT *
		  FROM (SELECT rownum rownum_,
		  			   b.count_,
		  			   a.*
		  		  FROM (SELECT * FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list9)
		  		   			<isNotNull property="findText">
		                         WHERE (UPPER(ri_cd) LIKE UPPER(#findText#) OR UPPER(ri_name) LIKE UPPER(#findText#))
		             	 	</isNotNull>
		  		  		  	<isEqual property="sortColumn" compareValue="riCd">
		  		  		  		ORDER BY ri_cd
		  		  		  	</isEqual>
		  		  		  	<isEqual property="sortColumn" compareValue="riName">
		  		  		  		ORDER BY ri_name
		  		  		  	</isEqual>
		  		  		  	<isNotNull property="sortColumn">
		  		  		  		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
		  		  		  	</isNotNull>
		  		  		  ) a,
		  		  	   (SELECT COUNT(*) count_ FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list9)
		  		  	   		<isNotNull property="findText">
		                         WHERE (UPPER(ri_cd) LIKE UPPER(#findText#) OR UPPER(ri_name) LIKE UPPER(#findText#))
		             	 	</isNotNull>) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIISReinsurerLOV4" resultMap="GIISReinsurerResultMapGrid">   <!-- added by steven 12.14.2012 -->
		SELECT *
		  FROM (SELECT rownum rownum_,
		  			   b.count_,
		  			   a.*
		  		  FROM (SELECT * FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list10)
		  		   			<isNotNull property="findText">
		                         WHERE (UPPER(ri_cd) LIKE NVL(UPPER(#findText#), '%') OR UPPER(ri_name) LIKE NVL(UPPER(#findText#), '%'))
		             	 	</isNotNull>
		  		  		  	<isEqual property="sortColumn" compareValue="riCd">
		  		  		  		ORDER BY ri_cd
		  		  		  	</isEqual>
		  		  		  	<isEqual property="sortColumn" compareValue="riName">
		  		  		  		ORDER BY ri_name
		  		  		  	</isEqual>
		  		  		  	<isNotNull property="sortColumn">
		  		  		  		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
		  		  		  	</isNotNull>
		  		  		  ) a,
		  		  	   (SELECT COUNT(*) count_ FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list10)
		  		  	   		<isNotNull property="findText">
		                         WHERE (UPPER(ri_cd) LIKE NVL(UPPER(#findText#), '%') OR UPPER(ri_name) LIKE NVL(UPPER(#findText#), '%'))
		             	 	</isNotNull>) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	
	<procedure id="getGIISReinsurerByRiCd" resultMap="GIISReinsurerResultMap5">
		SELECT * FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_by_ri_cd(#riCd#))
	</procedure>
	
	<select id="getGIISReinsurerLOV" resultMap="GIISReinsurerLOVResultMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_,
		  			   b.count_,
		  			   a.*
		  		  FROM (SELECT *
		  		  		  FROM TABLE (GIIS_REINSURER_PKG.get_reinsurer_list6(#riName#, #findText#))
			  		  		<isNotNull property="notIn">
		                  		WHERE ri_cd NOT IN ($notIn$)
		                    </isNotNull>
		  		  		  	<isEqual property="sortColumn" compareValue="riSname">
		  		  		  		ORDER BY ri_sname
		  		  		  	</isEqual>
		  		  		  	<isEqual property="sortColumn" compareValue="riName">
		  		  		  		ORDER BY ri_name
		  		  		  	</isEqual>
		  		  		  	<isNotNull property="sortColumn">
		  		  		  		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
		  		  		  	</isNotNull>
		  		  		  ) a,
		  		  	   (SELECT COUNT(*) count_
		  		  	      FROM TABLE (GIIS_REINSURER_PKG.get_reinsurer_list6(#riName#, #findText#))
		  		  	      <isNotNull property="notIn">
		                  		WHERE ri_cd NOT IN ($notIn$)
		                  </isNotNull>) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getReinsurerLOV2" parameterClass="java.util.HashMap" resultMap="GIISReinsurerResultGridMap" >
		SELECT * 
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIIS_REINSURER_PKG.get_reinsurer_list7)
		                  <isNotNull property="notIn">
		                  		WHERE ri_cd NOT IN ($notIn$)
		                  		<isNotNull property="findText">
		                  			AND (UPPER(ri_cd) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_sname) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_name) LIKE NVL(UPPER(#findText#), '%%'))
		                  		</isNotNull>
		                  </isNotNull>
                          <isNull property="notIn">
                          		<isNotNull property="findText">
							 		WHERE (UPPER(ri_cd) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_sname) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_name) LIKE NVL(UPPER(#findText#), '%%'))
						  		</isNotNull>
						  </isNull>
		                  <isEqual property="sortColumn" compareValue="riCd">
			              		ORDER BY ri_cd
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="riSname">
			              		ORDER BY ri_sname
			              </isEqual>		
		                  <isEqual property="sortColumn" compareValue="riName">
			              		ORDER BY ri_name
			              </isEqual>	
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_REINSURER_PKG.get_reinsurer_list7)
		                  <isNotNull property="notIn">
		                  		WHERE ri_cd NOT IN ($notIn$)
		                  		<isNotNull property="findText">
		                  			AND (UPPER(ri_cd) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_sname) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_name) LIKE NVL(UPPER(#findText#), '%%'))
		                  		</isNotNull>
		                  </isNotNull>
                          <isNull property="notIn">
                          		<isNotNull property="findText">
							 		WHERE (UPPER(ri_cd) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_sname) LIKE NVL(UPPER(#findText#), '%%') OR UPPER(ri_name) LIKE NVL(UPPER(#findText#), '%%'))
						  		</isNotNull>
						  </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#		
	</select>
	
	<select id="getInputVatRateGIRIS002" parameterClass="String" resultClass="String">
		SELECT GIIS_REINSURER_PKG.get_input_vat_rt(#riCd#) FROM DUAL
	</select>
	
	<!-- Added finText reymon 05032013 -->
	<select id="getGIISReinsurerLOV2" resultMap="GIISReinsurerResultMapGrid">
		SELECT *
		  FROM (SELECT rownum rownum_,
		  			   b.count_,
		  			   a.*
		  		  FROM (SELECT *
		  		  		  FROM TABLE (GIIS_REINSURER_PKG.get_reinsurer_list8(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #policyId#, #riCd#))
		  		  		  	<isNotNull property="findText">
		  		  		  		WHERE ri_cd LIKE #findText#
		  		  		  		   OR UPPER(ri_name) LIKE UPPER(#findText#)
		  		  		  	</isNotNull>
		  		  		  	<isEqual property="sortColumn" compareValue="riCd">
		  		  		  		ORDER BY ri_cd
		  		  		  	</isEqual>
		  		  		  	<isEqual property="sortColumn" compareValue="riName">
		  		  		  		ORDER BY ri_name
		  		  		  	</isEqual>
		  		  		  	<isNotNull property="sortColumn">
		  		  		  		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
		  		  		  	</isNotNull>
		  		  		  ) a,
		  		  	   (SELECT COUNT(*) count_
		  		  	      FROM TABLE (GIIS_REINSURER_PKG.get_reinsurer_list8(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #policyId#, #riCd#))
		  		  	    <isNotNull property="findText">
	  		  		  		WHERE ri_cd LIKE #findText#
	  		  		  		   OR UPPER(ri_name) LIKE UPPER(#findText#)
	  		  		  	</isNotNull>
		  		  		  	) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="checkIfBinderExist" parameterClass="java.util.Map" resultClass="String">   <!-- added by steven 5.17.2012 -->
		 SELECT 'Y'Data FROM TABLE(giac_outfacul_prem_payts_pkg.get_giac_outfacul_prem_payts (#gaccTranId#, #userId#, #moduleName#))
		 	WHERE binder_id = #binderId#
	</select>
	
	<!-- pj diaz 01/30/2013 -->
	<select id="getClaimCedantLOV" resultMap="GIISReinsurerCedantLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_,
		  			   b.count_,
		  			   a.*
		  		  FROM (SELECT *
		  		  		  FROM TABLE (GIIS_REINSURER_PKG.get_cedant_lov)
		  		  		  
		  		  		  <isNull property="findText">
		                	WHERE UPPER(RI_NAME) LIKE UPPER(#searchString#)
		          			OR RI_CD LIKE #searchString#
		                </isNull>
		                <isNotNull property="findText">
		                	WHERE UPPER(RI_NAME) LIKE UPPER(#findText#)
		          			OR RI_CD LIKE #findText#
		                </isNotNull>
		  		  		  	<isEqual property="sortColumn" compareValue="riCd">
		  		  		  		ORDER BY ri_cd
		  		  		  	</isEqual>
		  		  		  	<isEqual property="sortColumn" compareValue="riName">
		  		  		  		ORDER BY ri_name
		  		  		  	</isEqual>
		  		  		  	<isNotNull property="sortColumn">
		  		  		  		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
		  		  		  	</isNotNull>
		  		  		  ) a,
		  		  	   (SELECT COUNT(*) count_
		  		  	      FROM TABLE (GIIS_REINSURER_PKG.get_cedant_lov)
		  		  	      <isNull property="findText">
		                	WHERE UPPER(RI_NAME) LIKE UPPER(#searchString#)
		          			OR RI_CD LIKE #searchString#
		                </isNull>
		                <isNotNull property="findText">
		                	WHERE UPPER(RI_NAME) LIKE UPPER(#findText#)
		          			OR RI_CD LIKE #findText#
		                </isNotNull>) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIISReinsurerLOV5" resultMap="GIISReinsurerResultMapGrid">   <!-- added by shan 7.2.2013 -->
		SELECT *
		  FROM (SELECT rownum rownum_,
		  			   b.count_,
		  			   a.*
		  		  FROM (SELECT * FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list10)
		  		  			<isNull property="findText">
			          			<!-- UNION SELECT NULL, 'ALL REINSURERS', NULL FROM DUAL ORDER BY 1 -->
			          			WHERE (UPPER(ri_cd) LIKE UPPER(NVL(#searchString#, ri_cd)) 
			          			   <!-- OR UPPER(ri_name) LIKE UPPER(NVL(#searchString#, '%')) --> )
			          		</isNull>
			          		<!-- <isNotNull property="findText">
				          		<isEmpty property="findText">
				          			UNION SELECT NULL, 'ALL REINSURERS', NULL FROM DUAL ORDER BY 1
				          		</isEmpty>		          		
			          		</isNotNull> -->
		  		   			<isNotNull property="findText">
		                         WHERE (UPPER(ri_cd) LIKE UPPER(#findText#) 
		                            OR UPPER(ri_name) LIKE UPPER(#findText#))
		             	 	</isNotNull>
		  		  		  	<isEqual property="sortColumn" compareValue="riCd">
		  		  		  		ORDER BY ri_cd
		  		  		  	</isEqual>
		  		  		  	<isEqual property="sortColumn" compareValue="riName">
		  		  		  		ORDER BY ri_name
		  		  		  	</isEqual>
		  		  		  	<isNotNull property="sortColumn">
		  		  		  		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
		  		  		  	</isNotNull>
		  		  		  ) a,
		  		  	   (SELECT COUNT(*) count_ 
		  		  	      FROM (SELECT * FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list10)
				  		  		<isNull property="findText">
				          			<!-- UNION SELECT NULL, 'ALL REINSURERS', NULL FROM DUAL ORDER BY 1 -->
				          			WHERE (UPPER(ri_cd) LIKE UPPER(NVL(#searchString#, ri_cd)) 
			          			   <!-- OR UPPER(ri_name) LIKE UPPER(NVL(#searchString#, '%')) --> )
				          		</isNull>
				          		<!-- <isNotNull property="findText">
					          		<isEmpty property="findText">
					          			UNION SELECT NULL, 'ALL REINSURERS', NULL FROM DUAL ORDER BY 1
					          		</isEmpty>		          		
				          		</isNotNull> -->
			  		   			<isNotNull property="findText">
			                         WHERE (UPPER(ri_cd) LIKE UPPER(#findText#) 
			                            OR UPPER(ri_name) LIKE UPPER(#findText#))
			             	 	</isNotNull>)
		  		  	   ) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getReinsurerName" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT ri_name
		  FROM giis_reinsurer
		 WHERE UPPER(ri_cd) = UPPER(#riCd#)
	</select> 
	
	 <!-- added by : Kenneth L. 08.27.2013 GIPIS170 -->
	<select id="getGipis170RiLov" resultMap="GIISReinsurerResultMapGrid">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIIS_REINSURER_PKG.GET_REINSURER_LIST10)
	          	 WHERE 1=1
	          	 	<isNull prepend="AND" property="findText">
						upper(ri_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(ri_name) LIKE upper(#findText# || '%')
					</isNotNull>
		            <isEqual property="sortColumn" compareValue="riName">
	              		ORDER BY ri_name
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM TABLE(GIIS_REINSURER_PKG.GET_REINSURER_LIST10)
	          	 WHERE 1=1
	            	<isNull prepend="AND" property="findText">
						upper(ri_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(ri_name) LIKE upper(#findText# || '%')
					</isNotNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>	
 	
 	<select id="getGiris020RiLov" resultMap="GIISReinsurerResultMapGrid">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM (SELECT ri_cd, ri_sname ri_name FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list6('', '')) ORDER BY ri_cd)  
	          	 WHERE 1=1
	          	 <isNotNull property="searchString">	          	 
	          	 	<isNull prepend="AND" property="findText">
						( UPPER(ri_name) LIKE UPPER(#searchString#)
							OR UPPER (ri_cd) LIKE UPPER(#searchString#) ) 
					</isNull>
					<isNotNull prepend="AND" property="findText">
						( UPPER(ri_name) LIKE UPPER(#findText#)
							OR UPPER (ri_cd) LIKE UPPER(#findText#) ) 
					</isNotNull>
				 </isNotNull>
				 <isNull property="searchString">
				 	<isNotNull prepend="AND" property="findText">
						( UPPER(ri_name) LIKE UPPER(#findText#)
							OR UPPER (ri_cd) LIKE UPPER(#findText#) ) 
					</isNotNull>
				 </isNull>
		            <isEqual property="sortColumn" compareValue="riName">
	              		ORDER BY ri_name
		            </isEqual>
		            <isEqual property="sortColumn" compareValue="riCd">
	              		ORDER BY ri_cd
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM (SELECT * FROM (SELECT ri_cd, ri_sname ri_name FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_list6('', '')) ORDER BY ri_cd))
	          	 WHERE 1=1
	            	 <isNotNull property="searchString">	          	 
	          	 	<isNull prepend="AND" property="findText">
						( UPPER(ri_name) LIKE UPPER(#searchString#)
							OR UPPER (ri_cd) LIKE UPPER(#searchString#) ) 
					</isNull>
					<isNotNull prepend="AND" property="findText">
						( UPPER(ri_name) LIKE UPPER(#findText#)
							OR UPPER (ri_cd) LIKE UPPER(#findText#) ) 
					</isNotNull>
				 </isNotNull>
				 <isNull property="searchString">
				 	<isNotNull prepend="AND" property="findText">
						( UPPER(ri_name) LIKE UPPER(#findText#)
							OR UPPER (ri_cd) LIKE UPPER(#findText#) ) 
					</isNotNull>
				 </isNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
 	<select id="getGicls200RiLov" resultMap="GIISReinsurerResultMapGrid">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * 
	          	  		  FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_lov)  
	          	 		 WHERE 1=1
		          	 	<isNotNull prepend="AND" property="findText">
							( UPPER(ri_name) LIKE UPPER(#findText#)
								OR UPPER (ri_cd) LIKE UPPER(#findText#) ) 
						</isNotNull>
			            <isNull prepend="AND" property="findText">
							( UPPER(ri_name) LIKE UPPER(#searchString#)
								OR UPPER (ri_cd) LIKE UPPER(#searchString#) ) 
						</isNull>
						<isEqual property="sortColumn" compareValue="riName">
		              		ORDER BY ri_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="riCd">
		              		ORDER BY ri_cd
			            </isEqual>
			            <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM TABLE(GIIS_REINSURER_PKG.get_reinsurer_lov)  
	          	 WHERE 1=1
            	<isNotNull prepend="AND" property="findText">
					( UPPER(ri_name) LIKE UPPER(#findText#)
						OR UPPER (ri_cd) LIKE UPPER(#findText#) ) 
				</isNotNull>
	            <isNull prepend="AND" property="findText">
					( UPPER(ri_name) LIKE UPPER(#searchString#)
						OR UPPER (ri_cd) LIKE UPPER(#searchString#) ) 
				</isNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>		
 	
 	<select id="getGiiss030RecList" resultMap="GIIS030ReinsurerResultMap">
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.*  
		  	      FROM (SELECT * FROM TABLE(giiss030_pkg.get_rec_list(#riCd#, #riSname#, #riName#))
		                  <isEqual property="sortColumn" compareValue="riCd">
			              		ORDER BY ri_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="riSname">
			              		ORDER BY ri_sname
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="riName">
			              		ORDER BY ri_name
			              </isEqual>			           
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(giiss030_pkg.get_rec_list(#riCd#, #riSname#, #riName#))
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	
	
	<select id="validateGIISS030MobileNo" resultMap="validateGIISS030MobileNoResultMap">
		SELECT * FROM TABLE (GIISS030_PKG.validate_mobile_no(#param#,#field#,#ctype#))							
	</select>		

	<select id="getGIISS030MaxRiCd" resultClass="java.lang.Integer">
		SELECT GIISS030_PKG.get_max_ri_cd FROM dual							
	</select>
	
	<procedure id="valAddReinsurer" parameterClass="java.lang.String">
 		BEGIN
 			giiss030_pkg.val_add_rec(#riName#);
 		END;
 	</procedure> 
	
	<procedure id="setReinsurer" parameterClass="GIISReinsurer">
	    DECLARE
	    	v_rec giis_reinsurer%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
 			
 			v_rec.ri_cd := #riCd#;
 			v_rec.local_foreign_sw := #localForeignSw#;
 			v_rec.ri_status_cd := #riStatusCd#;
 			v_rec.ri_sname := #riSname#;
 			v_rec.ri_name := #riName#;
 			v_rec.mail_address1 := #mailAddress1#;
			v_rec.mail_address2 := #mailAddress2#; 
			v_rec.mail_address3 := #mailAddress3#; 
			v_rec.bill_address1 := #billAddress1#; 
			v_rec.bill_address2 := #billAddress2#; 
			v_rec.bill_address3 := #billAddress3#; 
			v_rec.phone_no := #phoneNo#;
			v_rec.fax_no := #faxNo#;
			v_rec.telex_no := #telexNo#; 
			v_rec.contact_pers := #contactPers#; 
			v_rec.attention := #attention#;
			v_rec.int_tax_rt := #intTaxRt#; 
			v_rec.pres_and_xos := #presAndXos#; 
			v_rec.liscence_no := #liscenceNo#;
			v_rec.max_line_net_ret := #maxLineNetRet#;
			v_rec.max_net_ret := #maxNetRet#;
			v_rec.tot_asset := #totAsset#;
			v_rec.tot_liab := #totLiab#;
			v_rec.tot_net_worth := #totNetWorth#;
			v_rec.capital_struc := #capitalStruc#; 
			v_rec.ri_type := #riType#;
			v_rec.eff_date := #effDate#; 
			v_rec.expiry_date := #expiryDate#;
			v_rec.cp_no := #cpNo#;
			v_rec.sun_no := #sunNo#; 
			v_rec.smart_no := #smartNo#; 
			v_rec.globe_no := #globeNo#; 
			v_rec.input_vat_rate := #inputVatRate#; 
			v_rec.ri_tin := #riTin#;
			v_rec.facilities := #facilities#;	
 			v_rec.user_id := #userId#;
 			v_rec.remarks := #remarks#;
 			
 			GIISS030_PKG.set_rec(v_rec);
 		END;
 	</procedure>
		
	<resultMap id="showGiacs220TreatyPanelResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="RI_CD"				property="riCd" />
		<result column="RI_NAME"			property="riName" />
		<result column="ENDING_BAL_AMT"		property="endingBalAmt" />
		<result column="FINAL_TAG"			property="finalTag" />
		<result column="COMPUTE_TAG"		property="computeTag" />
		<result column="LINE_CD"			property="lineCd" />
		<result column="TRTY_YY"			property="trtyYy" />
		<result column="TRTY_SEQ_NO"		property="trtySeqNo" />
		<result column="USER_ID"			property="userId" />
		<result column="EXT_USER_ID"		property="extUserId" />
		<result column="LAST_UPDATE"		property="lastUpdate" />
		<result column="LAST_EXTRACT"		property="lastExtract" />
	</resultMap>
	<select id="showGiacs220TreatyPanel" resultMap="showGiacs220TreatyPanelResultMap" parameterClass="map">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIIS_TRTY_PANEL_PKG.get_trty_panel_list(#lineCd#, #shareCd#, #treatyYy#, #year#, #qtr#))
							<isNotNull property="filter">
								WHERE 1 = 1 
									<isNotEmpty prepend="AND" property="riCd">
										ri_cd = #riCd#
									</isNotEmpty>
	 								<isNotEmpty prepend="AND" property="riName">
										UPPER(ri_name) LIKE UPPER(#riName#)
									</isNotEmpty>	
									<isNotEmpty prepend="AND" property="finalTag">
										UPPER(final_tag) LIKE UPPER(#finalTag#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endingBalAmt">
										NVL(ending_bal_amt, 0) = #endingBalAmt#
									</isNotEmpty>											 																																														
							</isNotNull>					
							<isEqual property="sortColumn" compareValue="riCd">
								ORDER BY ri_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="riName">
								ORDER BY ri_name
							</isEqual>	
							<isEqual property="sortColumn" compareValue="finalTag">
								ORDER BY final_tag
							</isEqual>		
							<isEqual property="sortColumn" compareValue="endingBalAmt">
								ORDER BY ending_bal_amt
							</isEqual>												
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>	
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIIS_TRTY_PANEL_PKG.get_trty_panel_list(#lineCd#, #shareCd#, #treatyYy#, #year#, #qtr#))	
						   <isNotNull property="filter">
								WHERE 1 = 1 
									<isNotEmpty prepend="AND" property="riCd">
										ri_cd = #riCd#
									</isNotEmpty>
	 								<isNotEmpty prepend="AND" property="riName">
										UPPER(ri_name) LIKE UPPER(#riName#)
									</isNotEmpty>	
									<isNotEmpty prepend="AND" property="finalTag">
										UPPER(final_tag) LIKE UPPER(#finalTag#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endingBalAmt">
										NVL(ending_bal_amt, 0) = #endingBalAmt#
									</isNotEmpty>											 																																														
							</isNotNull>		
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	
	<select id="getAllReinsurer" resultMap="GIIS030ReinsurerResultMap">
		SELECT rownum rownum_,
			   '1' count_,
			   a.*
					FROM (SELECT * 
							FROM TABLE (giiss030_pkg.get_rec_list(#riCd#, #riSname#, #riName#))) a
	</select>
</sqlMap>