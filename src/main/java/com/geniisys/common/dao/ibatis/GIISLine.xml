<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIISLine">
 	
 	<cacheModel id="oneDayClient" type="MEMORY">
    	<flushInterval hours="24"/>
    	<property name="reference-type" value="WEAK"/>
  	</cacheModel>
  
   	<resultMap id="GIISLine" class="com.geniisys.common.entity.GIISLine" >
   		<result column="LINE_CD" 				property="lineCd" 				jdbcType="VARCHAR" />
   		<result column="ACCT_LINE_CD" 			property="acctlineCd" 			jdbcType="NUMBER" />
   		<result column="LINE_NAME"				property="lineName"				jdbcType="VARCHAR" />
   		<result column="PACK_POL_FLAG"			property="packPolFlag"			jdbcType="VARCHAR" />
   		<result column="SC_TAG"					property="scTag"				jdbcType="VARHCAR" />
   		<result column="REMARKS"				property="remarks"				jdbcType="VARCHAR" />
   		<result column="USER_ID"				property="userId"				jdbcType="VARCHAR" />
   		<result column="LAST_UPDATE"			property="lastUpdate"			jdbcType="DATE" />
   		<result column="CPI_REC_NO"				property="cpiRecNo"				jdbcType="NUMBER" />
   		<result column="CPI_BRANCH_CD"			property="cpiBranchCd"			jdbcType="VARCHAR" />
   		<result column="SUBLINE_SW"				property="sublineSW"			jdbcType="VARCHAR" />
   		<result column="MENU_LINE_CD"			property="menuLineCd"			jdbcType="VARCHAR" />
   		<result column="PROF_COMM_TAG"			property="profCommTag"			jdbcType="VARCHAR" />
   		<result column="RECAPS_LINE_CD"			property="recapsLineCd"			jdbcType="VARCHAR" />
   		<result column="NON_RENEWAL_TAG"		property="nonRenewalTag"		jdbcType="VARCHAR" />
  	</resultMap>
   
    <resultMap id="GIISLineListing" class="com.geniisys.common.entity.GIISLine" >
	  	<result column="LINE_CD" 			property="lineCd" 			jdbcType="VARCHAR" />
	  	<result column="LINE_NAME"			property="lineName"			jdbcType="VARCHAR" />
  	</resultMap>
  	
  	<resultMap id="GIISLineListing2" class="com.geniisys.common.entity.GIISLine" >
	  	<result column="LINE_CD" 			property="lineCd" 			jdbcType="VARCHAR" />
	  	<result column="LINE_NAME"			property="lineName"			jdbcType="VARCHAR" />
	  	<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
  	</resultMap>
  	
  	<resultMap id="GIISLineIssourceListingCheckedMap" class="com.geniisys.common.entity.GIISLine" >
	  	<result column="LINE_CD" 			property="lineCd" 			jdbcType="VARCHAR" />
	  	<result column="LINE_NAME"			property="lineName"			jdbcType="VARCHAR" />
	  	<result column="ISS_CD"				property="issCd"			jdbcType="VARCHAR" />
	  	<result column="ISS_NAME"			property="issName"			jdbcType="VARCHAR" />
  	</resultMap>
  	
  	<resultMap id="GIISLineListingFlagMap" class="com.geniisys.common.entity.GIISLine" >
	  	<result column="LINE_CD" 					property="lineCd" />
	  	<result column="LINE_NAME"				property="lineName"/>
   		<result column="PACK_POL_FLAG"		property="packPolFlag"	/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
  	</resultMap>
  	
 	<resultMap id="GIISLineListMapGrid" class="com.geniisys.common.entity.GIISLine" >
	  	<result column="LINE_CD" 			property="lineCd" />
	  	<result column="LINE_NAME"			property="lineName" />
	  	<result column="MENU_LINE_CD" 		property="menuLineCd" />
   		<result column="PACK_POL_FLAG"		property="packPolFlag" />
   		<result column="ISS_CD"				property="issCd" />
   		<result column="ISS_NAME"			property="issName" />
		<result column="ROWNUM_" 			property="rowNum"/>
		<result column="COUNT_" 			property="rowCount"/>
  	</resultMap>
  	 	
  	<parameterMap class="map"  id="validatePolLineCdMap">
		<parameter property="polLineCd" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="polSublineCd" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="polIssCd" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="lineCd" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="issCd" 					jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="userId" 				jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="moduleId" 			jdbcType="VARCHAR" javaType="java.lang.String" mode="IN"/>
		<parameter property="packPolFlag" 	jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
		<parameter property="msg" 					jdbcType="VARCHAR" javaType="java.lang.String" mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="validateLineCdMap">
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="sublineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="sublineName"	jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="lineName"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
		<parameter property="moduleId"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="IN"/>
		<parameter property="found"			jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="validateGIACS102LineCdMap">
		<parameter property="lineCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="lineName"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
	</parameterMap>
	
	<resultMap class="com.geniisys.common.entity.GIISLine" id="GIISLineManagementMap" extends="BaseEntity.TableGridResultMap">
		<result column="pack_pol_flag"		property="packPolFlag"/>
		<result column="prof_comm_tag"		property="profCommTag" />
		<result column="non_renewal_tag"	property="nonRenewalTag"/>
		<result column="special_dist_sw"	property="specialDistSw"/>	
		<result column="edst_sw"			property="edstSw"/>	
		<result column="line_cd" 			property="lineCd" />
	  	<result column="line_name"			property="lineName"/>
		<result column="acct_line_cd" 		property="acctlineCd"/>
		<result column="menu_line_cd"		property="menuLineCd"/>
		<result column="recaps_line_cd"		property="recapsLineCd"/>
		<result column="min_prem_amt"		property="minPremAmt"/>
		<result column="enrollee_tag"	    property="enrolleeTag"/>
		<result column="remarks"			property="remarks"/>
		<result column="user_id"			property="userId"/>
		<result column="last_update"		property="lastUpdate"/>
		<result column="other_cert_tag"		property="otherCertTag"/>
	</resultMap>
	
	<resultMap class="com.geniisys.common.entity.GIISLine" id="GIISRecapsCdMap">
		<result column="LINE_CD"		property="menuLineCd"		jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="GIISS119LineListing" class="java.util.HashMap"  extends="BaseEntity.TableGridResultMap">
	  	<result column="LINE_CD" 			property="lineCd" 		/>
  	</resultMap>
  	
  	<resultMap class="java.util.HashMap" id="GIPIS200SublineLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd" 		column="line_cd"/>
		<result property="lineName" 	column="line_name"/>			
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="Giiss204LineLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd" 		column="line_cd"/>
		<result property="lineName" 	column="line_name"/>
		<result property="menuLineCd" 	column="menu_line_cd"/>	
		<result property="packPolFlag" 	column="pack_pol_flag"/>		
		<result property="issCd" 		column="iss_cd"/>		
		<result property="issName" 		column="iss_name"/>				
	</resultMap>
  
  	<select id="getLineListingByUserId" resultMap="GIISLine">
   		select * from GIIS_LINE where USER_ID = #userId# order by line_name
   	</select>
  
  	<select id="getLineListing1"	resultMap="GIISLineListing">  	
  		select * from table(GIIS_LINE_PKG.get_line_listing('GIIMM015')) order by line_cd  
  	</select>
  
  	<select id="getGIISLineNameByLineCd" resultMap="GIISLineListing">
  		select LINE_NAME from GIIS_LINE where LINE_CD=#lineCd#
 	</select>
  
	<select id="getGiisLineList"	resultMap="GIISLineListing">  	
  		select line_cd, line_name from table(GIIS_LINE_PKG.get_giis_line_list) order by line_cd
  	</select>  
  	
  	<select id="getPackPolFlag" resultClass="java.lang.String">
  		SELECT GIIS_LINE_PKG.get_pack_pol_flag(#lineCd#) FROM DUAL 
  	</select>
  	
  	<select id="getCheckedLineIssourceList" resultMap="GIISLineIssourceListingCheckedMap" parameterClass="map">
  		SELECT * FROM TABLE(GIIS_LINE_PKG.get_checked_line_issource_list(#userId#, #moduleId#))
  	</select>
  
  	<select id="getMenuLineCd" resultClass="java.lang.String">
  		SELECT GIIS_LINE_PKG.get_menu_line_cd(#lineCd#) FROM DUAL
  	</select>
  	<select id="getLineName" parameterClass="java.lang.String" resultClass="java.lang.String">
  		SELECT GIIS_LINE_PKG.get_line_name(#lineCd#) FROM DUAL
  	</select>
  	<select id="getPolLinesForAssd" parameterClass="java.lang.Integer" resultMap="GIISLineListing">
  		SELECT * FROM TABLE(GIIS_LINE_PKG.get_pol_lines_for_assd(#assdNo#))
  	</select>
  	
  	<select id="getCheckedPackLineIssourceList" resultMap="GIISLineIssourceListingCheckedMap" parameterClass="map">
  		SELECT * FROM TABLE(GIIS_LINE_PKG.get_checked_pack_line_issource(#userId#, #moduleId#))
  	</select>
  	
  	<select id="getLineCdFlagLOV" resultMap="GIISLineListingFlagMap" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIIS_LINE_PKG.get_line_cd_flag(#userId#, #issCd#, #moduleId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="packPolFlag">
			              		ORDER BY pack_pol_flag
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_line_cd_flag(#userId#, #issCd#, #moduleId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="validatePolLineCd"  parameterMap="validatePolLineCdMap">
		CALL GIIS_LINE_PKG.validate_pol_line_cd(?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
  
  	<select id="getAllLineLOV" resultMap="GIISLineListMapGrid" parameterClass="java.util.HashMap" >
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIIS_LINE_PKG.get_all_line_list(#moduleId#, #issCd#,#userId#))
		                  WHERE 1=1
		                  <isNotEmpty prepend="AND" property="findText">
		                  	 UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotEmpty>
		                  <isNotEmpty prepend="AND" property="searchString">
		                  	 UPPER(line_cd) LIKE UPPER(#searchString#)
		                  	   OR UPPER(line_name) LIKE UPPER(#searchString#)
		                  </isNotEmpty>		                  
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_all_line_list(#moduleId#, #issCd#,#userId#))
		                  <!-- <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull> -->
		                  WHERE 1=1
		                  <isNotEmpty prepend="AND" property="findText">
		                  	 UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotEmpty>
		                  <isNotEmpty prepend="AND" property="searchString">
		                  	 UPPER(line_cd) LIKE UPPER(#searchString#)
		                  	   OR UPPER(line_name) LIKE UPPER(#searchString#)
		                  </isNotEmpty>	
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getPolbasicLineLOV" resultMap="GIISLineListMapGrid" parameterClass="java.util.HashMap" >
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (giis_line_pkg.get_polbasic_line_list(#issCd#, #moduleId#, #userId#))
		                  <isNotNull property="findText" prepend="AND">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giis_line_pkg.get_polbasic_line_list(#issCd#, #moduleId#, #userId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<!-- modified by kenneth 05.23.2014 -->
  	<select id="getPrintExpReportLineLOV"	resultMap="GIISLineListing2" parameterClass="java.util.HashMap">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (select line_cd, line_name from table(giis_line_pkg.get_exp_rep_line_lov(#issCd#,#moduleId#,#userId#))
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 	   OR UPPER(line_name) LIKE UPPER(#findText#)
				         	   )
				          </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giis_line_pkg.get_exp_rep_line_lov(#issCd#,#moduleId#,#userId#))
		                  <isNotNull property="findText">
				         		WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 	   OR UPPER(line_name) LIKE UPPER(#findText#)
				         	   )
				          </isNotNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<procedure id="validatePurgeLineCd" parameterMap="validateLineCdMap">
		CALL GIIS_LINE_PKG.validate_purge_line_cd(?, ?, ?, ?, ?, ?, ?)
	</procedure>
  
  	<select id="validateLineCdGiexs006" resultMap="GIISLineListing" parameterClass="java.util.HashMap">
  		SELECT * FROM TABLE(giis_line_pkg.validate_line_cd_giexs006(#lineCd#,#issCd#,#moduleId#))
  	</select>
  
	<select id="getGiisLineLOV"	resultMap="GIISLineListing2">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_giis_line_list)
		          		 <isNotNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#))
				         </isNotNull>
				         <!-- Added by pol cruz  -->
				         <isNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd)) 
				         	 OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, line_name)))
				         </isNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_giis_line_list)
		                 <isNotNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#))
				         </isNotNull>
				         <!-- Added by pol cruz  -->
				         <isNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd)) 
				         	 OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, line_name)))
				         </isNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getLineMaintenance" resultMap ="GIISLineManagementMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_giis_line_group(#lineCd#,#lineName#,#acctlineCd#,#menuLineCd#,#recapsLineCd#,#minPremAmt#,#remarks#))
		          		  <isNotNull property="filter">
							WHERE 1=1
							<isNotEmpty prepend="AND"  property="packPolFlag">
								UPPER(pack_pol_flag) = UPPER(#packPolFlag#)
							</isNotEmpty>	
							<isNotEmpty prepend="AND"  property="profCommTag">
								UPPER(prof_comm_tag) = UPPER(#profCommTag#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="nonRenewalTag">
								UPPER(non_renewal_tag) = UPPER(#nonRenewalTag#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="specialDistSw">
								UPPER(special_dist_sw) = UPPER(#specialDistSw#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="edstSw">
								UPPER(edst_sw) = UPPER(#edstSw#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="enrolleeTag">
								UPPER(enrollee_tag) = UPPER(#enrolleeTag#)
							</isNotEmpty>
						  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="acctlineCd">
			              		ORDER BY acct_line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="menuLineCd">
			              		ORDER BY menu_line_cd
		          		  </isEqual>
		          		  <isEqual property="sortColumn" compareValue="recapsLineCd">
		          		  		ORDER BY recaps_line_cd
		          		  </isEqual>
		          		  <isEqual property="sortColumn" compareValue="minPremAmt">
		          		  		ORDER BY min_prem_amt
		          		  </isEqual>
		          		  <isEqual property="sortColumn" compareValue="remarks">
		          		  		ORDER BY remarks
		          		  </isEqual> 
		          		  <isEqual property="sortColumn" compareValue="packPolFlag">
		          		  		ORDER BY pack_pol_flag
		          		  </isEqual> 
		          		  <isEqual property="sortColumn" compareValue="profCommTag">
		          		  		ORDER BY prof_comm_tag
		          		  </isEqual> 
		          		  <isEqual property="sortColumn" compareValue="nonRenewalTag">
		          		  		ORDER BY non_renewal_tag
		          		  </isEqual> 
		          		  <isEqual property="sortColumn" compareValue="specialDistSw">
		          		  		ORDER BY special_dist_sw
		          		  </isEqual> 
		          		  <isEqual property="sortColumn" compareValue="edstSw">
		          		  		ORDER BY edst_sw
		          		  </isEqual> 
		          		  <isEqual property="sortColumn" compareValue="enrolleeTag">
		          		  		ORDER BY enrollee_tag
		          		  </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_giis_line_group(#lineCd#,#lineName#,#acctlineCd#,#menuLineCd#,#recapsLineCd#,#minPremAmt#,#remarks#))
		                  <isNotNull property="filter">
							WHERE 1=1
							<isNotEmpty prepend="AND"  property="packPolFlag">
								UPPER(pack_pol_flag) = UPPER(#packPolFlag#)
							</isNotEmpty>	
							<isNotEmpty prepend="AND"  property="profCommTag">
								UPPER(prof_comm_tag) = UPPER(#profCommTag#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="nonRenewalTag">
								UPPER(non_renewal_tag) = UPPER(#nonRenewalTag#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="specialDistSw">
								UPPER(special_dist_sw) = UPPER(#specialDistSw#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="edstSw">
								UPPER(edst_sw) = UPPER(#edstSw#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="enrolleeTag">
								UPPER(enrollee_tag) = UPPER(#enrolleeTag#)
							</isNotEmpty>
						  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>  
  	
  	<select id="getAllLine" resultMap ="GIISLineManagementMap">
		SELECT '1' rownum_, 
		       '1' count_, 
		       a.* FROM TABLE(GIIS_LINE_PKG.get_giis_line_group(#lineCd#,#lineName#,#acctlineCd#,#menuLineCd#,#recapsLineCd#,#minPremAmt#,#remarks#)) a
  	</select>      
  	<!-- added by steven 12.12.2013; for module GIISS001-->
  	<resultMap class="java.util.HashMap" id="giiss001LineLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"			property="lineCd" />
		<result column="line_name"			property="lineName" />
	</resultMap>
	
	<select id="getGiiss001MenuLineLOV" resultMap="giiss001LineLOVMap">
		SELECT *
			FROM (SELECT rownum rownum_,
			b.count_,
			a.*
			FROM (SELECT *
				FROM TABLE(giis_line_pkg.get_giiss001_menu_line_cd)
				WHERE UPPER (line_cd) LIKE UPPER (NVL (#findText#, line_cd))
                             OR UPPER (line_name) LIKE UPPER (NVL (#findText#, line_name))
			<isNotNull property="sortColumn">
				<isEqual property="sortColumn" compareValue="lineCd">
					ORDER BY line_cd
				</isEqual>
				<isEqual property="sortColumn" compareValue="lineName">
					ORDER BY line_name
				</isEqual>
				<isEqual property="ascDescFlg" compareValue="ASC">
					ASC
				</isEqual>
				<isEqual property="ascDescFlg" compareValue="DESC">
					DESC
				</isEqual>
			</isNotNull>
			) a,
			(SELECT count(*) count_
				FROM TABLE(giis_line_pkg.get_giiss001_menu_line_cd)
				WHERE UPPER (line_cd) LIKE UPPER (NVL (#findText#, line_cd))
                             OR UPPER (line_name) LIKE UPPER (NVL (#findText#, line_name))
			) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss001RecapLineLOV" resultMap="giiss001LineLOVMap">
		SELECT *
			FROM (SELECT rownum rownum_,
			b.count_,
			a.*
			FROM (SELECT *
				FROM TABLE(giis_line_pkg.get_giiss001_recap_line_cd(#findText#))
			<isNotNull property="sortColumn">
				<isEqual property="sortColumn" compareValue="lineCd">
					ORDER BY line_cd
				</isEqual>
				<isEqual property="sortColumn" compareValue="lineName">
					ORDER BY line_name
				</isEqual>
				<isEqual property="ascDescFlg" compareValue="ASC">
					ASC
				</isEqual>
				<isEqual property="ascDescFlg" compareValue="DESC">
					DESC
				</isEqual>
			</isNotNull>
			) a,
			(SELECT count(*) count_
				FROM TABLE(giis_line_pkg.get_giiss001_recap_line_cd(#findText#))
				) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
  	<procedure id="setGIISLine" parameterClass="com.geniisys.common.entity.GIISLine">
	    DECLARE
	    	v_rec giis_line%ROWTYPE;
 		BEGIN		     
 			giis_users_pkg.app_user := #userId#;
			v_rec.line_cd := #lineCd#; 
			v_rec.line_name := #lineName#; 
			v_rec.acct_line_cd := #acctlineCd#; 
			v_rec.menu_line_cd := #menuLineCd#;
			v_rec.recaps_line_cd := #recapsLineCd#; 
			v_rec.min_prem_amt := #minPremAmt#; 
			v_rec.pack_pol_flag := #packPolFlag#;
			v_rec.prof_comm_tag := #profCommTag#; 
			v_rec.non_renewal_tag := #nonRenewalTag#; 
			v_rec.special_dist_sw := #specialDistSw#; 
			v_rec.edst_sw := #edstSw#;
			v_rec.enrollee_tag := #enrolleeTag#;
 			v_rec.remarks := #remarks#;
 			v_rec.user_id := #userId#;
 			v_rec.other_cert_tag := #otherCertTag#;
 			giis_line_pkg.set_giiss001(v_rec);
 		END;
 	</procedure>
 	
 	<delete id="delGIISLine" parameterClass="java.lang.String">
		BEGIN
 			giis_line_pkg.delete_giis_line_group(#recId#);
 		END;
 	</delete>
 	
 	<procedure id="valDeleteGIISLine" parameterClass="java.lang.String">
 		BEGIN
 			giis_line_pkg.val_del_giiss001(#recId#);
 		END;
 	</procedure>
 	
 	<procedure id="valAddGIISLine" parameterClass="java.util.HashMap">
 		BEGIN
 			giis_line_pkg.val_add_giiss001(#lineCd#, #acctlineCd#);
 		END;
 	</procedure> 	
 	
 	<procedure id="valMenuLineCd" parameterClass="java.lang.String">
 		BEGIN
 			giis_line_pkg.val_menu_line_cd_giiss001(#recId#);
 		END;
 	</procedure>
  	<!-- end steven -->
	
	<select id="getLineCdLOVGiuts036" resultMap="GIISLineListing2">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT line_cd, line_name FROM TABLE(GIIS_LINE_PKG.get_giis_line_list)
		          		 WHERE (line_cd = GIISP.V('LINE_CODE_SU') 
        						OR menu_line_cd = GIISP.V('LINE_CODE_SU'))
		          		 <isNotNull property="findText">
				         AND (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#)
				         	 )
				         </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_giis_line_list)
		                 WHERE (line_cd = GIISP.V('LINE_CODE_SU') 
        						OR menu_line_cd = GIISP.V('LINE_CODE_SU'))
		                 <isNotNull property="findText">
				           AND (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#)
				         	 )
				         </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
	
	<select id="getLineCdGiuts036" resultMap="GIISLineListing">
		SELECT line_cd, line_name
		  FROM giis_line
		 WHERE (   line_cd = GIISP.V('LINE_CODE_SU') 
        		OR menu_line_cd = GIISP.V('LINE_CODE_SU')) 
		   AND line_cd = #lineCd#
	</select>
	
	<select id="getRecapsCdList" resultMap ="GIISRecapsCdMap">
		SELECT DISTINCT line_cd
   		FROM giis_line
   		ORDER BY line_cd
  	</select>
  	
  	<insert id="setLineMaintenanceRow" parameterClass="java.util.HashMap">
  		BEGIN
  			giis_users_pkg.app_user := #appUser#; <!-- added by Kenneth L. 04.11.2014 -->
  			GIIS_LINE_PKG.set_giis_line_group(#lineCd#,#lineName#,#acctlineCd#,#menuLineCd#,#recapsLineCd#,#minPremAmt#,#remarks#,#packPolFlag#,#profCommTag#,#nonRenewalTag#);
  		END;
  	</insert>
  	
  	<delete id="deleteLineMaintenanceRow" parameterClass="java.util.HashMap">
  		BEGIN
  			GIIS_LINE_PKG.delete_giis_line_group(#lineCd#);
  		END;
  	</delete>
  	
  	<select id="validateDeleteLine" parameterClass="java.lang.String" resultClass="java.lang.String">
  		SELECT validate_delete_line(#lineCdToDelete#) FROM DUAL
  	</select>
	
	<select id="validateAddLine" parameterClass="java.lang.String" resultClass="java.lang.String">
		SELECT validate_add_line(#lineCdToAdd#) FROM DUAL
	</select>
	
	<select id="validateAcctLineCd" parameterClass="java.lang.String" resultClass="java.lang.String">
		 SELECT validate_acct_ln_cd(#acctLineCd#) FROM DUAL
	</select>
	
	<select id="getLineCdLOVGiuts007"	resultMap="GIISLineListing2">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(giuts007_pkg.get_line_cd_lov(#lineCd#,#issCd#,#moduleId#,#userId#)) 
		          		 <isNotNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#)
				         	 )
				         </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giuts007_pkg.get_line_cd_lov(#lineCd#,#issCd#,#moduleId#,#userId#))
		                 <isNotNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#)
				         	 )
				         </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
	<select id="getGiisLineLOV2" resultMap ="GIISLineListing2"  parameterClass= "java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT DISTINCT LINE_CD, LINE_NAME FROM TABLE(GIIS_LINE_PKG.get_giis_line_list)          
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			               <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>)a,(SELECT count(*) count_ 
		                  FROM GIIS_LINE) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>  	
  	
  	<select id="validateLineCd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIIS_LINE_PKG.validate_line_cd(#polIssCd#, #moduleId#, #lineCd#) FROM DUAL
	</select> 
	
	<!-- MAE 10.18.2012 -->
	<select id="getGiisPostingLimitLOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">
	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIISS207_PKG.get_lines(#postingUser#,#issCd#,#maintenanceUser#))
						  <isNull property="findText">
						   	 		WHERE line_cd LIKE upper(NVL(#search#, line_cd))
						   	 			OR UPPER(line_name) LIKE UPPER(NVL(#search#, line_name))
						  </isNull>
			          	  <isNotNull property="findText">
		                  	WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
		                  	 		 OR UPPER(line_name) LIKE UPPER(#findText#))
		             	  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">	
			              			DESC
			              		</isEqual>
			              </isNotNull>
			            ) a,
		                (SELECT count(*) count_ 
		                   FROM TABLE (GIISS207_pkg.get_lines(#postingUser#,#issCd#,#maintenanceUser#))
		                  <isNull property="findText">
						   	 		WHERE line_cd LIKE upper(NVL(#search#, line_cd))
						   	 			OR UPPER(line_name) LIKE UPPER(NVL(#search#, line_name))
						  </isNull>
			          	  <isNotNull property="findText">
		                  	WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
		                  	 		 OR UPPER(line_name) LIKE UPPER(#findText#))
		             	  </isNotNull>	                   
		                ) b )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- MAE 10.18.2012 -->
	
	<!-- Halley 11.20.2012 -->
	<select id="getGIIS060LineListing"	resultMap="GIISLineListing2">  	
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_all_line_list('GIISS060', NULL, #appUser#))
		          		 <isNotNull property="filter">
				         WHERE (UPPER(line_cd) LIKE UPPER(NVL(#lineCd#, line_cd)) 
				         	 AND UPPER(line_name) LIKE UPPER(NVL(#lineName#, line_name))
				         	 )
				         </isNotNull>
				         <!-- <isNull property="sortColumn">
				         		ORDER BY line_cd
				         </isNull> -->
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_all_line_list('GIISS060', NULL, #appUser#))
		                 <isNotNull property="filter">
				         WHERE (UPPER(line_cd) LIKE UPPER(NVL(#lineCd#, line_cd)) 
				         	 AND UPPER(line_name) LIKE UPPER(NVL(#lineName#, line_name))
				         	 )
				         </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	<!-- Halley 11.20.2012 -->
  	
  	<!-- Shan 01.30.2013 -->
	<select id="getLineCd" resultClass="java.lang.String">
		SELECT GIIS_LINE_PKG.get_line_code(#lineName#) FROM DUAL
	</select>
  	<!-- Shan 01.30.2013 -->
	
	<parameterMap class="map" id="getLineNameGicls201Map">
		<parameter property="moduleId"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="lineCd"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="userId"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="lineName"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="found"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="getLineNameGicls201" parameterMap="getLineNameGicls201Map" >
		 CALL GIIS_LINE_PKG.GET_LINE_NAME_GICLS201(?, ?, ?, ?, ?)
	</procedure>
	
	<!-- Kenneth L 04.24.2013 -->
	<select id="getLineGIUTS022LOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		 
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_line_lov_giuts022(#search#, #userId#))
          	   	<isNotNull property="findText">
					WHERE 1=1
					<isNotEmpty prepend="AND"  property="findText">
						(line_cd LIKE upper(#findText#) OR
						 line_name LIKE upper(#findText#))
					</isNotEmpty>
				</isNotNull>
	            <isEqual property="sortColumn" compareValue="lineCd">
              		ORDER BY line_cd
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="lineName">
              		ORDER BY line_name
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(GIIS_LINE_PKG.get_line_lov_giuts022(#search#, #userId#))
	          	<isNotNull property="findText">
					WHERE 1=1
					<isNotEmpty prepend="AND"  property="findText">
						(line_cd LIKE upper(#findText#) OR
						 line_name LIKE upper(#findText#))
					</isNotEmpty>
				</isNotNull>)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
  	
	
	<resultMap class="java.util.HashMap" id="giacs045LineLov" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"		property="lineCd" />
		<result column="line_name"		property="lineName" />
	</resultMap>
	
	<select id="getGIACS045LineLov" resultMap="giacs045LineLov">
		SELECT *
            FROM (SELECT ROWNUM rownum_, b.count_, a.*
                  FROM (SELECT *
                          FROM TABLE(GIACS045_PKG.get_line_lov(#documentCd#, #branchCd#))
                            <isNull property="findText">
			                	WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd))
			                </isNull>
			                <isNotNull property="findText">
			               	    WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText#, line_cd))
			                	   OR UPPER(line_name) LIKE UPPER(NVL(#findText#, line_name))
			                </isNotNull>
                            <isEqual property="sortColumn" compareValue="lineCd">
                                     ORDER BY line_cd
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="lineName">
                                     ORDER BY line_name
                            </isEqual>
                            <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual>
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                            </isNotNull>) a,
               (SELECT COUNT (*) count_
                  FROM TABLE
                          (GIACS045_PKG.get_line_lov(#documentCd#, #branchCd#))
                            <isNull property="findText">
			                	WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd))
			                </isNull>
			                <isNotNull property="findText">
			               	    WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText#, line_cd))
			                	   OR UPPER(line_name) LIKE UPPER(NVL(#findText#, line_name))
			                </isNotNull>
                          ) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getAllNonPackLineLOV" resultMap="GIISLineListMapGrid" parameterClass="java.util.HashMap" >
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIIS_LINE_PKG.get_all_non_pack_line_list(#issCd#, #moduleId#, #userId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_all_non_pack_line_list(#issCd#, #moduleId#, #userId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
	
	<select id="getGIRIS051LinePPWLOV" resultMap="GIISLineListMapGrid" parameterClass="java.util.HashMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE(GIIS_LINE_PKG.GET_GIRIS051_LINE_PPW_LOV(#moduleId#, #userId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull> ) a,
		               (SELECT count(*) count_
		                  FROM TABLE(GIIS_LINE_PKG.GET_GIRIS051_LINE_PPW_LOV(#moduleId#, #userId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull> ) b
		          )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
  	
  	<select id="getLineCdLOV" resultMap="giacs045LineLov" >
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIIS_LINE_PKG.get_line_cd_lov)
		                  <isNull property="findText">
                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd))
                                OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, line_name))
                          </isNull>
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_line_cd_lov)
		                  <isNull property="findText">
                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd))
                                OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, line_name))
                          </isNull>
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="validateLineCd2" resultClass="java.lang.String">
  		select GIIS_LINE_PKG.validate_line_cd2(#lineCd#) FROM DUAL
  	</select>
	
	<select id="validateGIRIS051LinePPW" resultClass="java.lang.String" parameterClass="java.lang.String">
		SELECT line_name
		  FROM giis_line
		 WHERE UPPER(line_name) = UPPER(#lineName#)
		   AND pack_pol_flag = 'N'
	</select>
	
	<select id="getGiisLineLOV3" resultMap="GIISLineListing2">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_giis_line_list)
		          		<isNull property="findText">
		          			<!-- UNION select null, 'ALL LINES', null, null, null, null from dual order by 1 -->
		          			WHERE (UPPER(line_cd) LIKE UPPER(NVL(#searchString#, '%')) 
				         	 <!--OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, '%'))-->
				         	 )
		          		</isNull>
		          		 <isNotNull property="findText">
				         WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 OR UPPER(line_name) LIKE UPPER(#findText#)
				         	 )
				         </isNotNull>
		          		<!-- <isNotNull property="findText">
			          		<isEmpty property="findText">
			          			UNION select null, 'ALL LINES', null, null, null, null from dual order by 1
			          		</isEmpty>		          		
		          		</isNotNull> -->
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY 1
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY 2
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_giis_line_list)
				          		<isNull property="findText">
				          			<!-- UNION select null, 'ALL LINES', null, null, null, null from dual order by 1 -->
				          			WHERE (UPPER(line_cd) LIKE UPPER(NVL(#searchString#, '%')) 
							         	 <!--OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, '%'))-->
							         	 )
				          		</isNull>
				          		 <isNotNull property="findText">
						         WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
						         	 OR UPPER(line_name) LIKE UPPER(#findText#)
						         	 )
						         </isNotNull>
				          		<!-- <isNotNull property="findText">
					          		<isEmpty property="findText">
					          			UNION select null, 'ALL LINES', null, null, null, null from dual order by 1
					          		</isEmpty>		          		
				          		</isNotNull> -->)
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getLineGiacs108LOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT line_cd, line_name FROM TABLE(giacs108_pkg.get_line_cd_giacs108_lov)
		          		  <isNotNull property="findText">
				         		WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 	   OR UPPER(line_name) LIKE UPPER(#findText#)
				         	   )
				          </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (giacs108_pkg.get_line_cd_giacs108_lov)
		                  <isNotNull property="findText">
				         		WHERE (UPPER(line_cd) LIKE UPPER(#findText#) 
				         	 	   OR UPPER(line_name) LIKE UPPER(#findText#)
				         	   )
				          </isNotNull>
				          ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
 	</select>
	
	<!-- added by : Kenneth L. 07.16.2013 :for giacs286 -->
	<select id="getGiacs286LineLov" resultMap="GIISLineListMapGrid" parameterClass="java.util.HashMap">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(giis_line_pkg.get_giacs286_line_lov(#userId#))
          	   	 <isNull property="findText">
					WHERE line_cd LIKE upper(NVL(#search#, line_cd)) OR line_name LIKE upper(NVL(#search#, line_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE line_cd LIKE upper(#findText#) OR line_name LIKE upper(#findText#)
				 </isNotNull>
					
	            <isEqual property="sortColumn" compareValue="lineCd">
              		ORDER BY line_cd
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="lineName">
              		ORDER BY line_name
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(giis_line_pkg.get_giacs286_line_lov(#userId#))
	            <isNull property="findText">
					WHERE line_cd LIKE upper(NVL(#search#, line_cd)) OR line_name LIKE upper(NVL(#search#, line_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE line_cd LIKE upper(#findText#) OR line_name LIKE upper(#findText#)
				 </isNotNull>)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>	
 	
	<!-- jomsdiago 07.19.2013 for GICLS220 -->
	<select id="getGICLS220LineLOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * FROM TABLE (GICLS220_PKG.get_gicls220_line_lov(#moduleId#, #branchCd#, #userId#))
		          		<isNotNull property="findText">
		          			WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText# || '%', line_cd))
		          			   OR UPPER(line_name) LIKE UPPER(NVL(#findText# || '%', line_name))
		          		</isNotNull>
		          		<isNotNull property="sortColumn">
		          			<isEqual property="sortColumn" compareValue="lineCd">
		          				ORDER BY line_cd
		          			</isEqual>
		          			<isEqual property="sortColumn" compareValue="lineName">
		          				ORDER BY line_name
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="ASC">
		          				ASC
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="DESC">
		          				DESC
		          			</isEqual>
		          		</isNotNull>
		          		) a,
		          		(SELECT count(*) count_ FROM TABLE (GICLS220_PKG.get_gicls220_line_lov(#moduleId#, #branchCd#, #userId#))
		          		 <isNotNull property="findText">
		          			WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText# || '%', line_cd))
		          			   OR UPPER(line_name) LIKE UPPER(NVL(#findText# || '%', line_name))
		          		 </isNotNull>
		          		) b		  
		  )
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>

<!-- Gzelle 08.05.2013 -->
	<resultMap class="java.util.HashMap" id="reportedClaimsLineLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"			property="lineCd" />
		<result column="line_name"			property="lineName" />
		<result column="pol_line_cd"		property="polLineCd" />
	</resultMap>
	
	<select id="getReportedClmLineLOV" resultMap="reportedClaimsLineLOVResultMap" parameterClass="java.util.HashMap">		 
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, b.count_, a.*
  		  		  FROM (SELECT * FROM TABLE(gicls540_pkg.get_rep_clm_line_lov(#issCd#,#userId#))
						<isNull property="findText">
						 WHERE upper(line_cd) LIKE upper(NVL(#search#, line_cd))
						</isNull>
						<isNotNull property="findText">
						 WHERE upper(line_cd) LIKE upper(#findText#)
						    OR upper(line_name) LIKE upper(#findText#)
						</isNotNull>
	            	<isEqual property="sortColumn" compareValue="lineCd">
              			ORDER BY line_cd
	            	</isEqual>
	            	<isEqual property="sortColumn" compareValue="lineName">
              			ORDER BY line_name
	            	</isEqual>
	            	<isNotNull property="sortColumn">
              			<isEqual property="ascDescFlg" compareValue="ASC">
              				ASC
              			</isEqual>
              			<isEqual property="ascDescFlg" compareValue="DESC">
              				DESC
              			</isEqual>
              		</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(gicls540_pkg.get_rep_clm_line_lov(#issCd#,#userId#))
				 <isNull property="findText">
				WHERE upper(line_cd) LIKE upper(NVL(#search#, line_cd))
				 </isNull>
				 <isNotNull property="findText">
				 WHERE upper(line_cd) LIKE upper(#findText#)
					OR upper(line_name) LIKE upper(#findText#)
				 </isNotNull>
				)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>

	<select id="getReportedClmPolLineLOV" resultMap="reportedClaimsLineLOVResultMap" parameterClass="java.util.HashMap">		 
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, b.count_, a.*
  		  		  FROM (SELECT * FROM TABLE(gicls540_pkg.get_rep_clm_pol_line_lov(#polSublineCd#,#polIssCd#,#userId#))
						<isNull property="findText">
						 WHERE upper(pol_line_cd) LIKE upper(NVL(#search#, pol_line_cd))
						</isNull>
						<isNotNull property="findText">
						 WHERE upper(pol_line_cd) LIKE upper(#findText#)
						</isNotNull>
	            	<isEqual property="sortColumn" compareValue="polLineCd">
              			ORDER BY pol_line_cd
	            	</isEqual>
	            	<isNotNull property="sortColumn">
              			<isEqual property="ascDescFlg" compareValue="ASC">
              				ASC
              			</isEqual>
              			<isEqual property="ascDescFlg" compareValue="DESC">
              				DESC
              			</isEqual>
              		</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(gicls540_pkg.get_rep_clm_pol_line_lov(#polSublineCd#,#polIssCd#,#userId#))
				 <isNull property="findText">
				WHERE upper(pol_line_cd) LIKE upper(NVL(#search#, pol_line_cd))
				 </isNull>
				 <isNotNull property="findText">
				 WHERE upper(pol_line_cd) LIKE upper(#findText#)
				 </isNotNull>
				)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select> 	
 <!--End-->	  	
 	
 	<!-- added by : Kenneth L. 08.02.2013 :for giexs008 -->
	<select id="getGiexs008LineLov" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(giexs008_pkg.get_line_lov(#userId#, #issCd#))
          	   	 <isNull property="findText">
					WHERE line_cd LIKE upper(NVL(#search#, line_cd)) OR line_name LIKE upper(NVL(#search#, line_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE line_cd LIKE upper(#findText#) OR line_name LIKE upper(#findText#)
				 </isNotNull>
					
	            <isEqual property="sortColumn" compareValue="lineCd">
              		ORDER BY line_cd
	            </isEqual>
	            <isEqual property="sortColumn" compareValue="lineName">
              		ORDER BY line_name
	            </isEqual>
	            <isNotNull property="sortColumn">
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
              	</isNotNull>) a,
              (SELECT count(*) count_
	          	 FROM TABLE(giexs008_pkg.get_line_lov(#userId#, #issCd#))
	            <isNull property="findText">
					WHERE line_cd LIKE upper(NVL(#search#, line_cd)) OR line_name LIKE upper(NVL(#search#, line_name))
				 </isNull>
				 <isNotNull property="findText">
					WHERE line_cd LIKE upper(#findText#) OR line_name LIKE upper(#findText#)
				 </isNotNull>)b) 
	    	WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>	
 	
 	<select id="getGicls104LineLOV" resultMap="GIISLineListMapGrid">
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_gicls104_line_lov(#moduleId#, #userId#))
		                  <isNull property="findText">
                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#filterText#, line_cd))
                                OR UPPER(line_name) LIKE UPPER(NVL(#filterText#, line_name))
                          </isNull>
                          <isNotNull property="findText">
                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText#, line_cd))
                                OR UPPER(line_name) LIKE UPPER(NVL(#findText#, line_name))
                          </isNotNull>            
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY 1
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY 2
			              </isEqual>			                      
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*)  count_ 
		                  FROM (SELECT * FROM TABLE (GIIS_LINE_PKG.get_gicls104_line_lov(#moduleId#, #userId#))
		                  		<isNull property="findText">
	                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#filterText#, line_cd))
	                                OR UPPER(line_name) LIKE UPPER(NVL(#filterText#, line_name))
	                          </isNull>
	                          <isNotNull property="findText">
	                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText#, line_cd))
	                                OR UPPER(line_name) LIKE UPPER(NVL(#findText#, line_name))
	                          </isNotNull>)) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
 	</select>
 	
 	<select id="getGicls051CdLOV" resultMap="GIISLineListing2">
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.get_gicls051_line_lov(#moduleId#, #userId#))
		                  <isNull property="findText">
                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd))
                                OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, line_name))
                          </isNull>
                          <isNotNull property="findText">
                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText#, line_cd))
                                OR UPPER(line_name) LIKE UPPER(NVL(#findText#, line_name))
                          </isNotNull>            
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY 1
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY 2
			              </isEqual>			                      
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*)  count_ 
		                  FROM (SELECT * FROM TABLE (GIIS_LINE_PKG.get_gicls051_line_lov(#moduleId#, #userId#))
		                  		<isNull property="findText">
	                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd))
	                                OR UPPER(line_name) LIKE UPPER(NVL(#searchString#, line_name))
	                          </isNull>
	                          <isNotNull property="findText">
	                             WHERE UPPER(line_cd) LIKE UPPER(NVL(#findText#, line_cd))
	                                OR UPPER(line_name) LIKE UPPER(NVL(#findText#, line_name))
	                          </isNotNull>)) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
 	</select>
 	
 	<select id="getGIACS056LineLOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		
		SELECT * 
		  FROM (SELECT a.*,
		  			   b.count_,
		  			   rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE(GIIS_LINE_PKG.get_giacs056_line_lov(#findText#))
		          		<isNotNull property="sortColumn">
		          			<isEqual property="sortColumn" compareValue="lineCd">
		          				ORDER BY line_cd
		          			</isEqual>
		          			<isEqual property="sortColumn" compareValue="lineName">
		          				ORDER BY line_name
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="ASC">
		          				ASC
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="DESC">
		          				DESC
		          			</isEqual>
		          		</isNotNull>
		          		) a,
		          		(SELECT count(*) count_
		          		   FROM TABLE (GIIS_LINE_PKG.get_giacs056_line_lov(#findText#))
		          		) b		  
		  		)
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
 	<select id="getGIACS102LineLOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		
		SELECT * 
		  FROM (SELECT a.*,
		  			   b.count_,
		  			   rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE(GIIS_LINE_PKG.get_giacs102_line_lov(#moduleId#, #userId#, #findText#))
		          		<isNotNull property="sortColumn">
		          			<isEqual property="sortColumn" compareValue="lineCd">
		          				ORDER BY line_cd
		          			</isEqual>
		          			<isEqual property="sortColumn" compareValue="lineName">
		          				ORDER BY line_name
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="ASC">
		          				ASC
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="DESC">
		          				DESC
		          			</isEqual>
		          		</isNotNull>
		          		) a,
		          		(SELECT count(*) count_
		          		   FROM TABLE (GIIS_LINE_PKG.get_giacs102_line_lov(#moduleId#, #userId#, #findText#))) b		  
		  		)
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
 	<procedure id="validateGIACS102LineCd" parameterMap="validateGIACS102LineCdMap">
		CALL GIIS_LINE_PKG.validate_giacs102_line_cd(?, ?)
	</procedure>
 	
 	<!-- J. Diago 08.08.2013 For GIUTS031 Extract Expiring Convernote -->
 	<select id="showGiuts031LineCd" resultMap="GIISLineListingFlagMap" parameterClass="java.util.HashMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * FROM TABLE (GIUTS031_PKG.GET_LINE_LOV(#issCd#, #userId#, #findText#))
			          	  <isEqual property="sortColumn" compareValue="lineCd">
								ORDER BY line_cd
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="lineName">
								ORDER BY line_name
						  </isEqual>
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
		          		) a,
		          		(SELECT count(*) count_ FROM TABLE (GIUTS031_PKG.GET_LINE_LOV(#issCd#, #userId#, #findText#))) b		  
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIISS119LineLov" resultMap="GIISS119LineListing">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT line_cd FROM giis_line 
				          	<isNull property="findText">
				          		WHERE UPPER(line_cd) LIKE UPPER(#searchString#)				          	   		
				          	</isNull>	
				          	<isNotNull property="findText">
				          		WHERE UPPER(line_cd) LIKE UPPER(#findText#)				          	   		
				          	</isNotNull>		                				             	
		                  	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count(line_cd) count_ 
		                  FROM giis_line
			             	<isNull property="findText">
				          		WHERE UPPER(line_cd) LIKE UPPER(#searchString#)				          	   		
				          	</isNull>	
				          	<isNotNull property="findText">
				          		WHERE UPPER(line_cd) LIKE UPPER(#findText#)				          	   		
				          	</isNotNull>	
				          	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	
	 <!-- added by : Kenneth L. 08.23.2013 GIPIS170 -->
	<select id="getGipis170LineLov" resultMap="GIISLineListing2">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIPIS170_PKG.get_gipis170_line_lov(#issCd#, #moduleId#, #userId#))
	          	 WHERE 1=1
	          	 	<isNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#findText# || '%')
					</isNotNull>
		            <isEqual property="sortColumn" compareValue="lineCd">
	              		ORDER BY lineCd
		            </isEqual>
		            <isEqual property="sortColumn" compareValue="lineName">
	              		ORDER BY line_name
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM TABLE(GIPIS170_PKG.get_gipis170_line_lov(#issCd#, #moduleId#, #userId#))
	          	 WHERE 1=1
	            	<isNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#findText# || '%')
					</isNotNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
 	<!-- added by : Kenneth L. 08.2.2013 GIPIS170 -->
	<select id="getGipis170LineFilteredLov" resultMap="GIISLineListing2">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIPIS170_PKG.get_gipis170_line_filtered_lov(#issCd#, #moduleId#, #userId#, #documentType#))
	          	 WHERE 1=1
	          	 	<isNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#findText# || '%')
					</isNotNull>
		            <isEqual property="sortColumn" compareValue="lineCd">
	              		ORDER BY lineCd
		            </isEqual>
		            <isEqual property="sortColumn" compareValue="lineName">
	              		ORDER BY line_name
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM TABLE(GIPIS170_PKG.get_gipis170_line_filtered_lov(#issCd#, #moduleId#, #userId#, #documentType#))
	          	 WHERE 1=1
	            	<isNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#findText# || '%')
					</isNotNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
	 
	 <!-- added by : Kenneth L. 08.28.2013 GIPIS170 -->
	<select id="getGipis170LineSuLov" resultMap="GIISLineListing2">		
		SELECT *
  		  FROM (SELECT ROWNUM rownum_, 
	               	   b.count_, 
	              	   a.* 
	          	  FROM (SELECT * FROM TABLE(GIPIS170_PKG.get_gipis170_line_su_lov(#issCd#, #moduleId#, #userId#, #documentType#))
	          	 WHERE 1=1
	          	 	<isNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#findText# || '%')
					</isNotNull>
		            <isEqual property="sortColumn" compareValue="lineCd">
	              		ORDER BY lineCd
		            </isEqual>
		            <isEqual property="sortColumn" compareValue="lineName">
	              		ORDER BY line_name
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
               (SELECT count(*) count_
	          	  FROM TABLE(GIPIS170_PKG.get_gipis170_line_su_lov(#issCd#, #moduleId#, #userId#, #documentType#))
	          	 WHERE 1=1
	            	<isNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#search# || '%')
					</isNull>
					<isNotNull prepend="AND" property="findText">
						upper(line_name) LIKE upper(#findText# || '%')
					</isNotNull>)b) 
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
 	<select id="getGIACS276LineLOV" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">		
		SELECT * 
		  FROM (SELECT a.*,
		  			   b.count_,
		  			   rownum rownum_
		          FROM (SELECT *
		                  FROM TABLE(GIACS276_PKG.get_giacs276_line_lov(#moduleId#, #userId#, #findText#))
		                <isNull property="findText">
		                 WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd)) 
		               	</isNull>
		          		<isNotNull property="sortColumn">
		          			<isEqual property="sortColumn" compareValue="lineCd">
		          				ORDER BY line_cd
		          			</isEqual>
		          			<isEqual property="sortColumn" compareValue="lineName">
		          				ORDER BY line_name
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="ASC">
		          				ASC
		          			</isEqual>
		          			<isEqual property="ascDescFlg" compareValue="DESC">
		          				DESC
		          			</isEqual>
		          		</isNotNull>
		          		) a,
		          		(SELECT count(*) count_
		          		   FROM TABLE (GIACS276_PKG.get_giacs276_line_lov(#moduleId#, #userId#, #findText#))
		          		<isNull property="findText">
		                  WHERE UPPER(line_cd) LIKE UPPER(NVL(#searchString#, line_cd)) 
		               	</isNull>
		          		) b		  
		  		)
		 WHERE rownum_ BETWEEN #from# AND #to# 	
 	</select>
 	
 	<select id="showGipis130LineCd" resultMap="GIISLineListing2" parameterClass="java.util.HashMap">
	SELECT *
	  FROM (SELECT rownum rownum_, 
				   b.count_, 
				   a.* 
			  FROM (SELECT * 
					  FROM TABLE (gipis130_pkg.get_linecd_lov(#moduleId#, #userId#, #findText#))
					  <isEqual property="sortColumn" compareValue="lineCd">
							ORDER BY line_cd
					  </isEqual>
					  <isEqual property="sortColumn" compareValue="lineName">
							ORDER BY line_name
					  </isEqual>
					  <isNotNull property="sortColumn">
							<isEqual property="ascDescFlg" compareValue="ASC">
								ASC
							</isEqual>
							<isEqual property="ascDescFlg" compareValue="DESC">
								DESC
							</isEqual>
					  </isNotNull>
					  ) a, 
				   (SELECT count(*) count_ 
					  FROM TABLE (gipis130_pkg.get_linecd_lov(#moduleId#, #userId#, #findText#))) b) 
	 				 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIPIS200LineLOV" resultMap="GIPIS200SublineLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPIS200_PKG.get_line_lov(#issCd#,#userId#))		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(line_cd) LIKE UPPER(#line#)
				                 OR UPPER(line_name) LIKE UPPER(#line#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(GIPIS200_PKG.get_line_lov(#issCd#,#userId#))		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(line_cd) LIKE UPPER(#line#)
				                 OR UPPER(line_name) LIKE UPPER(#line#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>				
			             	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
		
	<resultMap id="gicls254LineLOVResultMap" class="java.util.HashMap"  extends="BaseEntity.TableGridResultMap">
	  	<result column="line_cd"	property="lineCd"/>
	  	<result column="line_name"	property="lineName"/>
  	</resultMap>
  	
  	<select id="getGICLS254LineLOV" resultMap="gicls254LineLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(giis_line_pkg.get_gicls254_line_lov(#lineCd#, #userId#))
		          			<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(giis_line_pkg.get_gicls254_line_lov(#lineCd#,#userId#))				
			             	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="getGIPIS190LineLOVMap" class="java.util.HashMap"  extends="BaseEntity.TableGridResultMap">
	  	<result column="line_cd"	property="lineCd"/>
	  	<result column="line_name"	property="lineName"/>
  	</resultMap>
  	
  	<select id="getGIPIS190LineLOV" resultMap="getGIPIS190LineLOVMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(gipis190_pkg.get_gipis190_line_lov(#moduleId#,#userId#,#findText#))
			              	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(gipis190_pkg.get_gipis190_line_lov(#moduleId#,#userId#,#findText#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
  	
  	<select id="getGIACS299LineLOV" resultMap ="GIISLineListing2"  parameterClass= "java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(giis_line_pkg.get_giacs299_line_lov(#moduleId#,#userId#,#findText#))          
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual>
			               <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>)a,
			              (SELECT count(*) count_ 
		                  	 FROM TABLE(giis_line_pkg.get_giacs299_line_lov(#moduleId#,#userId#,#findText#))) b)
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getGiiss204LineLOV" resultMap="Giiss204LineLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIIS_LINE_PKG.GET_LINE_LIST_LOSTBID(#moduleId#, #userId#))		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(line_cd) LIKE UPPER(#searchString#)
				                 OR UPPER(line_name) LIKE UPPER(#searchString#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(GIIS_LINE_PKG.GET_LINE_LIST_LOSTBID(#moduleId#, #userId#))		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(line_cd) LIKE UPPER(#searchString#)
				                 OR UPPER(line_name) LIKE UPPER(#searchString#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		
			             	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
  	<select id="getGiiss091LineCd" resultMap="getGIPIS190LineLOVMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (giis_line_pkg.get_giiss091_line_lov(#userId#, #findText#))
						  <isEqual property="sortColumn" compareValue="lineCd">
								ORDER BY line_cd
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="lineName">
								ORDER BY line_name
						  </isEqual>
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (giis_line_pkg.get_giiss091_line_lov(#userId#, #findText#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss054LineLOV" resultMap="GIISLineListing">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIISS054_PKG.get_line_lov(#userId#))		                 
		                  	<isNull property="findText">
				             	WHERE UPPER(line_cd) LIKE UPPER(#searchString#)
				                 OR UPPER(line_name) LIKE UPPER(#searchString#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(GIISS054_PKG.get_line_lov(#userId#))		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(line_cd) LIKE UPPER(#searchString#)
				                 OR UPPER(line_name) LIKE UPPER(#searchString#)					                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)
				                 OR UPPER(line_name) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		
			             	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGiiss028LineLOV" resultMap="GIPIS200SublineLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIISS028_PKG.get_line_list(#userId#, #moduleId#, #issCd#))		                 
		                  	<isNull property="findText">
				             	WHERE UPPER(line_cd) LIKE UPPER(#searchString#)				                      		
				             	 OR UPPER(line_name) LIKE UPPER(#searchString#)
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)			  				         		
		                		 OR UPPER(line_name) LIKE UPPER(#findText#)
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              	</isEqual>	
			              	<isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              	</isEqual>			              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(GIISS028_PKG.get_line_list(#userId#, #moduleId#, #issCd#))		                 
		                  	<isNull property="findText">
				             	WHERE UPPER(line_cd) LIKE UPPER(#searchString#)				                      		
				             	 OR UPPER(line_name) LIKE UPPER(#searchString#)
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(line_cd) LIKE UPPER(#findText#)			  				         		
		                		 OR UPPER(line_name) LIKE UPPER(#findText#)
			             	</isNotNull>		
			             	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select> 
	
	<select id="getGiuts009LineLOV" resultMap="GIISLineListMapGrid" parameterClass="java.util.HashMap" >
 		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIIS_LINE_PKG.get_giuts009_line_lov(#moduleId#, #issCd#,#userId#))
		                  WHERE 1=1
		                  <isNotEmpty prepend="AND" property="findText">
		                  	 UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotEmpty>
		                  <isNotEmpty prepend="AND" property="searchString">
		                  	 UPPER(line_cd) LIKE UPPER(#searchString#)
		                  	   OR UPPER(line_name) LIKE UPPER(#searchString#)
		                  </isNotEmpty>		                  
		                  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="lineName">
			              		ORDER BY line_name
			              </isEqual> 
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIIS_LINE_PKG.get_giuts009_line_lov(#moduleId#, #issCd#,#userId#))
		                  <isNotNull property="findText">
		                  	WHERE UPPER(line_cd) LIKE UPPER(#findText#)
		                  	   OR UPPER(line_name) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	<select id="getGicls200LineLOV" resultMap="GIISLineListing2" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gicls200_pkg.get_gicls200_line_list(#moduleId#, #polIssCd#, #appUser#, nvl(#findText#, #filterText#)))
		                  <isEqual property="sortColumn" compareValue="branchCd">
			              		ORDER BY line_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="branchName">
			              		ORDER BY line_name
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gicls200_pkg.get_gicls200_line_list(#moduleId#, #polIssCd#, #appUser#, nvl(#findText#, #filterText#)))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
</sqlMap>

