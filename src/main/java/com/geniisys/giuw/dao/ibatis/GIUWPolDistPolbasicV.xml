<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIUWPolDistPolbasicV">
	
	<typeAlias alias="GIUWPolDistPolbasicV" type="com.geniisys.giuw.entity.GIUWPolDistPolbasicV"/>
	
	<resultMap class="GIUWPolDistPolbasicV"	id="getGIUWPolDistPolbasicVMap" >
		<result property="policyId" 			column="POLICY_ID"/>
		<result property="lineCd" 				column="LINE_CD"/>
		<result property="sublineCd" 			column="SUBLINE_CD"/>
		<result property="issCd" 				column="ISS_CD"/>
		<result property="issueYy" 				column="ISSUE_YY"/>
		<result property="parId" 				column="PAR_ID"/>
		<result property="polSeqNo" 			column="POL_SEQ_NO"/>
		<result property="policyNo" 			column="POLICY_NO"/>
		<result property="assdNo" 				column="ASSD_NO"/>
		<result property="endtIssCd" 			column="ENDT_ISS_CD"/>
		<result property="spldFlag" 			column="SPLD_FLAG"/>
		<result property="distFlag" 			column="DIST_FLAG"/>
		<result property="distNo" 				column="DIST_NO"/>
		<result property="effDate" 				column="EFF_DATE"/>
		<result property="effDatePolbas" 		column="EFF_DATE_POLBAS"/>
		<result property="issueDate" 			column="ISSUE_DATE"/>
		<result property="expiryDatePolbas" 	column="EXPIRY_DATE_POLBAS"/>
		<result property="endtExpiryDate" 		column="ENDT_EXPIRY_DATE"/>
		<result property="expiryDatePolDist" 	column="EXPIRY_DATE_POLDIST"/>
		<result property="endtYy" 				column="ENDT_YY"/>
		<result property="distType" 			column="DIST_TYPE"/>
		<result property="acctEntDate" 			column="ACCT_ENT_DATE"/>
		<result property="endtSeqNo" 			column="ENDT_SEQ_NO"/>
		<result property="endtNo" 				column="ENDT_NO"/>
		<result property="renewNo" 				column="RENEW_NO"/>
		<result property="polFlag" 				column="POL_FLAG"/>
		<result property="negateDate" 			column="NEGATE_DATE"/>
		<result property="acctNegDate" 			column="ACCT_NEG_DATE"/>
		<result property="inceptDate" 			column="INCEPT_DATE"/>
		<result property="lastUpDate" 			column="LAST_UPD_DATE"/>
		<result property="userId" 				column="USER_ID"/>
		<result property="batchId" 				column="BATCH_ID"/>
		<result property="tsiAmt" 				column="TSI_AMT"/>
		<result property="premAmt" 				column="PREM_AMT"/>
		<result property="userId2" 				column="USER_ID2"/>
		<result property="rowNum" 				column="ROWNUM_"/>			
		<result property="rowCount"				column="COUNT_"/>
	</resultMap>
	
	<resultMap class="GIUWPolDistPolbasicV"	id="getGIUWPolDistPolbasicVMap2" >
		<result property="policyId" 			column="POLICY_ID"/>
		<result property="batchId" 				column="BATCH_ID"/>
		<result property="distNo" 				column="DIST_NO"/>
		<result property="lineCd" 				column="LINE_CD"/>
		<result property="sublineCd" 			column="SUBLINE_CD"/>
		<result property="issCd" 				column="ISS_CD"/>
		<result property="issueYy" 				column="ISSUE_YY"/>
		<result property="polSeqNo" 			column="POL_SEQ_NO"/>
		<result property="renewNo" 				column="RENEW_NO"/>
		<result property="policyNo" 			column="POLICY_NO"/>
		<result property="endtSeqNo" 			column="ENDT_SEQ_NO"/>		
	</resultMap>
	
	<select id="getGIUWPolDistPolbasicVList" resultMap="getGIUWPolDistPolbasicVMap">
		SELECT *
          FROM (SELECT rownum rownum_, 
                       b.count_, 
                       a.* 
                  FROM (SELECT * 
                          FROM TABLE (GIUW_POL_DIST_POLBASIC_V_PKG.get_giuw_pol_dist_polbasic_v(#moduleId#, #lineCd#, #issCd#, #sublineCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #distNo#, #userId#))
                          WHERE NVL(batch_id, 0) = NVL(#batchId#, NVL(batch_id, 0))
                          <isNotNull property="fromDate">
	                        	<isNotNull property="toDate">
	                        		<isEqual property="dateType" compareValue="issueDate">
	                        			AND TRUNC(issue_date) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
	                        		</isEqual>
	                        		<isEqual property="dateType" compareValue="effDate">
	                        			AND TRUNC(eff_date_polbas) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
	                        		</isEqual>
	                        		<isEqual property="dateType" compareValue="expiryDate">
	                        			AND TRUNC(expiry_date_polbas) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
	                        		</isEqual>
	                        	</isNotNull>
	                      </isNotNull>
                          <isNotNull property="equateTsi">
                          		<isEqual property="equateTsi" compareValue="equals">
			              			AND tsi_amt = NVL(#tsiAmt#, 0)
			              		</isEqual>
			              		<isEqual property="equateTsi" compareValue="greaterEqual">
			              			AND tsi_amt &gt;= NVL(#tsiAmt#, 0)
			              		</isEqual>
			              		<isEqual property="equateTsi" compareValue="lessEqual">
			              			AND tsi_amt &lt;= NVL(#tsiAmt#, 0)
			              		</isEqual>	
                          </isNotNull>
                          <isNotNull property="filter">	<!-- shan 08.28.2014 -->
                          	<isNotEmpty property="effDate" prepend="AND">
                          		TRUNC(eff_date) = TO_DATE(#effDate#, 'MM-DD-RRRR')
                          	</isNotEmpty>                          
                          </isNotNull>
                          <isEqual property="sortColumn" compareValue="batchId">
			              		ORDER BY batch_id
			              </isEqual>
                          <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="distNo">
			              		ORDER BY dist_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="effDate">
			              		ORDER BY eff_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="tsiAmt">
			              		ORDER BY tsi_amt
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="premAmt">
			              		ORDER BY prem_amt
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
                          ) a, 
                       (SELECT count(*) count_ 
                          FROM TABLE (GIUW_POL_DIST_POLBASIC_V_PKG.get_giuw_pol_dist_polbasic_v(#moduleId#, #lineCd#, #issCd#, #sublineCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #distNo#, #userId#))
                        WHERE NVL(batch_id, 0) = NVL(#batchId#, NVL(batch_id, 0))
                        <isNotNull property="fromDate">
                        	<isNotNull property="toDate">
                        		<isEqual property="dateType" compareValue="issueDate">
                        			AND TRUNC(issue_date) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
                        		</isEqual>
                        		<isEqual property="dateType" compareValue="effDate">
                        			AND TRUNC(eff_date_polbas) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
                        		</isEqual>
                        		<isEqual property="dateType" compareValue="expiryDate">
                        			AND TRUNC(expiry_date_polbas) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
                        		</isEqual>
                        	</isNotNull>
                        </isNotNull>
                        <isNotNull property="equateTsi">
                          		<isEqual property="equateTsi" compareValue="equals">
			              			AND tsi_amt = NVL(#tsiAmt#, 0)
			              		</isEqual>
			              		<isEqual property="equateTsi" compareValue="greaterEqual">
			              			AND tsi_amt &gt;= NVL(#tsiAmt#, 0)
			              		</isEqual>
			              		<isEqual property="equateTsi" compareValue="lessEqual">
			              			AND tsi_amt &lt;= NVL(#tsiAmt#, 0)
			              		</isEqual>	
                        </isNotNull>
                          <isNotNull property="filter">	<!-- shan 08.28.2014 -->
                          	<isNotEmpty property="effDate" prepend="AND">
                          		TRUNC(eff_date) = TO_DATE(#effDate#, 'MM-DD-RRRR')
                          	</isNotEmpty>                          
                          </isNotNull>) b) 
         WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIUWPolDistPolbasicV" resultMap="getGIUWPolDistPolbasicVMap2">
		SELECT * FROM TABLE(GIUW_POL_DIST_POLBASIC_V_PKG.get_giuw_pol_dist_polbasic_v_2(#batchId#, #distNo#)) 
	</select>
	
	<!-- Joms Diago -->
	<resultMap class="java.util.HashMap" id="viewDistributionResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyNo"				column="policy_no"/>
		<result property="endtNo"				column="endt_no"/>
		<result property="distNo"				column="dist_no"/>
		<result property="distFlag"				column="dist_flag"/>
		<result property="status"				column="status"/>
		<result property="assdName"				column="assd_name"/>
		<result property="pUserId"				column="p_user_id"/>
		<result property="inceptDate"			column="incept_date"/>
		<result property="expiryDatePolbas"		column="expiry_date_polbas"/>
		<result property="policyStatus"		    column="policy_status"/>
		<result property="acctEntDate"		    column="acct_ent_date"/>
		<result property="acctNegDate"		    column="acct_neg_date"/>
		<result property="issueDate"		    column="issue_date"/>
		<result property="effDate"		        column="eff_date"/>
		<result property="expiryDatePoldist"	column="expiry_date_poldist"/>
		<result property="negateDate"	        column="negate_date"/>
		<result property="lastUpdDate"	        column="last_upd_date"/>
		<result property="userId2"	            column="user_id2"/>
		<result property="lineCd"	            column="line_cd"/>
		<result property="sublineCd"	        column="subline_cd"/>
		<result property="issCd"	            column="iss_cd"/>
		<result property="issueYy"	            column="issue_yy"/>
		<result property="polSeqNo"	            column="pol_seq_no"/>
		<result property="renewNo"	            column="renew_no"/>
		<result property="parId"	            column="par_id"/>
		<result property="issName"	            column="iss_name"/>
		<result property="policyId"	            column="policy_id"/>
		<result property="postFlag"	            column="post_flag"/>  <!-- added by robert SR 4887 10.05.15 -->
	</resultMap>
	
	<select id="showViewDistributionStatus" resultMap="viewDistributionResultMap">
		  SELECT *
            FROM (SELECT ROWNUM rownum_, 
                         b.count_, 
                         a.*
                    FROM (SELECT *
                            FROM TABLE(gipis130_pkg.get_giuw_pol_dist_polbasic(#branchCd#,#lineCd#,#distTag#,#dateAsOf#,#dateFrom#,#dateTo#,#dateOpt#,#userId#, #policyId#,#pSublineCd#,#pIssCd#,#pIssueYy#,#pPolSeqNo#,#pRenewNo#,
                                                                                                                                     #distNo#, #endtIssCd#,#endtYy#, #endtSeqNo#)) <!-- added by robert SR 20756 01.27.16 -->
                           WHERE check_user_per_iss_cd2(line_cd, iss_cd, 'GIPIS130', #userId#) = 1
                             <!-- AND check_user_per_line2(line_cd, iss_cd, 'GIPIS130', #userId#) = 1 removed by jdiago 08.14.2014, need not to include since line_cd is passed in check_user_per_iss_cd2-->
                            <isNotNull property="filter">
                            	<isNotEmpty prepend="AND" property="lineCd">
									line_cd LIKE UPPER(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd">
									subline_cd LIKE UPPER(#sublineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd">
									iss_cd LIKE UPPER(#issCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issueYy">
									issue_yy LIKE #issueYy#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="polSeqNo">
									pol_seq_no LIKE #polSeqNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="renewNo">
									renew_no LIKE #renewNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="distNo">
									dist_no LIKE #distNo#
								</isNotEmpty>
                            </isNotNull>
                            <isEqual property="sortColumn" compareValue="policyNo">
                                     ORDER BY policy_no
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="endtNo">
                                     ORDER BY endt_no
                            </isEqual>
                            <isEqual property="sortColumn" compareValue="distNo">
                                     ORDER BY dist_no
                            </isEqual>
                             <isEqual property="sortColumn" compareValue="status">
                                     ORDER BY status
                            </isEqual>
                            <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual>
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                            </isNotNull>) a,
                 (SELECT COUNT (*) count_
                    FROM TABLE
                          (gipis130_pkg.get_giuw_pol_dist_polbasic(#branchCd#,#lineCd#,#distTag#,#dateAsOf#,#dateFrom#,#dateTo#,#dateOpt#,#userId#, #policyId#,#pSublineCd#,#pIssCd#,#pIssueYy#,#pPolSeqNo#,#pRenewNo#,
                          																				#distNo#, #endtIssCd#,#endtYy#, #endtSeqNo#))   <!-- added by robert SR 20756 01.27.16 -->
                   WHERE check_user_per_iss_cd2(line_cd, iss_cd, 'GIPIS130', #userId#) = 1
                     <!-- AND check_user_per_line2(line_cd, iss_cd, 'GIPIS130', #userId#) = 1 removed by jdiago 08.14.2014, need not to include since line_cd is passed in check_user_per_iss_cd2 -->
                          <isNotNull property="filter">
                            	<isNotEmpty prepend="AND" property="lineCd">
									line_cd LIKE UPPER(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd">
									subline_cd LIKE UPPER(#sublineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd">
									iss_cd LIKE UPPER(#issCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issueYy">
									issue_yy LIKE #issueYy#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="polSeqNo">
									pol_seq_no LIKE #polSeqNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="renewNo">
									renew_no LIKE #renewNo#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="distNo">
									dist_no LIKE #distNo#
								</isNotEmpty>
                            </isNotNull>) b)
           WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130parHistResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="parStat" 				column="par_stat" />
		<result property="parStatDate" 			column="parstat_date" />
		<result property="userId2" 				column="user_id" />	
	</resultMap>
	
	<select id="viewHistory" resultMap="gipis130parHistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS130_PKG.get_par_history(#parId#))
							<isEqual property="sortColumn" compareValue="parStat">
								ORDER BY par_stat
							</isEqual>
							<isEqual property="sortColumn" compareValue="parStatDate">
								ORDER BY parstat_date
							</isEqual>
							<isEqual property="sortColumn" compareValue="userId2">
								ORDER BY user_id
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS130_PKG.get_par_history(#parId#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130policyDistResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="distNo" 					column="dist_no" />
		<result property="distSeqNo" 				column="dist_seq_no" />
		<result property="tsiAmt" 					column="tsi_amt" />
		<result property="premAmt" 					column="prem_amt" />
		<result property="policyNo" 				column="policy_no" />
		<result property="distFlag" 			    column="dist_flag" />
		<result property="status" 			        column="status" />
		<result property="distSpct" 			    column="dist_spct" />
		<result property="distTsi" 			        column="dist_tsi" />
		<result property="distSpct1" 			    column="dist_spct1" />	
		<result property="distPrem" 			    column="dist_prem" />
		<result property="trtyName" 			    column="trty_name" />
		<result property="sDistSpct" 			    column="s_dist_spct" />
		<result property="sDistTsi" 			    column="s_dist_tsi" />
		<result property="sDistSpct1" 			    column="s_dist_spct1" />	
		<result property="sDistPrem" 			    column="s_dist_prem" />
		<result property="postFlag" 			    column="post_flag" />
		<result property="perilName" 			    column="peril_name" />
		<result property="lineCd" 			        column="line_cd" />
		<result property="perilCd" 			        column="peril_cd" />
		<result property="placementSource" 			column="placement_source" />
		<result property="binderNo" 			    column="binder_no" />
		<result property="riSname" 			        column="ri_sname" />
		<result property="riShrPct" 			    column="ri_shr_pct" />
		<result property="riTsiAmt" 			    column="ri_tsi_amt" />
		<result property="riPremAmt" 			    column="ri_prem_amt" />
		<result property="SumRIShrPct" 			    column="sum_ri_shr_pct" />
		<result property="SumRITsiAmt" 			    column="sum_ri_tsi_amt" />
		<result property="SumRIPremAmt" 			column="sum_ri_prem_amt" />		
		<result property="itemNo" 					column="item_no" />	 <!-- added by robert SR 4887 10.05.15 -->
	</resultMap>
	
	<!-- modified by robert SR 4887 10.05.15 added parameter and sort columns-->
	<select id="viewDistribution" resultMap="gipis130policyDistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS130_PKG.get_policy_ds(#parId#, #distNo#, #distFlag#, #policyNo#, #policyStatus#, #itemSw#))
							<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY policy_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="distFlag status">
								ORDER BY dist_flag, status
							</isEqual>
							<isEqual property="sortColumn" compareValue="distNo">
								ORDER BY dist_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="distSeqNo">
								ORDER BY dist_seq_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="perilName">
								ORDER BY peril_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="perilCd">
								ORDER BY TO_NUMBER(peril_cd)
							</isEqual>
							<isEqual property="sortColumn" compareValue="premAmt">
								ORDER BY prem_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="tsiAmt">
								ORDER BY tsi_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS130_PKG.get_policy_ds(#parId#, #distNo#, #distFlag#, #policyNo#, #policyStatus#, #itemSw#))) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="viewRIPlacement" resultMap="gipis130policyDistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS130_PKG.get_ri_placement(#distNo#, #distSeqNo#, #placementSource#))
							<isEqual property="sortColumn" compareValue="binderNo">
								ORDER BY binder_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="riSname">
								ORDER BY ri_sname
							</isEqual>
							<isEqual property="sortColumn" compareValue="riShrPct">
								ORDER BY ri_shr_pct
							</isEqual>
							<isEqual property="sortColumn" compareValue="riTsiAmt">
								ORDER BY ri_tsi_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="riPremAmt">
								ORDER BY ri_prem_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS130_PKG.get_ri_placement(#distNo#, #distSeqNo#, #placementSource#))) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getDistDtl" resultMap="gipis130policyDistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS130_PKG.get_policy_ds_dtl(#distNo#,#distSeqNo#))
							<isEqual property="sortColumn" compareValue="trtyName">
								ORDER BY trty_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="distSpct">
								ORDER BY dist_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distTsi">
								ORDER BY dist_tsi
							</isEqual>
							<isEqual property="sortColumn" compareValue="distSpct1">
								ORDER BY dist_spct1
							</isEqual>
							<isEqual property="sortColumn" compareValue="distPrem">
								ORDER BY dist_prem
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS130_PKG.get_policy_ds_dtl(#distNo#,#distSeqNo#))) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- modified by robert SR 4887 10.05.15 added parameter-->
	<select id="getDistDtl2" resultMap="gipis130policyDistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS130_PKG.get_policy_ds_dtl2(#distNo#,#distSeqNo#,#lineCd#,#perilCd#,#postFlag#,#itemNo#))
							<isEqual property="sortColumn" compareValue="trtyName">
								ORDER BY trty_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="distSpct">
								ORDER BY dist_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distTsi">
								ORDER BY dist_tsi
							</isEqual>
							<isEqual property="sortColumn" compareValue="distSpct1">
								ORDER BY dist_spct1
							</isEqual>
							<isEqual property="sortColumn" compareValue="distPrem">
								ORDER BY dist_prem
							</isEqual>) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS130_PKG.get_policy_ds_dtl2(#distNo#,#distSeqNo#,#lineCd#,#perilCd#,#postFlag#,#itemNo#))) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130SummarizedDistMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="trtyName" 				column="trty_name" />
		<result property="tsiSpct" 					column="tsi_spct" />
		<result property="distTsi" 					column="dist_tsi" />	
		<result property="premSpct" 				column="prem_spct" />
		<result property="distPrem" 				column="dist_prem" />
		<result property="totTsiSpct" 				column="tot_tsi_spct" />
		<result property="totDistTsi" 				column="tot_dist_tsi" />	
		<result property="totPremSpct" 				column="tot_prem_spct" />
		<result property="totDistPrem" 				column="tot_dist_prem" />
	</resultMap>
	
	<select id="viewSummarizedDist" resultMap="gipis130SummarizedDistMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_summarized_dist(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
							<isNotNull property="filter">
                                WHERE 1 = 1
                            	<isNotEmpty prepend="AND" property="trtyName">
									UPPER(trty_name) LIKE UPPER(#trtyName#)
								</isNotEmpty>
                            </isNotNull>
							<isEqual property="sortColumn" compareValue="trtyName">
								ORDER BY trty_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="tsiSpct">
								ORDER BY tsi_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distTsi">
								ORDER BY dist_tsi
							</isEqual>
							<isEqual property="sortColumn" compareValue="premSpct">
								ORDER BY prem_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distPrem">
								ORDER BY dist_prem
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_summarized_dist(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap id="callExtractDistGipis130Map" class="map">
		<parameter property="lineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="issCd"				jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="polSeqNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="renewNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="extractDate"		jdbcType="DATE"			javaType="java.util.Date"		mode="IN" />
		<parameter property="message"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="callExtractDistGipis130" parameterMap="callExtractDistGipis130Map">
		BEGIN
			gipis130_pkg.call_extract_dist_gipis130(?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<select id="onLoadSummarizedDist" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT gipis130_pkg.on_load_summarized_dist(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#) FROM DUAL
	</select>
	
	<resultMap id="gipis130RiPlacementMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="riCd" 					column="ri_cd" />
	    <result property="riSname" 					column="ri_sname" />
		<result property="riShrPct"					column="ri_shr_pct" />
		<result property="riTsiAmt" 				column="ri_tsi_amt" />	
		<result property="riPremAmt" 				column="ri_prem_amt" />
		<result property="totRiShrPct" 				column="tot_ri_shr_pct" />
		<result property="totRiTsiAmt" 				column="tot_ri_tsi_amt" />
		<result property="totRiPremAmt" 			column="tot_ri_prem_amt" />
	</resultMap>
	
	<select id="viewSummDistRiPlacement" resultMap="gipis130RiPlacementMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_ri_placement_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
							<isNotNull property="filter">
                                WHERE 1 = 1
                            	<isNotEmpty prepend="AND" property="riSname">
									UPPER(ri_sname) LIKE UPPER(#riSname#)
								</isNotEmpty>
                            </isNotNull>
							<isEqual property="sortColumn" compareValue="riSname">
								ORDER BY ri_sname
							</isEqual>
							<isEqual property="sortColumn" compareValue="riShrPct">
								ORDER BY ri_shr_pct
							</isEqual>
							<isEqual property="sortColumn" compareValue="riTsiAmt">
								ORDER BY ri_tsi_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="riPremAmt">
								ORDER BY ri_prem_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_ri_placement_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130BindersMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="binderNo" 				column="binder_no" />
	    <result property="riName" 					column="ri_name" />
		<result property="riShrPct"					column="ri_shr_pct" />
		<result property="riTsiAmt" 				column="ri_tsi_amt" />	
		<result property="riPremAmt" 				column="ri_prem_amt" />
		<result property="totRiShrPct" 				column="tot_ri_shr_pct" />
		<result property="totRiTsiAmt" 				column="tot_ri_tsi_amt" />
		<result property="totRiPremAmt" 			column="tot_ri_prem_amt" />
	</resultMap>
	
	<select id="viewBinder" resultMap="gipis130BindersMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_binders_tg(#riCd#,#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
						   WHERE 1 = 1
						     AND UPPER(binder_no) LIKE '%' || UPPER(NVL(#binderNo#, binder_no))
							<isEqual property="sortColumn" compareValue="binderNo">
								ORDER BY binder_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="riShrPct">
								ORDER BY ri_shr_pct
							</isEqual>
							<isEqual property="sortColumn" compareValue="riTsiAmt">
								ORDER BY ri_tsi_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="riPremAmt">
								ORDER BY ri_prem_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_binders_tg(#riCd#,#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
						  WHERE 1 = 1
						    AND UPPER(binder_no) LIKE '%' || UPPER(NVL(#binderNo#, binder_no))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130DistItemMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyNo" 				column="policy_no" />
	    <result property="itemNo" 					column="item_no" />
	</resultMap>
	
	<select id="viewDistItem" resultMap="gipis130DistItemMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_dist_item_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
							<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY policy_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_dist_item_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130DistPerItemMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyNo" 				column="policy_no" />
	    <result property="itemNo" 					column="item_no" />
	    <result property="trtyName" 				column="trty_name" />
		<result property="tsiSpct" 					column="tsi_spct" />
		<result property="distTsi" 					column="dist_tsi" />	
		<result property="premSpct" 				column="prem_spct" />
		<result property="distPrem" 				column="dist_prem" />
		<result property="totTsiSpct" 				column="tot_tsi_spct" />
		<result property="totDistTsi" 				column="tot_dist_tsi" />	
		<result property="totPremSpct" 				column="tot_prem_spct" />
		<result property="totDistPrem" 				column="tot_dist_prem" />
	</resultMap>
	
	<select id="viewDistPerItem" resultMap="gipis130DistPerItemMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_dist_per_item_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#itemNo#))
							<isNotNull property="filter">
                                WHERE 1 = 1
                            	<isNotEmpty prepend="AND" property="trtyName">
									UPPER(trty_name) LIKE UPPER(#trtyName#)
								</isNotEmpty>
                            </isNotNull>
							<isEqual property="sortColumn" compareValue="trtyName">
								ORDER BY trty_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="tsiSpct">
								ORDER BY tsi_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distTsi">
								ORDER BY dist_tsi
							</isEqual>
							<isEqual property="sortColumn" compareValue="premSpct">
								ORDER BY prem_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distPrem">
								ORDER BY dist_prem
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_dist_per_item_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#itemNo#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130DistPerilMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyNo" 				column="policy_no" />
	    <result property="perilName"				column="peril_name" />
	    <result property="perilCd" 					column="peril_cd" />
	    <result property="totDistTsi" 					column="tot_dist_tsi" />	
		<result property="totDistPrem" 				column="tot_dist_prem" />
	</resultMap>
	
	<select id="viewDistPeril" resultMap="gipis130DistPerilMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_dist_peril_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
							<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY policy_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="perilName">
								ORDER BY peril_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_dist_peril_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap id="gipis130DistPerPerilMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyNo" 				column="policy_no" />
	    <result property="perilName"				column="peril_name" />
	    <result property="trtyName" 				column="trty_name" />
		<result property="tsiSpct" 					column="tsi_spct" />
		<result property="distTsi" 					column="dist_tsi" />	
		<result property="premSpct" 				column="prem_spct" />
		<result property="distPrem" 				column="dist_prem" />
		<result property="totTsiSpct" 				column="tot_tsi_spct" />
		<result property="totDistTsi" 				column="tot_dist_tsi" />	
		<result property="totPremSpct" 				column="tot_prem_spct" />
		<result property="totDistPrem" 				column="tot_dist_prem" />
	</resultMap>
	
	<select id="viewDistPerPeril" resultMap="gipis130DistPerPerilMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis130_pkg.get_dist_per_peril_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#perilCd#))
							<isEqual property="sortColumn" compareValue="trtyName">
								ORDER BY trty_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="tsiSpct">
								ORDER BY tsi_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distTsi">
								ORDER BY dist_tsi
							</isEqual>
							<isEqual property="sortColumn" compareValue="premSpct">
								ORDER BY prem_spct
							</isEqual>
							<isEqual property="sortColumn" compareValue="distPrem">
								ORDER BY dist_prem
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis130_pkg.get_dist_per_peril_tg(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#perilCd#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap id="insertSummDistMap" class="map">
		<parameter property="lineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="sublineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="issCd"				jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="issueYy"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="polSeqNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="renewNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="distNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="distSeqNo"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="message"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<procedure id="insertSummDist" parameterMap="insertSummDistMap">
		BEGIN
			gipis130_pkg.insert_summ_dist(?,?,?,?,?,?,?,?,?);
		END;
	</procedure>
	
	<!-- shan 08.07.2014 -->
	<resultMap class="GIUWPolDistPolbasicV"	id="getGIUWPolDistPolbasicVMap3" >
		<result property="policyId" 			column="POLICY_ID"/>
		<result property="lineCd" 				column="LINE_CD"/>
		<result property="sublineCd" 			column="SUBLINE_CD"/>
		<result property="issCd" 				column="ISS_CD"/>
		<result property="issueYy" 				column="ISSUE_YY"/>
		<result property="parId" 				column="PAR_ID"/>
		<result property="polSeqNo" 			column="POL_SEQ_NO"/>
		<result property="policyNo" 			column="POLICY_NO"/>
		<result property="assdNo" 				column="ASSD_NO"/>
		<result property="endtIssCd" 			column="ENDT_ISS_CD"/>
		<result property="spldFlag" 			column="SPLD_FLAG"/>
		<result property="distFlag" 			column="DIST_FLAG"/>
		<result property="distNo" 				column="DIST_NO"/>
		<result property="effDate" 				column="EFF_DATE"/>
		<result property="effDatePolbas" 		column="EFF_DATE_POLBAS"/>
		<result property="issueDate" 			column="ISSUE_DATE"/>
		<result property="expiryDatePolbas" 	column="EXPIRY_DATE_POLBAS"/>
		<result property="endtExpiryDate" 		column="ENDT_EXPIRY_DATE"/>
		<result property="expiryDatePolDist" 	column="EXPIRY_DATE_POLDIST"/>
		<result property="endtYy" 				column="ENDT_YY"/>
		<result property="distType" 			column="DIST_TYPE"/>
		<result property="acctEntDate" 			column="ACCT_ENT_DATE"/>
		<result property="endtSeqNo" 			column="ENDT_SEQ_NO"/>
		<result property="endtNo" 				column="ENDT_NO"/>
		<result property="renewNo" 				column="RENEW_NO"/>
		<result property="polFlag" 				column="POL_FLAG"/>
		<result property="negateDate" 			column="NEGATE_DATE"/>
		<result property="acctNegDate" 			column="ACCT_NEG_DATE"/>
		<result property="inceptDate" 			column="INCEPT_DATE"/>
		<result property="lastUpDate" 			column="LAST_UPD_DATE"/>
		<result property="userId" 				column="USER_ID"/>
		<result property="batchId" 				column="BATCH_ID"/>
		<result property="tsiAmt" 				column="TSI_AMT"/>
		<result property="premAmt" 				column="PREM_AMT"/>
		<result property="userId2" 				column="USER_ID2"/>
	</resultMap>
	
	<select id="getPoliciesByBatchId" resultMap="getGIUWPolDistPolbasicVMap3" parameterClass="java.util.HashMap">
		SELECT * 
          <!-- FROM TABLE (GIUW_POL_DIST_POLBASIC_V_PKG.get_giuw_pol_dist_polbasic_v(#moduleId#, #lineCd#, #issCd#, #sublineCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #distNo#, #userId#))
         WHERE NVL(batch_id, 0) = NVL(#batchId#, NVL(batch_id, 0)) -->
          FROM TABLE(GIUW_POL_DIST_POLBASIC_V_PKG.get_giuw_pol_dist_polbasic_v_3(#moduleId#, #userId#, #batchId#))
	</select>
	
	<select id="getPoliciesByParam" resultMap="getGIUWPolDistPolbasicVMap3" parameterClass="java.util.HashMap">
		SELECT * 
          FROM TABLE (GIUW_POL_DIST_POLBASIC_V_PKG.get_giuw_pol_dist_polbasic_v(#moduleId#, #lineCd#, #issCd#, #sublineCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #distNo#, #userId#))
         WHERE batch_id IS NULL
          <isNotNull property="fromDate">	<!-- SR-18810 : shan 07.27.2015 -->
         	<isNotNull property="toDate">
         		<isEqual property="dateType" compareValue="issueDate">
         			AND TRUNC(issue_date) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
         		</isEqual>
         		<isEqual property="dateType" compareValue="effDate">
         			AND TRUNC(eff_date_polbas) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
         		</isEqual>
         		<isEqual property="dateType" compareValue="expiryDate">
         			AND TRUNC(expiry_date_polbas) BETWEEN TRUNC(TO_DATE(#fromDate#, 'MM-DD-YYYY')) AND  TRUNC(TO_DATE(#toDate#, 'MM-DD-YYYY'))
         		</isEqual>
         	</isNotNull>
       </isNotNull>
       <isNotNull property="equateTsi">
   		<isEqual property="equateTsi" compareValue="equals">
			AND tsi_amt = NVL(#tsiAmt#, 0)
		</isEqual>
		<isEqual property="equateTsi" compareValue="greaterEqual">
			AND tsi_amt &gt;= NVL(#tsiAmt#, 0)
		</isEqual>
		<isEqual property="equateTsi" compareValue="lessEqual">
			AND tsi_amt &lt;= NVL(#tsiAmt#, 0)
		</isEqual>	
       </isNotNull>
	</select>
	<!-- end 08.07.2014 -->
</sqlMap>
