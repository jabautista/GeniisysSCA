<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIPIPolbasic">

	<cacheModel id="oneDayClient" type="MEMORY">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>
	
	<typeAlias alias="GIPIPolbasicClass" type="com.geniisys.gipi.entity.GIPIPolbasic"/>
	<typeAlias alias="GIISRegionClass" type="com.geniisys.common.entity.GIISRegion" />
	
	<resultMap class="GIPIPolbasicClass" id="polbasMap">
		<result column="LINE_CD" 	property="lineCd"/>
		<result column="SUBLINE_CD" property="sublineCd"/>
		<result column="ISS_CD" 	property="issCd"/>
		<result column="ISSUE_YY" 	property="issueYy"/>
		<result column="POL_SEQ_NO" property="polSeqNo"/>
		<result column="RENEW_NO" 	property="renewNo"/>
		<result column="REF_POL_NO" property="refPolNo"/>
		<result column="INCEPT_DATE" property="inceptDate"/>
		<result column="EXPIRY_DATE" property="expiryDate"/>		
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="polbasMapTableGridMap">
		<result column="LINE_CD" 		property="lineCd"/>
		<result column="SUBLINE_CD" 	property="sublineCd"/>
		<result column="ISS_CD" 		property="issCd"/>
		<result column="ISSUE_YY" 		property="issueYy"/>
		<result column="POL_SEQ_NO" 	property="polSeqNo"/>
		<result column="RENEW_NO" 		property="renewNo"/>
		<result column="REF_POL_NO" 	property="refPolNo"/>
		<result column="INCEPT_DATE" 	property="inceptDate"/>
		<result column="EXPIRY_DATE" 	property="expiryDate"/>
		<result column="ROWNUM_" 		property="rowNum" />			
		<result column="COUNT_"			property="rowCount"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="policyDetailsMap">
		<result column="PACK_POLICY_ID" 	property="packPolicyId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ENDT_TYPE" 			property="endtType"/>
		<result column="PAR_ID" 			property="parId"/>
		<result column="NO_OF_ITEMS" 		property="noOfItems"/>
		<result column="POL_FLAG" 			property="polFlag"/>
		<result column="FLEET_PRINT_TAG" 	property="fleetPrintTag"/>
		<result column="PACK_POL" 			property="packPol"/>
		<result column="CO_INSURANCE_SW" 	property="coInsuranceSw"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="POLICY_NO" 			property="policyNo"/>
		<result column="PAR_NO" 			property="parNo"/>
		<result column="BILL_NOT_PRINTED" 	property="billNotPrinted"/>
		<result column="ENDT_NO" 			property="endtNo"/>
		<result column="POLICY_DS_DTL_EXIST" property="policyDsDtlExist"/>
		<result column="ENDT_TAX" 			property="endtTax"/>
		<result column="ITMPERIL_COUNT" 	property="itmperilCount"/>
		<result column="COMPULSORY_DEATH" 	property="compulsoryDeath"/>
		<result column="COC_TYPE" 			property="cocType"/>
		<result column="PACK_POL_FLAG" 		property="packPolFlag"/>
		<result property="lineReports" 		column="{lineCd=LINE_CD}" select="getReportsPerLineCd" />
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="policyListingMap">
		<result column="PACK_POLICY_ID" 	property="packPolicyId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ENDT_TYPE" 			property="endtType"/>
		<result column="PAR_ID" 			property="parId"/>
		<result column="NO_OF_ITEMS" 		property="noOfItems"/>
		<result column="POL_FLAG" 			property="polFlag"/>
		<result column="FLEET_PRINT_TAG" 	property="fleetPrintTag"/>
		<result column="CO_INSURANCE_SW" 	property="coInsuranceSw"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="PAR_NO"				property="parNo"/>
		<result column="PREM_SEQ_NO"		property="premSeqNo"/>
		<result column="ENDT_TAX" 			property="endtTax"/>
		<result column="COC_TYPE" 			property="cocType"/>
		<result property="menulineCd" 		column="{lineCd=LINE_CD}" select="getMenuLineCd" />
		<result property="packPolFlag" 		column="{lineCd=LINE_CD}" select="getPackPolFlag" />
		
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="PolicyListingResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="PACK_POLICY_ID" 	property="packPolicyId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ENDT_TYPE" 			property="endtType"/>
		<result column="PAR_ID" 			property="parId"/>
		<result column="NO_OF_ITEMS" 		property="noOfItems"/>
		<result column="POL_FLAG" 			property="polFlag"/>
		<result column="FLEET_PRINT_TAG" 	property="fleetPrintTag"/>
		<result column="CO_INSURANCE_SW" 	property="coInsuranceSw"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="PAR_NO"				property="parNo"/>
		<result column="POLICY_NO"			property="policyNo"/>
		<result column="ENDT_NO"			property="endtNo"/>		
		<result column="PREM_SEQ_NO"		property="premSeqNo"/>
		<result column="DSP_PREM_SEQ_NO"	property="dspPremSeqNo"/>
		<result column="ENDT_TAX" 			property="endtTax"/>
		<result column="COC_TYPE" 			property="cocType"/>
		<result column="MENU_LINE_CD" 		property="menuLineCd"/>	
		<result property="packPolFlag" 		column="{lineCd=LINE_CD}" select="getPackPolFlag" />		
	</resultMap>	
	
	<resultMap class="GIPIPolbasicClass"    id="policyListingForCertMap">
		<result column="PACK_POLICY_ID" 	property="packPolicyId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ENDT_TYPE" 			property="endtType"/>
		<result column="PAR_ID" 			property="parId"/>
		<result column="NO_OF_ITEMS" 		property="noOfItems"/>
		<result column="POL_FLAG" 			property="polFlag"/>
		<result column="FLEET_PRINT_TAG" 	property="fleetPrintTag"/>
		<result column="CO_INSURANCE_SW" 	property="coInsuranceSw"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="PAR_NO"				property="parNo"/>
		<result property="menulineCd" 		column="{lineCd=LINE_CD}" select="getMenuLineCd" />
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass"    id="policyTableGridForCertMap">
		<result column="PACK_POLICY_ID" 	property="packPolicyId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ENDT_TYPE" 			property="endtType"/> 
		<result column="PAR_ID" 			property="parId"/>
		<result column="NO_OF_ITEMS" 		property="noOfItems"/>
		<result column="POL_FLAG" 			property="polFlag"/>
		<result column="FLEET_PRINT_TAG" 	property="fleetPrintTag"/>
		<result column="CO_INSURANCE_SW" 	property="coInsuranceSw"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="POLICY_NO"		    property="policyNo"/>
		<result column="ENDT_NO"			property="endtNo"/>
		<result column="PAR_NO"				property="parNo"/>
		<result property="menulineCd" 		column="{lineCd=LINE_CD}" select="getMenuLineCd" />
		<result column="ROWNUM_" 			property="rowNum" />			
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicForEndtMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="endt_expiry_date" 	property="endtExpiryDate"/>
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="pol_flag" 			property="polFlag"/>
	</resultMap>
	
	<!-- Rey 07-29-2011 bill premium main list -->
	<resultMap class="java.util.HashMap" id="billPremiumMainList" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"        		property="policyId"/>
		<result column="prem_seq_no"      		property="premSeqNo"/>
		<result column="item_grp"         		property="itemGrp"/>
		<result column="insured"          		property="insured"/>
		<result column="property"         		property="property"/>
		<result column="payt_terms"       		property="paytTerms"/>
		<result column="due_date"         		property="dueDate"/>
		<result column="currency_rt"      		property="currencyRt"/>
		<result column="policy_currency"  		property="policyCurrency"/>
		<result column="remarks"          		property="remarks"/>
		<result column="ref_inv_no"       		property="refInvNo"/>
		<result column="other_charges"    		property="otherCharges"/>
		<result column="ri_comm_vat"      		property="riCommVat"/>
		<result column="ri_comm_amt"      		property="riCommAmt"/>
		<result column="multi_booking_yy" 		property="multiBookingYy"/>
		<result column="multi_booking_mm" 		property="multiBookingMm"/>
		<result column="acct_ent_date"    		property="acctEntDate"/>
		<result column="user_id"          		property="userId"/>
		<result column="last_upd_date"    		property="lastUpdDate"/>
		<result column="amount_due"       		property="amountDue"/>
		<result column="iss_cd"           		property="issCd"/>
		<result column="bill_no"          		property="billNo"/>
		<result column="multi_booking_dt" 		property="multiBookingDt"/>
		<result column="tax_sum"          		property="taxSum"/>
		<result column="currency_desc" 	        property="currencyDesc"/>
		<result column="ann_prem_amt"           property="annPremAmt"/>
		<result column="ann_tsi_amt"            property="annTsiAmt"/>
		<result column="tsi_amt"                property="tsiAmt"/>
		<result column="line_cd"				property="lineCd"/>
		<result column="item_no"				property="itemNo"/>
		<result column="item_title"				property="itemTitle"/>
		<result column="item_prem_amt"			property="premAmt"/>
		<result column="grp_prem_amt"			property="sumPremAmt"/>
		<result column="str_due_date"			property="strDueDate"/>
	</resultMap>
	
	<!-- Rey 08-04-2011 bill peril list -->
	<resultMap class="GIPIPolbasicClass" id="billPerilList" extends="BaseEntity.TableGridResultMap">
		<result column="peril_name" 			property="perilName"/>
		<result column="prem_amt"				property="premAmt"/>
		<result column="tsi_amt"				property="tsiAmt"/>
		<result column="peril_cd"				property="perilCd"/>
	</resultMap>
	
	<!-- Rey 10-11-2011 bond bill tax list -->
	<resultMap class="GIPIPolbasicClass" id="bondBillTaxList" extends="BaseEntity.TableGridResultMap">
		<result column="tax_cd"					property="taxCd"/>
		<result column="tax_desc"				property="taxDesc"/>
		<result column="tax_amt"				property="taxAmt"/>		
	</resultMap>
	
	<!-- Rey 08-09-2011 policy discount surcharge -->
	<resultMap class="GIPIPolbasicClass" id="policyDiscountSurchargeMap" extends="BaseEntity.TableGridResultMap">
		<result column="sequence" 				property="sequence"/>
		<result column="disc_amt" 				property="discAmt"/>
		<result column="disc_rt"				property="discRt"/>
		<result column="surcharge_amt"			property="surchargeAmt"/>
		<result column="surcharge_rt"			property="surchargeRt"/>
		<result column="net_prem_amt"			property="netPremAmt"/>
		<result column="net_gross_tag"			property="netGrossTag"/>
		<result column="remarks"				property="remarks"/>
	</resultMap>
	
	<!-- Rey 08.16.2011 bond policy data -->
	<resultMap class="GIPIPolbasicClass" id="bondPolicyDataMap">
		<result column="obligee_name"			property="obligeeName"/>
		<result column="prin_signor"			property="prinSignor"/>
		<result column="designation"			property="designation"/>
		<result column="np_name"				property="npName"/>
		<result column="clause_desc"			property="clauseDesc"/>
		<result column="gen_info"				property="genInfo"/>
		<result column="bond_dtl" 				property="bondDtl"/>
		<result column="indemnity_text"			property="indemnityText"/>
		<result column="coll_flag"				property="collFlag"/>
		<result column="waiver_limit"			property="waiverLimit"/>
		<result column="str_cntr_date" 			property="strConDate"/>
		<result column="contract_dtl"			property="contractDtl"/>
		<result column="policy_id" 				property="policyId"/>
	</resultMap>
	
	<!-- Rey 08.16.2011 cosign list -->
	<resultMap class="GIPIPolbasicClass" id="getCosignMap" extends="BaseEntity.TableGridResultMap">
		<result column="cosign_name"			property="cosignName"/>
		<result column="bonds_flag"		 		property="bondsFlag"/>
		<result column="indem_flag"				property="indemFlag"/>
	</resultMap>
	
	<!-- Rey 08-09-2011 item discount surcharge -->
	<resultMap class="GIPIPolbasicClass" id="itemDiscountSurchargeMap" extends="BaseEntity.TableGridResultMap">
		<result column="sequence"				property="sequence"/>
		<result column="item_no"				property="itemNo"/>
		<result column="disc_amt"				property="discAmt"/>
		<result column="disc_rt"				property="discRt"/>
		<result column="surcharge_amt"			property="surchargeAmt"/>
		<result column="surcharge_rt"			property="surchargeRt"/>
		<result column="net_prem_amt"			property="netPremAmt"/>
		<result column="net_gross_tag"			property="netGrossTag"/>
		<result column="remarks"				property="remarks"/>
	</resultMap>
	
	<!-- Rey 08-09-2011 peril discount surcharge -->
	<resultMap class="GIPIPolbasicClass" id="perilDiscountSurchargeMap" extends="BaseEntity.TableGridResultMap">
		<result column="sequence"				property="sequence"/>
		<result column="item_no"				property="itemNo"/>
		<result column="peril_name"				property="perilName"/>
		<result column="disc_amt"				property="discAmt"/>
		<result column="disc_rt"				property="discRt"/>
		<result column="surcharge_amt"			property="surchargeAmt"/>
		<result column="surcharge_rt"			property="surchargeRt"/>
		<result column="net_prem_amt"			property="netPremAmt"/>
		<result column="net_gross_tag"			property="netGrossTag"/>
		<result column="remarks"				property="remarks"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicFIMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemFIForEndt"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicMCMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemMCForEndt"/>
	</resultMap>

	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicMNMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemMNForEndt"/>
	</resultMap>

	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicCAMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemCAForEndt"/>
	</resultMap>

	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicMHMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemMHForEndt"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicAVMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemAVForEndt"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicENMap" extends="GIPIPolbasicForEndtMap">
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}" property="gipiItems" select="getGIPIItemENForEndt"/>
		<!-- <result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no}" property="gipiItems" select="getGIPIItemForEndt"/> -->
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="endtPolicyMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="endt_expiry_date" 	property="endtExpiryDate"/>
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="pol_flag" 			property="polFlag"/>
<!-- 		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no}"	 
											property="gipiItems" select="getGIPIItemForEndt"/> -->
	</resultMap>
	
	<resultMap id="getEndtPolicyDatesMap" class="java.util.HashMap">
		<result column="policy_id" property="policyId"/>
		<result column="incept_date" property="inceptDate"/>
		<result column="eff_date" property="effDate"/>
		<result column="expiry_date" property="expiryDate"/>
		<result column="endt_expiry_date" property="endtExpiryDate"/>
	</resultMap>
	
<!-- 	<resultMap class="GIPIPolbasicClass" id="endtCAPolicyMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="endt_expiry_date" 	property="endtExpiryDate"/>
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="pol_flag" 			property="polFlag"/>
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no}"	 
											property="gipiItems" select="getGIPIItemCAForEndt"/>
	</resultMap> -->
	
	<resultMap class="GIPIPolbasicClass" id="endtACPolicyMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="endt_expiry_date" 	property="endtExpiryDate"/>
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="pol_flag" 			property="polFlag"/>
		<result column="{policyId=policy_id, lineCd=line_cd, sublineCd=subline_cd, issCd=iss_cd, issueYy=issue_yy, polSeqNo=pol_seq_no, renewNo=renew_no, effDate=eff_date}"	 
											property="gipiItems" select="getGIPIItemACForEndt"/>
	</resultMap>	
	
	<resultMap class="GIPIPolbasicClass" id="endtListingPolMap">
		<result column="policy_id"			property="policyId" />
		<result column="subline_cd" 		property="sublineCd" />
		<result column="iss_cd" 			property="issCd" />
		<result column="issue_yy" 			property="issueYy" />
		<result column="pol_seq_no" 		property="polSeqNo" />
		<result column="renew_no" 			property="renewNo" />
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="gipdLineCdLovMap">
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="assd_no"			property="assdNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="polInfoMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="ref_pol_no"			property="refPolNo"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="assd_no" 			property="assdNo"/>
		<result column="cred_branch" 		property="credBranch"/>
		<result column="issue_date" 		property="issueDate"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="pol_flag" 			property="polFlag"/>
		<result column="mean_pol_flag" 		property="meanPolFlag"/>
		<result column="nbt_line_cd" 		property="nbtLineCd"/>
		<result column="nbt_iss_cd" 		property="nbtIssCd"/>
		<result column="par_yy" 			property="parYy"/>
		<result column="par_seq_no" 		property="parSeqNo"/>
		<result column="quote_seq_no" 		property="quoteSeqNo"/>
		<result column="line_cd_rn" 		property="lineCdRn"/>
		<result column="iss_cd_rn" 			property="issCdRn"/>
		<result column="rn_yy" 				property="rnYy"/>
		<result column="rn_seq_no" 			property="rnSeqNo"/>
		<result column="assd_name" 			property="assdName"/>
		<result column="pack_pol_no" 		property="packPolNo"/>
		<result column="pack_policy_id" 	property="packPolicyId"/>
		<result column="iss_name" 			property="issName"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="polInfoTableGridMap" extends="polInfoMap">
		<result column="ROWNUM_" 			property="rowNum" />			
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
		
	<!-- <resultMap class="GIPIPolbasicClass" id="relatedPolInfoMap"> --> <!-- apollo cruz 03.18.2015 -->
	<resultMap class="java.util.HashMap" id="relatedPolInfoMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="endorsement_no" 	property="endtNo"/>
		<result column="endt_type" 			property="endtType"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="issue_date" 		property="issueDate"/>
		<result column="acct_ent_date" 		property="acctEntDate"/>
		<result column="par_no" 			property="parNo"/>
		<result column="ref_pol_no" 		property="refPolNo"/>
		<result column="prem_amt" 			property="premAMt"/>
		<result column="pol_flag" 			property="polFlag"/>
		<result column="spld_flag" 			property="spldFlag"/>
		<result column="mean_pol_flag" 		property="meanPolFlag"/>
		<result column="reinstate_tag" 		property="reinstateTag"/>
		<result column="eff_date" 			property="strEffDate"/>
		<result column="issue_date" 		property="strIssueDate"/>
		<result column="acct_ent_date" 		property="strAcctEntDt"/>
		<result column="rownum_" 			property="rowNum" />			
		<result column="count_"				property="rowCount"/>
	</resultMap>

	<resultMap class="java.util.HashMap" id="polMainInfoMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="pol_no" 			property="polNo"/>
		<result column="endorsement_no" 	property="endorsementNo"/>
		<result column="assd_name" 			property="assdName"/>
		<result column="acct_of" 			property="acctOf"/>
		<result column="label_tag" 			property="labelTag"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="pack_pol_flag"		property="pack_pol_flag"/>
		<result column="subline_mop_sw"		property="sublineMopSw"/>
		<result column="menu_line_cd"		property="menuLineCd"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="polBasicInfoMap">
		<result column="policy_id" 			property="policyId"/>
		<result column="pol_no" 			property="polNo"/>
		<result column="address1" 			property="address1"/>
		<result column="address2" 			property="address2"/>
		<result column="address3" 			property="address3"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="booking_year" 		property="bookingYear"/>
		<result column="booking_mth" 		property="bookingMth"/>
		<result column="type_desc" 			property="typeDesc"/>
		<result column="industry_nm" 		property="industryNm"/>
		<result column="region_desc" 		property="regionDesc"/>
		<result column="iss_name" 			property="issName"/>
		<result column="remarks" 			property="remarks"/>
		<result column="takeup_term_desc" 	property="takeupTermDesc"/>
		<result column="line_name" 			property="lineName"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="issue_date" 		property="issueDate"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="endt_expiry_date" 	property="endtExpirydate"/>
		<result column="ref_pol_no" 		property="refPolNo"/>
		<result column="manual_renew_no" 	property="manualRenewNo"/>
		<result column="actual_renew_no" 	property="actualRenewNo"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="prem_amt" 			property="premAmt"/>
		<result column="tsi_amt" 			property="tsiAmt"/>
		<result column="risk_tag" 			property="riskTag"/>
		<result column="risk_desc" 			property="riskDesc"/>
		<result column="incept_tag" 		property="inceptTag"/>
		<result column="expiry_tag" 		property="expiryTag"/>
		<result column="plan_sw" 			property="planSw"/>
		<result column="endt_expiry_tag" 	property="endtExpiryTag"/>
		<result column="bancassurance_sw" 	property="bancassuranceSw"/>
		<result column="surcharge_sw" 		property="surchargeSw"/>
		<result column="discount_sw" 		property="discountSw"/>
		<result column="pack_pol_flag" 		property="packPolFlag"/>
		<result column="auto_renew_flag" 	property="autoRenewFlag"/>
		<result column="foreign_acc_sw" 	property="foreignAccSw"/>
		<result column="reg_policy_sw" 		property="regPolicySw"/>
		<result column="prem_warr_tag" 		property="premWarrTag"/>
		<result column="prem_warr_days" 	property="premWarrDays"/>
		<result column="fleet_print_tag" 	property="fleetPrintTag"/>
		<result column="with_tariff_sw" 	property="withTariffSw"/>
		<result column="co_insurance_sw" 	property="coInsuranceSw"/>
		<result column="prorate_flag" 		property="prorateFlag"/>
		<result column="short_rt_percent" 	property="shortRtPercent"/>
		<result column="prov_prem_tag" 		property="provPremTag"/>
		<result column="prov_prem_pct" 		property="provPremPct"/>
		<result column="dsp_text" 			property="dspText"/>
		<result column="prompt_text" 		property="promptText"/>
		<result column="ann_tsi_amt" 		property="annTsiAmt"/>
		<result column="ann_prem_amt" 		property="annPremAmt"/>
		<result column="default_currency" 	property="defaultCurrency"/>
		<result column="comp_sw" 			property="compSw"/>
		
		<result column="policy_id_type"		property="policyIdType"/>
		<result column="line_type"			property="lineType"/>
		<result column="survey_agent_cd"	property="surveyAgentCd"/>
		<result column="survey_agent"		property="surveyAgent"/>
		<result column="settling_agent_cd"	property="settlingAgentCd"/>
		<result column="settling_agent"		property="settlingAgent"/>
		
		<result column="contract_proj_buss_title"	property="contractProjBussTitle"/>
		<result column="construct_start_date"		property="constructStartDate"/>
		<result column="maintain_start_date"		property="maintainStartDate"/>
		<result column="construct_end_date"			property="constructEndDate"/>
		<result column="maintain_end_date"			property="maintainEndDate"/>
		<result column="mbi_policy_no"				property="mbiPolicyNo"/>
		<result column="site_location"				property="siteLocation"/>
		<result column="time_excess"				property="timeExcess"/>
		<result column="weeks_test"					property="weeksTest"/>
		<result column="prompt_title"				property="promptTitle"/>
		<result column="prompt_location"			property="promptLocation"/>
		<result column="open_policy_view"			property="openPolicyView"/>
		<result column="policy_endtseq0"			property="policyEndtseq0"/>
		
		<result column="bank_btn_label"		property="bankBtnLabel"/>
		
		<result column="gen_info01" 		property="genInfo01"/>
		<result column="gen_info02" 		property="genInfo02"/>
		<result column="gen_info03" 		property="genInfo03"/>
		<result column="gen_info04" 		property="genInfo04"/>
		<result column="gen_info05" 		property="genInfo05"/>
		<result column="gen_info06" 		property="genInfo06"/>
		<result column="gen_info07" 		property="genInfo07"/>
		<result column="gen_info08" 		property="genInfo08"/>
		<result column="gen_info09" 		property="genInfo09"/>
		<result column="gen_info10" 		property="genInfo10"/>
		<result column="gen_info11" 		property="genInfo11"/>
		<result column="gen_info12" 		property="genInfo12"/>
		<result column="gen_info13" 		property="genInfo13"/>
		<result column="gen_info14" 		property="genInfo14"/>
		<result column="gen_info15" 		property="genInfo15"/>
		<result column="gen_info16" 		property="genInfo16"/>
		<result column="gen_info17" 		property="genInfo17"/>
		<result column="info01"				property="info01"/>
		<result column="info02"				property="info02"/>
		<result column="info03"				property="info03"/>
		<result column="info04"				property="info04"/>
		<result column="info05"				property="info05"/>
		<result column="info06"				property="info06"/>
		<result column="info07"				property="info07"/>
		<result column="info08"				property="info08"/>
		<result column="info09"				property="info09"/>
		<result column="info10"				property="info10"/>
		<result column="info11"				property="info11"/>
		<result column="info12"				property="info12"/>
		<result column="info13"				property="info13"/>
		<result column="info14"				property="info14"/>
		<result column="info15"				property="info15"/>
		<result column="info16"				property="info16"/>
		<result column="info17"				property="info17"/>
		<result column="subline_cd_param"	property="sublineCdParam"/> <!-- added by robert SR 20307 10.27.15 -->
		<result column="is_foreign_currency" property="isForeignCurrency"/> <!-- added by robert SR 21862 03.08.16 -->
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="polBasicInfoSuMap">
	
		<result column="policy_id" 				property="policyId"/>
		<result column="address1" 				property="address1"/>
		<result column="address2" 				property="address2"/>
		<result column="address3" 				property="address3"/>
		<result column="booking_year" 			property="bookingYear"/>
		<result column="booking_mth" 			property="bookingMth"/>
		
		<result column="industry_nm" 			property="industryNm"/>
		<result column="region_desc" 			property="regionDesc"/>
		<result column="takeup_term_desc" 		property="takeupTermDesc"/>
		<result column="incept_date" 			property="inceptDate"/>
		<result column="expiry_date" 			property="expiryDate"/>
		<result column="issue_date" 			property="issueDate"/>
		<result column="eff_date" 				property="effDate"/>
		<result column="endt_expiry_date" 		property="endtExpiryDate"/>
		<result column="ref_pol_no" 			property="refPolNo"/>
		<result column="incept_tag" 			property="inceptTag"/>
		<result column="expiry_tag" 			property="expiryTag"/>
		<result column="bancassurance_sw"		property="bancassuranceSsw"/>
		<result column="reg_policy_sw"			property="regPolicySw"/>
		<result column="auto_renew_flag" 		property="autoRenewFlag"/>
		<result column="pol_flag"				property="polFlag"/>
		<result column="subline_cd"				property="sublineCd"/>
		<result column="endt_seq_no"			property="endtSeqNo"/>
		<result column="mortg_name"				property="mortgName"/>
		<result column="dsp_endt_expiry_date"	property="dspEndtExpiryDate"/>
		<result column="prompt_text"			property="promptText"/>
		<result column="val_period"				property="valPeriod"/>
		<result column="val_period_unit"		property="valPeriodUnit"/>
		           
		<result column="gen_info01" 			property="genInfo01"/>
		<result column="gen_info02" 			property="genInfo02"/>
		<result column="gen_info03" 			property="genInfo03"/>
		<result column="gen_info04" 			property="genInfo04"/>
		<result column="gen_info05" 			property="genInfo05"/>
		<result column="gen_info06" 			property="genInfo06"/>
		<result column="gen_info07" 			property="genInfo07"/>
		<result column="gen_info08" 			property="genInfo08"/>
		<result column="gen_info09" 			property="genInfo09"/>
		<result column="gen_info10" 			property="genInfo10"/>
		<result column="gen_info11" 			property="genInfo11"/>
		<result column="gen_info12" 			property="genInfo12"/>
		<result column="gen_info13" 			property="genInfo13"/>
		<result column="gen_info14" 			property="genInfo14"/>
		<result column="gen_info15" 			property="genInfo15"/>
		<result column="gen_info16" 			property="genInfo16"/>
		<result column="gen_info17" 			property="genInfo17"/>
		
		<result column="endt_text01" 			property="endtText01"/>
		<result column="endt_text02" 			property="endtText02"/>
		<result column="endt_text03" 			property="endtText03"/>
		<result column="endt_text04" 			property="endtText04"/>
		<result column="endt_text05" 			property="endtText05"/>
		<result column="endt_text06" 			property="endtText06"/>
		<result column="endt_text07" 			property="endtText07"/>
		<result column="endt_text08" 			property="endtText08"/>
		<result column="endt_text09" 			property="endtText09"/>
		<result column="endt_text10" 			property="endtText10"/>
		<result column="endt_text11" 			property="endtText11"/>
		<result column="endt_text12" 			property="endtText12"/>
		<result column="endt_text13" 			property="endtText13"/>
		<result column="endt_text14" 			property="endtText14"/>
		<result column="endt_text15" 			property="endtText15"/>
		<result column="endt_text16" 			property="endtText16"/>
		<result column="endt_text17" 			property="endtText17"/>
		<result column="pol_flag_desc" 			property="polFlagDesc"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="bankPaymentDtlMap">
		<result column="company_cd"			property="companyCd"/>
		<result column="employee_cd"		property="employeeCd"/>
		<result column="bank_ref_no"		property="bankRefNo"/>
		<result column="company_name"		property="companyName"/>
		<result column="employee_name"		property="employeeName"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="bancassuranceDtlMap">
		<result column="banc_type_cd"		property="bancTypeCd"/>
		<result column="area_cd"			property="areaCd"/>
		<result column="branch_cd"			property="branchCd"/>
		<result column="manager_cd"			property="managerCd"/>
		<result column="banc_type_desc"		property="bancTypeDesc"/>
		<result column="area_desc"			property="areaDesc"/>
		<result column="branch_desc"		property="branchDesc"/>
		<result column="full_name"			property="payeeName"/>
	</resultMap >
		
	<resultMap class="GIPIPolbasicClass" id="planDtlMap">
		<result column="plan_cd"			property="planCd"/>
		<result column="plan_ch_tag"		property="planChTag"/>
		<result column="plan_desc"			property="planDesc"/>
	</resultMap>
	
	<!-- <resultMap class="GIPIPolbasicClass" id="policyPerAssuredMap"> --> <!-- apollo cruz 03.18.2015 -->
	<resultMap class="java.util.HashMap" id="policyPerAssuredMap">
		<result column="policy_id"			property="policyId"/>
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"		property="endtIssCd"/>
		<result column="endt_yy"			property="endtYy"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="endt_type"			property="endtType"/>
		<result column="incept_date"		property="inceptDate"/>
		<result column="expiry_date"		property="expiryDate"/>
		<result column="pol_flag"			property="polFlag"/>
		<result column="tsi_amt"			property="tsiAmt"/>
		<result column="prem_amt"			property="premAmt"/>
		<result column="par_id"				property="parId"/>
		<result column="acct_of_cd"			property="acctOfCd"/>
		<result column="endt_expiry_date"	property="endtExpiryDate"/>
		<result column="label_tag"			property="labelTag"/>
		<result column="cred_branch"		property="credBranch"/>
		<result column="assd_no"			property="assdNo"/>
		<result column="mean_pol_flag"		property="meanPolFlag"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="endt_no"			property="endtNo"/>
		<result column="incept_date"		property="strInceptDate"/>
		<result column="expiry_date"		property="strExpiryDate"/>
		<result column="rownum_"			property="rowNum"/>
		<result column="count_"				property="rowCount"/>
	</resultMap>
	<!-- Rey 07/19/2011 -->
	<resultMap class="GIPIPolbasicClass" id="policyPerEndorsementTypeMap">
		<result column="policy_id"			property="policyId"/>
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"		property="endtIssCd"/>
		<result column="endt_yy"			property="endtYy"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="endt_type"			property="endtType"/>
		<result column="ENDT_NO"			property="endtNo"/>
		<result column="incept_date"		property="inceptDate"/>
		<result column="expiry_date"		property="expiryDate"/>
		<result column="pol_flag"			property="polFlag"/>
		<result column="tsi_amt"			property="tsiAmt"/>
		<result column="prem_amt"			property="premAMt"/>
		<result column="par_id"				property="parId"/>
		<result column="endt_cd"            property="endtCd"/>
		<result column="endt_title"			property="endtTitle"/>
		<result column="acct_of_cd"			property="acctOfCd"/>
		<result column="endt_expiry_date"	property="endtExpiryDate"/>
		<result column="label_tag"			property="labelTag"/>
		<result column="cred_branch"		property="credBranch"/>
		<result column="assd_no"			property="assdNo"/>
		<result column="mean_pol_flag"		property="meanPolFlag"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="endt_no"			property="endtNo"/>
		<result column="rownum_"			property="rowNum"/>
		<result column="count_"				property="rowCount"/>
	</resultMap>
	
	<!-- Rey 08-05-2011 invoice commission -->
	<resultMap class="GIPIPolbasicClass" id="getInvoiceCommissionMap" extends="BaseEntity.TableGridResultMap">
		<result column="peril_cd"			property="perilCd"/>
		<result column="premium_amt"		property="premiumAmt"/>
		<result column="peril_name"			property="perilName"/>
		<result column="policy_id"			property="policyId"/>
		<result column="wholding_tax"		property="wholdingTax"/>
		<result column="commission_rt"		property="commissionRt"/>
		<result column="commission_amt"		property="commissionAmt"/>
		<result column="intm_no"			property="intmNo"/>
		<result column="prem_seq_no"		property="premSeqNo"/>
		<result column="net_com_amt"		property="netComAmt"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="getInvoiceIntermediariesMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"			property="policyId"/>
		<result column="intm_no"			property="intmNo"/>
		<result column="intm_name"			property="intmName"/>
		<result column="parent_intm_no"		property="parentIntmNo"/>
		<result column="ref_intm_cd"		property="refIntmCd"/>
		<result column="share_percentage"   property="sharePercentage"/>
		<result column="prem_seq_no"		property="premSeqNo"/>
		<result column="share_prem"			property="sharePrem"/>
		<result column="total_comm"			property="totalCommission"/>
		<result column="total_wtax"			property="totalTaxWholding"/>
		<result column="net_comm"		    property="netComAmt"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="policyPerObligeeMap">
		<result column="policy_id"			property="policyId"/>
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"		property="endtIssCd"/>
		<result column="endt_yy"			property="endtYy"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="endt_type"			property="endtType"/>
		<result column="tsi_amt"			property="tsiAmt"/>
		<result column="prem_amt"			property="premAMt"/>
		<result column="par_id"				property="parId"/>
		<result column="acct_of_cd"			property="acctOfCd"/>
		<result column="endt_expiry_date"	property="endtExpiryDate"/>
		<result column="label_tag"			property="labelTag"/>
		<result column="cred_branch"		property="credBranch"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="endt_no"			property="endtNo"/>
		<result column="rownum_"			property="rowNum"/>
		<result column="count_"				property="rowCount"/>
	</resultMap>
	
	<!-- Rey 08-15-2011 policy by obligee list -->
	<resultMap class="GIPIPolbasicClass" id="policyObligeeListMap"	extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"			property="policyId"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="endt_yy"			property="endtYy"/>
		<result column="endt_iss_cd"		property="endtIssCd"/>
		<result column="obligee_name"		property="obligeeName"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="endt_no"			property="endtNo"/>
		<result	column="tsi_amt"			property="tsiAmt"/>
		<result column="prem_amt"			property="premAmt"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="redistributionPolicyListingMap">
		<result column="PAR_ID" 			property="parId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="EFF_DATE" 			property="effDate"/>
		<result column="EXPIRY_DATE" 		property="expiryDate"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="DIST_NO" 			property="distNo"/>
		<result column="DIST_FLAG" 			property="distFlag"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="REF_POL_NO"			property="refPolNo"/>
		<result column="INCEPT_DATE" 		property="inceptDate"/>
		<result column="POLICY_NO" 			property="policyNo"/>
		<result column="ENDT_NO" 			property="endtNo"/>
		<result column="RENEW_FLAG"			property="renewFlag"/>
		<result column="ROWNUM_"			property="rowNum"/>			
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="policyRenewalsMap">
		<result column="policy_id"			property="policyId"/>
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="rownum_"			property="rowNum"/>
		<result column="count_"				property="rowCount"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="redistributionPolicyListingMap2">
		<result column="PAR_ID" 			property="parId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="EFF_DATE" 			property="effDate"/>
		<result column="EXPIRY_DATE" 		property="expiryDate"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="DIST_NO" 			property="distNo"/>
		<result column="DIST_FLAG" 			property="distFlag"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="REF_POL_NO"			property="refPolNo"/>
		<result column="INCEPT_DATE" 		property="inceptDate"/>
		<result column="POLICY_NO" 			property="policyNo"/>
		<result column="ENDT_NO" 			property="endtNo"/>
		<result column="RENEW_FLAG"			property="renewFlag"/>
	</resultMap>
	
	<parameterMap class="map" id="getNewEndtAddressMap">
		<parameter property="lineCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sublineCd" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issueYy" 		jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="polSeqNo" 		jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="renewNo" 		jdbcType="VARCHAR2"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="effDate" 		jdbcType="DATE"		javaType="java.util.Date"		mode="IN"/>
		<parameter property="expiryDate" 	jdbcType="DATE"		javaType="java.util.Date"		mode="IN"/>
		<parameter property="address1" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="address2" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="address3" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="getEndtRiskTagMap">
		<parameter property="lineCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sublineCd" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issueYy" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="polSeqNo" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="renewNo" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="riskTag" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="nbtRiskTag" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="retrieveRefPolNoMap">
		<parameter property="lineCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="opSublineCd" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="opIssCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="opIssueYy" 	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="opPolSeqno" 	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="opRenewNo" 	jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="assdNo" 		jdbcType="NUMBER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="refPolNo" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="exists" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="inceptDate"    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="expiryDate"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="message"		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="executeGIUWS012V370PostQueryMap">
		<parameter property="policyId" 				jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="sveFacultativeCode" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="negDistNo" 			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
		<parameter property="distStatus" 			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="checkReinsurancePaymentForRedistributionMap">
		<parameter property="policyId"			jdbcType="INTEGER"		javaType="java.lang.Integer"	mode="IN" />
		<parameter property="lineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN" />
		<parameter property="policyStatus"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="OUT" />
	</parameterMap>
	
	<resultMap class="GIPIPolbasicClass" id="GIPIPolbasicResultMapGrid">
		<result property="issueYy"			column="ISSUE_YY"/>  
		<result property="polSeqNo"			column="POL_SEQ_NO"/>
		<result property="renewNo"			column="RENEW_NO"/>
		<result property="rowNum"			column="ROWNUM_"/>
		<result property="rowCount"			column="COUNT_"/>
	</resultMap>
	
	<parameterMap class="map" id="getPackDetailsHeaderMap">
		<parameter property="packPolicyId"			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="policyId"					jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="dspPolicyId"			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT" />
		<parameter property="dspLineCd" 			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="dspSublineCd" 		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="dspIssCd" 				jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="dspIssueYy" 			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="dspPolSeqNo" 		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="dspRenewNo" 		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="basicPolicyId"			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT" />
		<parameter property="basicLineCd" 			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="basicSublineCd" 	jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="basicIssCd" 			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="basicIssueYy" 		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="basicPolSeqNo" 		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
		<parameter property="basicRenewNo" 		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="checkPolicyGICLS026Map">
		<parameter property="lineCd"			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="sublineCd"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="issCd"				jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="issueYy"			jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="polSeqNo"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="renewNo"		jdbcType="VARCHAR"		javaType="java.lang.String"	mode="IN" />
		<parameter property="msg"				jdbcType="VARCHAR"		javaType="java.lang.String"	mode="OUT" />
	</parameterMap>
	
	<resultMap class="java.util.HashMap" id="genBinderGIUTS024Map">
		<result column="policy_id"				property="policyId"/>
		<result column="policy_no"				property="policyNo"/>
		<result column="endt_no"				property="endtNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="assd_no"				property="assdNo"/>
		<result column="eff_date"				property="effDate"/>
		<result column="expiry_date"			property="expiryDate"/>
		<result column="par_id"					property="parId"/>
		<result column="line_cd"					property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"					property="issCd"/>
		<result column="issue_yy"				property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"			property="endtIssCd"/>
		<result column="endt_yy"				property="endtYy"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="ROWNUM_"          property="rowNum"/>
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	
	<resultMap class="GIPIPolbasicClass" id="checkPolicyGiexs006Map">
		<result column="policy_id"			property="policyId"/>
		<result column="pol_flag"			property="polFlag"/>
	</resultMap>
	
	<!-- Edison 10.16.2012 for Policy LOV in GIPIS171-UpdateAddWarrantiesAndClauses -->
	<resultMap class="java.util.HashMap" id="updAddWarrAndClausesGIPIS171Map">
		<result column="policy_id"				property="policyId"/>
		<result column="policy_no"				property="policyNo"/>
		<result column="endt_no"				property="endtNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="assd_no"				property="assdNo"/>
		<result column="eff_date"				property="effDate"/>
		<result column="expiry_date"			property="expiryDate"/>
		<result column="par_id"					property="parId"/>
		<result column="line_cd"					property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"					property="issCd"/>
		<result column="issue_yy"				property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"			property="endtIssCd"/>
		<result column="endt_yy"				property="endtYy"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="par_no"		property="parNo"/>
		<result column="par_line_cd"		property="parLineCd"/>
		<result column="par_issue_cd"		property="parIssCd"/> <!-- Edited by MarkS 10.20.2016 SR5769 -->
		<result column="par_yy"		property="parYy"/>
		<result column="par_seq_no"		property="parSeqNo"/>
		<result column="quote_seq_no"		property="parQuoteSeqNo"/> <!-- Edited by MarkS 10.20.2016 SR5769 -->
		<result column="ROWNUM_"          property="rowNum"/>
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	
	<!-- Kenneth L. 04.23.2013 for Policy LOV in GIUTS022(Change in Payment Term) -->
	<resultMap class="java.util.HashMap" id="changePaymentTermGIUTS022Map">
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"		property="endtIssCd"/>
		<result column="endt_yy"			property="endtYy"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="policy_id"			property="policyId"/>
		<result column="par_id"				property="parId"/>
		<result column="assd_no"			property="assdNo"/>
		<result column="eff_date"			property="effDate"/>
		<result column="expiry_date"		property="expiryDate"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="endt_no"			property="endtNo"/>
		<result column="ROWNUM_"          	property="rowNum"/>
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	
	<!-- Fons L. 10.08.2013-->
	<resultMap class="java.util.HashMap" id="GIPIS200IssueYearLOVResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="issueYy" 		column="issue_yy"/>		
	</resultMap>
	
	<parameterMap class="map" id="checkProductionMap">
		<parameter property="userId"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="message"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>				
	</parameterMap>
	
	<parameterMap class="map" id="extractProductionMap">
		<parameter property="lineCd"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="sublineCd"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="issCd"				javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="issueYy"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="intmNo"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="credIss"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>	
		<parameter property="paramDate"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="fromDate"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="toDate"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="month"				javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="year"				javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="distFlag"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="regPolicySw"		javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>
		<parameter property="userId"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="IN"/>	
		<parameter property="message"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>	
		<parameter property="noOfPolicies"		javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>	
		<parameter property="totalTsi"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>	
		<parameter property="totalPrem"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>	
		<parameter property="totalTax"			javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>	
		<parameter property="totalCommission"	javaType="java.lang.String"		jdbcType="VARCHAR"	mode="OUT"/>						
	</parameterMap>	
	
	<resultMap class="java.util.HashMap" id="GIPIS202ResultMap" extends="BaseEntity.TableGridResultMap">
      	<result property="policyNo" 		column="policy_no"/>
      	<result property="policyId" 		column="policy_id"/>
      	<result property="lineCd" 			column="line_cd"/>
		<result property="sublineCd" 		column="subline_cd"/>		
		<result property="issCd" 			column="iss_cd"/>	
		<result property="issueYy" 			column="issue_yy"/>	
		<result property="polSeqNo" 		column="pol_seq_no"/>	
		<result property="endtIssCd"		column="endt_iss_cd"/>	
		<result property="endtYy" 			column="endt_yy"/>				
		<result property="endtSeqNo" 		column="endt_seq_no"/>				
		<result property="renewNo" 			column="renew_no"/>				
		<result property="parId" 			column="par_id"/>				
		<result property="effDate" 			column="eff_date"/>				
		<result property="assdNo" 			column="assd_no"/>				
		<result property="tsiAmt" 			column="tsi_amt"/>				
		<result property="premAmt" 			column="prem_amt"/>					
		<result property="assured" 			column="assured"/>				
		<result property="issueDate" 		column="issue_date"/>
		<result property="expiryDate" 		column="expiry_date"/>
		<result property="inceptDate" 		column="incept_date"/>
		<result property="tsiTotal" 		column="tsi_total"/>
		<result property="premTotal" 		column="prem_total"/>			
	</resultMap> 
	
	<resultMap class="java.util.HashMap" id="GIPIS201ResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyNo" 		column="policy_no"/>
		<result property="endorsementNo"    column="endorsement_no"/>
		<result property="policyId"    		column="policy_id"/>
		<result property="lineCd" 			column="line_cd"/>
		<result property="sublineCd" 		column="subline_cd"/>		
		<result property="issCd" 			column="iss_cd"/>	
		<result property="issueYy" 			column="issue_yy"/>	
		<result property="polSeqNo" 		column="pol_seq_no"/>	
		<result property="endtIssCd"		column="endt_iss_cd"/>	
		<result property="endtYy" 			column="endt_yy"/>				
		<result property="endtSeqNo" 		column="endt_seq_no"/>				
		<result property="renewNo" 			column="renew_no"/>				
		<result property="parId" 			column="par_id"/>				
		<result property="effDate" 			column="eff_date"/>				
		<result property="assdNo" 			column="assd_no"/>				
		<result property="tsiAmt" 			column="tsi_amt"/>				
		<result property="premAmt" 			column="prem_amt"/>				
		<result property="taxAmt" 			column="tax_amt"/>				
		<result property="assured" 			column="assured"/>				
		<result property="commission" 		column="commission"/>	
		<result property="issueDate" 		column="issue_date"/>
		<result property="expiryDate" 		column="expiry_date"/>
		<result property="inceptDate" 		column="incept_date"/>			
		<result property="polFlag" 			column="pol_flag"/>
		<result property="message" 			column="message"/>		
		<result property="tsiTotal" 		column="tsi_total"/>
		<result property="premTotal" 		column="prem_total"/>
		<result property="taxTotal" 		column="tax_total"/>
		<result property="commTotal" 		column="comm_total"/>
	</resultMap> 
	
	<resultMap class="java.util.HashMap" id="GIPIS201CommDtlsResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="perilName" 			column="peril_name"/>
		<result property="parentCommRt" 		column="parent_comm_rt"/>
		<result property="parentCommAmt" 		column="parent_comm_amt"/>
		<result property="childCommRt" 			column="child_comm_rt"/>
		<result property="childCommAmt" 		column="child_comm_amt"/>		
		<result property="parentCommRtTotal" 	column="parent_comm_rt_total"/>
		<result property="parentCommAmtTotal" 	column="parent_comm_amt_total"/>
		<result property="childCommRtTotal" 	column="child_comm_rt_total"/>
		<result property="childCommAmtTotal" 	column="child_comm_amt_total"/>
	</resultMap>	
	
	<!-- added by hdrtagudin 07242015 SR19824 -->
	<resultMap class="java.util.HashMap" id="getBondIntermediariesMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"			property="policyId"/>
		<result column="intm_no"			property="intmNo"/>
		<result column="intm_name"			property="intmName"/>
		<result column="parent_intm_no"		property="parentIntmNo"/>
		<result column="parent_intm_name"	property="parentIntmName"/>		
		<result column="ref_intm_cd"		property="refIntmCd"/>
		<result column="share_percentage"   property="sharePercentage"/>
		<result column="prem_seq_no"		property="premSeqNo"/>
		<result column="share_prem"			property="sharePrem"/>
		<result column="total_comm"			property="totalCommission"/>
		<result column="wholding_tax"		property="wholdingTax"/>
		<result column="net_comm"		    property="netComAmt"/>
		<result column="commission_rt"		property="commissionRt"/>
	</resultMap>
	
	<!-- Kenneth L. 04.23.2013-->
	<select id="showGIUTS022PolicyLOV" resultMap="changePaymentTermGIUTS022Map">
		SELECT * FROM TABLE (GIUTS022_PKG.GET_POLICY_INFO(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#,#findText#, #sortColumn#, #ascDescFlg#, #from#, #to#,#userId#)) <!-- added for optimization SR5693  10.10.2016 MarkS -->
	</select>
<!-- commented for optimization SR5693  10.10.2016 MarkS -->
<!-- 	<select id="showGIUTS022PolicyLOV" resultMap="changePaymentTermGIUTS022Map"> -->
<!-- 		SELECT * -->
<!-- 		   FROM (SELECT rownum rownum_,  -->
<!-- 		                b.count_,  -->
<!-- 		                a.*  -->
<!-- 		          FROM (SELECT *  -->
<!-- 		                  FROM TABLE (GIUTS022_PKG.GET_POLICY_INFO(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #userId#)) -->
<!-- 		                 WHERE check_user_per_iss_cd_acctg2(line_cd, iss_cd, 'GIUTS022', #userId#) = 1 -->
<!-- 		                  <isNotNull property="findText"> -->
<!-- 						  	WHERE 1=1 -->
<!-- 				  			<isNotEmpty prepend="AND"  property="findText"> -->
<!-- 				  				(policy_no LIKE upper(#findText#) OR -->
<!-- 				  			 	 endt_no LIKE upper(#findText#) OR -->
<!-- 				  			 	 assd_name LIKE upper(#findText#)) -->
<!-- 				  			</isNotEmpty> -->
<!-- 						  </isNotNull>							  -->
<!-- 			              <isEqual property="sortColumn" compareValue="policyNo"> -->
<!-- 			              		ORDER BY policy_no -->
<!-- 			              </isEqual> -->
<!-- 			              <isEqual property="sortColumn" compareValue="endtNo"> -->
<!-- 			              		ORDER BY endt_no -->
<!-- 			              </isEqual> -->
<!-- 			              <isEqual property="sortColumn" compareValue="assdName"> -->
<!-- 			              		ORDER BY assd_name -->
<!-- 			              </isEqual> -->
<!-- 			          	  <isNotNull property="sortColumn"> -->
<!-- 			              		<isEqual property="ascDescFlg" compareValue="ASC"> -->
<!-- 			              			ASC -->
<!-- 			              		</isEqual> -->
<!-- 			              		<isEqual property="ascDescFlg" compareValue="DESC"> -->
<!-- 			              			DESC -->
<!-- 			              		</isEqual> -->
<!-- 			              </isNotNull> -->
<!-- 		                  ) a,  -->
<!-- 		               (SELECT count(*) count_  -->
<!-- 		                  FROM TABLE (GIUTS022_PKG.GET_POLICY_INFO(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #userId#)) -->
<!-- 		                 WHERE check_user_per_iss_cd_acctg2(line_cd, iss_cd, 'GIUTS022', #userId#) = 1 -->
<!-- 	                   	<isNotNull property="findText"> -->
<!-- 					   		WHERE 1=1 -->
<!-- 				  			<isNotEmpty prepend="AND"  property="findText"> -->
<!-- 				  				(policy_no LIKE upper(#findText#) OR -->
<!-- 				  			  	 endt_no LIKE upper(#findText#) OR -->
<!-- 				  			 	 assd_name LIKE upper(#findText#)) -->
<!-- 				  			</isNotEmpty> -->
<!-- 					  	</isNotNull>				 -->
<!-- 		               ) b)  -->
<!-- 		   WHERE rownum_ BETWEEN #from# AND #to# -->
<!-- 	</select> -->
	
	<select id="getRefOpenPolNo" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT (Gipi_Polbasic_Pkg.get_ref_open_pol_no(#lineCd#, #sublineCd#, #issCd#, 
													  #issueYy#, #polSeqNo#, #renewNo#)) FROM DUAL
	</select>
	
	<select id="getPolbasicForOpenPolicy" resultMap="polbasMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polbasic3(#lineCd#, #assdNo#, 
			TO_DATE(#inceptDate#, 'MM/DD/YYYY'), TO_DATE(#expiryDate#, 'MM/DD/YYYY')))
	</select>
	
	<select id="getPolbasicForOpenPolicyLOV" resultMap="polbasMapTableGridMap" parameterClass="java.util.HashMap">
		SELECT  *
          FROM  (SELECT  rownum rownum_ , b.count_, a.* 
                   FROM  (SELECT line_cd, subline_cd, iss_cd, issue_yy,
                                 pol_seq_no, renew_no, ref_pol_no,
                                 incept_date incept_date1, expiry_date expiry_date1,
                                 TO_CHAR(incept_date, 'DD-MON-YY') incept_date, 
                                 TO_CHAR(expiry_date, 'DD-MON-YY') expiry_date 
                          FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polbasic3(#lineCd#, #assdNo#, 
									 TO_DATE(#inceptDate#, 'MM/DD/YYYY'), TO_DATE(#expiryDate#, 'MM/DD/YYYY')))
						  WHERE <isNotNull property="findText">      <!-- June Mark SR5767 [11.14.16] -->
						  		(UPPER(line_cd)    LIKE UPPER(NVL(#findText#, line_cd)) OR
			                     UPPER(subline_cd) LIKE UPPER(NVL(#findText#, subline_cd)) OR
			                     UPPER(iss_cd)  LIKE UPPER(NVL(#findText#, iss_cd)) OR
			                     issue_yy   LIKE NVL(#findText#, issue_yy)   OR
			                     pol_seq_no LIKE NVL(#findText#, pol_seq_no) OR
			                     renew_no   LIKE NVL(#findText#, renew_no)   OR
			                     UPPER(ref_pol_no) LIKE UPPER(NVL(#findText#, ref_pol_no)))
						  		</isNotNull>
						  		<isNull property="findText">
						  		 UPPER(line_cd)    = UPPER(NVL(#lineCd#, line_cd)) AND
			                     UPPER(subline_cd) = UPPER(NVL(#sublineCd#, subline_cd)) AND
			                     UPPER(iss_cd)  = UPPER(NVL(#issCd#, iss_cd)) AND
			                     issue_yy   = NVL(#issYear#, issue_yy)   AND
			                     pol_seq_no = NVL(#polSeqNo#, pol_seq_no) AND
			                     renew_no   = NVL(#renewNo#, renew_no)
						  		</isNull> <!-- End SR5767 -->
						  <isEqual property="sortColumn" compareValue="lineCd">
  		                  		ORDER BY line_cd
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="sublineCd">
  		                  		ORDER BY subline_cd
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="issCd">
  		                  		ORDER BY iss_cd
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="issueYy">
  		                  		ORDER BY issue_yy
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="polSeqNo">
  		                  		ORDER BY pol_seq_no
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="renewNo">
  		                  		ORDER BY subline_cd
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="refPolNo">
  		                  		ORDER BY ref_pol_no
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="inceptDate">
  		                  		ORDER BY incept_date1
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="expiryDate">
  		                  		ORDER BY expiry_date1
  		                  </isEqual>
  		                  <isNotNull property="sortColumn">
  		                  		<isEqual property="ascDescFlg" compareValue="ASC">
  		                  			ASC
  		                  		</isEqual>
  		                  		<isEqual property="ascDescFlg" compareValue="DESC">
  		                  			DESC
  		                  		</isEqual>
  		                  </isNotNull>
						  )a,
						 (SELECT count(*) count_ FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polbasic3(#lineCd#, #assdNo#, 
								 TO_DATE(#inceptDate#, 'MM/DD/YYYY'), TO_DATE(#expiryDate#, 'MM/DD/YYYY')))
						  WHERE <isNotNull property="findText">      <!-- June Mark SR5767 [11.14.16] -->
						  		(UPPER(line_cd)    LIKE UPPER(NVL(#findText#, line_cd)) OR
			                     UPPER(subline_cd) LIKE UPPER(NVL(#findText#, subline_cd)) OR
			                     UPPER(iss_cd)  LIKE UPPER(NVL(#findText#, iss_cd)) OR
			                     issue_yy   LIKE NVL(#findText#, issue_yy)   OR
			                     pol_seq_no LIKE NVL(#findText#, pol_seq_no) OR
			                     renew_no   LIKE NVL(#findText#, renew_no)   OR
			                     UPPER(ref_pol_no) LIKE UPPER(NVL(#findText#, ref_pol_no)))
						  		</isNotNull>
						  		<isNull property="findText">
						  		 UPPER(line_cd)    = UPPER(NVL(#lineCd#, line_cd)) AND
			                     UPPER(subline_cd) = UPPER(NVL(#sublineCd#, subline_cd)) AND
			                     UPPER(iss_cd)  = UPPER(NVL(#issCd#, iss_cd)) AND
			                     issue_yy   = NVL(#issYear#, issue_yy)   AND
			                     pol_seq_no = NVL(#polSeqNo#, pol_seq_no) AND
			                     renew_no   = NVL(#renewNo#, renew_no)
						  		</isNull> <!-- End SR5767 -->
						  )b)
		 WHERE  rownum_ BETWEEN #from# AND #to#
	</select>
		
	<select id="getPolBasicForViewPolicyInformation" resultMap="polInfoMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polinfo_endtseq0(#lineCd#,#sublineCd#,
			#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#refPolNo#,#nbtLineCd#,#nbtIssCd#,#nbtParYy#,#nbtParSeqNo#,#nbtQuoteSeqNo#,#userId#,#moduleId#))
		ORDER BY line_cd,subline_cd,issue_yy,pol_seq_no
	</select>
	
	<select id="getPolicyInformation" resultMap="polInfoMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_policy_information(#policyId#))
	</select>	
	
	<select id="getPolicyEndtSeq0" resultMap="polInfoMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE (GIPI_POLBASIC_PKG.get_policy_endtseq0(#policyId#))
	</select>
	
	<select id="getRelatedPoliciesForViewPolicyInformation" resultMap="relatedPolInfoMap" parameterClass="java.util.HashMap">
	    SELECT * FROM TABLE (GIPIS100_PKG.get_gipi_related_polinfo(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtNo#, 
	    														#parNo#, #strEffDate#, #strIssueDate#, #strAcctEntDt#, #refPolNo#, #meanPolFlag#,
																#sortColumn#, #ascDescFlg#, #from#, #to#))
	</select>
	
	<select id="getBankPaymentDtl" resultMap="bankPaymentDtlMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(gipi_polbasic_pkg.get_bank_payment_dtl(#policyId#))
	</select>
	
	<select id="getBancassuranceDtl" resultMap="bancassuranceDtlMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(gipi_polbasic_pkg.get_bancassurance_dtl(#policy_id#))
	</select>
	
	<select id="getPlanDtl" resultMap="planDtlMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(gipi_polbasic_pkg.get_plan_dtl(#policy_id#))
	</select>
	
	<select id="getPolMainInfo" resultMap="polMainInfoMap" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(gipi_polbasic_pkg.get_polmain_info(#policyId#))
	</select>
	<!-- Rey 08.16.2011 bond policy data -->
	<select id="getBondPolicyData" resultMap="bondPolicyDataMap" parameterClass="java.lang.Integer">
		SELECT policy_id,
		       bond_dtl bond_dtl,
		       indemnity_text,
		       coll_flag,
		       waiver_limit,
		       str_cntr_date,
		       contract_dtl,
		       obligee_name,
		       prin_signor, 
		       designation,
		       np_name,
		       clause_desc,
		       gen_info gen_info
		  FROM TABLE(gipi_polbasic_pkg.get_bond_policy_data(#policyId#))
	</select>
	
	<select id="getPolBasicInfo" resultMap="polBasicInfoMap" parameterClass="java.lang.Integer">
		 SELECT incept_date,expiry_date,issue_date,eff_date,endt_expiry_date,ref_pol_no,manual_renew_no,actual_renew_no,
		        issue_yy,prem_amt,tsi_amt,risk_tag,incept_tag,expiry_tag,plan_sw,endt_expiry_tag,bancassurance_sw,
		        surcharge_sw,discount_sw,pack_pol_flag,auto_renew_flag,foreign_acc_sw,reg_policy_sw,prem_warr_tag,prem_warr_days, 
		        fleet_print_tag,with_tariff_sw,co_insurance_sw,prorate_flag,short_rt_percent,prov_prem_tag,prov_prem_pct, 
		        comp_sw,ann_tsi_amt,ann_prem_amt,pol_no,policy_id,(address1) address1,(address2) address2,
		        (address3) address3,endt_seq_no,booking_year,booking_mth,survey_agent_cd,settling_agent_cd,risk_desc,dsp_text,
		        default_currency,policy_id_type,line_type,survey_agent,settling_agent,contract_proj_buss_title,construct_start_date,
		        maintain_start_date,construct_end_date,maintain_end_date,mbi_policy_no,site_location,time_excess,weeks_test,prompt_title,
		        prompt_location,open_policy_view,policy_endtseq0,bank_btn_label,
		        (gen_info01) gen_info01,
		        (gen_info02) gen_info02,
		        (gen_info03) gen_info03,
		        (gen_info04) gen_info04,
		        (gen_info05) gen_info05,
		        (gen_info06) gen_info06,
		        (gen_info07) gen_info07,
		        (gen_info08) gen_info08,
		        (gen_info09) gen_info09,
		        (gen_info10) gen_info10,
		        (gen_info11) gen_info11,
		        (gen_info12) gen_info12,
		        (gen_info13) gen_info13,
		        (gen_info14) gen_info14,
		        (gen_info15) gen_info15,
		        (gen_info16) gen_info16,
		        (gen_info17) gen_info17,
		        (info01) info01,
		        (info02) info02,
		        (info03) info03,
		        (info04) info04,
		        (info05) info05,
		        (info06) info06,
		        (info07) info07,
		        (info08) info08,
		        (info09) info09,
		        (info10) info10,
		        (info11) info11,
		        (info12) info12,
		        (info13) info13,
		        (info14) info14,
		        (info15) info15,
		        (info16) info16,
		        (info17) info17,
		        type_desc,industry_nm,region_desc,iss_name,remarks,takeup_term_desc,line_name,prompt_text,subline_cd_param <!-- added by robert SR 20307 10.27.15 -->
		        ,is_foreign_currency <!-- added by robert SR 21862 03.08.16 -->
		   FROM TABLE(gipi_polbasic_pkg.get_polbasic_info(#policyId#))
	</select>
	<!-- hdrtagudin 07222015 SR 4794 removed ESCAPE_VALUE to gen_info and endt_text fields-->
	<select id="getPolBasicInfoSu" resultMap="polBasicInfoSuMap" parameterClass="java.lang.Integer">
			SELECT pol_flag,issue_date,incept_date,incept_tag,eff_date,expiry_tag,endt_seq_no,auto_renew_flag,reg_policy_sw,dsp_endt_expiry_date,prompt_text,
	              bancassurance_sw,address1,address2,address3,mortg_name,booking_year,booking_mth,subline_cd,ref_pol_no,expiry_date,endt_expiry_date,
	              gen_info01,	gen_info02,		gen_info03,		gen_info04,		gen_info05,		gen_info06,
	              gen_info07,	gen_info08,		gen_info09,		gen_info10,		gen_info11,		gen_info12,
	              gen_info13,	gen_info14,		gen_info15,		gen_info16,		gen_info17,
	              endt_text01,  endt_text02,	endt_text03,	endt_text04,	endt_text05,	endt_text06,
	              endt_text07,	endt_text08,	endt_text09,	endt_text10,	endt_text11,	endt_text12,
	              endt_text13,	endt_text14,	endt_text15,	endt_text16,	endt_text17,
	              takeup_term_desc,industry_nm,region_desc,val_period,val_period_unit,policy_id, pol_flag_desc     
	        FROM TABLE(gipi_polbasic_pkg.get_polbasic_info_su(#policyId#))
	</select>
	
	<select id="extractExpiryDate" resultClass="java.util.Date" parameterClass="java.lang.Integer">
		SELECT (extract_expiry(#parId#)) FROM DUAL
	</select>
	
	<select id="getBackEndtEffDate" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT (GIPI_POLBASIC_PKG.get_back_endt_eff_date(#parId#, #itemNo#)) FROM DUAL
	</select>
	
	<select id="getPolicyDetails" resultMap="policyDetailsMap" parameterClass="java.util.HashMap">
		SELECT * 
		  FROM TABLE(GIPI_POLBASIC_PKG.get_polbasic_listing(#parId#)) 
		 WHERE pack_pol = #packPol#
	</select>
	
	<select id="getEndtPolicy" resultMap="endtPolicyMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>
	
	<select id="getEndtPolicyDates" resultMap="getEndtPolicyDatesMap">
		SELECT policy_id,
		   	   TO_CHAR(incept_date, 'MM-DD-YYYY') incept_date,
			   TO_CHAR(eff_date, 'MM-DD-YYYY') eff_date,
			   TO_CHAR(expiry_date, 'MM-DD-YYYY') expiry_date,
			   TO_CHAR(endt_expiry_date, 'MM-DD-YYYY') endt_expiry_date
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
		 WHERE endt_seq_no = (SELECT MAX(ENDT_SEQ_NO) FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#)))
	</select>
	
<!-- 	<select id="getEndtPolicyCA" resultMap="endtCAPolicyMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy2(#parId#))
	</select> -->

	<!-- marco - 04-25-2014 -->
	<!-- changed the query from GIPI_POLBASIC_PKG.get_endt_policy2 to GIPI_POLBASIC_PKG.get_endt_policy for all lines -->
	<select id="getEndtPolicyCA" resultMap="GIPIPolbasicCAMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>
	
	<select id="getEndtPolicyFI" resultMap="GIPIPolbasicFIMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>
	
	<select id="getEndtPolicyMC" resultMap="GIPIPolbasicMCMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>	
	
	<select id="getEndtPolicyMN" resultMap="GIPIPolbasicMNMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>	

	<select id="getEndtPolicyMH" resultMap="GIPIPolbasicMHMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>	
	
	<select id="getEndtPolicyAV" resultMap="GIPIPolbasicAVMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>	
	
	<select id="getEndtPolicyEN" resultMap="GIPIPolbasicENMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>	
	
	<select id="getEndtPolicyAC" resultMap="endtACPolicyMap">
		SELECT *
		  FROM TABLE(GIPI_POLBASIC_PKG.get_endt_policy(#parId#))
	</select>
	
	<select id="getExtractId" resultClass="java.lang.Integer">
		SELECT gixx_extid_seq.NEXTVAL FROM DUAL
	</select>
	
	<procedure id="populateGixxTables" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
		  	populate_gixx_tables.extract_poldoc_record(#policyId#, #extractId#);
		  	<!-- populate_gixx_tables.extract_wpoldoc_record(#parId#, #extractId#);  -->
        END;                                     
	</procedure>
		
	<procedure id="populateGixxTableWPolDoc" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
		  	populate_gixx_tables.extract_wpoldoc_record(#parId#, #extractId#);
        END;
	</procedure>
	
	<procedure id="populatePackGixxTables" parameterClass="java.util.HashMap">		
		BEGIN
			giis_users_pkg.app_user := #appUser#;
		  	Populate_Pack_Gixx_Tables.extract_pack_pol_record(#packPolicyId#, #extractId#);
        END;                                     
	</procedure>
	
	<procedure id="populatePackGixxTableWPolDoc" parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
		  	Populate_Pack_Gixx_Tables.extract_pack_par_record(#packParId#, #extractId#);
        END;
	</procedure>
	
	<procedure id="getNewEndtAddress" parameterMap="getNewEndtAddressMap">
		CALL GIPI_POLBASIC_PKG.get_address_for_new_endt_item(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<procedure id="updatePrintedCount"  parameterClass="java.util.HashMap">
		BEGIN
			giis_users_pkg.app_user := #appUser#;
			GIPI_POLBASIC_PKG.update_printed_count(#policyId#);
		END;
	</procedure>
	
	<select id="getMaxEndtItemNo" parameterClass="java.util.HashMap" resultClass="java.lang.Integer">
		SELECT GIPI_POLBASIC_PKG.get_max_endt_item_no(
			#lineCd#,
			#sublineCd#,
			#issCd#,
			#issueYy#,
			#polSeqNo#,
			#renewNo#) FROM DUAL
	</select>
	
	<!--	dalcantara 10.12.2010	-->
	<select id="getPolicyForEndt" parameterClass="java.util.HashMap" resultMap="endtListingPolMap">
		SELECT * 
		  FROM TABLE(Gipi_Polbasic_Pkg.get_policy_for_endt(#lineCd#,#issCd#,#sublineCd#,#keyword#))
	</select>

	<resultMap id="PolicyNoLOVResultMap" class="GIPIPolbasicClass" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"			property="policyId" />
		<result column="subline_cd" 		property="sublineCd" />
		<result column="iss_cd" 			property="issCd" />
		<result column="issue_yy" 			property="issueYy" />
		<result column="pol_seq_no" 		property="polSeqNo" />
		<result column="renew_no" 			property="renewNo" />
		<result column="line_cd"            property="lineCd" />
		<!-- <result column="policy_no" 			property="policyNo" /> -->
	</resultMap>

	<!-- Rey 08-03-2011 bill tax list -->
	<resultMap class="GIPIPolbasicClass" id="getBillTaxMap" extends="BaseEntity.TableGridResultMap">
		<result column="tax_cd"				property="taxCd"/>
		<result column="tax_id"				property="taxId"/>
		<result column="tax_desc"			property="taxDesc"/>
		<result column="prem_seq_no"		property="premSeqNo"/>
		<result column="tax_amt"			property="taxAmt"/>
		<result column="tax_sum"			property="taxSum"/>
	</resultMap>
	
	<!-- Rey 10-11-2011 bond bill details -->
	<resultMap class="java.util.HashMap" id="getBondBillDetails" extends="BaseEntity.TableGridResultMap">
		<result column="bond_tsi_amt"		property="bondTsiAmt"/>
		<result column="bond_rate"			property="bondRate"/>
		<result column="tax_amt"			property="taxAmt"/>
		<result column="payt_terms"			property="paytTerms"/>
		<result column="notarial_fee"		property="notarialFee"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="prem_seq_no"		property="premSeqNo"/>
		<result column="ref_inv_no"			property="refInvNo"/>
		<result column="prem_amt"			property="premAmt"/>
		<result column="remarks"			property="remarks"/>
		<result column="total_amt_due"		property="totalAmtDue"/>
		<result column="ri_comm_rate"		property="riCommRate"/>
		<!-- added by hdrtagudin 07232015 SR 19824-->		
		<result column="ri_comm_amt"			property="riCommAmt"/>
		<result column="ri_comm_vat"			property="riCommVat"/>
	</resultMap>
	
	<!-- Rey 08-11-2011 policy by assure acct of map-->
	<resultMap class="GIPIPolbasicClass" id="policyByAssurdAcctOfMap" extends="BaseEntity.TableGridResultMap">
		<result column="assd_no"			property="assdNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="policy_id"			property="policyId"/>
		<result column="line_cd"			property="lineCd"/>
		<result column="subline_cd"			property="sublineCd"/>
		<result column="iss_cd"				property="issCd"/>
		<result column="issue_yy"			property="issueYy"/>
		<result column="pol_seq_no"			property="polSeqNo"/>
		<result column="renew_no"			property="renewNo"/>
		<result column="endt_iss_cd"		property="endtIssCd"/>
		<result column="endt_seq_no"		property="endtSeqNo"/>
		<result column="endt_type"			property="endtType"/>
		<result column="endt_yy"			property="endtYy"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="endt_no"			property="endtNo"/>
		<result column="acct_of_cd" 		property="acctOfCd"/>
		<result column="assd_name2"			property="assdName2"/>
	</resultMap>
	
	<!-- Rey 08-08-2011 commission details -->
	<resultMap class="GIPIPolbasicClass" id="getCommissionDetails" extends="BaseEntity.TableGridResultMap">
		<result column="peril_name"			property="perilName"/>
		<result column="prnt_detail_rt"		property="prntDetailRt"/>
		<result column="prnt_detail_amt"	property="prntDetailAmt"/>
		<result column="child_comm_rt"		property="childCommRt"/>
		<result column="child_comm_amt"		property="childCommAmt"/>
	</resultMap>
	<!-- Rey 08-05-2011 payment schedule -->
	<resultMap class="GIPIPolbasicClass" id="getPaymentSchedule" extends="BaseEntity.TableGridResultMap">
		<result column="total_shr"			property="totalShr"/>
		<result column="total_prem"			property="totalPrem"/>
		<result column="total_tax"			property="totalTax"/>
		<result column="total_tax_due"		property="totalTaxDue"/>
		<result column="inst_no"			property="instNo"/>
		<result column="due_date"			property="dueDate"/>
		<result column="share_pct"			property="sharePct"/>
		<result column="prem_amt"			property="premAmt"/>
		<result column="total_due"			property="totalDue"/>
		<result column="tax_amt"			property="taxAmt"/>
		<result column="str_due_date"		property="strDueDate"/>
  	</resultMap>
	
	<resultMap id="PolicyNoLOVResultMap2" class="GIPIPolbasicClass" extends="BaseEntity.TableGridResultMap">
		<result column="policy_no"			property="policyNo" />
		<result column="policy_id"			property="policyId" />
		<result column="assd_name"          property="assdName" />
		<result column="endt_no"			property="endtNo" />
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd" 			property="issCd" />
		<result column="issue_yy" 			property="issueYy" />
		<result column="pol_seq_no"			property="polSeqNo" />	
		<result column="endt_type"			property="endtType" />	
	</resultMap>
<!--edited by steven 09.02.2014 -->
	<select id="getBinderPolicyNoLOV" resultMap="PolicyNoLOVResultMap2" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,
  		               b.count_,
  		               a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_gipi_polno_lov(#userId#, #issCd#, #lineCd#))
                        <isNotNull property="filter">
							WHERE 1=1
                  			<isNotEmpty prepend="AND"  property="assdName">
                  				UPPER(assd_name) LIKE UPPER(#assdName#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="lineCd">
                  				UPPER(line_cd) LIKE UPPER(#lineCd#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="sublineCd">
                  				UPPER(subline_cd) LIKE UPPER(#sublineCd#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="issCd">
                  				UPPER(iss_cd) LIKE UPPER(#issCd#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="issueYy">
                  				UPPER(issue_yy) LIKE UPPER(#issueYy#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="polSeqNo">
                  				UPPER(pol_seq_no) LIKE UPPER(#polSeqNo#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="policyNo">
                  				UPPER(policy_no) LIKE UPPER(#policyNo#)
                  			</isNotEmpty>
                  		</isNotNull>     
          		  		 <isEqual property="sortColumn" compareValue="assdName">
  		                  		ORDER BY assd_name
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="endtNo">
  		                  		ORDER BY endt_no
  		                  </isEqual>
  		                  <isEqual property="sortColumn" compareValue="policyNo">
  		                  		ORDER BY policy_no
  		                  </isEqual>
  		                  <isNotNull property="sortColumn">
  		                  		<isEqual property="ascDescFlg" compareValue="ASC">
  		                  			ASC
  		                  		</isEqual>
  		                  		<isEqual property="ascDescFlg" compareValue="DESC">
  		                  			DESC
  		                  		</isEqual>
  		                  </isNotNull>
  		                  ) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_gipi_polno_lov(#userId#, #issCd#, #lineCd#))
               		   	<isNotNull property="filter">
							WHERE 1=1
                  			<isNotEmpty prepend="AND"  property="assdName">
                  				UPPER(assd_name) LIKE UPPER(#assdName#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="lineCd">
                  				UPPER(line_cd) LIKE UPPER(#lineCd#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="sublineCd">
                  				UPPER(subline_cd) LIKE UPPER(#sublineCd#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="issCd">
                  				UPPER(iss_cd) LIKE UPPER(#issCd#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="issueYy">
                  				UPPER(issue_yy) LIKE UPPER(#issueYy#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="polSeqNo">
                  				UPPER(pol_seq_no) LIKE UPPER(#polSeqNo#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="policyNo">
                  				UPPER(policy_no) LIKE UPPER(#policyNo#)
                  			</isNotEmpty>
                  		</isNotNull> 
	                  ) b)
 		 			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!--edited by steven 09.02.2014 end-->
	
	<select id="getPolicyNoLOV" resultMap="PolicyNoLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                   FROM TABLE(gipi_polbasic_pkg.get_policy_for_endt(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#,#findText#))
		                  <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="sublineCd">
			              		ORDER BY subline_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="issCd">
			              		ORDER BY iss_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="issueYy">
			              		ORDER BY issue_yy
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="polSeqNo">
			              		ORDER BY pol_seq_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="renewNo">
			              		ORDER BY renew_no
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_policy_for_endt(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#,#findText#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="isPolExist" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIPI_POLBASIC_PKG.is_pol_exist(
		        #lineCd#,
		        #opSublineCd#,
		        #opIssCd#,
		        #opIssueYy#,
		        #opPolSeqno#,
		        #opRenewNo#) FROM DUAL
	</select>
	
	<select id="getPolicyListing" parameterClass="java.util.HashMap" resultMap="policyListingMap">
		SELECT * 
			FROM TABLE(GIPI_POLBASIC_PKG.GET_GIPI_POLBASIC_LISTING(
			  	#userId#,
	  		   	#lineCd#,
	            #sublineCd#,
			 	#issCd#,
	            #issueYy#,
	            #polSeqNo#,
	            #renewNo#,
	            #lineCd2#,
	            #sublineCd2#,
	            #endtIssCd#,
	            #endtYy#,
	            #endtSeqNo#,
	            #assdName#))
	</select>
	
	<select id="getPolicyTableGridListing" parameterClass="java.util.HashMap" resultMap="PolicyListingResultMap">
		<!-- Modified by pjsantos 09/14/2016, added #policyNo#, #endtNo#, #parNo#, #dspPremSeqNo# #sortColumn#, #ascDescFlg#, #from#, #to# for optimization purposes. -->
		  <!--SELECT * 
		    FROM (SELECT  rownum rownum_,  
		               b.count_, 
		              a.*  
		          FROM (-->SELECT * 
						  FROM TABLE(GIPI_POLBASIC_PKG.get_reprint_policy_listing(
									  	#userId#,
							  		   	#lineCd#,
							            #sublineCd#,
									 	#issCd#,
							            #issueYy#,
							            #polSeqNo#,
							            #renewNo#,
							            #endtLineCd#,
							            #endtSublineCd#,
							            #endtIssCd#,
							            #endtYy#,
							            #endtSeqNo#,
							            #assdName#,		
							            #policyNo#,
							            #endtNo#,
							            #parNo#,
							            #dspPremSeqNo#,					            
							            #sortColumn#, 
							            #ascDescFlg#,
							            #from#,
							            #to#))
						 <!--WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, '%'))                           
		                    AND UPPER(NVL(endt_no, '%')) LIKE UPPER(NVL(#endtNo#, '%'))
		                    AND UPPER(par_no) LIKE UPPER(NVL(#parNo#, '%')) 
		                    AND UPPER(NVL(dsp_prem_seq_no, '%')) LIKE UPPER(NVL(#dspPremSeqNo#, '%'))		                    
		                   <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="parNo">
			              		ORDER BY par_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="dspPremSeqNo">
			              		ORDER BY dsp_prem_seq_no
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a  , 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPI_POLBASIC_PKG.get_reprint_policy_listing(
									  	#userId#,
							  		   	#lineCd#,
							            #sublineCd#,
									 	#issCd#,
							            #issueYy#,
							            #polSeqNo#,
							            #renewNo#,
							            #endLineCd#,
							            #endtSublineCd#,
							            #endtIssCd#,
							            #endtYy#,
							            #endtSeqNo#,
							            #assdName#))
						 WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, '%'))                           
		                   AND UPPER(NVL(endt_no, '%')) LIKE UPPER(NVL(#endtNo#, '%'))
		                   AND UPPER(par_no) LIKE UPPER(NVL(#parNo#, '%'))
		                   AND UPPER(NVL(dsp_prem_seq_no, '%')) LIKE UPPER(NVL(#dspPremSeqNo#, '%'))						            
						   ) b) 
		 WHERE WHERE rownum_ BETWEEN #from# AND #to#  -->
	</select>	
	
	<select id="getPolicyListingForCertPrinting" parameterClass="java.util.HashMap" resultMap="policyListingForCertMap">
		SELECT * 
			FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polbasic_list_cert(
			  	#userId#,
	  		   	#lineCd#,
	            #sublineCd#,
			 	#issCd#,
	            #issueYy#,
	            #polSeqNo#,
	            #renewNo#,
	            #lineCd2#,
	            #sublineCd2#,
	            #endtIssCd#,
	            #endtYy#,
	            #endtSeqNo#,
	            #assdName#))
	</select>
	
	<select id="getCertPolicyTableGridListing" parameterClass="java.util.HashMap" resultMap="policyTableGridForCertMap">
		<!-- commented out by MarkS MarkS 10.14.2016 SR5680 optimization   -->
		<!--
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
						  FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polbasic_list_cert(
									  	#userId#,
							  		   	#lineCd#,
							            #sublineCd#,
									 	#issCd#,
							            #issueYy#,
							            #polSeqNo#,
							            #renewNo#,
							            #endtLineCd#,
							            #endtSublineCd#,
							            #endtIssCd#,
							            #endtYy#,
							            #endtSeqNo#,
							            #assdName#))
						 WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, '%'))                           
		                   AND UPPER(NVL(endt_no, '%')) LIKE UPPER(NVL(#endtNo#, '%'))
		                   AND UPPER(par_no) LIKE UPPER(NVL(#parNo#, '%'))
		                  <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="parNo">
			              		ORDER BY par_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPI_POLBASIC_PKG.get_gipi_polbasic_list_cert(
									  	#userId#,
							  		   	#lineCd#,
							            #sublineCd#,
									 	#issCd#,
							            #issueYy#,
							            #polSeqNo#,
							            #renewNo#,
							            #endLineCd#,
							            #endtSublineCd#,
							            #endtIssCd#,
							            #endtYy#,
							            #endtSeqNo#,
							            #assdName#))
						 WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, '%'))                           
		                   AND UPPER(NVL(endt_no, '%')) LIKE UPPER(NVL(#endtNo#, '%'))
		                   AND UPPER(par_no) LIKE UPPER(NVL(#parNo#, '%'))
						   ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
		  --> <!-- commented out by MarkS MarkS 10.14.2016 SR5680 optimization   -->
		<!-- Modified by MarkS 10.14.2016 SR5680 optimization -->
		SELECT DISTINCT *  FROM TABLE(GIPI_POLBASIC_PKG.get_gipi_polbasic_list_cert(
									  	#userId#,
							  		   	#lineCd#,
							            #sublineCd#,
									 	#issCd#,
							            #issueYy#,
							            #polSeqNo#,
							            #renewNo#,
							            #endtLineCd#,
							            #endtSublineCd#,
							            #endtIssCd#,
							            #endtYy#,
							            #endtSeqNo#,
							            #assdName#,
							            #findText#, 
								      	#sortColumn#,
								      	#ascDescFlg#,
								      	#from#, 
								      	#to#)) WHERE COUNT_ IS NOT NULL
	</select>
	
	<!-- Rey 07-29-2011 billpremium main list 
	     Modified by Gzelle: added sort column 06.27.2013
	-->
	<select id="getBillPremiumMainList" resultMap="billPremiumMainList" parameterClass="java.util.HashMap">
        SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (gipi_invoice_pkg.get_bill_premium_main (#policyId#))
          		  	  <isEqual property="sortColumn" compareValue="itemGrp">
          		  	  	ORDER BY item_grp		
          		  	  </isEqual>
			          <isEqual property="sortColumn" compareValue="itemNo">
			          	ORDER BY item_no
			          </isEqual>
			          <isEqual property="sortColumn" compareValue="itemTitle">
			          	ORDER BY item_title
			          </isEqual>
			          <isEqual property="sortColumn" compareValue="tsiAmt">
			          	ORDER BY tsi_amt
			          </isEqual>
			          <isEqual property="sortColumn" compareValue="coverageDesc">
			          	ORDER BY coverage_desc
			          </isEqual>
			          <isEqual property="sortColumn" compareValue="premAmt">
			          	ORDER BY item_prem_amt
			          </isEqual>
			          <isEqual property="sortColumn" compareValue="currencyDesc">
			          	ORDER BY currency_desc
			          </isEqual>
			          <isNotNull property="sortColumn">
			          	<isEqual property="ascDescFlg" compareValue="ASC">
			          		ASC
			          	</isEqual>
			          	<isEqual property="ascDescFlg" compareValue="DESC">
			          		DESC
			          	</isEqual>
			          </isNotNull>          		  	   
          		  	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_invoice_pkg.get_bill_premium_main (#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08.16.2011 cosign list -->
	<select id="getCosignList" resultMap="getCosignMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (gipi_polbasic_pkg.get_cosignor(#policyId#))) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_cosignor(#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- Rey 08-03-2011 bill tax list 
	     Modified by Gzelle 06.15.2013 - added sortColumn
	-->
	<select id="getBillTaxList" resultMap="getBillTaxMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (gipi_invoice_pkg.get_bill_tax_list (#policyId#, #itemNo#, #itemGrp#))
          		  		<isEqual property="sortColumn" compareValue="taxCd">
          		  			ORDER BY tax_cd
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="taxDesc">
          		  			ORDER BY tax_desc
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="taxAmt">
          		  			ORDER BY tax_amt
          		  		</isEqual>
			            <isNotNull property="sortColumn">
			              	<isEqual property="ascDescFlg" compareValue="ASC">
			              		ASC
			              	</isEqual>
			              	<isEqual property="ascDescFlg" compareValue="DESC">
			              		DESC
			            	</isEqual>
			            </isNotNull>          		  		
          		  		) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_invoice_pkg.get_bill_tax_list (#policyId#, #itemNo#, #itemGrp#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- Rey 10-11-2011 bond bill details -->
	<select id="getBondBillDetails" resultMap="getBondBillDetails" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (gipi_invoice_pkg.get_bond_bill_details (#policyId#))) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_invoice_pkg.get_bond_bill_details (#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- Rey 10-11-2011 bond bill tax list -->
	<select id="getBondBillTaxList" resultMap="bondBillTaxList" parameterClass="java.util.HashMap">
	SELECT *
            FROM (SELECT rownum rownum_,b.count_,a.*
                    FROM (SELECT * FROM TABLE (gipi_invoice_pkg.get_bond_bill_tax_list (#policyId#))) a,
                          (SELECT count(*) count_ FROM TABLE(gipi_invoice_pkg.get_bond_bill_tax_list (#policyId#))) b)
          WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-04-2011 bill peril list 
		 Modified by Gzelle 06.15.2013 - added sortColumn
	-->
	<select id="getBillPerilList" resultMap="billPerilList" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (giis_peril_pkg.get_peril_bill_list (#policyId#, #itemNo#, #itemGrp#))
          		  		<isEqual property="sortColumn" compareValue="perilName">
          		  			ORDER BY peril_name
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="premAmt">
          		  			ORDER BY prem_amt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="tsiAmt">
          		  			ORDER BY tsi_amt
          		  		</isEqual>
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>
          		  		) a,
               		   (SELECT count(*) count_ FROM TABLE(giis_peril_pkg.get_peril_bill_list (#policyId#, #itemNo#, #itemGrp#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-05-2011 get payment schedule 
	     Modified by Gzelle 06.27.2013 - added sortColumn	
	-->
	<select id="getPaymentSchedule" resultMap="getPaymentSchedule" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (gipi_installment_pkg.get_payment_schedule (#policyId#, #itemNo#, #itemGrp#))
          		  		<isEqual property="sortColumn" compareValue="instNo">
          		  			ORDER BY inst_no
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="strDueDate">
          		  			ORDER BY str_due_date
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="sharePct">
          		  			ORDER BY share_pct
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="premAmt">
          		  			ORDER BY prem_amt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="taxAmt">
          		  			ORDER BY tax_amt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="totalDue">
          		  			ORDER BY total_due
          		  		</isEqual>          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>          		  
          		  	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_installment_pkg.get_payment_schedule (#policyId#, #itemNo#, #itemGrp#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-08-2011 commission details 
	     Modified by Gzelle 06.27.2013 - added sortColumn
	-->
	<select id="getCommissionDetails" resultMap="getCommissionDetails" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (GIAC_PARENT_COMM_INVPRL_PKG.get_commission_details(#issCd#,#premSeqNo#,#intmNo#,#perilCd#,#lineCd#))
          		  		<isEqual property="sortColumn" compareValue="perilName">
          		  			ORDER BY peril_name
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="prntDetailRt">
          		  			ORDER BY prnt_detail_rt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="prntDetailAmt">
          		  			ORDER BY prnt_detail_amt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="childCommRt">
          		  			ORDER BY child_comm_rt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="childCommAmt">
          		  			ORDER BY child_comm_amt
          		  		</isEqual>                  		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>           	   
          	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(GIAC_PARENT_COMM_INVPRL_PKG.get_commission_details(#issCd#,#premSeqNo#,#intmNo#,#perilCd#,#lineCd#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-09-2011 policy discount surcharge 
	     Modified by Gzelle 06.27.2013 - added sortColumn	
	-->
	<select id="policyDiscountSurchargeList" resultMap="policyDiscountSurchargeMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (gipi_polbasic_discount_pkg.get_policy_discount_surcharge(#policyId#))
          		  		<isEqual property="sortColumn" compareValue="sequence">
          		  			ORDER BY sequence
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="discAmt">
          		  			ORDER BY disc_amt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="discRt">
          		  			ORDER BY disc_rt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="surchargeAmt">
          		  			ORDER BY surcharge_amt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="surchargeRt">
          		  			ORDER BY surcharge_rt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="netPremAmt">
          		  			ORDER BY net_prem_amt
          		  		</isEqual>   
          		  		<isEqual property="sortColumn" compareValue="netGrossTag">
          		  			ORDER BY net_gross_tag
          		  		</isEqual>           		  		         		  		          		  		          	          		  		          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>           	   
          	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_discount_pkg.get_policy_discount_surcharge(#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-09-2011 item discount surcharge 
	     Modified by Gzelle 06.27.2013 - added sortColumn	
	-->
	<select id="itemDiscountSurchargeList" resultMap="itemDiscountSurchargeMap" parameterClass="java.util.HashMap">
		  SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (GIPI_ITEM_DISCOUNT_PKG.get_item_discount_surcharge(#policyId#))
          		  		<isEqual property="sortColumn" compareValue="sequence">
          		  			ORDER BY sequence
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="itemNo">
          		  			ORDER BY item_no
          		  		</isEqual>          		  		
          		  		<isEqual property="sortColumn" compareValue="discAmt">
          		  			ORDER BY disc_amt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="discRt">
          		  			ORDER BY disc_rt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="surchargeAmt">
          		  			ORDER BY surcharge_amt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="surchargeRt">
          		  			ORDER BY surcharge_rt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="netPremAmt">
          		  			ORDER BY net_prem_amt
          		  		</isEqual>   
          		  		<isEqual property="sortColumn" compareValue="netGrossTag">
          		  			ORDER BY net_gross_tag
          		  		</isEqual>           		  		         		  		          		  		          	          		  		          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>             	   
          	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(GIPI_ITEM_DISCOUNT_PKG.get_item_discount_surcharge(#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-09-2011 peril discount surcharge 
	     Modified by Gzelle 06.27.2013 - added sortColumn	
	-->
	<select id="perilDiscountSurchargeList" resultMap="perilDiscountSurchargeMap" parameterClass="java.util.HashMap">
		 SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (GIPI_PERIL_DISCOUNT_PKG.get_peril_discount_surcharge(#policyId#))
             		  	<isEqual property="sortColumn" compareValue="sequence">
          		  			ORDER BY sequence
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="itemNo">
          		  			ORDER BY item_no
          		  		</isEqual>  
          		  		<isEqual property="sortColumn" compareValue="perilName">
          		  			ORDER BY peril_name
          		  		</isEqual>            		  		          		  		
          		  		<isEqual property="sortColumn" compareValue="discAmt">
          		  			ORDER BY disc_amt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="discRt">
          		  			ORDER BY disc_rt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="surchargeAmt">
          		  			ORDER BY surcharge_amt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="surchargeRt">
          		  			ORDER BY surcharge_rt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="netPremAmt">
          		  			ORDER BY net_prem_amt
          		  		</isEqual>   
          		  		<isEqual property="sortColumn" compareValue="netGrossTag">
          		  			ORDER BY net_gross_tag
          		  		</isEqual>           		  		         		  		          		  		          	          		  		          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>             	   
          	   ) a,
               		   (SELECT count(*) count_ FROM TABLE(GIPI_PERIL_DISCOUNT_PKG.get_peril_discount_surcharge(#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-05-2011 invoice commission 
	     Modified by Gzelle 06.27.2013 - added sortColumn
	-->
	<select id="getInvoiceCommission" resultMap="getInvoiceCommissionMap" parameterClass="java.util.HashMap">
		 SELECT *
  		   FROM (SELECT rownum rownum_,b.count_,a.*
				   FROM (SELECT * FROM TABLE (gipi_comm_inv_peril_pkg.get_invoice_commission_dtls(#policyId#,#premSeqNo#,#lineCd#,#intmNo#))
          		  		<isEqual property="sortColumn" compareValue="perilName">
          		  			ORDER BY peril_name
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="premiumAmt">
          		  			ORDER BY premium_amt
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="wholdingTax">
          		  			ORDER BY wholding_tax
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="commissionRt">
          		  			ORDER BY commission_rt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="commissionAmt">
          		  			ORDER BY commission_amt
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="netComAmt">
          		  			ORDER BY net_com_amt
          		  		</isEqual>            		  		          		  		          	          		  		          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>  				
				) a,
               		    (SELECT count(*) count_ FROM TABLE(gipi_comm_inv_peril_pkg.get_invoice_commission_dtls(#policyId#,#premSeqNo#,#lineCd#,#intmNo#))) b)
 		  WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!--Modified by Gzelle 06.27.2013 - added sortColumn-->
	<select id="getInvoiceIntermediaries" resultMap="getInvoiceIntermediariesMap" parameterClass="java.util.HashMap">
		 SELECT *
  		   FROM (SELECT rownum rownum_,
  		                b.count_,
  		                a.*
          		   FROM (SELECT *
          		           FROM TABLE(GIPI_COMM_INV_PERIL_PKG.get_invoice_intermediaries(#policyId#,#premSeqNo#,#lineCd#))
          		  		<isEqual property="sortColumn" compareValue="intmNo">
          		  			ORDER BY intm_no
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="intmName">
          		  			ORDER BY intm_name
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="refIntmCd">
          		  			ORDER BY ref_intm_cd
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="parentIntmNo">
          		  			ORDER BY parent_intm_no
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="sharePercentage">
          		  			ORDER BY share_percentage
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="sharePrem">
          		  			ORDER BY share_prem
          		  		</isEqual>
						<isEqual property="sortColumn" compareValue="totalCommission">
          		  			ORDER BY total_comm
          		  		</isEqual>
						<isEqual property="sortColumn" compareValue="totalTaxWholding">
          		  			ORDER BY total_wtax
          		  		</isEqual>    
						<isEqual property="sortColumn" compareValue="netComAmt">
          		  			ORDER BY net_comm
          		  		</isEqual>              		  		          		  		          	          		  		          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>           		        
          		        ) a,
		              	(SELECT count(*) count_
		              	   FROM TABLE(GIPI_COMM_INV_PERIL_PKG.get_invoice_intermediaries(#policyId#,#premSeqNo#,#lineCd#))) b)
		  WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- hdrtagudin 07242015 SR 19824 -->	
	<select id="getBondIntermediaries" resultMap="getBondIntermediariesMap" parameterClass="java.util.HashMap">
		 SELECT *
  		   FROM (SELECT rownum rownum_,
  		                b.count_,
  		                a.*
          		   FROM (SELECT *
          		           FROM TABLE(GIPI_COMM_INV_PERIL_PKG.get_bond_intermediaries(#policyId#,#premSeqNo#,#lineCd#))
          		  		<isEqual property="sortColumn" compareValue="intmNo intmName">
          		  			ORDER BY intm_name
          		  		</isEqual>
          		  		<isEqual property="sortColumn" compareValue="parentIntmNo parentIntmName">
          		  			ORDER BY parent_intm_name
          		  		</isEqual>      
          		  		<isEqual property="sortColumn" compareValue="sharePercentage">
          		  			ORDER BY share_percentage
          		  		</isEqual>          
          		  		<isEqual property="sortColumn" compareValue="sharePrem">
          		  			ORDER BY share_prem
          		  		</isEqual>       		  		          		  				  				  		
          		  		<isNotNull>
          		  			<isEqual property="ascDescFlg" compareValue="ASC">
          		  				ASC
          		  			</isEqual>
          		  			<isEqual property="ascDescFlg" compareValue="DESC">
          		  				DESC
          		  			</isEqual>
          		  		</isNotNull>           		        
          		        ) a,
		              	(SELECT count(*) count_
		              	   FROM TABLE(GIPI_COMM_INV_PERIL_PKG.get_bond_intermediaries(#policyId#,#premSeqNo#,#lineCd#))) b)
		  WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getBillNotPrinted" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT GIPI_POLBASIC_PKG.check_if_bill_not_printed(#policyId#, #polFlag#, #lineCd#) bill_not_printed FROM DUAL
	</select>
	
	<select id="checkClaim" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT chk_claim(#premSeqNo#, #issCd#) FROM DUAL
	</select>
	
	<select id="getGipdLineCdLov" parameterClass="java.lang.String" resultMap="gipdLineCdLovMap">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_gipd_line_cd_lov(#keyword#))
	</select>

	<!--Modified by Gzelle 06.27.2013 - added sortColumn-->	
	<!--Modified by Gab 07.16.2015 - added filter -->
	<select id="getPolicyPerAssured" resultMap="policyPerAssuredMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_policy_per_assured(#assdNo#,#userId#,#moduleId#))
          		  <isNotNull property="filter">     
          		  WHERE 1=1
                  			<isNotEmpty prepend="AND"  property="policyNo">
                  				UPPER(policy_no) LIKE UPPER(#policyNo#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="strInceptDate">
                  				incept_date = TO_DATE(#strInceptDate#, 'MM-DD-YYYY')
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="strExpiryDate">
                  				expiry_date = TO_DATE(#strExpiryDate#, 'MM-DD-YYYY')
                  			</isNotEmpty>
                  			</isNotNull>  
          		<isNotNull property="sortColumn">
	                <isEqual property="sortColumn" compareValue="policyNo">
	              		ORDER BY policy_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="endtNo">
	              		ORDER BY endt_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="strInceptDate">
	              		ORDER BY incept_date
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="strExpiryDate">
	              		ORDER BY expiry_date
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="meanPolFlag">
	              		ORDER BY mean_pol_flag
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="tsiAmt">
	              		ORDER BY tsi_amt
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="premAmt">
	              		ORDER BY prem_amt
	                </isEqual>
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
	             </isNotNull>  
          		  ) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_policy_per_assured(#assdNo#,#userId#,#moduleId#)) 
               		    		 <isNotNull property="filter">
 		 WHERE 1 = 1
              			        <isNotEmpty prepend="AND"  property="policyNo">
                  				UPPER(policy_no) LIKE UPPER(#policyNo#)
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="strInceptDate">
                  				incept_date = TO_DATE(#strInceptDate#, 'MM-DD-YYYY')
                  			</isNotEmpty>
                  			<isNotEmpty prepend="AND"  property="strExpiryDate">
                  				expiry_date = TO_DATE(#strExpiryDate#, 'MM-DD-YYYY')
                  			</isNotEmpty>
                   		  </isNotNull>)
                   		  b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08-11-2011 policy by assured in account of -->
	<!-- benjo 01.04.2016 GENQA-SR-4936 added filter -->
	<select id="getPolicyByAssuredInAcctOf" resultMap="policyByAssurdAcctOfMap" parameterClass="java.util.HashMap">
		<!--Modified by pjsantos for optimization, GENQA 5771 -->
		<!-- SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (-->SELECT * FROM TABLE(gipi_polbasic_pkg.get_polassured_in_acct_of(#assdName#, #assdName2#, #policyNo#, #endtNo#,
          		  																		   #sortColumn#, #ascDescFlg#, #from#, #to#))
          		<!-- <isNotNull property="filter">
					WHERE 1=1
              		<isNotEmpty prepend="AND" property="assdName">
              			UPPER(assd_name) LIKE UPPER(#assdName#)
              		</isNotEmpty>
              		<isNotEmpty prepend="AND" property="assdName2">
              			UPPER(assd_name2) LIKE UPPER(#assdName2#)
              		</isNotEmpty>
              		<isNotEmpty prepend="AND" property="policyNo">
              			UPPER(policy_no) LIKE UPPER(#policyNo#)
              		</isNotEmpty>
              		<isNotEmpty prepend="AND" property="endtNo">
              			UPPER(endt_no) LIKE UPPER(#endtNo#)
              		</isNotEmpty>
                </isNotNull>
          		<isNotNull property="sortColumn">
              		<isEqual property="sortColumn" compareValue="assdName">
	              		ORDER BY assd_name
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="assdName2">
	              		ORDER BY assd_name2
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="acctOfCd">
	              		ORDER BY acct_of_cd
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="policyNo">
	              		ORDER BY policy_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="endtNo">
	              		ORDER BY endt_no
	                </isEqual>
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
	             </isNotNull>) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_polassured_in_acct_of)
		               	<isNotNull property="filter">
							WHERE 1=1
		              		<isNotEmpty prepend="AND" property="assdName">
		              			UPPER(assd_name) LIKE UPPER(#assdName#)
		              		</isNotEmpty>
		              		<isNotEmpty prepend="AND" property="assdName2">
		              			UPPER(assd_name2) LIKE UPPER(#assdName2#)
		              		</isNotEmpty>
		              		<isNotEmpty prepend="AND" property="policyNo">
		              			UPPER(policy_no) LIKE UPPER(#policyNo#)
		              		</isNotEmpty>
		              		<isNotEmpty prepend="AND" property="endtNo">
		              			UPPER(endt_no) LIKE UPPER(#endtNo#)
		              		</isNotEmpty>
		                </isNotNull>) b)
 		 WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>
	<!-- Rey 07-19-2011 -->
	<select id="getPolicyPerEndorsementType" resultMap="policyPerEndorsementTypeMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_policy_per_endorsement(#endtCd#))) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_policy_per_endorsement(#endtCd#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- Rey 08.15.2011 policy obligee list -->
	<select id="getPolicyObligeeList" resultMap="policyObligeeListMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_policy_obligee_list(#obligeeNo#))
          		<isNotNull property="sortColumn">
	                <isEqual property="sortColumn" compareValue="policyNo">
	              		ORDER BY policy_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="endtNo">
	              		ORDER BY endt_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="tsiAmt">
	              		ORDER BY tsi_amt
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="premAmt">
	              		ORDER BY prem_amt
	                </isEqual>
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
	             </isNotNull>  
          		) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_policy_obligee_list(#obligeeNo#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<select id="getPolicyPerObligee" resultMap="policyPerObligeeMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_policy_per_obligee(#obligeeNo#))) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_policy_per_obligee(#obligeeNo#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<procedure id="getEndtRiskTag" parameterMap="getEndtRiskTagMap">
		BEGIN
			gipi_polbasic_pkg.get_endt_risk_tag(?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<select id="getPolicyRenewals" resultMap="policyRenewalsMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_policy_renewals(#policyId#))) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_policy_renewals(#policyId#))) b) 
 		 WHERE rownum_ BETWEEN NVL(#from#,rownum_) AND NVL(#to#,rownum_)
 		 ORDER BY line_cd,subline_cd,issue_yy,pol_seq_no,renew_no
	</select>
	
	<resultMap class="GIPIPolbasicClass" id="endtCancellationResultMap">
		<result column="endorsement" property="endorsement"/>
		<result column="policy_id"	 property="policyId"/>
	</resultMap>
	
	<select id="getEndtCancellationLOV"	parameterClass="GIPIPolbasicClass" resultMap="endtCancellationResultMap">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_endt_cancellation_lov(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#))
	</select>
	
	<select id="getEndtCancellationLOV2" parameterClass="GIPIPolbasicClass" resultMap="endtCancellationResultMap">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_endt_cancellation_lov2(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#))
	</select>
	
	<procedure id="retrieveRefPolNo" parameterMap="retrieveRefPolNoMap" >
		BEGIN
			GIPI_POLBASIC_PKG.get_ref_pol_no(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<select id="getPolicyNo" resultClass="java.lang.String" parameterClass="java.lang.Integer">
		SELECT get_policy_no(#policyId#) FROM dual
	</select>
	
<!-- 	<select id="getPolicyListingForRedistribution" resultMap="redistributionPolicyListingMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIPI_POLBASIC_PKG.get_redistribution_policies(#filter.lineCd#, #filter.sublineCd#, #filter.issCd#, #filter.issueYy#, #filter.polSeqNo#, #filter.renewNo#, #filter.endtIssCd#, #filter.endtYy#, #filter.endtSeqNo#, #filter.assdName#, to_date(#filter.effDate#,'mm-dd-yyyy'), to_date(#filter.expiryDate#,'mm-dd-yyyy')))  added by steven 11/12/2012  "to_date(#filter.effDate#,'mm-dd-yyyy'), to_date(#filter.expiryDate#,'mm-dd-yyyy')"
		                  <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="effDate">
			              		ORDER BY eff_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expiryDate">
			              		ORDER BY expiry_date
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPI_POLBASIC_PKG.get_redistribution_policies(#filter.lineCd#, #filter.sublineCd#, #filter.issCd#, #filter.issueYy#, #filter.polSeqNo#, #filter.renewNo#, #filter.endtIssCd#, #filter.endtYy#, #filter.endtSeqNo#, #filter.assdName#, to_date(#filter.effDate#,'mm-dd-yyyy'), to_date(#filter.expiryDate#,'mm-dd-yyyy')))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select> -->

	<select id="getGIUTS021PolicyListing" resultMap="redistributionPolicyListingMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIPI_POLBASIC_PKG.get_redistribution_policies(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #assdName#, to_date(#effDate#,'mm-dd-yyyy'), to_date(#expiryDate#,'mm-dd-yyyy'), #userId#))  <!-- added by steven 11/12/2012  "to_date(#filter.effDate#,'mm-dd-yyyy'), to_date(#filter.expiryDate#,'mm-dd-yyyy')" -->
		                  <isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="endtIssCd">
              					  UPPER(endt_iss_cd) LIKE UPPER(#endtIssCd#)
              					  AND endt_yy != '00'
              			        </isNotEmpty>
                   		  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="effDate">
			              		ORDER BY eff_date
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="expiryDate">
			              		ORDER BY expiry_date
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPI_POLBASIC_PKG.get_redistribution_policies(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #assdName#, to_date(#effDate#,'mm-dd-yyyy'), to_date(#expiryDate#,'mm-dd-yyyy'), #userId#))
		                  <isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="endtIssCd">
              					  UPPER(endt_iss_cd) LIKE UPPER(#endtIssCd#)
              					  AND endt_yy != '00'
              			        </isNotEmpty>
                   		  </isNotNull>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="executeGIUWS012V370PostQuery" parameterMap="executeGIUWS012V370PostQueryMap">
		CALL GIPI_POLBASIC_PKG.exec_giuws012_v370_post_query(?, ?, ?, ?)
	</procedure>
	
	<procedure id="checkReinsurancePaymentForRedistribution" parameterMap="checkReinsurancePaymentForRedistributionMap">
		CALL check_reinsurance_payment2(?, ?, ?)
	</procedure>
	
	<select id="getRedistributionPolicy" resultMap="redistributionPolicyListingMap2" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_redistribution_policy(#policyId#))
	</select>
	
	<select id="getIssueYyLOV" resultMap="GIPIPolbasicResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipi_polbasic_pkg.get_issue_yy_list(#lineCd#, #sublineCd#, #issCd#))
		                  <isNotNull property="findText">
		                  WHERE issue_yy LIKE #findText#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="issueYy">
			              		ORDER BY issue_yy
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_issue_yy_list(#lineCd#, #sublineCd#, #issCd#))
		                  <isNotNull property="findText">
		                  WHERE issue_yy LIKE #findText#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPolSeqNoLOV" resultMap="GIPIPolbasicResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipi_polbasic_pkg.get_pol_seq_no_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#))
		                  <isNotNull property="findText">
		                  WHERE pol_seq_no LIKE #findText#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="polSeqNo">
			              		ORDER BY pol_seq_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_pol_seq_no_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#))
		                  <isNotNull property="findText">
		                  WHERE pol_seq_no LIKE #findText#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	
	<select id="getRenewNoLOV" resultMap="GIPIPolbasicResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipi_polbasic_pkg.get_renew_no_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#))
		                  <isNotNull property="findText">
		                  WHERE renew_no LIKE #findText#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="renewNo">
			              		ORDER BY renew_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_renew_no_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#))
		                  <isNotNull property="findText">
		                  WHERE renew_no LIKE #findText#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="getPackDetailsHeader" parameterMap="getPackDetailsHeaderMap">
		CALL gipi_polbasic_pkg.get_pack_details_header(?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<procedure id="checkPolicyGICLS026" parameterMap="checkPolicyGICLS026Map">
		CALL gipi_polbasic_pkg.check_policy_gicls026(?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<select id="getPolbasicIssueYyLOV" resultMap="GIPIPolbasicResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipi_polbasic_pkg.get_polbasic_issue_yy(#lineCd#, #sublineCd#, #issCd#))
		                  <isNotNull property="findText">
		                  WHERE issue_yy LIKE #findText#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="issueYy">
			              		ORDER BY issue_yy
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_polbasic_issue_yy(#lineCd#, #sublineCd#, #issCd#))
		                  <isNotNull property="findText">
		                  WHERE issue_yy LIKE #findText#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPolbasicPolSeqNoLOV" resultMap="GIPIPolbasicResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipi_polbasic_pkg.get_polbasic_pol_seq_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#))
		                  <isNotNull property="findText">
		                  WHERE pol_seq_no LIKE #findText#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="polSeqNo">
			              		ORDER BY pol_seq_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_polbasic_pol_seq_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#))
		                  <isNotNull property="findText">
		                  WHERE pol_seq_no LIKE #findText#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getPolbasicRenewNoLOV" resultMap="GIPIPolbasicResultMapGrid" parameterClass="java.util.HashMap">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipi_polbasic_pkg.get_polbasic_renew_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#))
		                   <isNotNull property="findText">
		                  WHERE renew_no LIKE #findText#
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="renewNo">
			              		ORDER BY renew_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_polbasic_pkg.get_polbasic_renew_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#))
		                  <isNotNull property="findText">
		                  WHERE renew_no LIKE #findText#
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIUTS024LOV" resultMap="genBinderGIUTS024Map">
		 SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIPI_POLBASIC_PKG.GET_GIUTS024_LISTING(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtSeqNo#))
			              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPI_POLBASIC_PKG.GET_GIUTS024_LISTING(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtSeqNo#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
		   AND check_user_per_iss_cd2(line_cd, iss_cd, 'GIUTS024', #userId#) = 1
	</select>
		
	<select id="getRefPolNo" parameterClass="java.util.HashMap" resultClass="String">
		SELECT GIPI_POLBASIC_PKG.get_ref_pol_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#) FROM DUAL
	</select> 
	
	<select id="checkPolicyGiexs006" parameterClass="java.util.HashMap" resultMap="checkPolicyGiexs006Map">
		SELECT * FROM TABLE(gipi_polbasic_pkg.check_policy_giexs006(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
	</select>
	
	<select id="getEndtTax2Gipis091" resultClass="String">
		SELECT get_endt_tax2_gipis091(#policyId#) FROM DUAL
	</select>
	
	<select id="getPolicyListForViewPolicyInfo" resultMap="polInfoTableGridMap">	
	    SELECT * FROM TABLE (GIPIS100_PKG.get_query_policy_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #refPolNo#, 
																#nbtLineCd#, #nbtIssCd#, #parYy#, #parSeqNo#, #quoteSeqNo#, #userId#, #moduleId#, 
																#sortColumn#, #ascDescFlg#, #from#, #to#))
	</select>
	
	<select id="getPolBondSeqNo" resultClass="java.lang.Integer">
		SELECT GIPI_POLBASIC_PKG.get_policy_bond_seq_no(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#)
		  FROM dual
	</select>
	
	<select id="getPolicyIdFromPolNo" resultClass="string" parameterClass="map">
		SELECT GET_POLICY_ID(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#)
		  FROM dual
	</select>
	
	<select id="checkEndtGiuts008a" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(gipi_polbasic_pkg.check_endt_giuts008a(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#endtIssCd#,#endtYy#,#endtSeqNo#))
	</select>
	
	<select id="checkPolicyGiuts008a" resultClass="java.util.HashMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(gipi_polbasic_pkg.check_policy_giuts008a(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#))
	</select>
	
	<select id="gicls010ValidateIssueYy" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIPI_POLBASIC_PKG.validate_issueyear_gicls010(#lineCd#,#sublineCd#,#issCd#,#issueYy#) 
		  FROM DUAL
	</select> 
	
	<select id="gicls010ValidatePolSeqNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIPI_POLBASIC_PKG.validate_polseqno_gicls010(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#) 
		  FROM DUAL
	</select> 
	
	<select id="gicls010ValidateRenewNo" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIPI_POLBASIC_PKG.validate_renewno_gicls010(#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#) 
		  FROM DUAL
	</select>
	
	<select id="getRefPolNo2" resultClass="java.lang.String" parameterClass="java.util.HashMap">
		SELECT gipi_polbasic_pkg.get_ref_pol_no2(#lineCd#, #opSublineCd#, #opIssCd#, #opIssueYy#, #opPolSeqno#, #opRenewNo#) FROM DUAL		
	</select> 
	
	<!-- Edison 10.16.2012 for selecting Policy Nos. in GIPIS171-UpdateAddWarrantiesAndClauses -->
	<select id="getGIPIS171LOV" resultMap="updAddWarrAndClausesGIPIS171Map">
		  <!-- Added by MarkS SR5769 10.18.2016 OPTIMIZATION -->
		  SELECT *  FROM TABLE (GIPIS171_PKG.GET_GIPIS171_POLICIES(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#,
		                  												 #parLineCd#, #parIssCd#, #parYy#, #parSeqNo#, #parQuoteSeqNo#,#policyNo#,
																	     #endtNo#,
																	     #parNo#,
																	     #sortColumn#,
																	     #ascDescFlg#,
																	     #from#,
																	     #to#))
		  <!-- Added by MarkS SR5769 10.18.2016 OPTIMIZATION -->
		  <!-- commented out for Optimization by MarkS SR5769 10.18.2016 OPTIMIZATION -->
		  <!-- SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIPIS171_PKG.GET_GIPIS171_POLICIES(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#,
		                  												 #parLineCd#, #parIssCd#, #parYy#, #parSeqNo#, #parQuoteSeqNo#)) parIssueCd replaced with parIssCd, quoteSeqNo replaced with parQuoteSeqNo
		                  WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, '%'))                           
		                   AND UPPER(NVL(endt_no, '%')) LIKE UPPER(NVL(#endtNo#, '%'))
		                   AND UPPER(par_no) LIKE UPPER(NVL(#parNo#, '%'))								 
			              <isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="endtNo">
			              		ORDER BY endt_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="assdName">
			              		ORDER BY assd_name
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="parNo">
			              		ORDER BY par_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPIS171_PKG.GET_GIPIS171_POLICIES(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#,
		                  												#parLineCd#, #parIssCd#, #parYy#, #parSeqNo#, #parQuoteSeqNo#)) parIssueCd replaced with parIssCd, quoteSeqNo replaced with parQuoteSeqNo
		                   WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, '%'))                           
		                   AND UPPER(NVL(endt_no, '%')) LIKE UPPER(NVL(#endtNo#, '%'))
		                   AND UPPER(par_no) LIKE UPPER(NVL(#parNo#, '%'))
		               ) b) 
		   WHERE rownum_ BETWEEN #from# AND #to# -->
		  
		  <!-- end old code -->    
	</select>
	
	<!--gipis131 pol cruz 4.11.2013-->
	<resultMap id="gipis131ResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="parId" column="par_id" />
		<result property="plistLineCd" column="plist_line_cd" />
		<result property="plistIssCd" column="plist_iss_cd" />
		<result property="parYy" column="par_yy" />
		<result property="parSeqNo" column="par_seq_no" />
		<result property="quoteSeqNo" column="quote_seq_no" />
		<result property="parType" column="par_type" />
		<result property="assdName" column="assd_name" />
		<result property="underwriter" column="underwriter" />
		<result property="drvParStatus" column="drv_par_status" />
		<result property="policyNo" column="policy_no" />
		<result property="renewNo" column="renew_no" />
		<result property="inceptDate" column="incept_date" />
		<result property="expiryDate" column="expiry_date" />
		<result property="effDate" column="eff_date" />
		<result property="issueDate" column="issue_date" />	
		<result property="credBranch" column="cred_branch" />	<!-- added by Jhing 08.14.2015 optimization gipis131 - FGICFULLWEB 18645-->
		<result property="endtNo" column="endt_no" />	<!-- added by john 08.25.2015 optimization gipis131 - FGICFULLWEB 18645-->				
	</resultMap>
	
	<resultMap id="gipis131parHistResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="parStat" column="par_stat" />
		<result property="parStatDate" column="parstat_date" />
		<result property="userId2" column="user_id" />	
	</resultMap>
	
	<!--   jhing 08.14.2015 commented out and will be replaced with revised code for optimization (using Edward Barroso's changes)
	<select id="showGIPIS131" resultMap="gipis131ResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS131_PKG.get_par_status(#userId#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #parStat#, #plistLineCd#, #plistIssCd# , #parYy#,
						    																								   #parSeqNo#, #quoteSeqNo#, #assdName#, #parType#, #underwriter#, #drvParStatus#))
							<isEqual property="sortColumn" compareValue="parNo">
								ORDER BY plist_line_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="assdName">
								ORDER BY assd_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="parType">
								ORDER BY par_type
							</isEqual>
							<isEqual property="sortColumn" compareValue="underwriter">
								ORDER BY underwriter
							</isEqual>
							<isEqual property="sortColumn" compareValue="drvParStatus">
								ORDER BY drv_par_status
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS131_PKG.get_par_status(#userId#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #parStat#, #plistLineCd#, #plistIssCd# , #parYy#,
						    																								   #parSeqNo#, #quoteSeqNo#, #assdName#, #parType#, #underwriter#, #drvParStatus#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	-->
	
	<!--  jhing 08.14.2015 new select statement FGICFULLWEB 18645 -->
	<select id="showGIPIS131" resultMap="gipis131ResultMap">
		 SELECT *
			FROM TABLE (GIPIS131_PKG.get_par_status(#userId#, #searchByOpt#, #dateAsOf#, #dateFrom#, #dateTo#, #parStat#, #plistLineCd#, 
			                                        #plistIssCd# , #parYy#,  #parSeqNo#, #quoteSeqNo#, #assdName#, #credBranch#, #parType#, #underwriter#, 
			                                        #drvParStatus# , #from# ,  #to# , #sortColumn#, #ascDescFlg#, 0))
	</select>	
	
	<select id="showGipis131ParHist" resultMap="gipis131parHistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS131_PKG.get_par_history(#parId#))
							<isEqual property="sortColumn" compareValue="parStat">
								ORDER BY par_stat
							</isEqual>
							<isEqual property="sortColumn" compareValue="parStatDate">
								ORDER BY parstat_date
							</isEqual>
							<isEqual property="sortColumn" compareValue="userId2">
								ORDER BY user_id
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS131_PKG.get_par_history(#parId#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="clearGipis131TableGrid"> <!--to clear gipis131tablegrid instantly-->
		select null from dual
	</select>
	
	<!-- gipis132 pol cruz 04.16.2013  -->
	<resultMap id="gipis132ResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyId" column="policy_id" />
	    <result property="parId" column="par_id" />
	    <result property="lineCd" column="line_cd" />
		<result property="sublineCd" column="subline_cd" />
		<result property="issCd" column="iss_cd" />	
		<result property="issueYy" column="issue_yy" />
		<result property="polSeqNo" column="pol_seq_no" />
		<result property="renewNo" column="renew_no" />	
		<result property="endtIssCd" column="endt_iss_cd" />
		<result property="endtYy" column="endt_yy" />
		<result property="endtSeqNo" column="endt_seq_no" />
		<result property="assdName" column="assd_name" />	
		<result property="userId2" column="user_id" />
		<result property="meanPolFlag" column="mean_pol_flag" />
		<result property="credBranchCd" column="cred_branch" />
		<result property="credBranchName" column="cred_branch_name" />
		<result property="inceptDate" column="incept_date" />
		<result property="expiryDate" column="expiry_date" />
		<result property="effDate" column="eff_date" />
		<result property="issueDate" column="issue_date" />	
	</resultMap>
	
	<select id="showGIPIS132" resultMap="gipis132ResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS132_PKG.get_policy_status(#userId#, #polFlag#, #distFlag#, #searchByOpt#, #dateAsOf#,
																	   #dateFrom#, #dateTo#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, 
																	   #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #assdName#,
																	   #userId2#, #credBranch#))
							<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY line_cd || '-' || subline_cd || '-' || iss_cd || '-' || issue_yy || '-' || pol_seq_no || '-' || renew_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="endorsementNo">
								ORDER BY endt_iss_cd || '-' || endt_yy || '-' || endt_seq_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="assdName">
								ORDER BY assd_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="userId2">
								ORDER BY user_id
							</isEqual>
							<isEqual property="sortColumn" compareValue="meanPolFlag">
								ORDER BY mean_pol_flag
							</isEqual>
							<isNotNull>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS132_PKG.get_policy_status(#userId#, #polFlag#, #distFlag#, #searchByOpt#, #dateAsOf#,
						   											  #dateFrom#, #dateTo#, #lineCd#, #sublineCd#, #issCd#, #issueYy#,
						   											  #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #assdName#,
						   											  #userId2#, #credBranch#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getMainPolicyId" resultClass="java.lang.Integer" parameterClass="java.util.HashMap">
		SELECT GIPIS132_PKG.get_main_policy_id(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#) FROM DUAL		
	</select>
	
	<parameterMap class="map" id="gipis100PopSummaryTabAMap">
	    <parameter property="userId" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="lineCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sublineCd" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issueYy" 		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="polSeqNo" 		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="renewNo" 		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="policyId" 	    jdbcType="INTEGER"	javaType="java.lang.Integer"    mode="OUT"/>
		<parameter property="extractId" 	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="OUT"/>
		<parameter property="coInsSw" 	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="OUT"/>
	</parameterMap>
	
	<parameterMap class="map" id="gipis100PopSummaryTabBMap">
	    <parameter property="userId" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	    <parameter property="extractId" 	jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
	    <parameter property="policyId" 	    jdbcType="INTEGER"	javaType="java.lang.Integer"    mode="IN"/>
		<parameter property="lineCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="sublineCd" 	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issCd" 		jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="issueYy" 		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="polSeqNo" 		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="renewNo" 		jdbcType="INTEGER"	javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="coInsSw" 	    jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
	</parameterMap>
	
	<procedure id="gipis100PopulateSummaryTabA" parameterMap="gipis100PopSummaryTabAMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GIPIS100_EXTRACT_SUMMARY.populate_summary_tab_a(?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<procedure id="gipis100PopulateSummaryTabB" parameterMap="gipis100PopSummaryTabBMap">
		BEGIN
			giis_users_pkg.app_user := ?;
			GIPIS100_EXTRACT_SUMMARY.populate_summary_tab_b(?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure> 
	
	<!-- jomsdiago 07.25.2013 for GIUTS028 - Policy Reinstatement -->
	<resultMap id="giuts028ReinstatementHistResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="histId"         column="hist_id" />
		<result property="maxEndtSeqNo"   column="max_endt_seq_no" />
		<result property="userId"         column="user_id" />
		<result property="lastUpdate"     column="last_update" />	
	</resultMap>
	
	<select id="showReinstateHistory" resultMap="giuts028ReinstatementHistResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIUTS028_PKG.GET_REINSTATEMENT_HIST(#policyId#))
							<isEqual property="sortColumn" compareValue="histId">
								ORDER BY hist_id
							</isEqual>
							<isEqual property="sortColumn" compareValue="maxEndtSeqNo">
								ORDER BY max_endt_seq_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="userId">
								ORDER BY user_id
							</isEqual>
							<isEqual property="sortColumn" compareValue="lastUpdate">
								ORDER BY last_update
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIUTS028_PKG.GET_REINSTATEMENT_HIST(#policyId#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="GIPIPolbasicClass" id="getGiuts027PolicyLOVMap">
		<result column="PAR_ID" 			property="parId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="POLICY_NO" 			property="policyNo"/>
		<result column="ENDT_NO" 			property="endtNo"/>
		<result column="ROWNUM_"			property="rowNum"/>			
		<result column="COUNT_"				property="rowCount"/>
	</resultMap>
	<select id="getGiuts027PolicyLOV" resultMap="getGiuts027PolicyLOVMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPI_POLBASIC_PKG.get_giuts027_policy_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, 
																				   #endtSeqNo#, #endtYy#, #endtIssCd#, #assdName#, #userId#, #moduleId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="endtNo">
              					  UPPER(endt_no) LIKE UPPER(#endtNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="endtNo">
									ORDER BY endt_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPI_POLBASIC_PKG.get_giuts027_policy_list(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, 
																				   #endtSeqNo#, #endtYy#, #endtIssCd#, #assdName#, #userId#, #moduleId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="endtNo">
              					  UPPER(endt_no) LIKE UPPER(#endtNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- start of GIPIS109; by steven 09.06.2013 -->
	<resultMap class="java.util.HashMap" id="gipis109GiisVesselMap" extends="BaseEntity.TableGridResultMap">
		<result column="vessel_cd"			property="vesselCd" />
		<result column="vessel_name"		property="vesselName" />
		<result column="vessel_flag"		property="vesselFlag" />
		<result column="nbt_vestype"		property="nbtVestype" />
		<result column="exclude_expired"	property="excludeExpired" />
		<result column="exclude_not_eff"	property="excludeNotEff" />
		<result column="bus_type"			property="busType" />
		<result column="line_mn"			property="lineMn" />
		<result column="line_mh"			property="lineMh" />
		<result column="line_av"			property="lineAv" />
		<result column="line_mn_msg"		property="lineMnMsg" />
		<result column="line_mh_msg"		property="lineMhMsg" />
		<result column="line_av_msg"		property="lineAvMsg" />
	</resultMap>
	
	<resultMap id="gipis156BookedResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result column="BOOKING_MTH" 		property="bookingMth" />
		<result column="BOOKING_YEAR"		property="bookingYear" />
		<result column="BOOKING_MTH_NUM" 	property="bookingMonthNum" />
		<result column="BOOKED_TAG" 	property="bookedTag" />
	</resultMap>
		
	<resultMap class="java.util.HashMap" id="gipis109ExposuresMap" extends="BaseEntity.TableGridResultMap">
		<result column="actual"			property="actual" />
		<result column="temporary"		property="temporary" />
		<result column="expo_sum"		property="expoSum" />
		<result column="rv_low_value"	property="rvLowValue" />
		<result column="line_cd"		property="lineCd" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis109ShareExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="actual"			property="actual" />
		<result column="temporary"		property="temporary" />
		<result column="expo_sum"		property="expoSum" />
		<result column="share_cd"		property="shareCd" />
		<result column="line_cd"		property="lineCd" />
		<result column="trty_name"		property="trtyName" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis109ActualExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"			property="policyId" />
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd"				property="issCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="pol_seq_no"			property="polSeqNo" />
		<result column="renew_no"			property="renewNo" />
		<result column="item_no"			property="itemNo" />
		<result column="dist_flag"			property="distFlag" />
		<result column="dist_tsi"			property="distTsi" />
		<result column="ann_tsi_amt"		property="annTsiAmt" />
		<result column="assd_no"			property="assdNo" />
		<result column="assd_name"			property="assdName" />
		<result column="eff_date"			property="effDate" />
		<result column="incept_date"		property="inceptDate" />
		<result column="expiry_date"		property="expiryDate" />
		<result column="endt_expiry_date"	property="endtExpiryDate" />
		<result column="peril_cd"			property="perilCd" />
		<result column="prem_rt"			property="premRt" />
		<result column="peril_sname"		property="perilSname" />
		<result column="peril_name"			property="perilName" />
		<result column="vessel_cd"			property="vesselCd" />
		<result column="eta"				property="eta" />
		<result column="etd"				property="etd" />
		<result column="bl_awb"				property="blAwb" />
		<result column="cargo_type"			property="cargoType" />
		<result column="cargo_class_cd"		property="cargoClassCd" />
		<result column="cargo_type_desc"	property="cargoTypeDesc" />
		<result column="cargo_class_desc"	property="cargoClassDesc" />
		<result column="endt_seq_no"		property="endtSeqNo" />
		<result column="policy_no"			property="policyNo" />
		<result column="expired"			property="expired" />
		<result column="not_yet_eff"		property="notYetEff" />
		<result column="item_title"			property="itemTitle" />
		<result column="nbt_dist_status"	property="nbtDistStatus" />
		<result column="dsp_expiry_date"	property="dspExpiryDate" />
		<result column="dsp_eta"			property="dspEta" />
		<result column="dsp_etd"			property="dspEtd" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis109TempExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd"				property="issCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="renew_no"			property="renewNo" />
		<result column="pol_flag"			property="polFlag" />
		<result column="incept_date"		property="inceptDate" />
		<result column="expiry_date"		property="expiryDate" />
		<result column="endt_expiry_date"	property="endtExpiryDate" />
		<result column="eff_date"			property="effDate" />
		<result column="endt_seq_no"		property="endtSeqNo" />
		<result column="endt_yy"			property="endtYy" />
		<result column="endt_iss_cd"		property="endtIssCd" />
		<result column="item_no"			property="itemNo" />
		<result column="vessel_cd"			property="vesselCd" />
		<result column="ann_tsi_amt"		property="annTsiAmt" />
		<result column="tsi_amt"			property="tsiAmt" />
		<result column="rec_flag"			property="recFlag" />
		<result column="dist_flag"			property="distFlag" />
		<result column="par_id"				property="parId" />
		<result column="par_yy"				property="parYy" />
		<result column="quote_seq_no"		property="quoteSeqNo" />
		<result column="par_seq_no"			property="parSeqNo" />
		<result column="assd_no"			property="assdNo" />
		<result column="dist_tsi"			property="distTsi" />
		<result column="assd_name"			property="assdName" />
		<result column="peril_cd"			property="perilCd" />
		<result column="peril_sname"		property="perilSname" />
		<result column="peril_name"			property="perilName" />
		<result column="prem_rt"			property="premRt" />
		<result column="par_no"				property="parNo" />
		<result column="item_title"			property="itemTitle" />
		<result column="expired"			property="expired" />
		<result column="not_yet_eff"		property="notYetEff" />
		<result column="eta"				property="eta" />
		<result column="etd"				property="etd" />
		<result column="bl_awb"				property="blAwb" />
		<result column="cargo_class"		property="cargoClass" />
		<result column="cargo_type"			property="cargoType" />
		<result column="nbt_dist_status"	property="nbtDistStatus" />
		<result column="dsp_expiry_date"	property="dspExpiryDate" />
		<result column="dsp_eta"			property="dspEta" />
		<result column="dsp_etd"			property="dspEtd" />
	</resultMap>
	
	<select id="getGipis109GiisVessel" resultMap="gipis109GiisVesselMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis109_pkg.get_giis_vessel (#refresh#,#enterQuery#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="vesselCd">
              					  UPPER(vessel_cd) LIKE UPPER(#vesselCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="vesselName">
              					  UPPER(vessel_name) LIKE UPPER(#vesselName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtVestype">
              					  UPPER(nbt_vestype) LIKE UPPER(#nbtVestype#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="vesselCd">
									ORDER BY vessel_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="vesselName">
									ORDER BY vessel_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="nbtVestype">
									ORDER BY nbt_vestype
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis109_pkg.get_giis_vessel (#refresh#,#enterQuery#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="vesselCd">
              					  UPPER(vessel_cd) LIKE UPPER(#vesselCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="vesselName">
              					  UPPER(vessel_name) LIKE UPPER(#vesselName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtVestype">
              					  UPPER(nbt_vestype) LIKE UPPER(#nbtVestype#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="extractVesselAccum">
		CALL vessel_accum.EXTRACT (#vesselCd#, #busType#)
	</procedure>
	
	<select id="getGipis109Exposures" resultMap="gipis109ExposuresMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis109_pkg.get_exposures (#vesselCd#,#excludeExpired#,#excludeNotEff#))
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis109_pkg.get_exposures (#vesselCd#,#excludeExpired#,#excludeNotEff#))
						   ) b)
			WHERE rownum_ BETWEEN 1 AND 3
	</select>
	
	<select id="getGipis109ShareExposure" resultMap="gipis109ShareExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis109_pkg.get_share_exposure (#rvLowValue#,#vesselCd#,#excludeExpired#,#excludeNotEff#))
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="actual">
									ORDER BY actual
								</isEqual>
								<isEqual property="sortColumn" compareValue="temporary">
									ORDER BY temporary
								</isEqual>
								<isEqual property="sortColumn" compareValue="expoSum">
									ORDER BY expo_sum
								</isEqual>
								<isEqual property="sortColumn" compareValue="shareCd">
									ORDER BY share_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="lineCd">
									ORDER BY line_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="trtyName">
									ORDER BY trty_name
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis109_pkg.get_share_exposure (#rvLowValue#,#vesselCd#,#excludeExpired#,#excludeNotEff#))
						   ) b)
	</select>
	
	<select id="getGipis109ActualExposure" resultMap="gipis109ActualExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis109_pkg.get_actual_exposure (#excludeExpired#,#excludeNotEff#,#shareCd#,#vesselCd#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			       <isNotEmpty prepend="AND" property="dspEta">
              					  dsp_eta LIKE #dspEta#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEtd">
              					  dsp_etd LIKE #dspEtd#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blAwb">
              					  UPPER(bl_awb) LIKE UPPER(#blAwb#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtDistStatus">
              					  UPPER(nbt_dist_status) LIKE UPPER(#nbtDistStatus#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspExpiryDate">
              					  dsp_expiry_date LIKE #dspExpiryDate#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemTitle">
									ORDER BY item_title
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premRt">
									ORDER BY prem_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="annTsiAmt">
									ORDER BY ann_tsi_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="distTsi">
									ORDER BY dist_tsi
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspEta">
									ORDER BY eta
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspEtd">
									ORDER BY etd
								</isEqual>
								<isEqual property="sortColumn" compareValue="blAwb">
									ORDER BY bl_awb
								</isEqual>
								<isEqual property="sortColumn" compareValue="nbtDistStatus">
									ORDER BY nbt_dist_status
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspExpiryDate">
									ORDER BY expiry_date
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis109_pkg.get_actual_exposure (#excludeExpired#,#excludeNotEff#,#shareCd#,#vesselCd#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEta">
              					  dsp_eta LIKE #dspEta#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEtd">
              					  dsp_etd LIKE #dspEtd#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blAwb">
              					  UPPER(bl_awb) LIKE UPPER(#blAwb#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtDistStatus">
              					  UPPER(nbt_dist_status) LIKE UPPER(#nbtDistStatus#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspExpiryDate">
              					  dsp_expiry_date LIKE #dspExpiryDate#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis109TempExposure" resultMap="gipis109TempExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis109_pkg.get_temporary_exposure (#excludeExpired#,#excludeNotEff#,#shareCd#,#vesselCd#,#mode#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="parNo">
              					  UPPER(par_no) LIKE UPPER(#parNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEta">
              					  dsp_eta LIKE #dspEta#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEtd">
              					  dsp_etd LIKE #dspEtd#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blAwb">
              					  UPPER(bl_awb) LIKE UPPER(#blAwb#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtDistStatus">
              					  UPPER(nbt_dist_status) LIKE UPPER(#nbtDistStatus#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspExpiryDate">
              					  dsp_expiry_date LIKE #dspExpiryDate#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="parNo">
									ORDER BY par_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemTitle">
									ORDER BY item_title
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premRt">
									ORDER BY prem_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="annTsiAmt">
									ORDER BY ann_tsi_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="distTsi">
									ORDER BY dist_tsi
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspEta">
									ORDER BY eta
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspEtd">
									ORDER BY etd
								</isEqual>
								<isEqual property="sortColumn" compareValue="blAwb">
									ORDER BY bl_awb
								</isEqual>
								<isEqual property="sortColumn" compareValue="nbtDistStatus">
									ORDER BY nbt_dist_status
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspExpiryDate">
									ORDER BY expiry_date
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis109_pkg.get_temporary_exposure (#excludeExpired#,#excludeNotEff#,#shareCd#,#vesselCd#,#mode#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="parNo">
              					  UPPER(par_no) LIKE UPPER(#parNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEta">
              					  dsp_eta LIKE #dspEta#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEtd">
              					  dsp_etd LIKE #dspEtd#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blAwb">
              					  UPPER(bl_awb) LIKE UPPER(#blAwb#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtDistStatus">
              					  UPPER(nbt_dist_status) LIKE UPPER(#nbtDistStatus#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspExpiryDate">
              					  dsp_expiry_date LIKE #dspExpiryDate#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- for GIPIS203 -->
	<!-- 1 -->
	<procedure id="extractRecapsVI" parameterClass="map">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			extract_recapitulation(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<!-- 2 -->
	<procedure id="extractRecapsVISocial" parameterClass="map">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			extract_recapitulation_social(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<!-- 3 -->
	<procedure id="extractRecapsVILosses" parameterClass="map">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			extract_recapitulation_losses(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<!-- 4 -->
	<procedure id="extractRecapsVIDetail" parameterClass="map">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			extract_recapitulation_dtl(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<!-- 5 -->
	<procedure id="extractRecapsVILossDetail" parameterClass="map">
		BEGIN
			GIIS_USERS_PKG.app_user := #userId#;
			extract_recapitulation_lss_dtl(TO_DATE(#fromDate#, 'mm-dd-yyyy'), TO_DATE(#toDate#, 'mm-dd-yyyy'));
		END;
	</procedure>
	
	<select id="checkExtractedRecapsVI" parameterClass="map" resultClass="java.lang.String">
		SELECT GIPIS203_PKG.check_extracted_record(#rdoGroup1#, #rdoGroup2#, #moduleId#, #userId#)
		  FROM dual
	</select>
	
	<select id="checkExtractedRecapsVIBeforePrint" parameterClass="map" resultClass="java.lang.String">
		SELECT GIPIS203_PKG.check_record_bef_print(#rdoGroup1#, #rdoGroup2#)
		  FROM dual
	</select>
	
	<!-- benjo 06.01.2015 GENQA AFPGEN_IMPLEM SR 4150 -->
	<parameterMap class="map" id="checkRecapsVIBeforeExtractMap">
		<parameter property="userId"	    jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="fromDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="toDate"		jdbcType="VARCHAR"	javaType="java.lang.String"  mode="IN"/>
		<parameter property="error" 		jdbcType="VARCHAR"	javaType="java.lang.String"	 mode="OUT"/>
		<parameter property="msg" 		    jdbcType="VARCHAR"	javaType="java.lang.String"	 mode="OUT"/>
	</parameterMap>
	
	<procedure id="checkRecapsVIBeforeExtract" parameterMap="checkRecapsVIBeforeExtractMap">
	    BEGIN
			VALIDATE_RECAPSVI_PKG.check_records_recapsvi (?, ?, ?, ?, ?);
		END;
	</procedure>
	<!-- end -->
	
	<resultMap class="GIISRegionClass" id="getGipis203RegionListResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="REGION_CD" 			property="regionCd"/>
		<result column="REGION_DESC"		property="regionDesc"/>
		<result column="IND_GRP_CD" 		property="indGrpCd"/>
		<result column="IND_GRP_NM"			property="indGrpNm"/>
	</resultMap>
	<select id="getGipis203RegionList" resultMap="getGipis203RegionListResultMap" parameterClass="map">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS203_PKG.get_recap_dtl_region_list(#recapDtlType#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="regionDesc">
              					  UPPER(region_desc) LIKE UPPER(#regionDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="indGrpNm">
              					  UPPER(ind_grp_nm) LIKE UPPER(#indGrpNm#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="regionDesc">
									ORDER BY region_desc
								</isEqual>
								<isEqual property="sortColumn" compareValue="indGrpNm">
									ORDER BY ind_grp_nm
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS203_PKG.get_recap_dtl_region_list(#recapDtlType#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="regionDesc">
              					  UPPER(region_desc) LIKE UPPER(#regionDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="indGrpNm">
              					  UPPER(ind_grp_nm) LIKE UPPER(#indGrpNm#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="GIPIPolbasicClass" id="getGipis203RecapDtlListResultMap" extends="BaseEntity.TableGridResultMap">
		<result column="REGION_CD" 			property="regionCd"/>
		<result column="POLICY_ID"			property="policyId"/>
		<result column="POLICY_NO"			property="policyNo"/>
		<result column="CLAIM_ID"			property="claimId"/>
		<result column="CLAIM_NO"			property="claimNo"/>
		<result column="IND_GRP_CD" 		property="indGrpCd"/>
		<result column="ASSD_NO"			property="assdNo"/>
		<result column="ASSD_NAME"			property="assdName"/>
		<result column="PREMIUM_AMT"		property="premiumAmt"/>
		<result column="TOTAL_PREM_AMT"		property="sumPremAmt"/>
		<result column="LOSS_AMT"			property="lossAmt"/>
		<result column="TOTAL_LOSS_AMT"		property="totalLossAmt"/>
	</resultMap>
	<select id="getGipis203RecapPremList" resultMap="getGipis203RecapDtlListResultMap" parameterClass="map">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT aa.*, bb.total total_prem_amt, '' total_loss_amt
							FROM (SELECT * FROM TABLE (GIPIS203_PKG.get_recap_dtl_prem_list(#regionCd#, #indGrpCd#)) ORDER BY policy_no) aa,
								 (SELECT SUM(premium_amt) total FROM TABLE (GIPIS203_PKG.get_recap_dtl_prem_list(#regionCd#, #indGrpCd#))) bb
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premiumAmt">
              					  premium_amt = #premiumAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premiumAmt">
									ORDER BY premium_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS203_PKG.get_recap_dtl_prem_list(#regionCd#, #indGrpCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premiumAmt">
              					  premium_amt = #premiumAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis203RecapLossList" resultMap="getGipis203RecapDtlListResultMap" parameterClass="map">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT aa.*, bb.total total_loss_amt, '' total_prem_amt
							FROM (SELECT * FROM TABLE (GIPIS203_PKG.get_recap_dtl_loss_list(#regionCd#, #indGrpCd#)) ORDER BY policy_no) aa,
								 (SELECT SUM(loss_amt) total FROM TABLE (GIPIS203_PKG.get_recap_dtl_loss_list(#regionCd#, #indGrpCd#))) bb
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="claimNo">
              					  UPPER(claim_no) LIKE UPPER(#claimNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="lossAmt">
              					  loss_amt = #lossAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="claimNo">
									ORDER BY claim_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="lossAmt">
									ORDER BY loss_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS203_PKG.get_recap_dtl_loss_list(#regionCd#, #indGrpCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="claimNo">
              					  UPPER(claim_no) LIKE UPPER(#claimNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="lossAmt">
              					  loss_amt = #lossAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	<!-- end: for GIPIS203 -->
	
	<resultMap class="java.util.HashMap" id="showPackageLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="pack_policy_id" 	property="packPolicyId"/>
		<result column="pack_par_id" 		property="packParId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="ref_pol_no" 		property="refPolNo"/>
		<result column="par_line_cd" 		property="parLineCd"/>
		<result column="par_iss_cd" 		property="parIssCd"/>
		<result column="par_yy" 			property="parYy"/>
		<result column="par_seq_no" 		property="parSeqNo"/>
		<result column="quote_seq_no" 		property="quoteSeqNo"/>
		<!-- SR-19640 : shan 07.09.2015 -->		
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<!-- end SR-19640 -->
		<result column="assd_no" 			property="assdNo"/>
		<result column="assd_name" 			property="assdName"/>
		<result column="pol_flag" 			property="polFlag"/>
		<result column="pol_status" 		property="polStatus"/>
		<result column="line_cd_rn" 		property="lineCdRn"/>
		<result column="iss_cd_rn" 			property="issCdRn"/>
		<result column="rn_yy" 				property="rnYy"/>
		<result column="rn_seq_no" 			property="rnSeqNo"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="issue_date" 		property="issueDate"/>
		<result column="rownum_"			property="rowNum" />
		<result column="count_" 		 	property="rowCount"/>
	</resultMap>
	
	<select id="showPackageLOV" resultMap="showPackageLOVMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE ((GIPIS100A_PKG.get_package_lov(#moduleId#,#userId#,#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#packPolId#)))
							<isNotNull property="findText">
					        	WHERE UPPER(line_cd) LIKE UPPER(#findText#) <!-- SR-19640 : shan 07.09.2015 -->
					        	   OR UPPER(subline_cd) LIKE UPPER(#findText#)
					        	   OR UPPER(iss_cd) LIKE UPPER(#findText#)
					        	   OR issue_yy LIKE #findText#
					        	   OR pol_seq_no LIKE #findText#
					        	   OR renew_no LIKE #findText#
					        	   OR UPPER(par_line_cd) LIKE UPPER(#findText#)
					        	   OR UPPER(par_iss_cd) LIKE UPPER(#findText#)
					        	   OR par_yy LIKE #findText#
					        	   OR par_seq_no LIKE #findText#
					        	   OR quote_seq_no LIKE #findText#
					        	   OR UPPER(endt_iss_cd) LIKE UPPER(#findText#)
					        	   OR endt_yy LIKE #findText#
					        	   OR endt_seq_no LIKE #findText#					        
				         	</isNotNull>
				         	<isNotNull property="sortColumn">
			                  <isEqual property="sortColumn" compareValue="packNo">
				              		ORDER BY line_cd||subline_cd||iss_cd||issue_yy||pol_seq_no||renew_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="parNo">
				              		ORDER BY par_line_cd||par_iss_cd||par_yy||par_seq_no||quote_seq_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="endtNo">
				              		ORDER BY endt_iss_cd||endt_yy||endt_seq_no
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>
                   		  	 ) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS100A_PKG.get_package_lov(#moduleId#,#userId#,#lineCd#,#sublineCd#,#issCd#,#issueYy#,#polSeqNo#,#renewNo#,#packPolId#))
							<isNotNull property="findText">
					        	WHERE UPPER(line_cd) LIKE UPPER(#findText#) <!-- SR-19640 : shan 07.09.2015 -->
					        	   OR UPPER(subline_cd) LIKE UPPER(#findText#)
					        	   OR UPPER(iss_cd) LIKE UPPER(#findText#)
					        	   OR issue_yy LIKE #findText#
					        	   OR pol_seq_no LIKE #findText#
					        	   OR renew_no LIKE #findText#
					        	   OR UPPER(par_line_cd) LIKE UPPER(#findText#)
					        	   OR UPPER(par_iss_cd) LIKE UPPER(#findText#)
					        	   OR par_yy LIKE #findText#
					        	   OR par_seq_no LIKE #findText#
					        	   OR quote_seq_no LIKE #findText#
					        	   OR UPPER(endt_iss_cd) LIKE UPPER(#findText#)
					        	   OR endt_yy LIKE #findText#
					        	   OR endt_seq_no LIKE #findText#
				         	</isNotNull> 
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- added by gab 08.06.2015 -->
	<resultMap class="java.util.HashMap" id="showPackageAssdLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="pack_policy_id" 	property="packPolicyId"/>
		<result column="pack_par_id" 		property="packParId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="ref_pol_no" 		property="refPolNo"/>
		<result column="par_line_cd" 		property="parLineCd"/>
		<result column="par_iss_cd" 		property="parIssCd"/>
		<result column="par_yy" 			property="parYy"/>
		<result column="par_seq_no" 		property="parSeqNo"/>
		<result column="quote_seq_no" 		property="quoteSeqNo"/>
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="assd_no" 			property="assdNo"/>
		<result column="assd_name" 			property="assdName"/>
		<result column="pol_flag" 			property="polFlag"/>
		<result column="pol_status" 		property="polStatus"/>
		<result column="line_cd_rn" 		property="lineCdRn"/>
		<result column="iss_cd_rn" 			property="issCdRn"/>
		<result column="rn_yy" 				property="rnYy"/>
		<result column="rn_seq_no" 			property="rnSeqNo"/>
		<result column="endt_no" 			property="endtNumber"/>
		<result column="policy_no" 			property="policyNumber"/>
		<result column="incept_date" 		property="inceptDate"/>
		<result column="expiry_date" 		property="expiryDate"/>
		<result column="issue_date" 		property="issueDate"/>
		<result column="eff_date" 			property="effDate"/>
		<result column="rownum_"			property="rowNum" />
		<result column="count_" 		 	property="rowCount"/>
	</resultMap>
	
	<select id="showPackageAssdLOV" resultMap="showPackageAssdLOVMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS100A_PKG.get_package_assd_lov(#assdNo#,#assdName#))
							<isNotEmpty property="findText">
					        	WHERE UPPER(assd_no) LIKE UPPER(#findText#)
					        	   OR UPPER(assd_name) LIKE UPPER(#findText#)					        
				         	</isNotEmpty>
				         	<isNotNull property="sortColumn">
			                  <isEqual property="sortColumn" compareValue="assdNo">
				              		ORDER BY assd_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="assdName">
				              		ORDER BY assd_name
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="endtNo">
				              		ORDER BY endt_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="policyNo">
				              		ORDER BY policy_no
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="issueDate">
				              		ORDER BY issue_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="effDate">
				              		ORDER BY eff_date
				              </isEqual>
				              <isEqual property="sortColumn" compareValue="expiryDate">
				              		ORDER BY expiry_date
				              </isEqual>
				          	  <isNotNull property="sortColumn">
				              		<isEqual property="ascDescFlg" compareValue="ASC">
				              			ASC
				              		</isEqual>
				              		<isEqual property="ascDescFlg" compareValue="DESC">
				              			DESC
				              		</isEqual>
				              </isNotNull>
				          </isNotNull>
                   		  	 ) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS100A_PKG.get_package_assd_lov(#assdNo#,#assdName#))
							<isNotEmpty property="findText">
					        	WHERE UPPER(assd_no) LIKE UPPER(#findText#)
					        	   OR UPPER(assd_name) LIKE UPPER(#findText#)
				         	</isNotEmpty> 
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="showPackagePolInfoMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id" 	 		property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="iss_cd" 			property="issCd"/>
		<result column="issue_yy" 			property="issueYy"/>
		<result column="pol_seq_no" 		property="polSeqNo"/>
		<result column="endt_iss_cd" 		property="endtIssCd"/>
		<result column="endt_yy" 			property="endtYy"/>
		<result column="endt_seq_no" 		property="endtSeqNo"/>
		<result column="renew_no" 			property="renewNo"/>
		<result column="pack_policy_id" 	property="packPolicyId"/>
		<result column="par_id" 			property="parId"/>
		<result column="policy_no" 			property="policyNo"/>
	</resultMap>	
	
	<select id="showPackagePolicyInformation" resultMap="showPackagePolInfoMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE ((GIPIS100A_PKG.get_package_pol_info(#packPolId#)))
							<isEqual property="sortColumn" compareValue="policyNo">	
								ORDER BY policy_no
							</isEqual>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS100A_PKG.get_package_pol_info(#packPolId#))
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="showPackagePolItemMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id" 	 		property="policyId"/>
		<result column="line_cd" 			property="lineCd"/>
		<result column="subline_cd" 		property="sublineCd"/>
		<result column="item_no" 			property="itemNo"/>
		<result column="item_title" 		property="itemTitle"/>
		<result column="policy_no" 			property="policyNo"/>
	</resultMap>
	
	<select id="showPackagePolicyItem" resultMap="showPackagePolItemMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE ((GIPIS100A_PKG.get_package_pol_item(#packPolId#)))
							<isNotNull property="filter">
						      WHERE 1=1
              			         <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no = #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">	
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemTitle">
									ORDER BY item_title
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS100A_PKG.get_package_pol_item(#packPolId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no = #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- steven 09.16.2013 - for GIPIS139-->
	<resultMap class="java.util.HashMap" id="lineLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"			property="lineCd" />
		<result column="line_name"			property="lineName" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="sublineLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="subline_cd"			property="sublineCd" />
		<result column="subline_name"		property="sublineName" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="intmLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="intm_no"			property="intmNo" />
		<result column="intm_name"			property="intmName" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis139IntermediaryCommMap" extends="BaseEntity.TableGridResultMap">
		<result column="intm_no"			property="intmNo" />
		<result column="prem_seq_no"		property="premSeqNo" />
		<result column="share_percentage"	property="sharePercent" />
		<result column="commission_amt"		property="commAmt" />
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="iss_cd"				property="issCd" />
		<result column="pol_seq_no"			property="polSeqNo" />
		<result column="renew_no"			property="renewNo" />
		<result column="endt_iss_cd"		property="endtIssCd" />
		<result column="endt_yy"			property="endtYy" />
		<result column="endt_seq_no"		property="endtSeqNo" />
		<result column="eff_date"			property="effDate" />
		<result column="assd_no"			property="assdNo" />
		<result column="policy_id"			property="policyId" />
		<result column="policy_no"			property="policyNo" />
		<result column="invoice_no"			property="invoiceNo" />
		<result column="assured_name"		property="assuredName" />
		<result column="cred_branch"		property="credBranch" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis139PerilDetailMap" extends="BaseEntity.TableGridResultMap">
		<result column="peril_name"			property="perilName" />
		<result column="peril_cd"			property="perilCd" />
		<result column="premium_amt"		property="premAmt" />
		<result column="commission_amt"		property="commAmt" />
		<result column="commission_rt"		property="commRt" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis139CommDetailMap" extends="BaseEntity.TableGridResultMap">
		<result column="peril_name"				property="perilName" />
		<result column="peril_cd"				property="perilCd" />
		<result column="parent_comm_rt"			property="parentCommRt" />
		<result column="parent_comm_amt"		property="parentCommAmt" />
		<result column="child_comm_rt"			property="childCommRt" />
		<result column="child_comm_amt"			property="childCommAmt" />
		<result column="total_parent_comm_rt"	property="totalParentCommRt" />
		<result column="total_parent_comm_amt"	property="totalParentCommAmt" />
		<result column="total_child_comm_rt"	property="totalChildCommRt" />
		<result column="total_child_comm_amt"	property="totalChildCommAmt" />
	</resultMap>
	
	<select id="showGipis139SublineLOV" resultMap="sublineLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (gipis139_pkg.get_subline_lov (#lineCd#))
						 <isNotNull property="findText">
							WHERE (UPPER(subline_cd) LIKE UPPER(#findText#)
							OR UPPER(subline_name) LIKE UPPER(#findText#))
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(subline_cd) LIKE UPPER(#findText2#)
							OR UPPER(subline_name) LIKE UPPER(#findText2#))
						 </isNull>
                         <isEqual property="sortColumn" compareValue="sublineCd">
                                ORDER BY subline_cd
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="sublineName">
                                ORDER BY subline_name
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual> 
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                         </isNotNull> 
		  		   		) a,
		          	   (SELECT count(*) count_ 
		  		   		  FROM TABLE (gipis139_pkg.get_subline_lov (#lineCd#))
	  		   		     <isNotNull property="findText">
							WHERE (UPPER(subline_cd) LIKE UPPER(#findText#)
							OR UPPER(subline_name) LIKE UPPER(#findText#))
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(subline_cd) LIKE UPPER(#findText2#)
							OR UPPER(subline_name) LIKE UPPER(#findText2#))
						 </isNull>
		  		   		) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="showGipis139LineLOV" resultMap="lineLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (gipis139_pkg.get_line_lov (#userId#,#moduleId#))
						 <isNotNull property="findText">
							WHERE (UPPER(line_cd) LIKE UPPER(#findText#)
							OR UPPER(line_name) LIKE UPPER(#findText#))
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(line_cd) LIKE UPPER(#findText2#)
							OR UPPER(line_name) LIKE UPPER(#findText2#))
						 </isNull>
                         <isEqual property="sortColumn" compareValue="lineCd">
                                ORDER BY line_cd
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="lineName">
                                ORDER BY line_name
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual> 
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                         </isNotNull> 
		  		   		) a,
		          	   (SELECT count(*) count_ 
		  		   		  FROM TABLE (gipis139_pkg.get_line_lov (#userId#,#moduleId#))
	  		   		     <isNotNull property="findText">
							WHERE (UPPER(line_cd) LIKE UPPER(#findText#)
							OR UPPER(line_name) LIKE UPPER(#findText#))
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(line_cd) LIKE UPPER(#findText2#)
							OR UPPER(line_name) LIKE UPPER(#findText2#))
						 </isNull>
		  		   		) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="showGipis139IntmLOV" resultMap="intmLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		  FROM TABLE (gipis139_pkg.get_intermediary_lov)
						 <isNotNull property="findText">
							WHERE (LTRIM(intm_no,0) LIKE LTRIM(#findText#,0)
							OR UPPER(intm_name) LIKE UPPER(#findText#))
						 </isNotNull>
						 <isNull property="findText">
							WHERE (LTRIM(intm_no,0) LIKE LTRIM(#findText2#,0)
							OR UPPER(intm_name) LIKE UPPER(#findText2#))
						 </isNull>
                         <isEqual property="sortColumn" compareValue="intmNo">
                                ORDER BY intm_no
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="intmName">
                                ORDER BY intm_name
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual> 
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                         </isNotNull> 
		  		   		) a,
		          	   (SELECT count(*) count_ 
		  		   		  FROM TABLE (gipis139_pkg.get_intermediary_lov)
	  		   		     <isNotNull property="findText">
							WHERE (LTRIM(intm_no,0) LIKE LTRIM(#findText#,0)
							OR UPPER(intm_name) LIKE UPPER(#findText#))
						 </isNotNull>
						 <isNull property="findText">
							WHERE (LTRIM(intm_no,0) LIKE LTRIM(#findText2#,0)
							OR UPPER(intm_name) LIKE UPPER(#findText2#))
						 </isNull>
		  		   		) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis139IntermediaryComm" resultMap="gipis139IntermediaryCommMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis139_pkg.get_intermediary_comm (#intmNo#,#lineCd#,#sublineCd#,#credBranch#,#userId#,#moduleId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assuredName">
              					  UPPER(assured_name) LIKE UPPER(#assuredName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="invoiceNo">
              					  UPPER(invoice_no) LIKE UPPER(#invoiceNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="sharePercent">
              					  share_percentage = #sharePercent#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="commAmt">
              					  commission_amt = #commAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="assuredName">
									ORDER BY assured_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="invoiceNo">
									ORDER BY invoice_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="sharePercent">
									ORDER BY share_percentage
								</isEqual>
								<isEqual property="sortColumn" compareValue="commAmt">
									ORDER BY commission_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis139_pkg.get_intermediary_comm (#intmNo#,#lineCd#,#sublineCd#,#credBranch#,#userId#,#moduleId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assuredName">
              					  UPPER(assured_name) LIKE UPPER(#assuredName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="invoiceNo">
              					  UPPER(invoice_no) LIKE UPPER(#invoiceNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="sharePercent">
              					  share_percentage = #sharePercent#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="commAmt">
              					  commission_amt = #commAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis139PerilDetail" resultMap="gipis139PerilDetailMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis139_pkg.get_peril_detail (#intmNo#,#issCd#,#premSeqNo#,#policyId#,#lineCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premAmt">
              					  premium_amt = #premAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="commAmt">
              					  commission_amt = #commAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premAmt">
									ORDER BY premium_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="commAmt">
									ORDER BY commission_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis139_pkg.get_peril_detail (#intmNo#,#issCd#,#premSeqNo#,#policyId#,#lineCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premAmt">
              					  premium_amt = #premAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="commAmt">
              					  commission_amt = #commAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis139CommDetail" resultMap="gipis139CommDetailMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*,
						 c.total_parent_comm_rt,
						 c.total_parent_comm_amt,
						 c.total_child_comm_rt,
						 c.total_child_comm_amt
					FROM (SELECT *
							FROM TABLE (gipis139_pkg.get_comm_detail (#intmNo#,#issCd#,#premSeqNo#,#policyId#,#lineCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="parentCommRt">
              					  parent_comm_rt = #parentCommRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="parentCommAmt">
              					  parent_comm_amt = #parentCommAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="childCommRt">
              					  child_comm_rt = #childCommRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="childCommAmt">
              					  child_comm_amt = #childCommAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="parentCommRt">
									ORDER BY parent_comm_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="parentCommAmt">
									ORDER BY parent_comm_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="childCommRt">
									ORDER BY child_comm_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="childCommAmt">
									ORDER BY child_comm_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis139_pkg.get_comm_detail (#intmNo#,#issCd#,#premSeqNo#,#policyId#,#lineCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="parentCommRt">
              					  parent_comm_rt = #parentCommRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="parentCommAmt">
              					  parent_comm_amt = #parentCommAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="childCommRt">
              					  child_comm_rt = #childCommRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="childCommAmt">
              					  child_comm_amt = #childCommAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b,
						   (SELECT SUM (parent_comm_rt) total_parent_comm_rt,
							       SUM (parent_comm_amt) total_parent_comm_amt,
							       SUM (child_comm_rt) total_child_comm_rt,
							       SUM (child_comm_amt) total_child_comm_amt
							  FROM TABLE (gipis139_pkg.get_comm_detail (#intmNo#,#issCd#,#premSeqNo#,#policyId#,#lineCd#))
							  )c)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<!-- end of GIPIS139 -->
	<resultMap class="java.util.HashMap" id="getMotorCarInquiryRecordsMap" extends="BaseEntity.TableGridResultMap">
		<result column="plate_no" 				property="plateNo"/>
		<result column="assignee" 				property="assignee"/>
		<result column="model_year" 			property="modelYear"/>
		<result column="make" 					property="make"/>
		<result column="mot_type" 				property="motType"/>
		<result column="repair_lim" 			property="reapairLim"/>
		<result column="color" 					property="color"/>
		<result column="coc_seq_no" 			property="cocSeqNo"/>
		<result column="serial_no" 				property="serialNo"/>
		<result column="motor_no" 				property="motorNo"/>
		<result column="policy_id" 				property="policyId"/>
		<result column="item_no" 				property="itemNo"/>
		<result column="subline_cd" 			property="sublineCd"/>
		<result column="subline_type_cd" 		property="sublinetypeCd"/>
		<result column="acquired_from" 			property="acquiredFrom"/>
		<result column="series_cd" 				property="seriescd"/>
		<result column="type_of_body_cd" 		property="typeOfBodyCd"/>
		<result column="basic_color_cd" 		property="basicColorCd"/>
		<result column="mv_file_no" 			property="mvFileNo"/>
		<result column="coc_serial_no" 			property="cocSerialNo"/>
		<result column="coc_yy" 				property="cocYy"/>
		<result column="car_company_cd" 		property="carCompanyCd"/>
		<result column="no_of_pass" 			property="noOfPass"/>
		<result column="dsp_engine_series"		property="dspEngineSeries"/>
		<result column="dsp_type_of_body" 		property="dspTypeOfBody"/>
		<result column="dsp_subline_type" 		property="dspSublineType"/>
		<result column="dsp_mot_type_desc" 		property="dspMotTypeDesc"/>
		<result column="dsp_basic_color" 		property="dspBasicColor"/>
		<result column="dsp_car_company" 		property="dspCarCompany"/>
		<result column="nbt_incept_date" 		property="nbtInceptDate"/>
		<result column="nbt_eff_date" 			property="nbtEffDate"/>
		<result column="nbt_issue_date" 		property="nbIssueDate"/>
		<result column="item_title" 			property="itemTitle"/>
		<result column="from_date" 				property="fromDate"/>
		<result column="to_date" 				property="toDate"/>
		<result column="ann_prem_amt" 			property="annPremAmt"/>
		<result column="ann_tsi_amt" 			property="annTsiAmt"/>
		<result column="policy_no" 				property="policyNo"/>
		<result column="endt_no" 				property="endtNo"/>
		<result column="assured" 				property="assured"/>
		<result column="paid_tag" 				property="piadTag"/>
		<result column="claim_tag" 				property="claimTag"/>
		<result column="cred_branch" 			property="credBranch"/>
	</resultMap>
	
	<select id="getMotorCarInquiryRecords" resultMap="getMotorCarInquiryRecordsMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (select * from table(GIPIS116_PKG.GET_MOTOR_CAR_INQUIRY_RECORDS(#credBranch#, #searchBy#, #asOfDate#, #fromDate#, #toDate#, #userId#, #policyId#, #itemNo#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="plateNo">
									upper(plate_no) = upper(#plateNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="modelYear">
									upper(model_year) = upper(#modelYear#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="make">
									upper(make) = upper(#make#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dspEngineSeries">
									UPPER(dsp_engine_series) = UPPER(#dspEngineSeries#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="serialNo">
									UPPER(serial_no) = UPPER(#serialNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="motorNo">
									UPPER(motor_no) = UPPER(#motorNo#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="plateNo">
		              		ORDER BY plate_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="modelYear">
		              		ORDER BY model_year
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="make">
		              		ORDER BY make
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="dspEngineSeries">
		              		ORDER BY dsp_engine_series
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="serialNo">
		              		ORDER BY serial_no
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="motorNo">
		              		ORDER BY motor_no
			            </isEqual>	
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (GIPIS116_PKG.GET_MOTOR_CAR_INQUIRY_RECORDS(#credBranch#, #searchBy#, #asOfDate#, #fromDate#, #toDate#, #userId#, #policyId#, #itemNo#))
		                 <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="plateNo">
									upper(plate_no) = upper(#plateNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="modelYear">
									upper(model_year) = upper(#modelYear#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="make">
									upper(make) = upper(#make#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dspEngineSeries">
									UPPER(dsp_engine_series) = UPPER(#dspEngineSeries#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="serialNo">
									UPPER(serial_no) = UPPER(#serialNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="motorNo">
									UPPER(motor_no) = UPPER(#motorNo#)
								</isNotEmpty>
						</isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<resultMap id="gipis175PolicyLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyId" 		column="policy_id" />
	    <result property="lineCd" 		column="line_cd" />
	    <result property="sublineCd" 		column="subline_cd" />
	    <result property="issCd" 		column="iss_cd" />
	    <result property="issueYy" 		column="issue_yy" />
	    <result property="polSeqNo" 		column="pol_seq_no" />
	    <result property="renewNo" 		column="renew_no" />
	    <result property="parId" 		column="par_id" />
	    <result property="polFlag" 		column="pol_flag" />
	    <result property="packPolFlag" 		column="pack_pol_flag" />
	    <result property="coInsuranceSw" 		column="co_insurance_sw" />
	    <result property="expiryDate" 		column="expiry_date" />
	    <result property="acctEntDate" 		column="acct_ent_date" />
	    <result property="assdNo" 		column="assd_no" />
	    <result property="prorateFlag" 		column="prorate_flag" />
	    <result property="shortRtPercent" 		column="short_rt_percent" />
	    <result property="provPremPct" 		column="prov_prem_pct" />
	    <result property="endtIssCd" 		column="endt_iss_cd" />
	    <result property="endtYy" 		column="endt_yy" />
	    <result property="endtSeqNo" 		column="endt_seq_no" />
	    <result property="assdName" 		column="assd_name" />
	    <result property="nbtInceptDate" 		column="nbt_incept_date" />
	    <result property="nbtEffDate" 		column="nbt_eff_date" />
	    <result property="nbtAcctEntDate" 		column="nbt_acct_ent_date" />
	    <result property="nbtExpiryDate" 		column="nbt_expiry_date" />
	    <result property="nbtIssueDate" 		column="nbt_issue_date" />
	    <result property="nbtBookingMth" 		column="nbt_booking_mth" />
	    <result property="nbtBookingYear" 		column="nbt_booking_year" />
	    <result property="nbtCedingCompany" 		column="nbt_ceding_company" />
	    <result property="updatableSw" 		column="updatable_sw" />
	    <result property="oldRiCommVat" 		column="old_ri_comm_vat" />
	    <result property="prevRiCommAmt" 		column="prev_ri_comm_amt" />
	    <result property="v480PolicyId" 		column="v480_policy_id" />
	    <result property="v480ItemNo" 		column="v480_item_no" />
	    <result property="v480RiCommAmt" 		column="v480_ri_comm_amt" />
	    <result property="v480RiCommVat" 		column="v480_ri_comm_vat" />
	    <result property="vIssCd" 		column="v_iss_cd" />
	    <result property="branchCd" 		column="branch_cd" />
	    <result property="fundCd" 		column="fund_cd" />
	    <result property="riCd" 		column="ri_cd" />
	    <result property="inputVatRate" 		column="input_vat_rate" />
	</resultMap>
	
	<select id="getGIPIS175PolicyLOV" resultMap="gipis175PolicyLOVResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis175_pkg.get_policy_lov(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #assdName#))
							<!-- <isNotNull property="filter">
								WHERE 1 = 1 
									<isNotEmpty prepend="AND" property="sublineCd">
										UPPER(subline_cd) LIKE upper(#sublineCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="issCd">
										UPPER(iss_cd) LIKE upper(#issCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="issueYy">
										issue_yy = #issueYy#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="polSeqNo">
										pol_seq_no = #polSeqNo#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="renewNo">
										renew_no = #renewNo#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtIssCd">
										UPPER(endt_iss_cd) LIKE UPPER(#endtIssCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtYy">
										endt_yy = #endtYy#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtSeqNo">
										endt_seq_no = #"endtSeqNo"#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="assdName">
										UPPER(assd_name) LIKE upper(#"assdName"#)
									</isNotEmpty>
							</isNotNull> -->
							<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY line_cd, subline_cd, iss_cd, issue_yy, pol_seq_no, renew_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="endorsementNo">
								ORDER BY endt_iss_cd, endt_yy, endt_seq_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="assdName">
								ORDER BY assd_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis175_pkg.get_policy_lov(#userId#, #lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtIssCd#, #endtYy#, #endtSeqNo#, #assdName#))
						   <!-- <isNotNull property="filter">
								WHERE 1 = 1 
									<isNotEmpty prepend="AND" property="sublineCd">
										UPPER(subline_cd) LIKE upper(#sublineCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="issCd">
										UPPER(iss_cd) LIKE upper(#issCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="issueYy">
										issue_yy = #issueYy#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="polSeqNo">
										pol_seq_no = #polSeqNo#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="renewNo">
										renew_no = #renewNo#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtIssCd">
										UPPER(endt_iss_cd) LIKE UPPER(#endtIssCd#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtYy">
										endt_yy = #endtYy#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtSeqNo">
										endt_seq_no = #"endtSeqNo"#
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="assdName">
										UPPER(assd_name) LIKE upper(#"assdName"#)
									</isNotEmpty>
							</isNotNull> -->
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap id="gipis175PreCommitParamMap" class="map">
	    <parameter property="policyId"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="itemGrp"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="premSeqNo"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="premAmt"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="prevRiCommAmt"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="taxAmt"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="gipis175PreCommit" parameterMap="gipis175PreCommitParamMap">
			CALL GIPIS175_PKG.pre_commit(?, ?, ?, ?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="gipis175PopRiCommVatParamMap">
		<parameter property="userId"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="policyId"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="sumCommAmt"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="riCommVat"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="riCommRate"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="riCommAmt"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="itemNo"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="perilCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="coInsuranceSw"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="itemGrp"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	</parameterMap>
	
	<procedure id="gipis175PopRiCommVat" parameterMap="gipis175PopRiCommVatParamMap">
		BEGIN
			giis_users_pkg.app_user := ?;
		  	GIPIS175_PKG.pop_ri_comm_vat(?, ?, ?, ?, ?, ?, ?, ?, ?);
        END;                                     
	</procedure>
	
	
	<!-- for GIPIS209 -->
	<resultMap class="java.util.HashMap" id="showViewExposuresPerPAEnrolleesMap" extends="BaseEntity.TableGridResultMap">
		<result column="CURRENCY_RT_CHK" 				property="currencyRtChk"/>
		<result column="POLICY_ID"		 				property="policyId"/>
		<result column="LINE_CD" 						property="lineCd"/>
		<result column="SUBLINE_CD" 					property="sublineCd"/>
		<result column="ISS_CD"			 				property="issCd"/>
		<result column="ISSUE_YY" 						property="issueYy"/>
		<result column="POL_SEQ_NO" 					property="polSeqNo"/>
		<result column="RENEW_NO" 						property="renewNo"/>
		<result column="ENDT_ISS_CD" 					property="endtIssCd"/>
		<result column="ENDT_YY" 						property="endtYy"/>
		<result column="ENDT_SEQ_NO"	 				property="endtSeqNo"/>
		<result column="ITEM" 							property="item"/>
		<result column="TSI_AMT_ORIG" 					property="tsiAmtOrig"/>
		<result column="TSI_AMT" 						property="tsiAmt"/>
		<result column="PREM_AMT_ORIG" 					property="premAmtOrig"/>
		<result column="PREM_AMT" 						property="premAmt"/>
		<result column="ASSD_NO" 						property="assdNo"/>
		<result column="ASSD_NAME" 						property="assdName"/>
		<result column="INCEPT_DATE" 					property="inceptDate"/>
		<result column="ISSUE_DATE" 					property="issueDate"/>
		<result column="EXPIRY_DATE" 					property="expiryDate"/>
		<result column="EFF_DATE" 						property="effDate"/>
		<result column="POLICY_NO" 						property="policyNo"/>
		<result column="ENDT_NO" 						property="endtNo"/>		
	</resultMap>
	<select id="showViewExposuresPerPAEnrollees" resultMap="showViewExposuresPerPAEnrolleesMap" parameterClass="map">
		  <!-- Added by MarkS MarkS 12.1.2016 SR5863 optimization -->
		  SELECT * FROM TABLE(GIPI_POLBASIC_PKG.get_exposure_list(#searchBy#, 
		  														  #searchDate#, 
		  														  #asOfDate#, 
		  														  #fromDate#, 
		  														  #toDate#,
		  														  #sortColumn#,
															      #ascDescFlg#,
															      #from#,
															      #to#,
															      #filter.policyNo#,
															      #filter.endtNo#,
															      #filter.item#,
															      #filter.tsiAmtOrig#,
															      #filter.premAmtOrig#
		  														  )
		  					  )
		  <!-- commented out by MarkS 12.1.2016 SR5863 -->
		  <!-- SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE(GIPI_POLBASIC_PKG.get_exposure_list(#searchBy#, #searchDate#, #asOfDate#, #fromDate#, #toDate#))
						   WHERE 1=1
						    	<isNotNull property="filter">
						            <isNotEmpty prepend="AND" property="policyNo">
	             					  UPPER(line_cd || '-' || subline_cd || '-' || iss_cd || '-' || LPAD(issue_yy, 2, 0) || '-' || LPAD(pol_seq_no, 7, 0) || '-' || LPAD (renew_no, 2, 0))
	             					  	LIKE 
	             					  REPLACE(UPPER(#policyNo#), ' ', '')	             					  
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="endtNo">
	             					  UPPER(endt_iss_cd || '-' || LPAD(endt_yy, 2, 0) || '-' || LPAD(endt_seq_no, 7, 0))
	             					  	LIKE
	             					  REPLACE(UPPER(#endtNo#), ' ', '')  
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="item">
	             					  UPPER(item) LIKE UPPER(#item#)
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="tsiAmtOrig">
	             					  tsi_amt_orig = #tsiAmtOrig#
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="premAmtOrig">
	             					  prem_amt_orig = #premAmtOrig#
	             			        </isNotEmpty>
	                  		  	</isNotNull>
	                  		  	<isNotNull property="sortColumn">
	                  		  		<isEqual property="sortColumn" compareValue="currencyRtChk">
										ORDER BY currency_rt_chk
									</isEqual>
									<isEqual property="sortColumn" compareValue="lineCd sublineCd issCd issueYy polSeqNo renewNo">
										ORDER BY policy_no
									</isEqual>
									<isEqual property="sortColumn" compareValue="endtIssCd endtYy endtSeqNo">
										ORDER BY endt_no
									</isEqual>
									<isEqual property="sortColumn" compareValue="item">
										ORDER BY item
									</isEqual>
									<isEqual property="sortColumn" compareValue="tsiAmtOrig">
										ORDER BY tsi_amt_orig
									</isEqual>
									<isEqual property="sortColumn" compareValue="premAmtOrig">
										ORDER BY prem_amt_orig
									</isEqual>
									<isEqual property="ascDescFlg" compareValue="ASC">
										ASC
									</isEqual>
									<isEqual property="ascDescFlg" compareValue="DESC">
										DESC
									</isEqual>
								</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE(GIPI_POLBASIC_PKG.get_exposure_list(#searchBy#, #searchDate#, #asOfDate#, #fromDate#, #toDate#))
						  WHERE 1=1
								<isNotNull property="filter">
						            <isNotEmpty prepend="AND" property="policyNo">
	             					  UPPER(line_cd || '-' || subline_cd || '-' || iss_cd || '-' || LPAD(issue_yy, 2, 0) || '-' || LPAD(pol_seq_no, 7, 0) || '-' || LPAD (renew_no, 2, 0))
	             					  	LIKE 
	             					  REPLACE(UPPER(#policyNo#), ' ', '')	             					  
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="endtNo">
	             					  UPPER(endt_iss_cd || '-' || LPAD(endt_yy, 2, 0) || '-' || LPAD(endt_seq_no, 7, 0))
	             					  	LIKE
	             					  REPLACE(UPPER(#endtNo#), ' ', '')  
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="item">
	             					  UPPER(item) LIKE UPPER(#item#)
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="tsiAmtOrig">
	             					  tsi_amt_orig = #tsiAmtOrig#
	             			        </isNotEmpty>
	             			        <isNotEmpty prepend="AND" property="premAmtOrig">
	             					  prem_amt_orig = #premAmtOrig#
	             			        </isNotEmpty>
	                  		  	</isNotNull>	                  		  	
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to# -->
	</select>
<!--Gzelle 09.26.2013-->
	<resultMap class="java.util.HashMap" id="getUserInformationListMap" extends="BaseEntity.TableGridResultMap">
		<result property="activeFlag"	 column="active_flag"/>
		<result property="commUpdateTag" column="comm_update_tag"/>
		<result property="allUserSw" 	 column="all_user_sw"/>
		<result property="mgrSw" 		 column="mgr_sw"/>
		<result property="userId" 		 column="user_id"/>
		<result property="userName" 	 column="user_name"/>
		<result property="userGrp"  	 column="user_grp"/>
		<result property="userGrpDesc"	 column="user_grp_desc"/>
		<result property="grpIssCd"		 column="grp_iss_cd"/>
		<result property="lastUpdate" 	 column="last_update"/>
		<result property="lastUserId"	 column="last_user_id"/>
		<result property="remarks"		 column="remarks"/>
	</resultMap>

	<resultMap class="java.util.HashMap" id="getTranMap" extends="BaseEntity.TableGridResultMap">
		<result property="tranUserId"	column="tran_hdr_user_id"/>
		<result property="tranCd"		column="tran_cd"/>
		<result property="tranDesc" 	column="tran_desc"/>
		<result property="incAllTag"	column="inc_all_tag"/>
	</resultMap>
	
	<parameterMap class="map" id="gipis175UpdateV490ParamMap">
		<parameter property="coInsuranceSw"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="policyId"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="itemNo"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<!-- <parameter property="perilCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="riCommRate"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/> -->
		<parameter property="itemGrp"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="premSeqNo"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="issCd"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>	
	</parameterMap>
	
	<procedure id="gipis175UpdateV490" parameterMap="gipis175UpdateV490ParamMap">	
		CALL GIPIS175_PKG.update_v490(?, ?, ?, ?, ?, ?)                                
	</procedure>
	
	<parameterMap class="map" id="gipis175UpdateGIPIInvoiceParamMap">
		<parameter property="policyId"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="itemGrp"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="sumRiCommVat"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="sumRiCommAmt"	jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>	
	</parameterMap>
	
	<procedure id="gipis175UpdateGIPIInvoice" parameterMap="gipis175UpdateGIPIInvoiceParamMap">	
		CALL GIPIS175_PKG.update_gipi_invoice(?, ?, ?, ?)
	</procedure>
	
	<parameterMap class="map" id="gipis175PostCommitParamMap">
		<parameter property="policyId"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="itemGrp"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="issCd"				jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="premSeqNo"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="branchCd"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="lineCd"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="riCd"				jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="prevRiCommAmt"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="oldRiCommVat"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/> 
		<parameter property="revTranId"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="sumRiCommVat"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="newTranId"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
		<parameter property="sumRiCommAmt"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="acctEntDate"		jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<procedure id="gipis175PostCommit" parameterMap="gipis175PostCommitParamMap">	
		CALL GIPIS175_PKG.post_commit(?, ?, ?, ?, ?,
									  ?, ?, ?, ?, ?,
									  ?, ?, ?, ?,?)                                
	</procedure>
<!-- GIPIS155 : shan 09.27.2013 -->
	<resultMap class="java.util.HashMap" id="gipis155PolicyDetailsMap" extends="BaseEntity.TableGridResultMap">
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="PAR_ID" 			property="parId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="DSP_ENDT_ISS_CD" 	property="dspEndtIssCd"/>
		<result column="DSP_ENDT_YY" 		property="dspEndtYy"/>
		<result column="DSP_ENDT_SEQ_NO" 	property="dspEndtSeqNo"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ASSD_NAME" 			property="assdName"/>
	</resultMap>
	
	<select id="getGipis155PolicyListing" resultMap="gipis155PolicyDetailsMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT * FROM TABLE(GIPI_POLBASIC_PKG.GET_POLBASIC_LIST_GIPIS155(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#,
		  		  								#renewNo#, #dspEndtIssCd#, #dspEndtYy#, #dspEndtSeqNo#, #assdName#, #moduleId#, #userId#))
						 <isNotNull property="sortColumn">
  		     	   		  		<isEqual property="sortColumn" compareValue="policyNo">
  		     	   		  			ORDER BY line_cd, subline_cd, iss_cd, issue_yy, pol_seq_no, renew_no
  		     	   		  		</isEqual>  		     	   		  		
  		     	   		  		<isEqual property="sortColumn" compareValue="endorsementNo">
  		     	   		  			ORDER BY dsp_endt_iss_cd, dsp_endt_yy, dsp_endt_seq_no
  		     	   		  		</isEqual>
  		     	   		  		<isEqual property="sortColumn" compareValue="assdName">
  		     	   		  			ORDER BY assd_name
  		     	   		  		</isEqual>						 
						 		<isEqual property="ascDescFlg" compareValue="ASC">
	  		     	   		  		ASC
	  		     	   		  	</isEqual>
	  		     	   		  	<isEqual property="ascDescFlg" compareValue="DESC">
	  		     	   		  		DESC
	  		     	   		  	</isEqual>
  		     	   		  </isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_ FROM TABLE(GIPI_POLBASIC_PKG.GET_POLBASIC_LIST_GIPIS155(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#,
		  		  											#renewNo#, #dspEndtIssCd#, #dspEndtYy#, #dspEndtSeqNo#, #assdName#, #moduleId#, #userId#))
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
<!-- GIPIS155 end -->

	<!-- start of GIPIS111; by steven 09.24.2013 -->
	<resultMap class="java.util.HashMap" id="gipis111GiisCaLocationMap" extends="BaseEntity.TableGridResultMap">
		<result column="location_cd"		property="locationCd" />
		<result column="location_desc"		property="locationDesc" />
		<result column="from_date"			property="fromDate" />
		<result column="to_date"			property="toDate" />
		<result column="dsp_from_date"		property="dspFromDate" />
		<result column="dsp_to_date"		property="dspToDate" />
		<result column="dsp_from_date2"		property="dspFromDate2" />
		<result column="dsp_to_date2"		property="dspToDate2" />
		<result column="ret_limit"			property="retLimit" />
		<result column="treaty_limit"		property="treatyLimit" />
		<result column="remarks"			property="remarks" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis111GiisCaLocationDtlMap" extends="BaseEntity.TableGridResultMap">
		<result column="dsp_beg_bal"		property="dspBegBal" />
		<result column="dsp_actual"			property="dspActual" />
		<result column="dsp_temp"			property="dspTemp" />
		<result column="dsp_sum"			property="dspSum" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis111ActualExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd"				property="issCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="pol_seq_no"			property="polSeqNo" />
		<result column="renew_no"			property="renewNo" />
		<result column="policy_id"			property="policyId" />
		<result column="item_no"			property="itemNo" />
		<result column="item_title"			property="itemTitle" />
		<result column="eff_date"			property="effDate" />
		<result column="expiry_date"		property="expiryDate" />
		<result column="endt_expiry_date"	property="endtExpiryDate" />
		<result column="peril_cd"			property="perilCd" />
		<result column="location_cd"		property="locationCd" />
		<result column="dist_tsi"			property="distTsi" />
		<result column="assd_name"			property="assdName" />
		<result column="dist_flag"			property="distFlag" />
		<result column="incept_date"		property="inceptDate" />
		<result column="peril_name"			property="perilName" />
		<result column="prem_rt"			property="premRt" />
		<result column="policy_no"			property="policyNo" />
		<result column="ann_tsi_amt"		property="annTsiAmt" />
		<result column="max_expiry"			property="maxExpiry" />
		<result column="dsp_max_expiry"		property="dspMaxExpiry" />
		<result column="expired"			property="expired" />
		<result column="not_yet_eff"		property="notYetEff" />
		<result column="dist_stat"			property="distStat" />
		<result column="claim_exists"		property="claimExists" />
		<result column="claim_id"			property="claimId" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis111TemporaryExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="par_no"				property="parNo" />
		<result column="par_id"				property="parId" />
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd"				property="issCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="pol_seq_no"			property="polSeqNo" />
		<result column="renew_no"			property="renewNo" />
		<result column="par_yy"				property="parYy" />
		<result column="par_seq_no"			property="parSeqNo" />
		<result column="quote_seq_no"		property="quoteSeqNo" />
		<result column="item_no"			property="itemNo" />
		<result column="item_title"			property="itemTitle" />
		<result column="location_cd"		property="locationCd" />
		<result column="peril_cd"			property="perilCd" />
		<result column="peril_name"			property="perilName" />
		<result column="eff_date"			property="effDate" />
		<result column="expiry_date"		property="expiryDate" />
		<result column="dist_tsi"			property="distTsi" />
		<result column="assd_name"			property="assdName" />
		<result column="ann_tsi_amt"		property="annTsiAmt" />
		<result column="dist_flag"			property="distFlag" />
		<result column="incept_date"		property="inceptDate" />
		<result column="prem_rt"			property="premRt" />
		<result column="max_expiry"			property="maxExpiry" />
		<result column="dsp_max_expiry"		property="dspMaxExpiry" />
		<result column="expired"			property="expired" />
		<result column="not_yet_eff"		property="notYetEff" />
		<result column="dist_stat"			property="distStat" />
		<result column="claim_exists"		property="claimExists" />
		<result column="claim_id"			property="claimId" />
	</resultMap>
	
	<select id="getGipis111GiisCaLocation" resultMap="gipis111GiisCaLocationMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis111_pkg.get_giis_ca_location (#enterQuery#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="locationCd">
              					  UPPER(location_cd) LIKE UPPER(#locationCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="locationDesc">
              					  UPPER(location_desc) LIKE UPPER(#locationDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspFromDate">
              					  TRUNC(from_date) = #dspFromDate#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="dspToDate">
              					  TRUNC(to_date) LIKE #dspToDate#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="retLimit">
              					  UPPER(ret_limit) LIKE UPPER(#retLimit#)
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="treatyLimit">
              					  UPPER(treaty_limit) LIKE UPPER(#treatyLimit#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="locationCd">
									ORDER BY location_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="locationDesc">
									ORDER BY location_desc
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspFromDate">
									ORDER BY from_date
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspToDate">
									ORDER BY to_date
								</isEqual>
								<isEqual property="sortColumn" compareValue="retLimit">
									ORDER BY ret_limit
								</isEqual>
								<isEqual property="sortColumn" compareValue="treatyLimit">
									ORDER BY treaty_limit
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis111_pkg.get_giis_ca_location (#enterQuery#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="locationCd">
              					  UPPER(location_cd) LIKE UPPER(#locationCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="locationDesc">
              					  UPPER(location_desc) LIKE UPPER(#locationDesc#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspFromDate">
              					  TRUNC(from_date) = #dspFromDate#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="dspToDate">
              					  TRUNC(to_date) LIKE #dspToDate#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="retLimit">
              					  UPPER(ret_limit) LIKE UPPER(#retLimit#)
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="treatyLimit">
              					  UPPER(treaty_limit) LIKE UPPER(#treatyLimit#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="extractCasualtyAccum">
		CALL casualty_accum.EXTRACT (#locationCd#, #busType#)
	</procedure>
	
	<select id="getGipis111GiisCaLocationDtl" resultMap="gipis111GiisCaLocationDtlMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis111_pkg.get_giis_ca_location_dtl (#locationCd#,#excludeExpired#,#excludeNotEff#))) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis111_pkg.get_giis_ca_location_dtl (#locationCd#,#excludeExpired#,#excludeNotEff#))) b)
	</select>
	
	<select id="getGipis111ActualExposure" resultMap="gipis111ActualExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis111_pkg.get_actual_exposure (#locationCd#,#excludeExpired#,#excludeNotEff#,#mode#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="distStat">
              					  UPPER(dist_stat) LIKE UPPER(#distStat#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry = #dspMaxExpiry#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemTitle">
									ORDER BY item_title
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premRt">
									ORDER BY prem_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="annTsiAmt">
									ORDER BY ann_tsi_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="distTsi">
									ORDER BY dist_tsi
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="distStat">
									ORDER BY dist_stat
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspMaxExpiry">
									ORDER BY dsp_max_expiry
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis111_pkg.get_actual_exposure (#locationCd#,#excludeExpired#,#excludeNotEff#,#mode#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="distStat">
              					  UPPER(dist_stat) LIKE UPPER(#distStat#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry = #dspMaxExpiry#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
		<select id="getGipis111TemporaryExposure" resultMap="gipis111TemporaryExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis111_pkg.get_temporary_exposure (#locationCd#,#excludeExpired#,#excludeNotEff#,#mode#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="parNo">
              					  UPPER(par_no) LIKE UPPER(#parNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="distStat">
              					  UPPER(dist_stat) LIKE UPPER(#distStat#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry = #dspMaxExpiry#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="parNo">
									ORDER BY par_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemTitle">
									ORDER BY item_title
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premRt">
									ORDER BY prem_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="annTsiAmt">
									ORDER BY ann_tsi_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="distTsi">
									ORDER BY dist_tsi
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="distStat">
									ORDER BY dist_stat
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspMaxExpiry">
									ORDER BY dsp_max_expiry
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis111_pkg.get_temporary_exposure (#locationCd#,#excludeExpired#,#excludeNotEff#,#mode#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="parNo">
              					  UPPER(par_no) LIKE UPPER(#parNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemTitle">
              					  UPPER(item_title) LIKE UPPER(#itemTitle#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="distStat">
              					  UPPER(dist_stat) LIKE UPPER(#distStat#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry = #dspMaxExpiry#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	<resultMap class="java.util.HashMap" id="getIssMap" extends="BaseEntity.TableGridResultMap">
		<result property="issCd"		column="iss_cd"/>
		<result property="issName"		column="iss_name"/>
	</resultMap>		
	
	<resultMap class="java.util.HashMap" id="getLineMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd"		column="line_cd"/>
		<result property="lineName"		column="line_name"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getModuleMap" extends="BaseEntity.TableGridResultMap">
		<result property="moduleUserId"		column="mod_header_user_id"/>
		<result property="incTag"			column="inc_tag"/>
		<result property="moduleId"			column="module_id"/>
		<result property="moduleDesc"		column="module_desc"/>
		<result property="accessTag" 		column="access_tag"/>
		<result property="accessTagDesc" 	column="access_tag_desc"/>
		<result property="moduleRemarks" 	column="mod_remarks"/>
		<result property="moduleUserId"  	column="mod_user_id"/>
		<result property="moduleLastUpdate" column="mod_last_update"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getGrpTranMap" extends="BaseEntity.TableGridResultMap">
		<result property="tranUserGrp"	column="tran_user_grp"/>
		<result property="tranCdGrp"	column="tran_cd_grp"/>
		<result property="tranDescGrp" 	column="tran_desc_grp"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getGrpIssMap" extends="BaseEntity.TableGridResultMap">
		<result property="issUserGrp"	column="iss_user_grp"/>
		<result property="issTranCdGrp" column="iss_tran_cd_grp"/>
		<result property="issCdGrp"		column="iss_cd_grp"/>
		<result property="issNameGrp"	column="iss_name_grp"/>
	</resultMap>		
	
	<resultMap class="java.util.HashMap" id="getGrpLineMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCdGrp"		column="line_cd_grp"/>
		<result property="lineTranCdGrp"	column="line_tran_cd_grp"/>
		<result property="lineUserGrp" 		column="line_user_grp"/>
		<result property="lineNameGrp"		column="line_name_grp"/>
		<result property="acctLineCdGrp" 	column="acct_line_cd_grp"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getGrpModuleMap" extends="BaseEntity.TableGridResultMap">
		<result property="moduleUserGrp"	column="mod_user_grp"/>
		<result property="incTagGrp"		column="inc_tag_grp"/>
		<result property="moduleIdGrp"		column="module_id_grp"/>
		<result property="moduleDescGrp"	column="module_desc_grp"/>
		<result property="accessTagGrp" 	column="access_tag_grp"/>
		<result property="accessTagDescGrp" column="access_tag_desc_grp"/>
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="getHistoryMap" extends="BaseEntity.TableGridResultMap">
		<result property="histUserId"		column="hist_user_id"/>
		<result property="histId" 			column="hist_id"/>
		<result property="oldUserGrp" 		column="old_user_grp"/>
		<result property="oldUserGrpDesc" 	column="old_user_grp_desc"/>
		<result property="newUserGrp" 		column="new_user_grp"/>
		<result property="newUserGrpDesc" 	column="new_user_grp_desc"/>
		<result property="histLastUpdate" 	column="hist_last_update"/>
	</resultMap>
	
	<select id="getUserInformationList" resultMap="getUserInformationListMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (select * from table(gipis152_pkg.get_user_listing(#appUser#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="activeFlag">
									upper(active_flag) = upper(#activeFlag#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="commUpdateTag">
									upper(comm_update_tag) = upper(#commUpdateTag#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="allUserSw">
									upper(all_user_sw) = upper(#allUserSw#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="mgrSw">
									UPPER(mgr_sw) = UPPER(#mgrSw#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userId">
									UPPER(user_id) = UPPER(#userId#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userName">
									UPPER(user_name) = UPPER(#userName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userGrp">
									UPPER(user_grp) = UPPER(#userGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userGrpDesc">
									UPPER(user_grp_desc) = UPPER(#userGrpDesc#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="activeFlag">
		              		ORDER BY active_flag
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="commUpdateTag">
		              		ORDER BY comm_update_tag
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="allUserSw">
		              		ORDER BY all_user_sw
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="mgrSw">
		              		ORDER BY mgr_sw
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="userId">
		              		ORDER BY user_id
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="userName">
		              		ORDER BY user_name
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="userGrp">
		              		ORDER BY user_grp
			            </isEqual>		
			            <isEqual property="sortColumn" compareValue="userGrpDesc">
		              		ORDER BY user_grp_desc
			            </isEqual>	
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_user_listing(#appUser#))
		                 <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="activeFlag">
									upper(active_flag) = upper(#activeFlag#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="commUpdateTag">
									upper(comm_update_tag) = upper(#commUpdateTag#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="allUserSw">
									upper(all_user_sw) = upper(#allUserSw#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="mgrSw">
									UPPER(mgr_sw) = UPPER(#mgrSw#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userId">
									UPPER(user_id) = UPPER(#userId#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userName">
									UPPER(user_name) = UPPER(#userName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userGrp">
									UPPER(user_grp) = UPPER(#userGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="userGrpDesc">
									UPPER(user_grp_desc) = UPPER(#userGrpDesc#)
								</isNotEmpty>
						</isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>

	<select id="getTranList" resultMap="getTranMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*	
		          FROM (select * from table(gipis152_pkg.get_tran_list(#userId#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="tranCd">
									upper(tran_cd) LIKE upper(#tranCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="tranDesc">
									upper(tran_desc) LIKE upper(#tranDesc#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="tranCd">
		              		ORDER BY tran_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="tranDesc">
		              		ORDER BY tran_desc
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_tran_list(#userId#))
		                  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="tranCd">
									upper(tran_cd) LIKE upper(#tranCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="tranDesc">
									upper(tran_desc) LIKE upper(#tranDesc#)
								</isNotEmpty>
						  </isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	

	<select id="getTranIssList" resultMap="getIssMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*	
		          FROM (select * from table(gipis152_pkg.get_tran_iss(#userId#, #tranCd#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="issCd">
									upper(iss_cd) LIKE upper(#issCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issName">
									upper(iss_name) LIKE upper(#issName#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="issCd">
		              		ORDER BY iss_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="issName">
		              		ORDER BY iss_name
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_tran_iss(#userId#, #tranCd#))
		                  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="issCd">
									upper(iss_cd) LIKE upper(#issCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issName">
									upper(iss_name) LIKE upper(#issName#)
								</isNotEmpty>
						  </isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	

	<select id="getTranLineList" resultMap="getLineMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*	
		          FROM (select * from table(gipis152_pkg.get_tran_line(#userId#, #tranCd#, #issCd#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd">
									upper(line_cd) LIKE upper(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lineName">
									upper(line_name) LIKE upper(#lineName#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="lineCd">
		              		ORDER BY line_cd
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lineName">
		              		ORDER BY line_name
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_tran_line(#userId#, #tranCd#, #issCd#))
		                  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd">
									upper(line_cd) LIKE upper(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lineName">
									upper(line_name) LIKE upper(#lineName#)
								</isNotEmpty>
						  </isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	

	<select id="getModuleList" resultMap="getModuleMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (select * from table(gipis152_pkg.get_module_list(#userId#, #tranCd#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="incTag">
									upper(inc_tag) LIKE upper(#incTag#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleId">
									upper(module_id) LIKE upper(#moduleId#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleDesc">
									upper(module_desc) = upper(#moduleDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="accessTagDesc">
									UPPER(access_tag_desc) = UPPER(#accessTagDesc#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="incTag">
		              		ORDER BY inc_tag
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="moduleId">
		              		ORDER BY module_id
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="moduleDesc">
		              		ORDER BY module_desc
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="accessTagDesc">
		              		ORDER BY access_tag_desc
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_module_list(#userId#, #tranCd#))
		                 <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="incTag">
									upper(inc_tag) LIKE upper(#incTag#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleId">
									upper(module_id) LIKE upper(#moduleId#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleDesc">
									upper(module_desc) = upper(#moduleDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="accessTagDesc">
									UPPER(access_tag_desc) = UPPER(#accessTagDesc#)
								</isNotEmpty>
						</isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>
	
	<select id="getGrpTranList" resultMap="getGrpTranMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*	
		          FROM (select * from table(gipis152_pkg.get_tran_grp(#userGrp#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="tranCdGrp">
									upper(tran_cd_grp) LIKE upper(#tranCdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="tranDescGrp">
									upper(tran_desc_grp) LIKE upper(#tranDescGrp#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="tranCdGrp">
		              		ORDER BY tran_cd_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="tranDescGrp">
		              		ORDER BY tran_desc_grp
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_tran_grp(#userGrp#))
		                  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="tranCdGrp">
									upper(tran_cd_grp) LIKE upper(#tranCdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="tranDescGrp">
									upper(tran_desc_grp) LIKE upper(#tranDescGrp#)
								</isNotEmpty>
						  </isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	

	<select id="getGrpTranIssList" resultMap="getGrpIssMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*	
		          FROM (select * from table(gipis152_pkg.get_iss_grp(#userGrp#, #tranCd#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="issCdGrp">
									upper(iss_cd_grp) LIKE upper(#issCdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issNameGrp">
									upper(iss_name_grp) LIKE upper(#issNameGrp#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="issCdGrp">
		              		ORDER BY iss_cd_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="issNameGrp">
		              		ORDER BY iss_name_grp
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_iss_grp(#userGrp#, #tranCd#))
		                  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="issCdGrp">
									upper(iss_cd_grp) LIKE upper(#issCdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issNameGrp">
									upper(iss_name_grp) LIKE upper(#issNameGrp#)
								</isNotEmpty>
						  </isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	

	<select id="getGrpTranLineList" resultMap="getGrpLineMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*	
		          FROM (select * from table(gipis152_pkg.get_line_grp(#userGrp#, #tranCd#, #issCd#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCdGrp">
									upper(line_cd_grp) LIKE upper(#lineCdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lineNameGrp">
									upper(line_name_grp) LIKE upper(#lineNameGrp#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="lineCdGrp">
		              		ORDER BY line_cd_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="lineNameGrp">
		              		ORDER BY line_name_grp
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_line_grp(#userGrp#, #tranCd#, #issCd#))
		                  <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCdGrp">
									upper(line_cd_grp) LIKE upper(#lineCdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lineNameGrp">
									upper(line_name_grp) LIKE upper(#lineNameGrp#)
								</isNotEmpty>
						  </isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>			

	<select id="getGrpModuleList" resultMap="getGrpModuleMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (select * from table(gipis152_pkg.get_module_list_grp(#userGrp#, #tranCd#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="incTagGrp">
									upper(inc_tag_grp) LIKE upper(#incTagGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleIdGrp">
									upper(module_id_grp) LIKE upper(#moduleIdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleDescGrp">
									upper(module_desc_grp) = upper(#moduleDescGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="accessTagDescGrp">
									UPPER(access_tag_desc_grp) = UPPER(#accessTagDescGrp#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="incTagGrp">
		              		ORDER BY inc_tag_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="moduleIdGrp">
		              		ORDER BY module_id_grp
			            </isEqual>
			        	<isEqual property="sortColumn" compareValue="moduleDescGrp">
		              		ORDER BY module_desc_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="accessTagDescGrp">
		              		ORDER BY access_tag_desc_grp
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_module_list_grp(#userGrp#, #tranCd#))
		                 <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="incTagGrp">
									upper(inc_tag_grp) LIKE upper(#incTagGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleIdGrp">
									upper(module_id_grp) LIKE upper(#moduleIdGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="moduleDescGrp">
									upper(module_desc_grp) = upper(#moduleDescGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="accessTagDescGrp">
									UPPER(access_tag_desc_grp) = UPPER(#accessTagDescGrp#)
								</isNotEmpty>
						</isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>	

	<select id="getHistoryList" resultMap="getHistoryMap"> 
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, a.*
		          FROM (select * from table(gipis152_pkg.get_history_list(#userId#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="histId">
									upper(hist_id) = upper(#histId#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="oldUserGrp">
									upper(old_user_grp) = upper(#oldUserGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="oldUserGrpDesc">
									upper(old_user_grp_desc) LIKE upper(#oldUserGrpDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="newUserGrp">
									upper(new_user_grp) = upper(#newUserGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="newUserGrpDesc">
									upper(new_user_grp_desc) LIKE upper(#newUserGrpDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="histLastUpdate">
									UPPER(hist_last_update) = UPPER(#histLastUpdate#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="histId">
		              		ORDER BY hist_id
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="oldUserGrp oldUserGrpDesc">
		              		ORDER BY old_user_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="newUserGrp newUserGrpDesc">
		              		ORDER BY new_user_grp
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="histLastUpdate">
		              		ORDER BY hist_last_update
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>) a, 
		               (SELECT count(*) count_
		                  FROM TABLE (gipis152_pkg.get_history_list(#userId#))
		 	            <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="histId">
									upper(hist_id) = upper(#histId#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="oldUserGrp">
									upper(old_user_grp) = upper(#oldUserGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="oldUserGrpDesc">
									upper(old_user_grp_desc) LIKE upper(#oldUserGrpDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="newUserGrp">
									upper(new_user_grp) = upper(#newUserGrp#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="newUserGrpDesc">
									upper(new_user_grp_desc) LIKE upper(#newUserGrpDesc#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="histLastUpdate">
									UPPER(hist_last_update) = UPPER(#histLastUpdate#)
								</isNotEmpty>
						</isNotNull>
		               ) b)
		 WHERE rownum_ BETWEEN #from# AND #to#	
	</select>		

<!-- GIUTS025 : shan 10.08.2013 -->
	<resultMap class="java.util.HashMap" id="giuts025PolicyDetailsMap" extends="BaseEntity.TableGridResultMap">
		<result column="POLICY_ID" 			property="policyId"/>
		<result column="PAR_ID" 			property="parId"/>
		<result column="LINE_CD" 			property="lineCd"/>
		<result column="SUBLINE_CD" 		property="sublineCd"/>
		<result column="ISS_CD" 			property="issCd"/>
		<result column="ISSUE_YY" 			property="issueYy"/>
		<result column="POL_SEQ_NO" 		property="polSeqNo"/>
		<result column="RENEW_NO" 			property="renewNo"/>
		<result column="ENDT_ISS_CD" 		property="endtIssCd"/>
		<result column="ENDT_YY" 			property="endtYy"/>
		<result column="ENDT_SEQ_NO" 		property="endtSeqNo"/>
		<result column="N_ENDT_ISS_CD" 		property="nEndtIssCd"/>
		<result column="N_ENDT_YY" 			property="nEndtYy"/>
		<result column="N_ENDT_SEQ_NO" 		property="nEndtSeqNo"/>
		<result column="ASSD_NO" 			property="assdNo"/>
		<result column="ASSD_NAME" 			property="assdName"/>
		<result column="REF_POL_NO" 		property="refPolNo"/>
		<result column="MANUAL_RENEW_NO" 	property="manualRenewNo"/>
		<result column="REF_ACCEPT_NO" 		property="refAcceptNo"/>
		<result column="ACCEPT_NO" 			property="acceptNo"/>
		<result column="ACTIVE_RENEWAL" 	property="activeRenewal"/>
		<result column="ONGOING_RENEWAL"	property="ongoingRenewal"/>
	</resultMap>
	
	<select id="getGiuts025PolicyListing" resultMap="giuts025PolicyDetailsMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT * FROM TABLE(GIUTS025_PKG.GET_POLICY_LISTING(#dspLineCd#, #dspSublineCd#, #dspIssCd#, #dspIssueYy#, #dspPolSeqNo#,
		  		  							#dspRenewNo#, #dspNEndtIssCd#, #dspNEndtYy#, #dspNEndtSeqNo#, #dspRefPolNo#, #dspManualRenewNo#, #userId#))
		  		 		 WHERE 1=1
						 <isNotNull property="filter">
						 	<isNotEmpty prepend="AND" property="lineCd">
	     	   		  			UPPER(line_cd) LIKE UPPER(#lineCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="sublineCd">
	     	   		  			UPPER(subline_cd) LIKE UPPER(#sublineCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="issCd">
	     	   		  			UPPER(iss_cd) LIKE UPPER(#issCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="assdName">
	     	   		  			UPPER(assd_name) LIKE UPPER(#assdName#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="issueYy">
	     	   		  			issue_yy = #issueYy#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="polSeqNo">
	     	   		  			pol_seq_no = #polSeqNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="renewNo">
	     	   		  			renew_no = #renewNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="nEndtIssCd">
						 		UPPER(n_endt_iss_cd) LIKE UPPER(#nEndtIssCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="nEndtYy">
	     	   		  			n_endt_yy = #nEndtYy#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="nEndtSeqNo">
	     	   		  			n_endt_seq_no = #nEndtSeqNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="refPolNo">
	     	   		  			UPPER(ref_pol_no) LIKE UPPER(#refPolNo#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="manualRenewNo">
	     	   		  			manual_renew_no = #manualRenewNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="refAcceptNo">
	     	   		  			UPPER(ref_accept_no) LIKE UPPER(#refAcceptNo#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="acceptNo">
	     	   		  			accept_no = #acceptNo#
	     	   		  		</isNotEmpty>
						 </isNotNull> 
						 <isNotNull property="sortColumn">
  		     	   		  		<isEqual property="sortColumn" compareValue="policyNo">
  		     	   		  			ORDER BY line_cd, subline_cd, iss_cd, issue_yy, pol_seq_no, renew_no
  		     	   		  		</isEqual>  		     	   		  		
  		     	   		  		<isEqual property="sortColumn" compareValue="endorsementNo">
  		     	   		  			ORDER BY n_endt_iss_cd, n_endt_yy, n_endt_seq_no
  		     	   		  		</isEqual>
  		     	   		  		<isEqual property="sortColumn" compareValue="assdName">
  		     	   		  			ORDER BY assd_name
  		     	   		  		</isEqual>		
  		     	   		  		<isEqual property="sortColumn" compareValue="refPolNo">
  		     	   		  			ORDER BY ref_pol_no
  		     	   		  		</isEqual>	
  		     	   		  		<isEqual property="sortColumn" compareValue="manualRenewNo">
  		     	   		  			ORDER BY manual_renew_no
  		     	   		  		</isEqual>					 
						 		<isEqual property="ascDescFlg" compareValue="ASC">
	  		     	   		  		ASC
	  		     	   		  	</isEqual>
	  		     	   		  	<isEqual property="ascDescFlg" compareValue="DESC">
	  		     	   		  		DESC
	  		     	   		  	</isEqual>
  		     	   		  </isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_ FROM TABLE(GIUTS025_PKG.GET_POLICY_LISTING(#dspLineCd#, #dspSublineCd#, #dspIssCd#, #dspIssueYy#, #dspPolSeqNo#,
		  		  								#dspRenewNo#, #dspNEndtIssCd#, #dspNEndtYy#, #dspNEndtSeqNo#, #dspRefPolNo#, #dspManualRenewNo#, #userId#))
		  		 		 WHERE 1=1
						 <isNotNull property="filter">
						 	<isNotEmpty prepend="AND" property="lineCd">
	     	   		  			UPPER(line_cd) LIKE UPPER(#lineCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="sublineCd">
	     	   		  			UPPER(subline_cd) LIKE UPPER(#sublineCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="issCd">
	     	   		  			UPPER(iss_cd) LIKE UPPER(#issCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="assdName">
	     	   		  			UPPER(assd_name) LIKE UPPER(#assdName#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="issueYy">
	     	   		  			issue_yy = #issueYy#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="polSeqNo">
	     	   		  			pol_seq_no = #polSeqNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="renewNo">
	     	   		  			renew_no = #renewNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="nEndtIssCd">
						 		UPPER(n_endt_iss_cd) LIKE UPPER(#nEndtIssCd#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="nEndtYy">
	     	   		  			n_endt_yy = #nEndtYy#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="nEndtSeqNo">
	     	   		  			n_endt_seq_no = #nEndtSeqNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="refPolNo">
	     	   		  			UPPER(ref_pol_no) LIKE UPPER(#refPolNo#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="manualRenewNo">
	     	   		  			manual_renew_no = #manualRenewNo#
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="refAcceptNo">
	     	   		  			UPPER(ref_accept_no) LIKE UPPER(#refAcceptNo#)
	     	   		  		</isNotEmpty>
						 	<isNotEmpty prepend="AND" property="acceptNo">
	     	   		  			accept_no = #acceptNo#
	     	   		  		</isNotEmpty>
	     	   		  	</isNotNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
<!-- GIUTS025 end -->

	<parameterMap class="map" id="gipis191ExtractRiskCategoryMap">
		<parameter property="fromDate"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="toDate"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="basis"				jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="userId"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="IN"/>
		<parameter property="noOfRecs"			jdbcType="VARCHAR"	javaType="java.lang.String"	mode="OUT"/>
	</parameterMap>

	<procedure id="gipis191ExtractRiskCategory" parameterMap="gipis191ExtractRiskCategoryMap">
	  	CALL GIPIS191_PKG.extract_risk_category(?, ?, ?, ?, ?)                                     
	</procedure>
	
	<resultMap class="java.util.HashMap" id="gipis191ParamsResultMap">
		<result column="from_date" 		property="fromDate"/>
		<result column="to_date" 		property="toDate"/>
		<result column="date_basis" 	property="dateBasis"/>
		<result column="no_of_recs" 	property="noOfRecs"/>
	</resultMap>
	
	<select id="getGIPIS191Params" resultMap="gipis191ParamsResultMap" parameterClass="java.lang.String">
		SELECT * FROM TABLE (gipis191_pkg.get_params(#userId#))
	</select>
	
	<select id="getGIPIS200IssueYearLOV" resultMap="GIPIS200IssueYearLOVResultMap">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPIS200_PKG.get_issue_year_lov)		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(issue_yy) LIKE UPPER(#issueYy#)				                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(issue_yy) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>		             
			              	<isEqual property="sortColumn" compareValue="issueYy">
			              		ORDER BY issue_yy
			              	</isEqual>				           		              		                      
			          	  	<isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              	</isNotNull>
		                  ) a, 
		               (SELECT count (*) count_ 
		                  FROM TABLE(GIPIS200_PKG.get_issue_year_lov)		                 
		                  	<isNull property="findText">
				                 WHERE UPPER(issue_yy) LIKE UPPER(#issueYy#)				                      		
			             	</isNull>          	
		                	<isNotNull property="findText">
		                		WHERE UPPER(issue_yy) LIKE UPPER(#findText#)				  				         		
			             	</isNotNull>				
			             	) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>	 
		
	<procedure id="checkViewProdDtls" parameterMap="checkProductionMap">
		BEGIN
			gipis200_pkg.check_view_prod_dtls(?,?);
		END;
	</procedure>	

	<procedure id="extractProduction" parameterMap="extractProductionMap">
		CALL GIPIS200_PKG.extract_production(?, ?, ?, TO_NUMBER(?,'9999'), TO_NUMBER(?,'999999999999'), ?, TO_NUMBER(?,'9'), TO_DATE(?, 'MM-DD-RRRR'), TO_DATE(?, 'MM-DD-RRRR'), ?, TO_NUMBER(?,'9999'), ?, ?, ?, ?, ?, ?, ?, ?, ?)
	</procedure>	

	<select id="getProductionDetails" resultMap="GIPIS202ResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*, c.*
					FROM (SELECT *
							FROM TABLE (GIPIS202_PKG.get_production_details(#lineCd#,#sublineCd#,#issCd#,
						   													#issueYy#,#intmNo#,#credIss#,
						   													TO_NUMBER(#paramDate#,'9'),TO_DATE(#fromDate#, 'MM-DD-RRRR'),TO_DATE(#toDate#, 'MM-DD-RRRR'),
						   													#month#,#year#,#distFlag#,
						   													#regPolicySw#,#userId#))		
						<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd1">
									upper(line_cd) LIKE upper(#lineCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd1">
									upper(subline_cd) LIKE upper(#sublineCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd1">
									upper(iss_cd) LIKE upper(#issCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issueYy1">
									issue_yy = TO_NUMBER(#issueYy1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="polSeqNo">
									pol_seq_no = TO_NUMBER(#polSeqNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="renewNo">
									renew_no = TO_NUMBER(#renewNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtIssCd">
									upper(endt_iss_cd) LIKE upper(#endtIssCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtYy">
									endt_yy = TO_NUMBER(#endtYy#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtSeqNo">
									endt_seq_no = TO_NUMBER(#endtSeqNo#)
								</isNotEmpty>
						</isNotNull>
			            <isEqual property="sortColumn" compareValue="policyNo">
		              		ORDER BY policy_no
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="tsiAmt">
		              		ORDER BY tsi_amt
			            </isEqual>
			            <isEqual property="sortColumn" compareValue="premAmt">
		              		ORDER BY prem_amt
			            </isEqual>
			            <isNotNull>
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
		              	 </isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS202_PKG.get_production_details(#lineCd#,#sublineCd#,#issCd#,
						   													#issueYy#,#intmNo#,#credIss#,
						   													TO_NUMBER(#paramDate#,'9'),TO_DATE(#fromDate#, 'MM-DD-RRRR'),TO_DATE(#toDate#, 'MM-DD-RRRR'),
						   													#month#,#year#,#distFlag#,
						   													#regPolicySw#,#userId#))						 		
						<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd1">
									upper(line_cd) LIKE upper(#lineCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd1">
									upper(subline_cd) LIKE upper(#sublineCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd1">
									upper(iss_cd) LIKE upper(#issCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issueYy1">
									issue_yy = TO_NUMBER(#issueYy1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="polSeqNo">
									pol_seq_no = TO_NUMBER(#polSeqNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="renewNo">
									renew_no = TO_NUMBER(#renewNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtIssCd">
									upper(endt_iss_cd) LIKE upper(#endtIssCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtYy">
									endt_yy = TO_NUMBER(#endtYy#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtSeqNo">
									endt_seq_no = TO_NUMBER(#endtSeqNo#)
								</isNotEmpty>
						</isNotNull>					  
						   ) b, 
						   (SELECT SUM(tsi_amt) tsi_total, SUM(prem_amt) prem_total
						   FROM TABLE (GIPIS202_PKG.get_production_details(#lineCd#,#sublineCd#,#issCd#,
						   													#issueYy#,#intmNo#,#credIss#,
						   													TO_NUMBER(#paramDate#,'9'),TO_DATE(#fromDate#, 'MM-DD-RRRR'),TO_DATE(#toDate#, 'MM-DD-RRRR'),
						   													#month#,#year#,#distFlag#,
						   													#regPolicySw#,#userId#))						 		
						<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd1">
									upper(line_cd) LIKE upper(#lineCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd1">
									upper(subline_cd) LIKE upper(#sublineCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issCd1">
									upper(iss_cd) LIKE upper(#issCd1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issueYy1">
									issue_yy = TO_NUMBER(#issueYy1#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="polSeqNo">
									pol_seq_no = TO_NUMBER(#polSeqNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="renewNo">
									renew_no = TO_NUMBER(#renewNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtIssCd">
									upper(endt_iss_cd) LIKE upper(#endtIssCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtYy">
									endt_yy = TO_NUMBER(#endtYy#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="endtSeqNo">
									endt_seq_no = TO_NUMBER(#endtSeqNo#)
								</isNotEmpty>
						</isNotNull>					  
						   ) c)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
	
	<select id="validateGIPIS201Access" resultClass="java.lang.String">
		 SELECT TO_CHAR(COUNT(iss_cd)) FROM giis_issource WHERE check_user_per_iss_cd2(#lineCd#,#issCd#,'GIPIS201',#userId#)=1					
	</select>
	
	<select id="getProdPolicyDetails" resultMap="GIPIS201ResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*, c.*
					FROM (SELECT *
							FROM TABLE (GIPIS201_PKG.get_prod_policy_details(#lineCd1#,#sublineCd1#,#issCd1#,
						   													 #issueYy1#,#polSeqNo1#,#renewNo1#,
						   													 #policyId#,TO_NUMBER(#paramDate#),TO_DATE(#fromDate#, 'MM-DD-RRRR'),
						   													 TO_DATE(#toDate#, 'MM-DD-RRRR'),#month#,#year#,#distFlag#,#userId#))		
							<isNotNull property="filter">
								WHERE 1 = 1 	
									<isNotEmpty prepend="AND" property="endtYy">
										endt_yy = TO_NUMBER(#endtYy#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtSeqNo">
										endt_seq_no = TO_NUMBER(#endtSeqNo#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="tsiAmt">
										tsi_amt = TO_NUMBER(#tsiAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="premAmt">
										prem_amt = TO_NUMBER(#premAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="taxAmt">
										tax_amt = TO_NUMBER(#taxAmt#)
									</isNotEmpty>
							</isNotNull>						
							<isEqual property="sortColumn" compareValue="policyNo">
			              		ORDER BY policy_no
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="endorsementNo">
			              		ORDER BY endorsement_no
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="tsiAmt">
			              		ORDER BY tsi_amt
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="premAmt">
			              		ORDER BY prem_amt
				            </isEqual>		
				            <isEqual property="sortColumn" compareValue="taxAmt">
			              		ORDER BY tax_amt
				            </isEqual>																					
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS201_PKG.get_prod_policy_details(#lineCd1#,#sublineCd1#,#issCd1#,
						   													 #issueYy1#,#polSeqNo1#,#renewNo1#,
						   													 #policyId#,TO_NUMBER(#paramDate#),TO_DATE(#fromDate#, 'MM-DD-RRRR'),
						   													 TO_DATE(#toDate#, 'MM-DD-RRRR'),#month#,#year#,#distFlag#,#userId#))						 		
							<isNotNull property="filter">
								WHERE 1 = 1 
 									<isNotEmpty prepend="AND" property="endtYy">
										endt_yy = TO_NUMBER(#endtYy#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtSeqNo">
										endt_seq_no = TO_NUMBER(#endtSeqNo#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="tsiAmt">
										tsi_amt = TO_NUMBER(#tsiAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="premAmt">
										prem_amt = TO_NUMBER(#premAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="taxAmt">
										tax_amt = TO_NUMBER(#taxAmt#)
									</isNotEmpty>
							</isNotNull>							  
						   ) b, 
						   (SELECT SUM(tsi_amt) tsi_total,SUM(prem_amt) prem_total,SUM(tax_amt) tax_total,SUM(commission) comm_total
						   FROM TABLE (GIPIS201_PKG.get_prod_policy_details(#lineCd1#,#sublineCd1#,#issCd1#,
						   													 #issueYy1#,#polSeqNo1#,#renewNo1#,
						   													 #policyId#,TO_NUMBER(#paramDate#),TO_DATE(#fromDate#, 'MM-DD-RRRR'),
						   													 TO_DATE(#toDate#, 'MM-DD-RRRR'),#month#,#year#,#distFlag#,#userId#))						 		
							<isNotNull property="filter">
								WHERE 1 = 1 
 									<isNotEmpty prepend="AND" property="endtYy">
										endt_yy = TO_NUMBER(#endtYy#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="endtSeqNo">
										endt_seq_no = TO_NUMBER(#endtSeqNo#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="tsiAmt">
										tsi_amt = TO_NUMBER(#tsiAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="premAmt">
										prem_amt = TO_NUMBER(#premAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="taxAmt">
										tax_amt = TO_NUMBER(#taxAmt#)
									</isNotEmpty>
							</isNotNull>								  
						   ) c)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
			
	<select id="validateGIPIS201DisplayORC" resultClass="java.lang.String">
		SELECT GIPIS201_PKG.val_gipis201_disp_orc FROM dual	
	</select>
	
	<select id="getGIPIS201CommDtls" resultMap="GIPIS201CommDtlsResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*, c.*
					FROM (SELECT *
							FROM TABLE (GIPIS201_PKG.get_comm_dtls(#issCd#,#lineCd#,#policyId#,#intmNo#))		
							<isNotNull property="filter">
								WHERE 1 = 1 
 									<isNotEmpty prepend="AND" property="perilName">
										upper(peril_name) LIKE upper(#perilName#)
									</isNotEmpty>		
									<isNotEmpty prepend="AND" property="parentCommRt">
										parent_comm_rt = TO_NUMBER(#parentCommRt#)
									</isNotEmpty>		
									<isNotEmpty prepend="AND" property="parentCommAmt">
										parent_comm_amt = TO_NUMBER(#parentCommAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="childCommRt">
										child_comm_rt = TO_NUMBER(#childCommRt#)
									</isNotEmpty>	
									<isNotEmpty prepend="AND" property="childCommAmt">
										child_comm_amt = TO_NUMBER(#childCommAmt#)
									</isNotEmpty>						
							</isNotNull>						
							<isEqual property="sortColumn" compareValue="perilName">
			              		ORDER BY peril_name
				            </isEqual>		
				            <isEqual property="sortColumn" compareValue="parentCommRt">
			              		ORDER BY parent_comm_rt
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="parentCommAmt">
			              		ORDER BY parent_comm_amt
				            </isEqual>
				            <isEqual property="sortColumn" compareValue="childCommRt">
			              		ORDER BY child_comm_rt
				            </isEqual>	
				            <isEqual property="sortColumn" compareValue="childCommAmt">
			              		ORDER BY child_comm_amt
				            </isEqual>			            																		
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS201_PKG.get_comm_dtls(#issCd#,#lineCd#,#policyId#,#intmNo#))								 		
							<isNotNull property="filter">
								WHERE 1 = 1 
 									<isNotEmpty prepend="AND" property="perilName">
										upper(peril_name) LIKE upper(#perilName#)
									</isNotEmpty>		
									<isNotEmpty prepend="AND" property="parentCommRt">
										parent_comm_rt = TO_NUMBER(#parentCommRt#)
									</isNotEmpty>		
									<isNotEmpty prepend="AND" property="parentCommAmt">
										parent_comm_amt = TO_NUMBER(#parentCommAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="childCommRt">
										child_comm_rt = TO_NUMBER(#childCommRt#)
									</isNotEmpty>	
									<isNotEmpty prepend="AND" property="childCommAmt">
										child_comm_amt = TO_NUMBER(#childCommAmt#)
									</isNotEmpty>								
							</isNotNull>						  
						   ) b,
						   (SELECT SUM(parent_comm_rt) parent_comm_rt_total, SUM(parent_comm_amt) parent_comm_amt_total, SUM(child_comm_rt) child_comm_rt_total, SUM(child_comm_amt) child_comm_amt_total
						   FROM TABLE (GIPIS201_PKG.get_comm_dtls(#issCd#,#lineCd#,#policyId#,#intmNo#))								 		
							<isNotNull property="filter">
								WHERE 1 = 1 
 									<isNotEmpty prepend="AND" property="perilName">
										upper(peril_name) LIKE upper(#perilName#)
									</isNotEmpty>		
									<isNotEmpty prepend="AND" property="parentCommRt">
										parent_comm_rt = TO_NUMBER(#parentCommRt#)
									</isNotEmpty>		
									<isNotEmpty prepend="AND" property="parentCommAmt">
										parent_comm_amt = TO_NUMBER(#parentCommAmt#)
									</isNotEmpty>
									<isNotEmpty prepend="AND" property="childCommRt">
										child_comm_rt = TO_NUMBER(#childCommRt#)
									</isNotEmpty>	
									<isNotEmpty prepend="AND" property="childCommAmt">
										child_comm_amt = TO_NUMBER(#childCommAmt#)
									</isNotEmpty>								
							</isNotNull>						  
						   ) c)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>	
<!--END-->	
<!-- start of GIPIS110; by steven 10.04.2013 -->
	<resultMap class="java.util.HashMap" id="gipis110ProvinceLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="province_desc"		property="provinceDesc" />
		<result column="province_cd"		property="provinceCd" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis110CityLOVMap" extends="BaseEntity.TableGridResultMap">
		<result column="city"			property="city" />
		<result column="city_cd"		property="cityCd" />
		<result column="province_desc"	property="provinceDesc" />
		<result column="province_cd"	property="provinceCd" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis110GiisBlockMap" extends="BaseEntity.TableGridResultMap">
		<result column="province_cd"	property="provinceCd" />
		<result column="city"			property="city" />
		<result column="city_cd"		property="cityCd" />
		<result column="district_no"	property="districtNo" />
		<result column="block_no"		property="blockNo" />
		<result column="block_desc"		property="blockDesc" />
		<result column="block_id"		property="blockId" />
		<result column="retn_lim_amt"	property="retnLimAmt" />
		<result column="trty_lim_amt"	property="trtyLimAmt" />
		<result column="district_desc"	property="districtDesc" />
		<result column="remarks"		property="remarks" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis110GiisBlockDtlMap" extends="BaseEntity.TableGridResultMap">
		<result column="risk_cd"		property="riskCd" />
		<result column="risk_desc"		property="riskDesc" />
		<result column="rv_low_value"	property="rvLowValue" />
		<result column="rv_meaning"		property="rvMeaning" />
		<result column="manual"			property="manual" />
		<result column="actual"			property="actual" />
		<result column="temporary"		property="temporary" />
		<result column="expo_sum"		property="expoSum" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis110ShareExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="actual"			property="actual" />
		<result column="temporary"		property="temporary" />
		<result column="expo_sum"		property="expoSum" />
		<result column="share_cd"		property="shareCd" />
		<result column="line_cd"		property="lineCd" />
		<result column="trty_name"		property="trtyName" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis110ActualExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="fr_item_type"		property="itemType" />
		<result column="block_id"			property="blockId" />
		<result column="risk_cd"			property="riskCd" />
		<result column="line_cd"			property="lineCd" />
		<result column="assd_no"			property="assdNo" />
		<result column="assd_name"			property="assdName" />
		<result column="item_no"			property="itemNo" />
		<result column="construction_cd"	property="contructionCd" />
		<result column="tarf_cd"			property="tarfCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd"				property="issCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="pol_seq_no"			property="polSeqNo" />
		<result column="renew_no"			property="renewNo" />
		<result column="eff_date"			property="effDate" />
		<result column="expiry_date"		property="expiryDate" />
		<result column="loc_risk"			property="locRisk" />
		<result column="district_no"		property="districtNo" />
		<result column="block_no"			property="blockNo" />
		<result column="dist_flag"			property="distFlag" />
		<result column="share_type"			property="shareType" />
		<result column="province_cd"		property="provinceCd" />
		<result column="city"				property="city" />
		<result column="peril_cd"			property="perilCd" />
		<result column="peril_name"			property="perilName" />
		<result column="peril_sname"		property="perilSname" />
		<result column="prem_rt"			property="premRt" />
		<result column="incept_date"		property="inceptDate" />
		<result column="endt_expiry_date"	property="endtExpiryDate" />
		<result column="endt_seq_no"		property="endtSeqNo" />
		<result column="ann_tsi_amt"		property="annTsiAmt" />
		<result column="dsp_expiry_date"	property="dspExpiryDate" />
		<result column="dsp_eff_date"		property="dspEffDate" />
		<result column="dsp_incept_date"	property="dspInceptDate" />
		<result column="policy_no"			property="policyNo" />
		<result column="fire"				property="fire" />
		<result column="max_expiry"			property="maxExpiry" />
		<result column="dsp_max_expiry"		property="dspMaxExpiry" />
		<result column="expired"			property="expired" />
		<result column="not_yet_eff"		property="notYetEff" />
		<result column="dsp_fr_item_type"	property="dspItemType" />
		<result column="dist_tsi"			property="distTsi" />
		<result column="dsp_dist_status"	property="dspDistStatus" />
		<result column="nbt_cons_desc"		property="nbtConsDesc" />
		<result column="with_claims"		property="withClaims" />
	</resultMap>
	
	<resultMap class="java.util.HashMap" id="gipis110TemporaryExposureMap" extends="BaseEntity.TableGridResultMap">
		<result column="par_id"				property="parId" />
		<result column="line_cd"			property="lineCd" />
		<result column="subline_cd"			property="sublineCd" />
		<result column="iss_cd"				property="issCd" />
		<result column="issue_yy"			property="issueYy" />
		<result column="par_yy"				property="parYy" />
		<result column="par_seq_no"			property="parSeqNo" />
		<result column="quote_seq_no"		property="quoteSeqNo" />
		<result column="renew_no"			property="renewNo" />
		<result column="item_no"			property="itemNo" />
		<result column="district_no"		property="districtNo" />
		<result column="block_no"			property="blockNo" />
		<result column="pol_flag"			property="polFlag" />
		<result column="ann_tsi_amt"		property="annTsiAmt" />
		<result column="assd_no"			property="assdNo" />
		<result column="assd_name"			property="assdName" />
		<result column="eff_date"			property="effDate" />
		<result column="incept_date"		property="inceptDate" />
		<result column="expiry_date"		property="expiryDate" />
		<result column="endt_expiry_date"	property="endtExpiryDate" />
		<result column="dist_flag"			property="distFlag" />
		<result column="tarf_cd"			property="tarfCd" />
		<result column="construction_cd"	property="contructionCd" />
		<result column="loc_risk"			property="locRisk" />
		<result column="province_cd"		property="provinceCd" />
		<result column="city"				property="city" />
		<result column="block_id"			property="blockId" />
		<result column="dist_tsi"			property="distTsi" />
		<result column="share_cd"			property="shareCd" />
		<result column="par_no"				property="parNo" />
		<result column="fr_item_type"		property="itemType" />
		<result column="dsp_fr_item_type"	property="dspItemType" />
		<result column="risk_cd"			property="riskCd" />
		<result column="peril_type"			property="perilType" />
		<result column="peril_cd"			property="perilCd" />
		<result column="prem_rt"			property="premRt" />
		<result column="peril_sname"		property="perilSname" />
		<result column="peril_name"			property="perilName" />
		<result column="dsp_expiry_date"	property="dspExpiryDate" />
		<result column="dsp_eff_date"		property="dspEffDate" />
		<result column="dsp_incept_date"	property="dspInceptDate" />
		<result column="dsp_par_no"			property="dspParNo" />
		<result column="fire"				property="fire" />
		<result column="max_expiry"			property="maxExpiry" />
		<result column="dsp_max_expiry"		property="dspMaxExpiry" />
		<result column="expired"			property="expired" />
		<result column="not_yet_eff"		property="notYetEff" />
		<result column="dsp_dist_status"	property="dspDistStatus" />
		<result column="nbt_cons_desc"		property="nbtConsDesc" />
		<result column="with_claims"		property="withClaims" />
	</resultMap>

	<select id="getGipis110ProvinceLOV" resultMap="gipis110ProvinceLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		    FROM TABLE (gipis110_pkg.get_province)
						 <isNotNull property="findText">
							WHERE (UPPER(province_desc) LIKE  '%' || UPPER(#findText#)|| '%'  
							OR UPPER(province_cd) LIKE  '%' || UPPER(#findText#)|| '%' )
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(province_desc) LIKE '%' || UPPER(#findText2#)|| '%' 
							OR UPPER(province_cd) LIKE '%' || UPPER(#findText2#)|| '%' )
						 </isNull>
                         <isEqual property="sortColumn" compareValue="provinceDesc">
                                ORDER BY province_desc
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="provinceCd">
                                ORDER BY province_cd
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual> 
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                         </isNotNull> 
		  		   		) a,
		          	   (SELECT count(*) count_ 
		  		   		    FROM TABLE (gipis110_pkg.get_province)
	  		   		     <isNotNull property="findText">
							WHERE (UPPER(province_desc) LIKE '%' || UPPER(#findText#)|| '%'
							OR UPPER(province_cd) LIKE '%' || UPPER(#findText#)|| '%')
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(province_desc) LIKE '%' || UPPER(#findText2#)|| '%'
							OR UPPER(province_cd) LIKE '%' || UPPER(#findText2#)|| '%')
						 </isNull>
		  		   		) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis110CityLOV" resultMap="gipis110CityLOVMap">
		SELECT * 
		  FROM (SELECT a.*, b.count_, rownum rownum_
		          FROM (SELECT * 
		  		   		 	FROM TABLE (gipis110_pkg.get_city (#provinceCd#))
						 <isNotNull property="findText">
							WHERE (UPPER(city) LIKE '%' || UPPER(#findText#)|| '%'
							OR UPPER(city_cd) LIKE '%' || UPPER(#findText#)|| '%')
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(city) LIKE '%' || UPPER(#findText2#)|| '%'
							OR UPPER(city_cd) LIKE '%' || UPPER(#findText2#)|| '%')
						 </isNull>
                         <isEqual property="sortColumn" compareValue="city">
                                ORDER BY city
                         </isEqual>
                          <isEqual property="sortColumn" compareValue="city_cd">
                                ORDER BY city_cd
                         </isEqual>
		  				 <isNotNull property="sortColumn">
                                 <isEqual property="ascDescFlg" compareValue="ASC">
                                     ASC
                                 </isEqual> 
                                 <isEqual property="ascDescFlg" compareValue="DESC">
                                     DESC
                                 </isEqual>
                         </isNotNull> 
		  		   		) a,
		          	   (SELECT count(*) count_ 
		  		   		    FROM TABLE (gipis110_pkg.get_city (#provinceCd#))
	  		   		     <isNotNull property="findText">
							WHERE (UPPER(city) LIKE '%' || UPPER(#findText#)|| '%'
							OR UPPER(city_cd) LIKE '%' || UPPER(#findText#)|| '%')
						 </isNotNull>
						 <isNull property="findText">
							WHERE (UPPER(city) LIKE '%' || UPPER(#findText2#)|| '%'
							OR UPPER(city_cd) LIKE '%' || UPPER(#findText2#)|| '%')
						 </isNull>
		  		   		) b
               )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="gipis110CheckFiAccess" resultClass="String">
		SELECT gipis110_pkg.check_fi_access (#userId#) FROM DUAL
	</select>
	
	<select id="getGipis110GiisBlock" resultMap="gipis110GiisBlockMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis110_pkg.get_giis_block (#cityCd#, #provinceCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="districtNo">
              					  UPPER(district_no) LIKE UPPER(#districtNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blockNo">
              					  UPPER(block_no) LIKE UPPER(#blockNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blockDesc">
              					  UPPER(block_desc) LIKE UPPER(#blockDesc#)
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="retnLimAmt">
              					  UPPER(retn_lim_amt) LIKE UPPER(#retnLimAmt#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="trtyLimAmt">
              					  UPPER(trty_lim_amt) LIKE UPPER(#trtyLimAmt#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="districtNo">
									ORDER BY district_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="blockNo">
									ORDER BY block_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="blockDesc">
									ORDER BY block_desc
								</isEqual>
								<isEqual property="sortColumn" compareValue="retnLimAmt">
									ORDER BY retn_lim_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="trtyLimAmt">
									ORDER BY trty_lim_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis110_pkg.get_giis_block (#cityCd#, #provinceCd#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="districtNo">
              					  UPPER(district_no) LIKE UPPER(#districtNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blockNo">
              					  UPPER(block_no) LIKE UPPER(#blockNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="blockDesc">
              					  UPPER(block_desc) LIKE UPPER(#blockDesc#)
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="retnLimAmt">
              					  UPPER(retn_lim_amt) LIKE UPPER(#retnLimAmt#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="trtyLimAmt">
              					  UPPER(trty_lim_amt) LIKE UPPER(#trtyLimAmt#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="extractBlockAccum">
		CALL block_accum.EXTRACT (#provinceCd#,#cityCd#,#districtNo#,#blockNo#,#busType#)
	</procedure>
	
	<select id="getGipis110GiisBlockDtl" resultMap="gipis110GiisBlockDtlMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 5 count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis110_pkg.get_giis_block_dtl (#blockId#,#excludeNotEff#,#exclude#,#userId#,#districtNo#,#blockNo#,#provinceCd#,#city#))) a)
	</select>
	
	<select id="getGipis110ShareExposure" resultMap="gipis110ShareExposureMap">
		SELECT *
		  FROM (SELECT ROWNUM rownum_, 
		  			   5 count_, 
		  			   a.*
		          FROM (SELECT *
		                  FROM TABLE (gipis110_pkg.get_share_exposure(#exclude#,#excludeNotEff#,#rvLowValue#,#blockId#,#districtNo#,#blockNo#,#provinceCd#,#city#,#riskCd#))
		                  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="lineCd">
									ORDER BY line_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="trtyName">
									ORDER BY trty_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="actual">
									ORDER BY actual
								</isEqual>
								<isEqual property="sortColumn" compareValue="temporary">
									ORDER BY temporary
								</isEqual>
								<isEqual property="sortColumn" compareValue="expoSum">
									ORDER BY expo_sum
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
		                  ) a)
	</select>
	
	<select id="getGipis110ActualExposure" resultMap="gipis110ActualExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis110_pkg.get_actual_exposure (#exclude#,#excludeNotEff#,#shareType#,#blockId#,#userId#,#mode#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspItemType">
              					  UPPER(dsp_fr_item_type) LIKE UPPER(#dspItemType#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="tarfCd">
              					  UPPER(tarf_cd) LIKE UPPER(#tarfCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspDistStatus">
              					  UPPER(dsp_dist_status) LIKE UPPER(#dspDistStatus#)
              			        </isNotEmpty>
             			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry LIKE #dspMaxExpiry#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="locRisk">
              					   UPPER(loc_risk) LIKE UPPER(#locRisk#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtConsDesc">
              					   UPPER(nbt_cons_desc) LIKE UPPER(#nbtConsDesc#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premRt">
									ORDER BY prem_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="annTsiAmt">
									ORDER BY ann_tsi_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="distTsi">
									ORDER BY dist_tsi
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspItemType">
									ORDER BY dsp_fr_item_type
								</isEqual>
								<isEqual property="sortColumn" compareValue="tarfCd">
									ORDER BY tarf_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspDistStatus">
									ORDER BY dsp_dist_status
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspMaxExpiry">
									ORDER BY max_expiry
								</isEqual>
								<isEqual property="sortColumn" compareValue="locRisk">
									ORDER BY loc_risk
								</isEqual>
								<isEqual property="sortColumn" compareValue="nbtConsDesc">
									ORDER BY nbt_cons_desc
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis110_pkg.get_actual_exposure (#exclude#,#excludeNotEff#,#shareType#,#blockId#,#userId#,#mode#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspItemType">
              					  UPPER(dsp_fr_item_type) LIKE UPPER(#dspItemType#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="tarfCd">
              					  UPPER(tarf_cd) LIKE UPPER(#tarfCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspDistStatus">
              					  UPPER(dsp_dist_status) LIKE UPPER(#dspDistStatus#)
              			        </isNotEmpty>
             			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry LIKE #dspMaxExpiry#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="locRisk">
              					   UPPER(loc_risk) LIKE UPPER(#locRisk#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtConsDesc">
              					   UPPER(nbt_cons_desc) LIKE UPPER(#nbtConsDesc#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGipis110TemporaryExposure" resultMap="gipis110TemporaryExposureMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis110_pkg.get_temporary_exposure (#exclude#,#excludeNotEff#,#shareType#,#blockId#,#userId#,#mode#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="dspParNo">
              					  UPPER(dsp_par_no) LIKE UPPER(#dspParNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspItemType">
              					  UPPER(dsp_fr_item_type) LIKE UPPER(#dspItemType#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="tarfCd">
              					  UPPER(tarf_cd) LIKE UPPER(#tarfCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspDistStatus">
              					  UPPER(dsp_dist_status) LIKE UPPER(#dspDistStatus#)
              			        </isNotEmpty>
             			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry LIKE #dspMaxExpiry#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="locRisk">
              					   UPPER(loc_risk) LIKE UPPER(#locRisk#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtConsDesc">
              					   UPPER(nbt_cons_desc) LIKE UPPER(#nbtConsDesc#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="dspParNo">
									ORDER BY dsp_par_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="premRt">
									ORDER BY prem_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="annTsiAmt">
									ORDER BY ann_tsi_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="distTsi">
									ORDER BY dist_tsi
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspItemType">
									ORDER BY dsp_fr_item_type
								</isEqual>
								<isEqual property="sortColumn" compareValue="tarfCd">
									ORDER BY tarf_cd
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspDistStatus">
									ORDER BY dsp_dist_status
								</isEqual>
								<isEqual property="sortColumn" compareValue="dspMaxExpiry">
									ORDER BY max_expiry
								</isEqual>
								<isEqual property="sortColumn" compareValue="locRisk">
									ORDER BY loc_risk
								</isEqual>
								<isEqual property="sortColumn" compareValue="nbtConsDesc">
									ORDER BY nbt_cons_desc
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis110_pkg.get_temporary_exposure (#exclude#,#excludeNotEff#,#shareType#,#blockId#,#userId#,#mode#,#all#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="dspParNo">
              					  UPPER(dsp_par_no) LIKE UPPER(#dspParNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="premRt">
              					  prem_rt LIKE #premRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="annTsiAmt">
              					  ann_tsi_amt LIKE #annTsiAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="distTsi">
              					  dist_tsi LIKE #distTsi#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspItemType">
              					  UPPER(dsp_fr_item_type) LIKE UPPER(#dspItemType#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="tarfCd">
              					  UPPER(tarf_cd) LIKE UPPER(#tarfCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspDistStatus">
              					  UPPER(dsp_dist_status) LIKE UPPER(#dspDistStatus#)
              			        </isNotEmpty>
             			        <isNotEmpty prepend="AND" property="dspMaxExpiry">
              					  dsp_max_expiry LIKE #dspMaxExpiry#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="locRisk">
              					   UPPER(loc_risk) LIKE UPPER(#locRisk#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="nbtConsDesc">
              					   UPPER(nbt_cons_desc) LIKE UPPER(#nbtConsDesc#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getDiscSurcListMap" extends="BaseEntity.TableGridResultMap">
		<result column="POLICY_ID"			property="policyId" />
		<result column="POLICY_NO"			property="policyNo" />
		<result column="ENDT_NO"			property="endtNo" />
		<result column="CRED_BRANCH"		property="credBranch" />
		<result column="DISC_AMT"			property="discAmt" />
		<result column="SURC_AMT"			property="surcAmt" />
		<result column="PREM_AMT"			property="premAmt" />
		<result column="TSI_AMT"			property="tsiAmt" />
		<result column="ASSD_NAME"			property="assdName" />
		<result column="DISC_SW"			property="discSw" />
		<result column="SURC_SW"			property="surcSw" />
	</resultMap>
	
	<select id="getDiscSurcList" resultMap="getDiscSurcListMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis190_pkg.get_disc_surc_list(#lineCd#,#discSw#,#surcSw#,#moduleId#,#userId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="endtNo">
              					  UPPER(endt_no) LIKE UPPER(#endtNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="discAmt">
              					  disc_amt LIKE #discAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="surcAmt">
              					  surc_amt LIKE #surcAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY policy_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="endtNo">
									ORDER BY endt_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="discAmt">
									ORDER BY disc_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="surcAmt">
									ORDER BY surc_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis190_pkg.get_disc_surc_list(#lineCd#,#discSw#,#surcSw#,#moduleId#,#userId#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="policyNo">
              					  UPPER(policy_no) LIKE UPPER(#policyNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="endtNo">
              					  UPPER(endt_no) LIKE UPPER(#endtNo#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="discAmt">
              					  disc_amt LIKE #discAmt#
              			        </isNotEmpty>
              			         <isNotEmpty prepend="AND" property="surcAmt">
              					  surc_amt LIKE #surcAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getDiscSurcDtlsMap" extends="BaseEntity.TableGridResultMap">
		<result column="NET_GROSS_TAG"		property="netGrossTag" />
		<result column="SEQUENCE"			property="sequence" />
		<result column="ITEM_NO"			property="itemNo" />
		<result column="PERIL_NAME"			property="perilName" />
		<result column="DISC_AMT"			property="discAmt" />
		<result column="DISC_RT"			property="discRt" />
		<result column="SURC_AMT"			property="surcAmt" />
		<result column="SURC_RT"			property="surcRt" />
		<result column="NET_PREM_AMT"		property="netPremAmt" />
		<result column="REMARKS"			property="remarks" />
	</resultMap>
	
	<select id="getDiscSurcDetails" resultMap="getDiscSurcDtlsMap">
		SELECT *
			FROM (SELECT rownum rownum_, b.count_, a.*
					FROM (SELECT *
							FROM TABLE (gipis190_pkg.get_disc_surc_details(#policyId#,#type#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="sequence">
              					  sequence LIKE #sequence#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="discAmt">
              					  disc_amt LIKE #discAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="discRt">
              					  policy_no LIKE #discRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="surcAmt">
              					  surc_amt LIKE #surcAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="surcRt">
              					  surc_rt LIKE #surcRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="netPremAmt">
              					  net_prem_amt LIKE #netPremAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
								<isEqual property="sortColumn" compareValue="sequence">
									ORDER BY sequence
								</isEqual>
								<isEqual property="sortColumn" compareValue="itemNo">
									ORDER BY item_no
								</isEqual>
								<isEqual property="sortColumn" compareValue="perilName">
									ORDER BY peril_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="discAmt">
									ORDER BY disc_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="discRt">
									ORDER BY disc_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="surcAmt">
									ORDER BY surc_amt
								</isEqual>
								<isEqual property="sortColumn" compareValue="surcRt">
									ORDER BY surc_rt
								</isEqual>
								<isEqual property="sortColumn" compareValue="netPremAmt">
									ORDER BY net_prem_amt
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis190_pkg.get_disc_surc_details(#policyId#,#type#))
							<isNotNull property="filter">
						      WHERE 1=1
              			        <isNotEmpty prepend="AND" property="sequence">
              					  sequence LIKE #sequence#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="itemNo">
              					  item_no LIKE #itemNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="perilName">
              					  UPPER(peril_name) LIKE UPPER(#perilName#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="discAmt">
              					  disc_amt LIKE #discAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="discRt">
              					  policy_no LIKE #discRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="surcAmt">
              					  surc_amt LIKE #surcAmt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="surcRt">
              					  surc_rt LIKE #surcRt#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="netPremAmt">
              					  net_prem_amt LIKE #netPremAmt#
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getGIPIS100EndorsementCodeMap">
		<result column="ENDT_CD"			property="endtCd"/>
		<result column="ENDT_TITLE"			property="endtTitle"/>
		<result column="rownum_"			property="rowNum"/>
		<result column="count_"				property="rowCount"/>
	</resultMap>
	
	<select id="getGIPIS100EndorsementCode" resultMap="getGIPIS100EndorsementCodeMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_gipis100_endt_code_list)
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="endtCd">
						ORDER BY ENDT_CD
					</isEqual>
					<isEqual property="sortColumn" compareValue="endtTitle">
						ORDER BY ENDT_TITLE
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_gipis100_endt_code_list)) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getGIPIS100EndtTypeListMap" extends="BaseEntity.TableGridResultMap">
		<result column="POLICY_ID"			property="policyId"/>
		<result column="POLICY_NO"			property="policyNo"/>
		<result column="ENDT_NO"			property="endtNo"/>
		<result column="TSI_AMT"			property="tsiAmt"/>
		<result column="PREM_AMT"			property="premAmt"/>
	</resultMap>
	
	<select id="getGIPIS100EndtTypeList" resultMap="getGIPIS100EndtTypeListMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(gipi_polbasic_pkg.get_gipis100_endt_type_list(#endtCd#))
          		  <isNotNull property="sortColumn">
					<isEqual property="sortColumn" compareValue="policyNo">
						ORDER BY POLICY_NO
					</isEqual>
					<isEqual property="sortColumn" compareValue="endtNo">
						ORDER BY ENDT_NO
					</isEqual>
					<isEqual property="sortColumn" compareValue="tsiAmt">
						ORDER BY TSI_AMT
					</isEqual>
					<isEqual property="sortColumn" compareValue="premAmt">
						ORDER BY PREM_AMT
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="ASC">
						ASC
					</isEqual>
					<isEqual property="ascDescFlg" compareValue="DESC">
						DESC
					</isEqual>
				  </isNotNull>) a,
               (SELECT count(*) count_ FROM TABLE(gipi_polbasic_pkg.get_gipis100_endt_type_list(#endtCd#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>

	<resultMap id="gipis156PolNoLOVResultMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	    <result property="policyId"     column="policy_id" />
		<result property="lineCd"   	column="line_cd" />
		<result property="sublineCd"    column="subline_cd" />
		<result property="issCd"     	column="iss_cd" />
		<result property="issueYy"     	column="issue_yy" />
		<result property="polSeqNo"     column="pol_seq_no" />
		<result property="renewNo"     	column="renew_no" />
		<result property="endtIssCd"    column="endt_iss_cd" />
		<result property="endtYy"   	column="endt_yy" />
		<result property="endtSeqNo"	column="endt_seq_no" />
		<result property="dspEndtIssCd"    	column="dsp_endt_iss_cd" />
		<result property="dspEndtYy"   		column="dsp_endt_yy" />
		<result property="dspEndtSeqNo"		column="dsp_endt_seq_no" />
		<result property="assdName"     	column="assd_name" />
		<result property="credBranch"     	column="cred_branch" />
		<result property="inceptDate"     	column="incept_date" />
		<result property="issueDate"     	column="issue_date" />
		<result property="allowBookingInAdvTag"	column="allow_booking_in_adv_tag" />
		<result property="policyEndtNo"     	column="policy_endt_no" />
		<result property="assdName2"     	column="assd_name2" />
		<result property="endtType"     	column="endt_type" />
		<result property="bancassuranceSw"     	column="bancassurance_sw" />
		<result property="ora2010Sw"     	column="ora2010_sw" />
	</resultMap>
	
	<!--hdrtagudin 07302015 SR 18751-->
	<resultMap id="getInitialAcceptanceResultMap" class="java.util.HashMap">
	    <result property="policyNo"     column="policy_no" />
	    <result property="parNo"     	column="par_no" />
	    <result property="endtNo"     	column="endt_no" />
	    <result property="assdName"     column="assd_name" />
	    <result property="acceptNo"     column="accept_no" />
	    <result property="acceptBy"     column="accept_by" />
	    <result property="acceptDate"   column="accept_date" />
	    <result property="riName"     	column="ri_name" />
	    <result property="reassured"    column="reassured" />
	    <result property="refAcceptNo"  column="ref_accept_no" />
	    <result property="origTSIAmt"   column="orig_tsi_amt" />
	    <result property="riPolicyNo"   column="ri_policy_no" />
	    <result property="riBinderNo"   column="ri_binder_no" />
	    <result property="riEndtNo"   	column="ri_endt_no" />
	    <result property="offerDate"    column="offer_date" />
	    <result property="origPremAmt"  column="orig_prem_amt" />
	    <result property="remarks"      column="remarks" />
	</resultMap>
	
	<select id="getGIPIS156PolNoLOV" resultMap="gipis156PolNoLOVResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPI_POLBASIC_PKG.get_gipis156_pol_no_lov(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #userId#, #moduleId#))
							WHERE UPPER(assd_name) LIKE UPPER(NVL(#assdName#, assd_name))
							  AND UPPER(NVL(dsp_endt_iss_cd, 'XXX')) LIKE UPPER(NVL(#dspEndtIssCd#, NVL(dsp_endt_iss_cd, 'XXX')))
							  AND NVL(dsp_endt_yy, 9999999999) = NVL(#dspEndtYy#, NVL(dsp_endt_yy, 9999999999))
							  AND NVL(dsp_endt_seq_no, 9999999999) = NVL(#dspEndtSeqNo#, NVL(dsp_endt_seq_no, 9999999999))
							<isNotNull property="filter">
						      <!-- WHERE 1=1
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty> -->
              			        <!-- <isNotEmpty prepend="AND" property="dspEndtIssCd">
              					  UPPER(dsp_endt_iss_cd) LIKE UPPER(#dspEndtIssCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEndtSeqNo">
              					  dsp_endt_seq_no = #dspEndtSeqNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEndtYy">
              					  dsp_endt_yy = #dspEndtYy#
              			        </isNotEmpty> -->
              			        <isNotEmpty prepend="AND" property="issCd">
              					  UPPER(iss_cd) LIKE UPPER(#issCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="issueYy">
              					  issue_yy = #issueYy#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="polSeqNo">
              					  pol_seq_no = #polSeqNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="renewNo">
              					  renew_no = #renewNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="sublineCd">
              					  UPPER(subline_cd) LIKE UPPER(#sublineCd#)
              			        </isNotEmpty>
                   		  	</isNotNull>
                   		  	<isNotNull property="sortColumn">
                   		  		<isEqual property="sortColumn" compareValue="policyNo">
									ORDER BY subline_cd<!-- , iss_cd, issue_yy, pol_seq_no, renew_no -->
								</isEqual>
								<isEqual property="sortColumn" compareValue="assdName">
									ORDER BY assd_name
								</isEqual>
								<isEqual property="sortColumn" compareValue="endorsementNo">
									ORDER BY dsp_endt_iss_cd<!-- , endt_yy, endt_seq_no -->
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPI_POLBASIC_PKG.get_gipis156_pol_no_lov(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #userId#, #moduleId#))
						   WHERE UPPER(assd_name) LIKE UPPER(NVL(#assdName#, assd_name))
						     AND UPPER(NVL(dsp_endt_iss_cd, 'XXX')) LIKE UPPER(NVL(#dspEndtIssCd#, NVL(dsp_endt_iss_cd, 'XXX')))
						     AND NVL(dsp_endt_yy, 9999999999) = NVL(#dspEndtYy#, NVL(dsp_endt_yy, 9999999999))
						     AND NVL(dsp_endt_seq_no, 9999999999) = NVL(#dspEndtSeqNo#, NVL(dsp_endt_seq_no, 9999999999))
							<isNotNull property="filter">
						      <!-- WHERE 1=1
              			        <isNotEmpty prepend="AND" property="assdName">
              					  UPPER(assd_name) LIKE UPPER(#assdName#)
              			        </isNotEmpty> -->
              			        <!-- <isNotEmpty prepend="AND" property="dspEndtIssCd">
              					  UPPER(dsp_endt_iss_cd) LIKE UPPER(#dspEndtIssCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEndtSeqNo">
              					  dsp_endt_seq_no = #dspEndtSeqNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="dspEndtYy">
              					  dsp_endt_yy = #dspEndtYy#
              			        </isNotEmpty> -->
              			        <isNotEmpty prepend="AND" property="issCd">
              					  UPPER(iss_cd) LIKE UPPER(#issCd#)
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="issueYy">
              					  issue_yy = #issueYy#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="polSeqNo">
              					  pol_seq_no = #polSeqNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="renewNo">
              					  renew_no = #renewNo#
              			        </isNotEmpty>
              			        <isNotEmpty prepend="AND" property="sublineCd">
              					  UPPER(subline_cd) LIKE UPPER(#sublineCd#)
              			        </isNotEmpty>
                   		  	</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIPIS156BasicInfo" resultClass="java.util.HashMap">
		SELECT * FROM TABLE (GIPI_POLBASIC_PKG.get_gipis156_basic_info(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #endtYy#, #endtSeqNo#, #credBranch#))
	</select>
	
	<select id="getGIPIS156Booked2Lov" resultMap="gipis156BookedResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIIS_BOOKING_MONTH_PKG.get_gipis156_booked2_lov)
							<isNotNull property="findText">
							   WHERE UPPER(booking_mth) LIKE UPPER(#findText#)
							      OR TO_CHAR(booking_year) LIKE #findText#
							</isNotNull>
							<isEqual property="sortColumn" compareValue="bookingMth">
								ORDER BY booking_mth
							</isEqual>
							<isEqual property="sortColumn" compareValue="bookingYear">
								ORDER BY booking_year
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIIS_BOOKING_MONTH_PKG.get_gipis156_booked2_lov)
						   <isNotNull property="findText">
							   WHERE UPPER(booking_mth) LIKE UPPER(#findText#)
							      OR TO_CHAR(booking_year) LIKE #findText#
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIPIS156BookedLov" resultMap="gipis156BookedResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIIS_BOOKING_MONTH_PKG.get_gipis156_booked_lov(#issueDate#, #inceptDate#))
							<isNotNull property="findText">
							   WHERE UPPER(booking_mth) LIKE UPPER(#findText#)
							      OR TO_CHAR(booking_year) LIKE #findText#
							</isNotNull>
							<isEqual property="sortColumn" compareValue="bookingMth">
								ORDER BY booking_mth
							</isEqual>
							<isEqual property="sortColumn" compareValue="bookingYear">
								ORDER BY booking_year
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIIS_BOOKING_MONTH_PKG.get_gipis156_booked_lov(#issueDate#, #inceptDate#))
						   <isNotNull property="findText">
							   WHERE UPPER(booking_mth) LIKE UPPER(#findText#)
							      OR TO_CHAR(booking_year) LIKE #findText#
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="getGIPIS156BookedInvoiceLov" resultMap="gipis156BookedResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIIS_BOOKING_MONTH_PKG.get_gipis156_bookedinvoice_lov(#issueDate#, #inceptDate#))
							<isNotNull property="findText">
							   WHERE UPPER(booking_mth) LIKE UPPER(#findText#)
							      OR TO_CHAR(booking_year) LIKE #findText#
							</isNotNull>
							<isEqual property="sortColumn" compareValue="bookingMth">
								ORDER BY booking_mth
							</isEqual>
							<isEqual property="sortColumn" compareValue="bookingYear">
								ORDER BY booking_year
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIIS_BOOKING_MONTH_PKG.get_gipis156_bookedinvoice_lov(#issueDate#, #inceptDate#))
						   <isNotNull property="findText">
							   WHERE UPPER(booking_mth) LIKE UPPER(#findText#)
							      OR TO_CHAR(booking_year) LIKE #findText#
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	
	<!-- hdrtagudin 07232015 SR 19751 -->
	<select id="getIssCdRI" resultClass="java.lang.String">
			SELECT giisp.v('ISS_CD_RI')
			  FROM dual
	</select>	
	
	<!-- hdrtagudin 07302015 SR 19751 -->
	<select id="getInitialAcceptance" resultMap="getInitialAcceptanceResultMap">
		SELECT * FROM TABLE (GIPI_POLBASIC_PKG.get_initial_acceptance(#policyId#))
	</select>
	
	<!-- nieko 07132016 KB 894 -->
	<resultMap class="java.util.HashMap" id="gipis110BlockRiskMap">
		<result column="block_id"		property="blockId" />
		<result column="district_no"	property="districtNo" />
		<result column="block_no"		property="blockNo" />
		<result column="block_desc"		property="blockDesc" />
		<result column="risk_cd"		property="riskCd" />
		<result column="risk_desc"		property="riskDesc" />
		<result column="retn_lim_amt"	property="retnLimAmt" />
		<result column="trty_lim_amt"	property="trtyLimAmt" />
	</resultMap>
	
	<select id="getGipis110BlockRisk" resultMap="gipis110BlockRiskMap">
		SELECT * FROM TABLE (gipis110_pkg.gipis110_block_risk(#blockId#))
	</select>
	
	<select id="getGipis110GiisBlocRiskkDtl" resultMap="gipis110GiisBlockDtlMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 5 count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis110_pkg.get_giis_block_risk_dtl (#blockId#,#excludeNotEff#,#exclude#,#userId#,#districtNo#,#blockNo#,#provinceCd#,#city#,#riskCd#, #busType#))) a)
	</select>
	<!-- nieko 07132016 end -->
	
	<!-- SR-21674 : JET -->
	<select id="getParId" resultClass="java.lang.Integer">
		SELECT gipi_polbasic_pkg.get_par_id(#policyId#)
		  FROM dual
	</select>

</sqlMap>
