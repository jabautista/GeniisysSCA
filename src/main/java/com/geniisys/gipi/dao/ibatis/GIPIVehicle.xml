<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIPIVehicle">

	<cacheModel id="oneDayClient" type="MEMORY">
		<flushInterval hours="24" />
		<property name="reference-type" value="WEAK" />
	</cacheModel>
	
	<typeAlias alias="GIPIVehicle" type="com.geniisys.gipi.entity.GIPIVehicle"/>

	<resultMap class="GIPIVehicle" id="motorCarsMap">
	
		<result property="itemNo" 		column="item_no"/>
		<result property="policyId" 	column="policy_id"/>
		<result property="motorNo" 		column="motor_no"/>
		<result property="plateNo" 		column="plate_no"/>
		<result property="serialNo" 	column="serial_no"/>
		<result property="modelYear" 	column="model_year"/>
		<result property="cocType" 		column="coc_type"/>
		<result property="cocYy" 		column="coc_yy"/>
		<result property="polFlag" 		column="pol_flag"/>
		<result property="status" 		column="status"/>
		<result property="policyNo" 	column="policy_no"/>
		<result property="cocSerialNo" 	column="coc_serial_no"/>
		<result property="rowNum" 		column="rownum_"/>
		<result property="rowCount" 	column="count_"/>
		
	</resultMap>
	<!-- Rey 08.18.2011 carrier list -->
	<resultMap class="GIPIVehicle" id="carrierListMap" extends="BaseEntity.TableGridResultMap">
		<result property="vesselCd"		column="vessel_cd"/>
		<result property="vesselName"	column="vessel_name"/>
	</resultMap>
	<!-- Rey 08.18.2011 carrier list -->
	<select id="getCarrierList" resultMap="carrierListMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE (giis_vessel_pkg.get_carrie_list(#policyId#))) a,
               		   (SELECT count(*) count_ FROM TABLE(giis_vessel_pkg.get_carrie_list(#policyId#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<!-- added filter by robert 02.04.2014 -->
	<select id="getMotorCars" resultMap="motorCarsMap" parameterClass="java.util.HashMap">
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIPI_VEHICLE_PKG.get_motor_cars)
          		  <isNotNull property="filter">
						WHERE 1=1
						<isNotEmpty prepend="AND"  property="motorNo">
							motor_no LIKE upper(#motorNo#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="plateNo">
							plate_no LIKE upper(#plateNo#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="serialNo">
							serial_no LIKE upper(#serialNo#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="modelYear">
							model_year LIKE upper(#modelYear#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="cocType">
							coc_type LIKE upper(#cocType#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="cocSerialNo">
							coc_serial_no LIKE #cocSerialNo#
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="cocYy">
							coc_yy LIKE #cocYy#
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="policyNo">
							policy_no LIKE upper(#policyNo#)
						</isNotEmpty>
						<isNotEmpty prepend="AND"  property="status">
							upper(status) LIKE upper(#status#)
						</isNotEmpty>
					</isNotNull>	
          		  <isNotNull property="sortColumn">
              		<isEqual property="sortColumn" compareValue="itemNo">
	              		ORDER BY item_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="motorNo">
	              		ORDER BY motor_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="plateNo">
	              		ORDER BY plate_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="serialNo">
	              		ORDER BY serial_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="modelYear">
	              		ORDER BY model_year
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="cocType">
	              		ORDER BY coc_type
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="cocSerialNo">
	              		ORDER BY coc_serial_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="cocYy">
	              		ORDER BY coc_yy
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="policyNo">
	              		ORDER BY policy_no
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="polFlag">
	              		ORDER BY pol_flag
	                </isEqual>
	                <isEqual property="sortColumn" compareValue="status">
	              		ORDER BY status
	                </isEqual>
              		<isEqual property="ascDescFlg" compareValue="ASC">
              			ASC
              		</isEqual>
              		<isEqual property="ascDescFlg" compareValue="DESC">
              			DESC
              		</isEqual>
	              </isNotNull>) a,
               	  (SELECT count(*) count_ FROM TABLE(gipi_vehicle_pkg.get_motor_cars)
	               	    <isNotNull property="filter">
							WHERE 1=1
							<isNotEmpty prepend="AND"  property="motorNo">
								motor_no LIKE upper(#motorNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="plateNo">
								plate_no LIKE upper(#plateNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="serialNo">
								serial_no LIKE upper(#serialNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="modelYear">
								model_year LIKE upper(#modelYear#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="cocType">
								coc_type LIKE upper(#cocType#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="cocSerialNo">
								coc_serial_no LIKE #cocSerialNo#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="cocYy">
								coc_yy LIKE #cocYy#
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="policyNo">
								policy_no LIKE upper(#policyNo#)
							</isNotEmpty>
							<isNotEmpty prepend="AND"  property="status">
								upper(status) LIKE upper(#status#)
							</isNotEmpty>
						</isNotNull>) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="GIPIVehicle" id="GIPIVehicleResultMap">
		<result property="policyId" 		column="POLICY_ID" />
		<result property="itemNo" 			column="ITEM_NO" />
		<result property="sublineCd" 		column="SUBLINE_CD" />
		<result property="motorNo" 			column="MOTOR_NO" />
		<result property="plateNo" 			column="PLATE_NO" />
		<result property="estValue" 		column="EST_VALUE" />
		<result property="make" 			column="MAKE" />
		<result property="motType" 			column="MOT_TYPE" />
		<result property="color" 			column="COLOR" />
		<result property="repairLim" 		column="REPAIR_LIM" />
		<result property="serialNo" 		column="SERIAL_NO" />
		<result property="cocSeqNo" 		column="COC_SEQ_NO" />
		<result property="cocSerialNo" 		column="COC_SERIAL_NO" />
		<result property="cocType" 			column="COC_TYPE" />
		<result property="assignee" 		column="ASSIGNEE" />
		<result property="modelYear" 		column="MODEL_YEAR" />
		<result property="cocIssueDate" 	column="COC_ISSUE_DATE" />
		<result property="cocYy" 			column="COC_YY" />
		<result property="towing" 			column="TOWING" />
		<result property="sublineTypeCd" 	column="SUBLINE_TYPE_CD" />
		<result property="noOfPass" 		column="NO_OF_PASS" />
		<result property="tariffZone" 		column="TARIFF_ZONE" />
		<result property="mvFileNo" 		column="MV_FILE_NO" />
		<result property="acquiredFrom" 	column="ACQUIRED_FROM" />
		<result property="ctvTag" 			column="CTV_TAG" />
		<result property="carCompanyCd" 	column="CAR_COMPANY_CD" />
		<result property="typeOfBodyCd" 	column="TYPE_OF_BODY_CD" />
		<result property="unladenWt" 		column="UNLADEN_WT" />
		<result property="makeCd" 			column="MAKE_CD" />
		<result property="seriesCd" 		column="SERIES_CD" />
		<result property="basicColorCd" 	column="BASIC_COLOR_CD" />
		<result property="basicColor" 		column="BASIC_COLOR" />
		<result property="colorCd" 			column="COLOR_CD" />
		<result property="origin" 			column="ORIGIN" />
		<result property="destination" 		column="DESTINATION" />
		<result property="cocAtcn" 			column="COC_ATCN" />
		<result property="motorCoverage" 	column="MOTOR_COVERAGE" />
		<result property="cocSerialSw" 		column="COC_SERIAL_SW" />
		<result property="carCompany"		column="CAR_COMPANY" />
		<result property="engineSeries"		column="ENGINE_SERIES" />
	</resultMap>
	
	<select id="getGIPIVehicleForEndt" resultMap="GIPIVehicleResultMap">
	<!-- andrew - 07152015 - SR 19819/19298 -->
		SELECT policy_id, 		item_no, 		subline_cd, 		motor_no,
	   		   plate_no,		est_value,		make,				mot_type,
	   		   color,			repair_lim,		serial_no,			coc_seq_no,
	   		   coc_serial_no, 	coc_type, 		assignee,			model_year,
	   		   coc_issue_date, 	coc_yy, 		towing,				subline_type_cd,
	   		   no_of_pass, 		tariff_zone, 	mv_file_no,			acquired_from,
	   		   ctv_tag, 		car_company_cd,	type_of_body_cd,	unladen_wt,
	   		   make_cd, 		series_cd,	   	basic_color_cd,		color_cd,
	   		   origin,			destination, 	coc_atcn,			motor_coverage,
	   		   coc_serial_sw,	car_company,	engine_series,
	   		   basic_color, 	color
		  FROM TABLE(GIPI_VEHICLE_PKG.GET_GIPI_VEHICLE(#policyId#, #itemNo#))
	</select>	
	
	<resultMap class="GIPIVehicle" id="vehicleInfoMap">
		<result property="policyId" 		column="policy_id"/>
		<result property="itemNo" 			column="item_no"/>
		<result property="itemTitle" 		column="item_title"/>
		<result property="assignee" 		column="assignee"/>
		<result property="origin"			column="origin"/>
		<result property="cocYy" 			column="coc_yy"/>
		<result property="make" 			column="make"/>
		<result property="color" 			column="color"/>
		<result property="towing" 			column="towing"/>
		<result property="plateNo" 			column="plate_no"/>
		<result property="serialNo" 		column="serial_no"/>
		<result property="motorNo" 			column="motor_no"/>
		<result property="makeCd" 			column="make_cd"/>
		<result property="estValue" 		column="est_value"/>
		<result property="mvFileNo" 		column="mv_file_no"/>
		<result property="noOfPass" 		column="no_of_pass"/>
		<result property="seriesCd" 		column="series_cd"/>
		<result property="cocAtcn" 			column="coc_atcn"/>
		<result property="colorCd" 			column="color_cd"/>
		<result property="cocType" 			column="coc_type"/>
		<result property="motType" 			column="mot_type"/>
		<result property="sublineCd" 		column="subline_cd"/>
		<result property="modelYear" 		column="model_year"/>
		<result property="repairLim" 		column="repair_lim"/>
		<result property="unladenWt" 		column="unladen_wt"/>
		<result property="cocSerialNo" 		column="coc_serial_no"/>
		<result property="basicColorCd" 	column="basic_color_cd"/>
		<result property="sublineTypeCd" 	column="subline_type_cd"/>
		<result property="carCompanyCd" 	column="car_company_cd"/>
		<result property="acquiredFrom" 	column="acquired_from"/>
		<result property="destination" 		column="destination"/>
	
		<result property="motorCoverage" 	column="motor_coverage"/>
		<result property="basicColor" 		column="basic_color"/>
		<result property="typeDesc" 		column="type_desc"/>
		<result property="typeOfBody" 		column="type_of_body"/>
		<result property="deductible" 		column="deductible"/>
		<result property="carCompany" 		column="car_company"/>
		<result property="engineSeries" 	column="engine_series"/>
		<result property="sublineTypeDesc"  column="subline_type_desc"/>
	</resultMap>
	
	<select id="getVehicleInfo" resultMap="vehicleInfoMap" parameterClass="java.util.HashMap">
		SELECT * FROM TABLE(gipi_vehicle_pkg.get_vehicle_info(#policyId#,#itemNo#))
	</select>
	
	<resultMap class="java.util.HashMap" id="motorCocMap">
		<result property="policyId" 		column="policy_id" />
		<result property="policyNo" 		column="policy_no" />
		<result property="vehicleModel"		column="vehicle_model" />
		<result property="serialNo"			column="serial_no" />
		<result property="motorNo"			column="motor_no" />
		<result property="plateNo"			column="plate_no" />
		<result property="itemTitle"		column="item_title" />
		<result property="itemDesc"			column="item_desc" />
		<result property="itemNo"			column="item_no" />
		<result property="car"				column="car" />
		<result property="cocType"			column="coc_type" />
		<result property="cocYy" 			column="coc_yy" />
		<result property="cocSerialNo" 		column="coc_serial_no" />
		<result property="cocAtcn"			column="coc_atcn" />
		<result property="compulsoryFlag"	column="compulsory_flag" />
		<result property="rowNum" 			column="rownum_" />
		<result property="rowCount"			column="count_" />
	</resultMap>
	
	<select id="getMotorCoc" resultMap="motorCocMap"  parameterClass="java.util.HashMap">
		
		SELECT *
  		  FROM (SELECT rownum rownum_,b.count_,a.*
          		  FROM (SELECT * FROM TABLE(GIPI_VEHICLE_PKG.get_motor_coverage2(#policyId#, #packPolFlag#))) a,
               		   (SELECT count(*) count_ FROM TABLE(gipi_vehicle_pkg.get_motor_coverage2(#policyId#, #packPolFlag#))) b)
 		 WHERE rownum_ BETWEEN #from# AND #to#

	</select>
	
	<parameterMap class="java.util.HashMap" id="updateVehiclesMap">
		<parameter property="appUser"	 	jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
		<parameter property="policyId"	 	jdbcType="INTEGER" javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="itemNo"	 	jdbcType="INTEGER" javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="cocYy"	 	 	jdbcType="INTEGER" javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="cocSerialNo"	jdbcType="INTEGER" javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="cocAtcn"		jdbcType="VARCHAR" javaType="java.lang.String"	mode="IN"/>
	</parameterMap>
	
	<resultMap id="plateDtlMap" class="java.util.HashMap">
  		<result column="plate_no" 			property="id" />			
	  	<result column="assured_name"		property="desc"	/>	
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<resultMap id="motorDtlMap" class="java.util.HashMap">
  		<result column="motor_no" 			property="id" />			
	  	<result column="assured_name"		property="desc"	/>	
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<resultMap id="serialDtlMap" class="java.util.HashMap">
  		<result column="serial_no" 			property="id" />			
	  	<result column="assured_name"		property="desc"	/>	
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<resultMap class="GIPIVehicle" id="mcItemDtlsResultMap">
  		<result property="itemNo" 					column="item_no" />
  		<result property="itemTitle" 				column="item_title" />		
  		<result property="modelYear" 			column="model_year" />		
  		<result property="carCompanyCd" 		column="car_company_cd" />		
  		<result property="carCompany" 			column="car_company" />		
  		<result property="makeCd" 					column="make_cd" />		
  		<result property="make" 						column="make" />		
  		<result property="motorNo" 				column="motor_no" />		
  		<result property="serialNo" 				column="serial_no" />		
  		<result property="plateNo" 					column="plate_no" />		
  		<result property="basicColorCd" 		column="basic_color_cd" />		
  		<result property="basicColor" 				column="basic_color" />		
  		<result property="colorCd" 					column="color_cd" />		
  		<result property="color" 						column="color" />		
  	</resultMap>
  	
  	<resultMap id="motCarItemMap" class="java.util.HashMap">
  		<result property="itemNo" 					column="item_no" />
  		<result property="itemTitle" 				column="item_title" />		
  		<result property="modelYear" 			column="model_year" />		
  		<result property="carCompanyCd" 		column="car_company_cd" />		
  		<result property="carCompany" 			column="car_company" />		
  		<result property="makeCd" 					column="make_cd" />		
  		<result property="make" 						column="make" />		
  		<result property="motorNo" 				column="motor_no" />		
  		<result property="serialNo" 				column="serial_no" />		
  		<result property="plateNo" 					column="plate_no" />		
  		<result property="basicColorCd" 		column="basic_color_cd" />		
  		<result property="basicColor" 				column="basic_color" />		
  		<result property="colorCd" 					column="color_cd" />		
  		<result property="color" 						column="color" />				
  		<result property="rowNum" 				column="rownum_" />
		<result property="rowCount"				column="count_" />
  	</resultMap>
	
	<procedure id="updateVehiclesGIPIS091" parameterMap="updateVehiclesMap">
		BEGIN
			GIIS_USERS_PKG.app_user := ?;
			GIPI_VEHICLE_PKG.set_gipi_vehicle_gipis091(?, ?, ?, ?, ?);
		END;
	</procedure>
	
	<select id="checkExistingCOCSerial" parameterClass="java.util.HashMap" resultClass="String">
		SELECT GIPI_VEHICLE_PKG.check_existing_coc_serial(#policyId#, #itemNo#,
			#cocSerialNo#, #cocType#) FROM dual
	</select>
	  	
  	<select id="getPlateDtlLOV" resultMap="plateDtlMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPI_VEHICLE_PKG.get_plate_lov_gicl010)
		          		<isNotNull property="findText">
		                  WHERE (UPPER(plate_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="id">
		            		ORDER BY plate_no
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="desc">
		            		ORDER BY assured_name
		          		</isEqual>                
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIPI_VEHICLE_PKG.get_plate_lov_gicl010)
		                <isNotNull property="findText">
		                  WHERE (UPPER(plate_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getMotorDtlLOV" resultMap="motorDtlMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPI_VEHICLE_PKG.get_motor_lov_gicl010)   
		          		<isNotNull property="findText">
		                  WHERE (UPPER(motor_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="id">
		            		ORDER BY motor_no
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="desc">
		            		ORDER BY assured_name
		          		</isEqual>              
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIPI_VEHICLE_PKG.get_motor_lov_gicl010)
		                <isNotNull property="findText">
		                  WHERE (UPPER(motor_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getSerialDtlLOV" resultMap="serialDtlMap">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPI_VEHICLE_PKG.get_serial_lov_gicl010)              
			            <isNotNull property="findText">
		                  WHERE (UPPER(serial_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="id">
		            		ORDER BY serial_no
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="desc">
		            		ORDER BY assured_name
		          		</isEqual>   
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIPI_VEHICLE_PKG.get_serial_lov_gicl010)
		                <isNotNull property="findText">
		                  WHERE (UPPER(serial_no) LIKE UPPER(#findText#) OR UPPER(assured_name) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getValidPlateNosLOV" resultMap="motorCarsMap">
  	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (GIPI_VEHICLE_PKG.get_valid_plate_nos(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#))
		                  <isNotNull property="findText">
		                  WHERE item_no LIKE #findText# 
		                     OR plate_no LIKE #findText# 
		                     OR motor_no LIKE #findText#  
		                     OR serial_no LIKE #findText# 
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="plateNo">
			              		ORDER BY plate_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="motorNo">
			              		ORDER BY motor_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="serialNo">
			              		ORDER BY serial_no
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIPI_VEHICLE_PKG.get_valid_plate_nos(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#))
		                  <isNotNull property="findText">
		                  WHERE item_no LIKE #findText# 
		                     OR plate_no LIKE #findText# 
		                     OR motor_no LIKE #findText#  
		                     OR serial_no LIKE #findText# 
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getMotCarItemLOV" resultMap="motCarItemMap">
  	    SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          		 FROM (SELECT * 
		                  				  FROM TABLE (gipi_vehicle_pkg.get_motcar_item_gicls026(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #itemNo#))
		                  <isNotNull property="findText">
		                  	WHERE item_no LIKE #findText#
		                  	   OR UPPER(item_title) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  <isEqual property="sortColumn" compareValue="itemNo">
			              		ORDER BY item_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="itemTitle">
			              		ORDER BY item_title
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="modelYear">
			              		ORDER BY model_year
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="carCompanyCd">
			              		ORDER BY car_company_cd
			              </isEqual>
			               <isEqual property="sortColumn" compareValue="carCompany">
			              		ORDER BY car_company
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="makeCd">
			              		ORDER BY make_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="make">
			              		ORDER BY make
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="motorNo">
			              		ORDER BY motor_no
			              </isEqual>
			               <isEqual property="sortColumn" compareValue="serialNo">
			              		ORDER BY serial_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="plateNo">
			              		ORDER BY plate_no
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="basicColorCd">
			              		ORDER BY basic_color_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="basicColor">
			              		ORDER BY basic_color
			              </isEqual>
			               <isEqual property="sortColumn" compareValue="colorCd">
			              		ORDER BY color_cd
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="color">
			              		ORDER BY color
			              </isEqual>
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipi_vehicle_pkg.get_motcar_item_gicls026(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #itemNo#))
		                  <isNotNull property="findText">
		                  	WHERE item_no LIKE #findText#
		                  	   OR UPPER(item_title) LIKE UPPER(#findText#)
		                  </isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<select id="getMotcarItemDtls" resultMap="mcItemDtlsResultMap">
  		SELECT * FROM TABLE(gipi_vehicle_pkg.get_motcar_item_gicls026(#lineCd#, #sublineCd#, #issCd#, #issueYy#, #polSeqNo#, #renewNo#, #itemNo#))
  	</select>
  	
  	<resultMap id="ctplPoliciesMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"			property="policyId"/>
		<result column="item_no"			property="itemNo"/>
		<result column="plate_no"			property="plateNo"/>
		<result column="serial_no"			property="serialNo"/>
		<result column="policy_no"			property="policyNo"/>
		<result column="assd_name"			property="assdName"/>
		<result column="incept_date"		property="inceptDate"/>
		<result column="dsp_plate_no"		property="dspPlateNo"/>
		<result column="dsp_serial_no"		property="dspSerialNo"/>
		<result column="dsp_co_make"		property="dspCoMake"/>
		<result column="ctpl_premium"		property="ctplPremium"/>
		<result column="reinsurer"			property="reinsurer"/>
		<result column="cred_branch"		property="credBranch"/>
	</resultMap>
  	
  	<select id="getCTPLPolicies" resultMap="ctplPoliciesMap" parameterClass="java.util.HashMap">
		SELECT * 
			FROM (SELECT rownum rownum_,
						 b.count_,
						 a.*
					FROM (SELECT * 
							FROM TABLE(GIPI_VEHICLE_PKG.get_ctpl_policy_listing(#credBranch#, #asOfDate#, #fromDate#, #toDate#, #plateEnding#,
																				#dateBasis#, #dateRange#, #reinsurance#, #moduleId#, #userId#))
						   WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, policy_no))
						     AND UPPER(assd_name) LIKE UPPER(NVL(#assdName#, assd_name))
						     AND incept_date = NVL(#inceptDate#, incept_date)
						     AND UPPER(NVL(dsp_plate_no, '*')) LIKE UPPER(NVL(#dspPlateNo#, NVL(dsp_plate_no, '*')))
						     AND UPPER(NVL(dsp_serial_no, '*')) LIKE UPPER(NVL(#dspSerialNo#, NVL(dsp_serial_no, '*')))
						     AND UPPER(NVL(dsp_co_make, '*')) LIKE UPPER(NVL(#dspCoMake#, NVL(dsp_co_make, '*')))
						     AND ctpl_premium = NVL(#ctplPremium#, ctpl_premium)
							<isEqual property="sortColumn" compareValue="policyNo">
								ORDER BY policy_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="assdName">
								ORDER BY assd_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="inceptDate">
								ORDER BY incept_date
							</isEqual>
							<isEqual property="sortColumn" compareValue="dspPlateNo">
								ORDER BY dsp_plate_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="dspSerialNo">
								ORDER BY dsp_serial_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="dspCoMake">
								ORDER BY dsp_co_make
							</isEqual>
							<isEqual property="sortColumn" compareValue="ctplPremium">
								ORDER BY ctpl_premium
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a, 
							(SELECT count(*) count_
							   FROM TABLE(GIPI_VEHICLE_PKG.get_ctpl_policy_listing(#credBranch#, #asOfDate#, #fromDate#, #toDate#, #plateEnding#,
																				#dateBasis#, #dateRange#, #reinsurance#, #moduleId#, #userId#))
							  WHERE UPPER(policy_no) LIKE UPPER(NVL(#policyNo#, policy_no))
						        AND UPPER(assd_name) LIKE UPPER(NVL(#assdName#, assd_name))
						        AND incept_date = NVL(#inceptDate#, incept_date)
						     	AND UPPER(NVL(dsp_plate_no, '*')) LIKE UPPER(NVL(#dspPlateNo#, NVL(dsp_plate_no, '*')))
							    AND UPPER(NVL(dsp_serial_no, '*')) LIKE UPPER(NVL(#dspSerialNo#, NVL(dsp_serial_no, '*')))
							    AND UPPER(NVL(dsp_co_make, '*')) LIKE UPPER(NVL(#dspCoMake#, NVL(dsp_co_make, '*')))
							    AND ctpl_premium = NVL(#ctplPremium#, ctpl_premium)) b)
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>  	
	
	<resultMap id="gipis192MakeLOV" class="java.util.HashMap">
  		<result column="make_cd" 			property="makeCd" />			
	  	<result column="make"				property="make"	/>
	  	<result column="car_company_cd" 	property="companyCd" />			
	  	<result column="car_company"		property="company"	/>	
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<select id="getGipis192MakeLOV" resultMap="gipis192MakeLOV">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPIS192_PKG.get_make_lov(#makeCd#,#companyCd#))
		          		<isNotNull property="findText">
		                  WHERE (UPPER(make_cd) LIKE UPPER(#findText#) OR UPPER(make) LIKE UPPER(#findText#))
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="makeCd">
		            		ORDER BY make_cd
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="make">
		            		ORDER BY make
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="company">
		            		ORDER BY car_company
		          		</isEqual>                
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIPIS192_PKG.get_make_lov(#makeCd#,#companyCd#))
		                <isNotNull property="findText">
		                  WHERE (UPPER(make_cd) LIKE UPPER(#findText#) OR UPPER(make) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="gipis192CompanyLOV" class="java.util.HashMap">
	  	<result column="car_company_cd" 	property="companyCd" />			
	  	<result column="car_company"		property="company"	/>	
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>
  	
  	<select id="getGipis192CompanyLOV" resultMap="gipis192CompanyLOV">
  		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIPIS192_PKG.get_company_lov)
		          		<isNotNull property="findText">
		                  WHERE (UPPER(car_company_cd) LIKE UPPER(#findText#) OR UPPER(car_company) LIKE UPPER(#findText#))
		             	</isNotNull>
	          			<isEqual property="sortColumn" compareValue="companyCd">
		            		ORDER BY car_company_cd
		          		</isEqual>  
		          		<isEqual property="sortColumn" compareValue="company">
		            		ORDER BY car_company
		          		</isEqual>  
			          	  <isNotNull property="sortColumn">
		              		<isEqual property="ascDescFlg" compareValue="ASC">
		              			ASC
		              		</isEqual>
		              		<isEqual property="ascDescFlg" compareValue="DESC">
		              			DESC
		              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE(GIPIS192_PKG.get_company_lov)
		                <isNotNull property="findText">
		                  WHERE (UPPER(car_company_cd) LIKE UPPER(#findText#) OR UPPER(car_company) LIKE UPPER(#findText#))
		             	</isNotNull>
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>
  	
  	<resultMap id="polListingPerMakeMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
		<result column="policy_id"		property="policyId"/>
		<result column="policy_no"		property="policyNo"/>
		<result column="item_no"		property="itemNo"/>
		<result column="item_title"		property="itemTitle"/>
		<result column="plate_no"		property="plateNo"/>
		<result column="motor_no"		property="motorNo"/>
		<result column="serial_no"		property="serialNo"/>
		<result column="tsi_amt"		property="tsiAmt"/>
		<result column="prem_amt"		property="premAmt"/>
		<result column="assd_no"		property="assdNo"/>
		<result column="assd_name"		property="assdName"/>
		<result column="incept_date"	property="inceptDate"/>
		<result column="eff_date"		property="effDate"/>
		<result column="expiry_date"	property="expiryDate"/>
		<result column="issue_date"		property="issueDate"/>
		<result column="iss_cd"			property="issCd"/>
		<result column="total_tsi_amt"	property="totTsiAmt"/>
		<result column="total_prem_amt"	property="totPremAmt"/>
	</resultMap>
	
	<select id="getPolListingPerMake" resultMap="polListingPerMakeMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (GIPIS192_PKG.get_gipis192_table(#makeCd#,#companyCd#,#searchBy#,#asOfDate#,#fromDate#,#toDate#,#userId#,#credBranch#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="motorNo">
									UPPER(motor_no) LIKE UPPER(#motorNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="serialNo">
									UPPER(serial_no) LIKE UPPER(#serialNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="tsiAmt">
									tsi_amt = (#tsiAmt#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="premAmt">
									prem_amt = (#premAmt#)
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemTitle">
								ORDER BY item_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="plateNo">
								ORDER BY plate_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="motorNo">
								ORDER BY motor_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="serialNo">
								ORDER BY serial_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="tsiAmt">
								ORDER BY tsi_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="premAmt"> 
								ORDER BY prem_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (GIPIS192_PKG.get_gipis192_table(#makeCd#,#companyCd#,#searchBy#,#asOfDate#,#fromDate#,#toDate#,#userId#,#credBranch#))
						   <isNotNull property="filter">
								WHERE 1 = 1
 								<isNotEmpty prepend="AND" property="itemNo">
									UPPER(item_no) LIKE UPPER(#itemNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="itemTitle">
									UPPER(item_title) LIKE UPPER(#itemTitle#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="plateNo">
									UPPER(plate_no) LIKE UPPER(#plateNo#)
								</isNotEmpty>
 								<isNotEmpty prepend="AND" property="motorNo">
									UPPER(motor_no) LIKE UPPER(#motorNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="serialNo">
									UPPER(serial_no) LIKE UPPER(#serialNo#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="tsiAmt">
									tsi_amt = (#tsiAmt#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="premAmt">
									prem_amt = (#premAmt#)
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="map" id="validateGipis192MakeMap">
		<parameter property="makeCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="make"			jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="companyCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="company"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
	</parameterMap>
	
	<procedure id="validateGipis192Make" parameterMap="validateGipis192MakeMap">
		CALL GIPIS192_pkg.validate_gipis192_make_cd(?,?,?,?)
	</procedure>
	
	<parameterMap class="map" id="validateGipis192CompanyMap">
		<parameter property="companyCd"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
		<parameter property="company"		jdbcType="VARCHAR"	javaType="java.lang.String"	  mode="INOUT"/>
	</parameterMap>
	
	<procedure id="validateGipis192Company" parameterMap="validateGipis192CompanyMap">
		CALL GIPIS192_pkg.validate_gipis192_company_cd(?,?)
	</procedure>

	<resultMap id="motorTypeMap" class="java.util.HashMap">
  		<result column="motor_type_desc"	property="motorTypeDesc" />			
	  	<result column="subline_cd"			property="sublineCd" />
	  	<result column="mot_type"			property="motType" />		
  		<result column="rownum_" 			property="rowNum" />
		<result column="count_"				property="rowCount"/>
  	</resultMap>

	<select id="getGIPIS194MotorTypeLOV" resultMap="motorTypeMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * 
		                  FROM TABLE (gipis194_pkg.get_motor_type_lov)
		                  <isNotEmpty property="findText">
		          		  		WHERE (UPPER (motor_type_desc) LIKE UPPER (#findText#)
                                       OR UPPER (subline_cd) LIKE UPPER (#findText#)) 
		          		  </isNotEmpty>
		          		  <isEqual property="sortColumn" compareValue="customOrder">
			              		ORDER BY motor_type_desc,subline_cd
			              </isEqual>
		                  <isEqual property="sortColumn" compareValue="motorTypeDesc">
			              		ORDER BY motor_type_desc
			              </isEqual>
			              <isEqual property="sortColumn" compareValue="sublineCd">
			              		ORDER BY subline_cd
			              </isEqual>
			              <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (gipis194_pkg.get_motor_type_lov)
		                  <isNotEmpty property="findText">
		          		  		WHERE (UPPER (motor_type_desc) LIKE UPPER (#findText#)
                                       OR UPPER (subline_cd) LIKE UPPER (#findText#)) 
		          		  </isNotEmpty>) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="getGIPIS194ListMap" extends="BaseEntity.TableGridResultMap">
		<result property="itemNo"		column="ITEM_NO"/>
		<result property="itemTitle"	column="ITEM_TITLE"/>
		<result property="plateNo"		column="PLATE_NO"/>
		<result property="motorNo"		column="MOTOR_NO"/>
		<result property="serialNo"		column="SERIAL_NO"/>
		<result property="tsiAmt"		column="TSI_AMT"/>
		<result property="premAmt"		column="PREM_AMT"/>
		<result property="policyNo"		column="POLICY_NO"/>
		<result property="effDate"		column="EFF_DATE"/>
		<result property="inceptDate"	column="INCEPT_DATE"/>
		<result property="expiryDate"	column="EXPIRY_DATE"/>
		<result property="issueDate"	column="ISSUE_DATE"/>
		<result property="assured"		column="ASSURED"/>
		<result property="credBranch"	column="CRED_BRANCH"/>
		<result property="sumTsiAmt"	column="SUM_TSI_AMT"/>
		<result property="sumPremAmt"	column="SUM_PREM_AMT"/>
		<result property="lineCd"		column="line_cd"/> <!-- added by steven 08.15.2014 -->
		<result property="issCd"		column="iss_cd"/>
	</resultMap>
	<!-- edited by steven 08.15.2014 -->
	<select id="getGIPIS194List" resultMap="getGIPIS194ListMap" parameterClass="java.util.HashMap">
		SELECT * 
			FROM (SELECT rownum rownum_,
						 b.*,
						 a.*
					FROM (SELECT * 
							FROM TABLE(gipis194_pkg.get_motor_type_list(#motType#, #sublineCd#, #asOfDate#, #fromDate#, #toDate#, #dateType#))
						    WHERE 1=1
						    AND check_user_per_iss_cd2 (line_cd, iss_cd, #moduleId#, #userId#) = 1
						    <isNotNull property="filter">
				   		  		<isNotEmpty prepend="AND" property="itemNo">
				   		  			UPPER(ITEM_NO) LIKE UPPER(#itemNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="itemTitle">
				   		  			UPPER(ITEM_TITLE) LIKE UPPER(#itemTitle#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="plateNo">
				   		  			UPPER(PLATE_NO) LIKE UPPER(#plateNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="motorNo">
				   		  			UPPER(MOTOR_NO) LIKE UPPER(#motorNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="serialNo">
				   		  			UPPER(SERIAL_NO) LIKE UPPER(#serialNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="tsiAmt">
				   		  			TSI_AMT LIKE #tsiAmt#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="premAmt">
				   		  			PREM_AMT LIKE #premAmt#
				   		  		</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="itemNo">
								ORDER BY item_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="itemTitle">
								ORDER BY item_title
							</isEqual>
							<isEqual property="sortColumn" compareValue="plateNo">
								ORDER BY plate_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="motorNo">
								ORDER BY motor_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="serialNo">
								ORDER BY serial_no
							</isEqual>
							<isEqual property="sortColumn" compareValue="tsiAmt">
								ORDER BY tsi_amt
							</isEqual>
							<isEqual property="sortColumn" compareValue="premAmt">
								ORDER BY prem_amt
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>) a, 
						(SELECT count(*) count_, SUM(tsi_amt) sum_tsi_amt, sum(prem_amt) sum_prem_amt
						   FROM TABLE(gipis194_pkg.get_motor_type_list(#motType#, #sublineCd#, #asOfDate#, #fromDate#, #toDate#, #dateType#))
						    WHERE 1=1
						    AND check_user_per_iss_cd2 (line_cd, iss_cd, #moduleId#, #userId#) = 1
						    <isNotNull property="filter">
				   		  		<isNotEmpty prepend="AND" property="itemNo">
				   		  			UPPER(ITEM_NO) LIKE UPPER(#itemNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="itemTitle">
				   		  			UPPER(ITEM_TITLE) LIKE UPPER(#itemTitle#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="plateNo">
				   		  			UPPER(PLATE_NO) LIKE UPPER(#plateNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="motorNo">
				   		  			UPPER(MOTOR_NO) LIKE UPPER(#motorNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="serialNo">
				   		  			UPPER(SERIAL_NO) LIKE UPPER(#serialNo#)
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="tsiAmt">
				   		  			TSI_AMT LIKE #tsiAmt#
				   		  		</isNotEmpty>
				   		  		<isNotEmpty prepend="AND" property="premAmt">
				   		  			PREM_AMT LIKE #premAmt#
				   		  		</isNotEmpty>
							</isNotNull>) b) 
		WHERE rownum_ BETWEEN #from# AND #to#
	</select>  
	<!-- end steven-->

<!-- GIPIS193 : shan 10.10.2013 -->
	<resultMap class="java.util.HashMap" id="gipis193PlateNoLOVMap" extends="BaseEntity.TableGridResultMap">
		<result property="plateNo"		column="PLATE_NO"/>
	</resultMap>
	
	<select id="getGipis193PlateNoLOV" resultMap="gipis193PlateNoLOVMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT DISTINCT plate_no FROM GIPI_VEHICLE
	  		  			<isNotNull property="findText">
  		  					WHERE UPPER(plate_no) LIKE UPPER(#findText#)
	  		  			</isNotNull>
	  		  			<isNull property="findText">
  		  					WHERE UPPER(plate_no) LIKE UPPER(#searchString#)
	  		  			</isNull>
	  		  			<isNotNull property="sortColumn">
	  		  				<isEqual property="sortColumn" compareValue="plateNo">
	  		  					ORDER BY plate_no
	  		  				</isEqual>
	  		  				<isEqual property="ascDescFlg" compareValue="ASC">
	  		  					ASC
	  		  				</isEqual>
	  		  				<isEqual property="ascDescFlg" compareValue="DESC">
	  		  					DESC
	  		  				</isEqual>
	  		  			</isNotNull>
		  		  		) a,
		  		  		(SELECT count(DISTINCT plate_no) count_ FROM GIPI_VEHICLE
	  		  			<isNotNull property="findText">
  		  					WHERE UPPER(plate_no) LIKE UPPER(#findText#)
	  		  			</isNotNull>
	  		  			<isNull property="findText">
  		  					WHERE UPPER(plate_no) LIKE UPPER(#searchString#)
	  		  			</isNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to# 
	</select>
	
	<resultMap class="java.util.HashMap" id="gipis193VehicleItemMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyId"		column="POLICY_ID"/>
		<result property="itemNo"		column="ITEM_NO"/>
		<result property="itemTitle"	column="ITEM_TITLE"/>
		<result property="make"			column="MAKE"/>
		<result property="motorNo"		column="MOTOR_NO"/>
		<result property="serialNo"		column="SERIAL_NO"/>
		<result property="plateNo"		column="PLATE_NO"/>
		<result property="tsiAmt"		column="TSI_AMT"/>
		<result property="premAmt"		column="PREM_AMT"/>
		<result property="credBranch"	column="CRED_BRANCH"/>
		<result property="policyNo"		column="POLICY_NO"/>
		<result property="assdNo"		column="ASSD_NO"/>
		<result property="assdName"		column="ASSD_NAME"/>
		<result property="inceptDate"	column="INCEPT_DATE"/>
		<result property="expiryDate"	column="EXPIRY_DATE"/>
		<result property="effDate"		column="EFF_DATE"/>
		<result property="issueDate"	column="ISSUE_DATE"/>
	</resultMap>
	
	<select id="getGipis193VehicleItemListing" resultMap="gipis193VehicleItemMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT *
  						  FROM TABLE(GIPIS193_PKG.GET_VEHICLE_ITEM_LISTING(#plateNo#, #credBranch#, #dateType#, #asOfDate#, 
  						  													#fromDate#, #toDate#, #userId#))
  						WHERE 1=1
  						<isNotEmpty property="credBranch">
  						   	AND (DECODE(check_user_per_iss_cd2(null,#credBranch#,'GIPIS193', #userId#),1,DECODE(cred_branch,#credBranch#,check_user_per_iss_cd2(LINE_CD,cred_branch,'GIPIS193', #userId#),0),
  						     DECODE(cred_branch,null,0,DECODE(cred_branch,#credBranch#,check_user_per_iss_cd2(LINE_CD,iss_cd,'GIPIS193', #userId# ),0)))=1)
  						</isNotEmpty>
  						<isEmpty property="credBranch">
  						    AND (DECODE(check_user_per_iss_cd2(LINE_CD,iss_cd,'GIPIS193', #userId#),1,1,
                                                DECODE(cred_branch,NULL,0,check_user_per_iss_cd2(LINE_CD,cred_branch,'GIPIS193', #userId#)))=1)
  						</isEmpty>  						
  						<isNotNull property="filter">
  							<isNotEmpty prepend="AND" property="itemNo">
  								item_no = #itemNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="itemTitle">
  								UPPER(item_title) LIKE UPPER(#itemTitle#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="make">
  								UPPER(make) LIKE UPPER(#make#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="motorNo">
  								UPPER(motor_no) LIKE UPPER(#motorNo#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="serialNo">
  								UPPER(serial_no) LIKE UPPER(#serialNo#)
  							</isNotEmpty>
  						</isNotNull>
  						<isNotNull property="sortColumn">
  							<isEqual property="sortColumn" compareValue="itemNo">
  								ORDER BY item_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="itemTitle">
  								ORDER BY item_title
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="make">
  								ORDER BY make
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="motorNo">
  								ORDER BY motor_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="serialNo">
  								ORDER BY serial_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="tsiAmt">
  								ORDER BY tsi_amt
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="premAmt">
  								ORDER BY prem_amt
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="ASC">
  								ASC
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="DESC">
  								DESC
  							</isEqual>
  						</isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_
  						  FROM TABLE(GIPIS193_PKG.GET_VEHICLE_ITEM_LISTING(#plateNo#, #credBranch#, #dateType#, #asOfDate#, 
  						  													#fromDate#, #toDate#, #userId#))
  							WHERE 1=1
  						<isNotEmpty property="credBranch">
  						   	AND (DECODE(check_user_per_iss_cd2(null,#credBranch#,'GIPIS193', #userId#),1,DECODE(cred_branch,#credBranch#,check_user_per_iss_cd2(LINE_CD,cred_branch,'GIPIS193', #userId#),0),
  						     DECODE(cred_branch,null,0,DECODE(cred_branch,#credBranch#,check_user_per_iss_cd2(LINE_CD,iss_cd,'GIPIS193', #userId# ),0)))=1)
  						</isNotEmpty>
  						<isEmpty property="credBranch">
  						    AND (DECODE(check_user_per_iss_cd2(LINE_CD,iss_cd,'GIPIS193', #userId#),1,1,
                                                DECODE(cred_branch,NULL,0,check_user_per_iss_cd2(LINE_CD,cred_branch,'GIPIS193', #userId#)))=1)
  						</isEmpty>  
  						<isNotNull property="filter">
  							<isNotEmpty prepend="AND" property="itemNo">
  								item_no = #itemNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="itemTitle">
  								UPPER(item_title) LIKE UPPER(#itemTitle#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="make">
  								UPPER(make) LIKE UPPER(#make#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="motorNo">
  								UPPER(motor_no) LIKE UPPER(#motorNo#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="serialNo">
  								UPPER(serial_no) LIKE UPPER(#serialNo#)
  							</isNotEmpty>
  						</isNotNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<parameterMap class="java.util.HashMap" id="gipis193VehicleItemTotalsMap">
		<parameter property="plateNo"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="credBranch"	jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="dateType"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="asOfDate"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="fromDate"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="toDate"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="userId"		jdbcType="VARCHAR"		javaType="java.lang.String"		mode="IN"/>
		<parameter property="sumTsiAmt"		jdbcType="NUMERIC"		javaType="java.math.BigDecimal"	mode="OUT"/>
		<parameter property="sumPremAmt"	jdbcType="NUMERIC"		javaType="java.math.BigDecimal"	mode="OUT"/>
	</parameterMap>
	
	<procedure id="getGipis193VehicleItemTotals" parameterMap="gipis193VehicleItemTotalsMap">
		BEGIN
			GIPIS193_PKG.get_vehicle_item_totals(?, ?, ?, ?, ?, ?, ?, ?, ?);
		END;
	</procedure>
<!-- end GIPIS193 -->

<!-- GIACS213 : shan 12.04.2013 -->
	<resultMap class="java.util.HashMap" id="giacs213VehicleResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="policyId"			column="POLICY_ID"/>
		<result property="itemNo"			column="ITEM_NO"/>
		<result property="plateNo"			column="PLATE_NO"/>
		<result property="dspLineCd"		column="DSP_LINE_CD"/>
		<result property="dspSublineCd"		column="DSP_SUBLINE_CD"/>
		<result property="dspIssCd"			column="DSP_ISS_CD"/>
		<result property="dspIssueYy"		column="DSP_ISSUE_YY"/>
		<result property="dspPolSeqNo"		column="DSP_POL_SEQ_NO"/>
		<result property="dspEndtSeqNo"		column="DSP_ENDT_SEQ_NO"/>
		<result property="dspEndtType"		column="DSP_ENDT_TYPE"/>
		<result property="dspBillNo"		column="DSP_BILL_NO"/>
		<result property="dspPremSeqNo"		column="DSP_PREM_SEQ_NO"/>
		<result property="dspBillIssCd"		column="DSP_BILL_ISS_CD"/>
		<result property="dspAssdNo"		column="DSP_ASSD_NO"/>
		<result property="dspAssdName"		column="DSP_ASSD_NAME"/>
	</resultMap>

	<select id="getGiacs213VehicleListing" resultMap="giacs213VehicleResultMap" parameterClass="java.util.HashMap">
		SELECT *
		  FROM (SELECT a.*, b.count_, rownum rownum_
		  		  FROM (SELECT *
  						  FROM TABLE(GIACS213_PKG.GET_VEHICLE_LIST(#assdNo#, #userId#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="dspBillNo">
  								UPPER(dsp_bill_no) LIKE UPPER(#dspBillNo#)
  							</isNotEmpty>  							
  							<isNotEmpty prepend="AND" property="dspBillIssCd">
  								UPPER(dsp_bill_iss_cd) = UPPER(#dspBillIssCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspLineCd">
  								UPPER(dsp_line_cd) LIKE UPPER(#dspLineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspSublineCd">
  								UPPER(dsp_subline_cd) LIKE UPPER(#dspSublineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspIssCd">
  								UPPER(dsp_iss_cd) LIKE UPPER(#dspIssCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspIssueYy">
  								dsp_issue_yy = #dspIssueYy#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspPolSeqNo">
  								dsp_pol_seq_no = #dspPolSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspEndtSeqNo">
  								dsp_endt_seq_no = #dspEndtSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspEndtType">
  								UPPER(dsp_endt_type) LIKE UPPER(#dspEndtType#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="plateNo">
  								UPPER(plate_no) LIKE UPPER(#plateNo#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspAssdName">
  								UPPER(dsp_assd_name) LIKE UPPER(#dspAssdName#)
  							</isNotEmpty>
  						</isNotNull>
  						<isNotNull property="sortColumn">
  							<isEqual property="sortColumn" compareValue="dspBillNo">
  								ORDER BY dsp_bill_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspPremSeqNo">
  								ORDER BY dsp_prem_seq_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspBillIssCd">
  								ORDER BY dsp_bill_iss_cd
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspLineCd dspSublineCd dspIssCd dspIssueYy dspPolSeqNo">
  								ORDER BY dsp_line_cd
  									<isNotNull property="sortColumn">
  										<isEqual property="ascDescFlg" compareValue="ASC">
			  								ASC
			  							</isEqual>
			  							<isEqual property="ascDescFlg" compareValue="DESC">
			  								DESC
			  							</isEqual>
  									</isNotNull>,
  									dsp_subline_cd
  									<isNotNull property="sortColumn">
  										<isEqual property="ascDescFlg" compareValue="ASC">
			  								ASC
			  							</isEqual>
			  							<isEqual property="ascDescFlg" compareValue="DESC">
			  								DESC
			  							</isEqual>
  									</isNotNull>,
  									dsp_iss_cd
  									<isNotNull property="sortColumn">
  										<isEqual property="ascDescFlg" compareValue="ASC">
			  								ASC
			  							</isEqual>
			  							<isEqual property="ascDescFlg" compareValue="DESC">
			  								DESC
			  							</isEqual>
  									</isNotNull>,
  									dsp_issue_yy
  									<isNotNull property="sortColumn">
  										<isEqual property="ascDescFlg" compareValue="ASC">
			  								ASC
			  							</isEqual>
			  							<isEqual property="ascDescFlg" compareValue="DESC">
			  								DESC
			  							</isEqual>
  									</isNotNull>,
  									dsp_pol_seq_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspEndtSeqNo dspEndtType">
  								ORDER BY dsp_endt_seq_no
  									<isNotNull property="sortColumn">
  										<isEqual property="ascDescFlg" compareValue="ASC">
			  								ASC
			  							</isEqual>
			  							<isEqual property="ascDescFlg" compareValue="DESC">
			  								DESC
			  							</isEqual>
  									</isNotNull>,
  									dsp_endt_type
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspAssdNo">
  								ORDER BY dsp_assd_no
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="dspAssdName">
  								ORDER BY dsp_assd_name
  							</isEqual>
  							<isEqual property="sortColumn" compareValue="plateNo">
  								ORDER BY plate_no
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="ASC">
  								ASC
  							</isEqual>
  							<isEqual property="ascDescFlg" compareValue="DESC">
  								DESC
  							</isEqual>
  						</isNotNull>
		  		  		) a,
		  		  		(SELECT count(*) count_
  						  FROM TABLE(GIACS213_PKG.GET_VEHICLE_LIST(#assdNo#, #userId#))
  						<isNotNull property="filter">
  							WHERE 1=1
  							<isNotEmpty prepend="AND" property="dspBillNo">
  								UPPER(dsp_bill_no) LIKE UPPER(#dspBillNo#)
  							</isNotEmpty>  							
  							<isNotEmpty prepend="AND" property="dspBillIssCd">
  								UPPER(dsp_bill_iss_cd) = UPPER(#dspBillIssCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspLineCd">
  								UPPER(dsp_line_cd) LIKE UPPER(#dspLineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspSublineCd">
  								UPPER(dsp_subline_cd) LIKE UPPER(#dspSublineCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspIssCd">
  								UPPER(dsp_iss_cd) LIKE UPPER(#dspIssCd#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspIssueYy">
  								dsp_issue_yy = #dspIssueYy#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspPolSeqNo">
  								dsp_pol_seq_no = #dspPolSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspEndtSeqNo">
  								dsp_endt_seq_no = #dspEndtSeqNo#
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspEndtType">
  								UPPER(dsp_endt_type) LIKE UPPER(#dspEndtType#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="plateNo">
  								UPPER(plate_no) LIKE UPPER(#plateNo#)
  							</isNotEmpty>
  							<isNotEmpty prepend="AND" property="dspAssdName">
  								UPPER(dsp_assd_name) LIKE UPPER(#dspAssdName#)
  							</isNotEmpty>
  						</isNotNull>
		  		  		) b
		  )
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<select id="countVehiclesInsured" parameterClass="java.lang.Integer" resultClass="java.lang.Integer">
		SELECT GIACS213_PKG.COUNT_VEHICLES_INSURED(#assdNo#) FROM DUAL 
	</select>
<!-- end GIACS213  -->

	<!-- Added by apollo cruz 7.11.2014 
	     added hasAttachment -->
	<resultMap class="java.util.HashMap" id="motorCarsMap2" extends="BaseEntity.TableGridResultMap">
		<result property="itemNo" 			column="item_no"/>
		<result property="policyId" 		column="policy_id"/>
		<result property="motorNo" 			column="motor_no"/>
		<result property="plateNo" 			column="plate_no"/>
		<result property="serialNo" 		column="serial_no"/>
		<result property="modelYear" 		column="model_year"/>
		<result property="cocType" 			column="coc_type"/>
		<result property="cocYy" 			column="coc_yy"/>
		<result property="polFlag" 			column="pol_flag"/>
		<result property="status" 			column="status"/>
		<result property="policyNo" 		column="policy_no"/>
		<result property="cocSerialNo" 		column="coc_serial_no"/>
		<result property="hasAttachment" 	column="has_attachment"/>		
	</resultMap>
	
	<select id="getMotorCars2" resultMap="motorCarsMap2" parameterClass="java.util.HashMap">
	    SELECT * FROM TABLE(GIPIS100_PKG.get_motor_cars(#itemNo#, #motorNo#, #plateNo#, #serialNo#, #modelYear#, #cocType#, #cocSerialNo#,
	    												#cocYy#, #policyNo#, #polFlag#, #sortColumn#, #ascDescFlg#, #from#, #to#))
	</select>
</sqlMap>
