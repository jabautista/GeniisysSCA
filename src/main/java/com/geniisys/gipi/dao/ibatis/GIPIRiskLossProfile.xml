<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >
<sqlMap namespace="GIPIRiskLossProfile">
	
	<resultMap class="java.util.HashMap" id="gipiRiskLossProfileResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd" 		column="line_cd" />
		<result property="lineName" 	column="line_name" />
		<result property="sublineCd" 	column="subline_cd" />
		<result property="sublineName" 	column="subline_name" />
		<result property="credBranch" 	column="cred_branch" />
		<result property="issName" 		column="iss_name" />
		<result property="allLineTag"	column="all_line_tag" />
		<result property="dateFrom" 	column="date_from" />
		<result property="dateTo"		column="date_to" />
		<result property="lossDateFrom"	column="loss_date_from" />
		<result property="lossDateTo" 	column="loss_date_to" />
		<result property="noOfRange" 	column="no_of_range" />
	</resultMap>
	
	<select id="getGipiRiskLossProfile" resultMap="gipiRiskLossProfileResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis902_pkg.get_gipi_risk_loss_profile(#userId#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd">
									UPPER(line_cd) LIKE UPPER(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lineName">
									UPPER(line_name) LIKE UPPER(#lineName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd">
									UPPER(subline_cd) LIKE UPPER(#sublineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineName">
									UPPER(subline_name) LIKE UPPER(#sublineName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="credBranch">
									UPPER(cred_branch) LIKE UPPER(#credBranch#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issName">
									UPPER(iss_name) LIKE UPPER(#issName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dateFrom">
									TRUNC(date_from) = TO_DATE(#dateFrom#, 'mm-dd-yyyy')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dateTo">
									TRUNC(date_to) = TO_DATE(#dateTo#, 'mm-dd-yyyy')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossDateFrom">
									TRUNC(loss_date_from) = TO_DATE(#lossDateFrom#, 'mm-dd-yyyy')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossDateTo">
									TRUNC(loss_date_to) = TO_DATE(#lossDateTo#, 'mm-dd-yyyy')
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="lineCd lineName">
								ORDER BY line_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="sublineCd sublineName">
								ORDER BY subline_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="credBranch issName">
								ORDER BY cred_branch
							</isEqual>							
							<isEqual property="sortColumn" compareValue="dateFrom">
								ORDER BY date_from
							</isEqual>
							<isEqual property="sortColumn" compareValue="dateTo">
								ORDER BY date_to
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossDateFrom">
								ORDER BY loss_date_from
							</isEqual>
							<isEqual property="sortColumn" compareValue="lossDateTo">
								ORDER BY loss_date_from
							</isEqual>							
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis902_pkg.get_gipi_risk_loss_profile(#userId#))
						   <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="lineCd">
									UPPER(line_cd) LIKE UPPER(#lineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lineName">
									UPPER(line_name) LIKE UPPER(#lineName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineCd">
									UPPER(subline_cd) LIKE UPPER(#sublineCd#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="sublineName">
									UPPER(subline_name) LIKE UPPER(#sublineName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="credBranch">
									UPPER(cred_branch) LIKE UPPER(#credBranch#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="issName">
									UPPER(iss_name) LIKE UPPER(#issName#)
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dateFrom">
									TRUNC(date_from) = TO_DATE(#dateFrom#, 'mm-dd-yyyy')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="dateTo">
									TRUNC(date_to) = TO_DATE(#dateTo#, 'mm-dd-yyyy')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossDateFrom">
									TRUNC(loss_date_from) = TO_DATE(#lossDateFrom#, 'mm-dd-yyyy')
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="lossDateTo">
									TRUNC(loss_date_to) = TO_DATE(#lossDateTo#, 'mm-dd-yyyy')
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="gipiRiskLossProfileRangeResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="rangeFrom"	column="range_from" />
		<result property="rangeTo" 		column="range_to" />
	</resultMap>
	
	<select id="getGipiRiskLossProfileRange" resultMap="gipiRiskLossProfileRangeResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis902_pkg.get_risk_loss_profile_range(#lineCd#, #sublineCd#, #userId#))
							<isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="rangeFrom">
									range_from = #rangeFrom#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="rangeTo">
									range_to = #rangeTo#
								</isNotEmpty>
							</isNotNull>
							<isEqual property="sortColumn" compareValue="rangeFrom">
								ORDER BY range_from
							</isEqual>
							<isEqual property="sortColumn" compareValue="rangeTo">
								ORDER BY range_to
							</isEqual>							
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis902_pkg.get_risk_loss_profile_range(#lineCd#, #sublineCd#, #userId#))
						   <isNotNull property="filter">
							WHERE 1 = 1 
 								<isNotEmpty prepend="AND" property="rangeFrom">
									range_from = #rangeFrom#
								</isNotEmpty>
								<isNotEmpty prepend="AND" property="rangeTo">
									range_to = #rangeTo#
								</isNotEmpty>
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="gipis902LineLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd" 		column="line_cd" />
		<result property="lineName" 	column="line_name" />
	</resultMap>
	
	<select id="getGipis902LineLov" resultMap="gipis902LineLovResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis902_pkg.get_line_lov(#userId#))
							<isNotNull property="findText">
							WHERE UPPER(line_cd) LIKE UPPER(#findText#)
							   OR UPPER(line_name) LIKE UPPER(#findText#)
							</isNotNull>
							<isEqual property="sortColumn" compareValue="lineCd">
								ORDER BY line_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="lineName">
								ORDER BY line_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis902_pkg.get_line_lov(#userId#))
						   <isNotNull property="findText">
							WHERE UPPER(line_cd) LIKE UPPER(#findText#)
							   OR UPPER(line_name) LIKE UPPER(#findText#)
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="gipis902SublineLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="sublineCd" 	column="subline_cd" />
		<result property="sublineName" 	column="subline_name" />
		<result property="lineCd" 		column="line_cd" />
		<result property="lineName" 	column="line_name" />
	</resultMap>
	
	<select id="getGipis902SublineLov" resultMap="gipis902SublineLovResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis902_pkg.get_subline_lov(#userId#, #lineCd#))
							<isNotNull property="findText">
							WHERE UPPER(subline_cd) LIKE UPPER(#findText#)
							   OR UPPER(subline_name) LIKE UPPER(#findText#)
							   OR UPPER(line_cd) LIKE UPPER(#findText#)
							</isNotNull>
							<isEqual property="sortColumn" compareValue="sublineCd">
								ORDER BY subline_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="sublineName">
								ORDER BY subline_name
							</isEqual>
							<isEqual property="sortColumn" compareValue="lineCd">
								ORDER BY line_cd
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis902_pkg.get_subline_lov(#userId#, #lineCd#))
						   <isNotNull property="findText">
							WHERE UPPER(subline_cd) LIKE UPPER(#findText#)
							   OR UPPER(subline_name) LIKE UPPER(#findText#)
							   OR UPPER(line_cd) LIKE UPPER(#findText#)
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<resultMap class="java.util.HashMap" id="gipis902IssLovResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="issCd" 	column="iss_cd" />
		<result property="issName" 	column="iss_name" />
	</resultMap>
	
	<select id="getGipis902IssLov" resultMap="gipis902IssLovResultMap">
		SELECT *
			FROM (SELECT rownum rownum_,
						 b.count_, 
						 a.*
					FROM (SELECT *
							FROM TABLE (gipis902_pkg.get_iss_lov(#userId#))
							<isNotNull property="findText">
							WHERE UPPER(iss_cd) LIKE UPPER(#findText#)
							   OR UPPER(iss_name) LIKE UPPER(#findText#)
							</isNotNull>
							<isEqual property="sortColumn" compareValue="issCd">
								ORDER BY iss_cd
							</isEqual>
							<isEqual property="sortColumn" compareValue="issName">
								ORDER BY iss_name
							</isEqual>
							<isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
							</isNotNull>
						) a,
						(SELECT count(*) count_
						   FROM TABLE (gipis902_pkg.get_iss_lov(#userId#))
						   <isNotNull property="findText">
							WHERE UPPER(iss_cd) LIKE UPPER(#findText#)
							   OR UPPER(iss_name) LIKE UPPER(#findText#)
							</isNotNull>
						   ) b)
			WHERE rownum_ BETWEEN #from# AND #to#
	</select>
	
	<procedure id="deleteGIPIS902" parameterClass="map">
		BEGIN
		  	GIPIS902_PKG.delete(#lineCd#, #sublineCd#, #allLineTag#, #type#, #userId#);
        END;                                     
	</procedure>
	
	<procedure id="updateGIPIS902" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		  	GIPIS902_PKG.update_profile(#lineCd#, #sublineCd#, #userId#, #dateFrom#, #dateTo#,
		  	#lossDateFrom#, #lossDateTo#, #allLineTag#, #credBranch#);
        END;                                     
	</procedure>
	
	<procedure id="saveGIPIS902" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		  	GIPIS902_PKG.save_profile(#lineCd#, #sublineCd#, #userId#, #rangeFrom#, #rangeTo#,
		  		#dateFrom#, #dateTo#, #lossDateFrom#, #lossDateTo#, #allLineTag#, #credBranch#);
        END;                                     
	</procedure>
	
	<!-- <procedure id="updateGIPIS902GiclLossProfile" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		  	GIPIS902_PKG.update_gicl_loss_profile(#lineCd#, #dateFrom#, #dateTo#, #lossDateFrom#, #lossDateTo#);
        END;                                     
	</procedure> -->
	
	<procedure id="gipis902ExtractRiskProfile" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		  	p_risk_loss_profile.extract_risk_profile(#userId#,
  	                                                 #lineCd#,
	                                                 #sublineCd#, 
	                                                 TO_DATE(#dateFrom#, 'mm-dd-yyyy'), 
	                                                 TO_DATE(#dateTo#, 'mm-dd-yyyy'),
	                                                 #paramDate#,
	                                                 #allLineTag#,
	                                                 #byTarf#, 
	                                                 #credBranch#,
	                                                 #incExpired#, 
	                                                 #incEndt#,
	                                                 TO_DATE(#lossDateFrom#, 'mm-dd-yyyy'),
	                                                 TO_DATE(#lossDateTo#, 'mm-dd-yyyy'),
	                                                 #claimDate#);
        END;                                     
	</procedure>
	
	<procedure id="gipis902ExtractRiskProfileItem" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		  	p_risk_loss_profile_item.extract_risk_profile_item(#userId#,
		  	                                                  #lineCd#,
			                                                  #sublineCd#, 
			                                                  TO_DATE(#dateFrom#, 'mm-dd-yyyy'), 
			                                                  TO_DATE(#dateTo#, 'mm-dd-yyyy'),
			                                                  #paramDate#,
			                                                  #allLineTag#,
			                                                  #byTarf#, 
			                                                  #credBranch#,
			                                                  #incExpired#, 
			                                                  #incEndt#);
        END;                                     
	</procedure>
	
	<procedure id="gipis902LossProfileExtractLossAmt" parameterClass="map">
		BEGIN
			giis_users_pkg.app_user := #userId#;
		  	gipis902_pkg.loss_profile_extract_loss_amt(#paramDate#,
													   #claimDate#,
													   #lineCd#,
													   #sublineCd#,
													   TO_DATE(#dateTo#, 'mm-dd-yyyy'),
													   TO_DATE(#dateFrom#, 'mm-dd-yyyy'),
													   TO_DATE(#lossDateTo#, 'mm-dd-yyyy'),
													   TO_DATE(#lossDateFrom#, 'mm-dd-yyyy'),
													   #allLineTag#,
													   #userId#);
        END;                                     
	</procedure>
</sqlMap>