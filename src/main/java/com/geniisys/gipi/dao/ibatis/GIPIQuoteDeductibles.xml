<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIPIQuoteDeductibles">

  <cacheModel id="oneDayClient" type="MEMORY">
    <flushInterval hours="24"/>
    <property name="reference-type" value="WEAK"/>
  </cacheModel>
	
	<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles -->
	<!--nieko 02162016, added new fields-->
	<resultMap id="GIPIQuoteDeductibles" class="com.geniisys.gipi.entity.GIPIQuoteDeductibles" >
		<result column="QUOTE_ID"				property="quoteId"				jdbcType="NUMBER" />
		<result column="ITEM_NO"				property="itemNo"				jdbcType="NUMBER" />
		<result column="PERIL_CD"				property="perilCd"				jdbcType="NUMBER" />
		<result column="DED_DEDUCTIBLE_CD"		property="dedDeductibleCd"		jdbcType="NUMBER" />
		<result column="DEDUCTIBLE_TEXT"		property="deductibleText"		jdbcType="VARCHAR2" />
		<result column="DEDUCTIBLE_AMT"			property="deductibleAmt"		jdbcType="NUMBER" />
		<result column="DEDUCTIBLE_RT"			property="deductibleRate"		jdbcType="NUMBER" />
		<result column="DED_LINE_CD"			property="dedLineCd"			jdbcType="VARCHAR2" />
		<result column="DED_SUBLINE_CD"			property="dedSublineCd"			jdbcType="VARCHAR2" />
		<result column="AGGREGATE_SW"			property="aggregateSW"			jdbcType="VARCHAR2" />
		<result column="CEILING_SW"				property="ceilingSw"			jdbcType="VARCHAR2" />
		<result column="CREATE_DATE"			property="createDate"			jdbcType="DATE" />
		<result column="CREATE_USER"			property="createUser"			jdbcType="VARCHAR2" />
		<result column="MAX_AMT"				property="maxAmt"				jdbcType="NUMBER" />
		<result column="MIN_AMT"				property="minAmt"				jdbcType="NUMBER" />
		<result column="RANGE_SW"				property="rangeSw"				jdbcType="VARCHAR2" />
<!-- 	<result column="USER_ID"				property="userId"				jdbcType="VARCHAR2" />
		<result column="LAST_UPDATE"			property="lastUpdate"			jdbcType="DATE" />	 -->
	</resultMap>
	
	<resultMap id="GIPIQuoteDeductiblesSummary" class="com.geniisys.gipi.entity.GIPIQuoteDeductiblesSummary" >
		<result column="QUOTE_ID"				property="quoteId"				jdbcType="NUMBER" />
		<result column="ITEM_NO"				property="itemNo"				jdbcType="NUMBER" />
		<result column="PERIL_CD"				property="perilCd"				jdbcType="NUMBER" />
		<result column="PERIL_NAME"				property="perilName"			jdbcType="VARCHAR2" />
		<result column="DED_DEDUCTIBLE_CD"		property="dedDeductibleCd"		jdbcType="NUMBER" />
		<result column="DEDUCTIBLE_TITLE"		property="deductibleTitle"		jdbcType="VARCHAR2" />
		<result column="DEDUCTIBLE_TEXT"		property="deductibleText"		jdbcType="VARCHAR2" />
		<result column="DEDUCTIBLE_AMT"			property="deductibleAmt"		jdbcType="NUMBER" />
		<result column="DEDUCTIBLE_RT"			property="deductibleRate"		jdbcType="NUMBER" />
		<result column="DED_TYPE"  				property="deductibleType"		jdbcType="VARCHAR2"/>
	</resultMap>
	
	<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles -->
	<resultMap id="GIPIQuoteDeductiblesSummary2" class="java.util.HashMap">
		<result column="QUOTE_ID"				property="quoteId"				jdbcType="NUMBER" />
		<result column="ITEM_NO"				property="itemNo"				jdbcType="NUMBER" />
		<result column="PERIL_CD"				property="perilCd"				jdbcType="NUMBER" />
		<result column="PERIL_NAME"				property="perilName"			jdbcType="VARCHAR2" />
		<result column="DED_DEDUCTIBLE_CD"		property="dedDeductibleCd"		jdbcType="NUMBER" />
		<result column="DEDUCTIBLE_TITLE"		property="deductibleTitle"		jdbcType="VARCHAR2" />
		<result column="DEDUCTIBLE_TEXT"		property="deductibleText"		jdbcType="VARCHAR2" />
		<result column="DEDUCTIBLE_AMT"			property="deductibleAmt"		jdbcType="NUMBER" />
		<result column="DEDUCTIBLE_RT"			property="deductibleRate"		jdbcType="NUMBER" />
		<result column="DED_TYPE"  				property="deductibleType"		jdbcType="VARCHAR2"/>	
		<result column="AGGREGATE_SW"			property="aggregateSW"			jdbcType="VARCHAR2" />
		<result column="CEILING_SW"				property="ceilingSw"			jdbcType="VARCHAR2" />	
		<result column="CREATE_DATE"			property="createDate"			jdbcType="DATE" />
		<result column="CREATE_USER"			property="createUser"			jdbcType="VARCHAR2" />
		<result column="MAX_AMT"				property="maxAmt"				jdbcType="NUMBER" />
		<result column="MIN_AMT"				property="minAmt"				jdbcType="NUMBER" />
		<result column="RANGE_SW"				property="rangeSw"				jdbcType="VARCHAR2" />
		<result column="TOTAL_DEDUCTIBLE"		property="totalDeductible"		jdbcType="NUMBER" />	
	</resultMap>	
	
	<parameterMap class="map" id="checkQuoteDeductibleParamMap">
		<parameter property="quoteId" 			jdbcType="INT" 		javaType="java.lang.Integer" 	mode="IN"/>
		<parameter property="itemNo"			jdbcType="INT"		javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="deductibleType"	jdbcType="VARCHAR"	javaType="java.lang.String"		mode="IN"/>
		<parameter property="deductibleLevel"	jdbcType="INT"		javaType="java.lang.Integer"	mode="IN"/>
		<parameter property="message"			jdbcType="VARCHAR"	javaType="java.lang.String"		mode="INOUT"/>
	</parameterMap>
	
	<resultMap id="GIPIQuoteItmPeril" class="java.util.HashMap">
		<result column="ITEM_NO"				property="itemNo"				jdbcType="VARCHAR" />
		<result column="PERIL_CD"				property="perilCd"				jdbcType="VARCHAR" />
		<result column="PERIL_NAME"				property="perilName"			jdbcType="VARCHAR" />
		<result column="PERIL_TYPE"				property="perilType"			jdbcType="VARCHAR" />
		<result column="TSI_AMT"				property="tsiAmt"				jdbcType="NUMBER" />
	</resultMap>
	<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles end-->
		
	<resultMap id="GIISDeductibleDesc" class="com.geniisys.common.entity.GIISDeductibleDesc" >
		<result column="DEDUCTIBLE_TITLE"		property="deductibleTitle"		jdbcType="VARCHAR2"/>
		<result column="LINE_CD"				property="lineCd"				jdbcType="VARCHAR2"/>
		<result column="SUBLINE_CD"				property="sublineCd"			jdbcType="VARCHAR2"/>
		<result column="DEDUCTIBLE_CD"			property="deductibleCd"			jdbcType="VARCHAR2"/>
		<result column="DEDUCTIBLE_TEXT"		property="deductibleText"		jdbcType="VARCHAR2"/>
		<result column="DEDUCTIBLE_AMT"			property="deductibleAmt"		jdbcType="NUMBER"/>
		<result column="DEDUCTIBLE_RT"			property="deductibleRate"		jdbcType="NUMBER"/>
		<result column="DED_TYPE"  				property="deductibleType"		jdbcType="VARCHAR2"/>
		<result column="MIN_AMT"				property="minimumAmount"		jdbcType="NUMBER"/>
		<result column="MAX_AMT"				property="maximumAmount"		jdbcType="NUMBER"/>
		<result column="RANGE_SW" 				property="rangeSw"				jdbcType="VARCHAR2"/>
	</resultMap>
	
	<resultMap id="GIISDeductibleAmt" class="com.geniisys.gipi.entity.GIPIQuoteDeductibles" >
		<result column="DEDUCTIBLE_AMT"			property="deductibleAmt"		jdbcType="NUMBER"/>
	</resultMap>

	<select id="getGIPIQuoteDeductSummary" resultMap="GIPIQuoteDeductiblesSummary">
		SELECT * FROM TABLE(Gipi_Quote_Deduct_Pkg.get_gipi_quote_deduct(#quoteId#)) <!--nieko 02162016, change from #value# to #quoteId# -->
	</select>
	
	<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles -->
	<select id="getAllGIPIQuoteDeduct" resultMap="GIPIQuoteDeductiblesSummary2">
		SELECT a.*,(SELECT SUM (deductible_amt)
          FROM TABLE
                   (gipi_quote_deduct_pkg.get_all_gipi_quote_deduct (#quoteId#)
                   )) total_deductible       
  		FROM TABLE (gipi_quote_deduct_pkg.get_all_gipi_quote_deduct (#quoteId#)) a
  		<isNotNull property="filter">
  			WHERE 1 = 1
  			<isNotEmpty prepend="AND"  property="deductibleTitle">
									deductible_title = #deductibleTitle#
			</isNotEmpty>
			<isNotEmpty prepend="AND"  property="deductibleText">
									upper(deductible_text) LIKE upper(#deductibleText#)
			</isNotEmpty>
  		</isNotNull>	
  		<isEqual property="sortColumn" compareValue="deductibleTitle">
			              		ORDER BY deductible_title
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleText">
			              		ORDER BY deductible_text
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleRate">
			              		ORDER BY deductible_rt
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleAmt">
			              		ORDER BY deductible_amt
		</isEqual>
		<isNotNull property="sortColumn">
         		<isEqual property="ascDescFlg" compareValue="ASC">
         			ASC
         		</isEqual>
         		<isEqual property="ascDescFlg" compareValue="DESC">
         			DESC
         		</isEqual>
        </isNotNull>
	</select>
	
	<select id="getItemGIPIQuoteDeduct" resultMap="GIPIQuoteDeductiblesSummary2">
		SELECT a.*,(SELECT SUM (deductible_amt)
          FROM TABLE
                   (Gipi_Quote_Deduct_Pkg.get_item_gipi_quote_deduct(#quoteId#, #itemNo#)
                   )) total_deductible       
  		FROM TABLE (Gipi_Quote_Deduct_Pkg.get_item_gipi_quote_deduct(#quoteId#, #itemNo#)) a
  		<isNotNull property="filter">
  			WHERE 1 = 1
  			<isNotEmpty prepend="AND"  property="deductibleTitle">
									deductible_title = #deductibleTitle#
			</isNotEmpty>
			<isNotEmpty prepend="AND"  property="deductibleText">
									upper(deductible_text) LIKE upper(#deductibleText#)
			</isNotEmpty>
  		</isNotNull>	
  		<isEqual property="sortColumn" compareValue="deductibleTitle">
			              		ORDER BY deductible_title
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleText">
			              		ORDER BY deductible_text
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleRate">
			              		ORDER BY deductible_rt
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleAmt">
			              		ORDER BY deductible_amt
		</isEqual>
		<isNotNull property="sortColumn">
         		<isEqual property="ascDescFlg" compareValue="ASC">
         			ASC
         		</isEqual>
         		<isEqual property="ascDescFlg" compareValue="DESC">
         			DESC
         		</isEqual>
        </isNotNull>
	</select>	
	
	<select id="getPerilItemGIPIQuoteDeduct" resultMap="GIPIQuoteDeductiblesSummary2">
		SELECT a.*,(SELECT SUM (deductible_amt)
          FROM TABLE
                   (Gipi_Quote_Deduct_Pkg.get_peril_gipi_quote_deduct(#quoteId#, #itemNo#, #perilCd#)
                   )) total_deductible       
  		FROM TABLE (Gipi_Quote_Deduct_Pkg.get_peril_gipi_quote_deduct(#quoteId#, #itemNo#, #perilCd#)) a
  		<isNotNull property="filter">
  			WHERE 1 = 1
  			<isNotEmpty prepend="AND"  property="deductibleTitle">
									deductible_title = #deductibleTitle#
			</isNotEmpty>
			<isNotEmpty prepend="AND"  property="deductibleText">
									upper(deductible_text) LIKE upper(#deductibleText#)
			</isNotEmpty>
  		</isNotNull>	
  		<isEqual property="sortColumn" compareValue="deductibleTitle">
			              		ORDER BY deductible_title
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleText">
			              		ORDER BY deductible_text
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleRate">
			              		ORDER BY deductible_rt
		</isEqual>
		<isEqual property="sortColumn" compareValue="deductibleAmt">
			              		ORDER BY deductible_amt
		</isEqual>
		<isNotNull property="sortColumn">
         		<isEqual property="ascDescFlg" compareValue="ASC">
         			ASC
         		</isEqual>
         		<isEqual property="ascDescFlg" compareValue="DESC">
         			DESC
         		</isEqual>
        </isNotNull>
	</select>
	
	<procedure id="checkQuoteDeductible" parameterMap="checkQuoteDeductibleParamMap">
		{ CALL Gipi_Quote_Deduct_Pkg.check_quote_deductible(?, ?, ?, ?, ?) }
	</procedure>
	
	<select id="getQuoteItemPeril" resultMap="GIPIQuoteItmPeril">
		SELECT * FROM TABLE(gipi_quote_deduct_pkg.get_quote_itmperl_list(#quoteId#))
	</select>
	
	<procedure id="deleteQuoteDeductiblesBaseTSI" parameterClass="java.lang.Integer">
		BEGIN
			Gipi_Quote_Deduct_Pkg.del_quote_deduct_base_tsi(#quoteId#);
		END;
	</procedure>
	<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles end-->
	
	<select id="getDeductibleList"	resultMap="GIISDeductibleDesc">
		SELECT * FROM TABLE(Giis_Deductible_List_Pkg.get_deductible_list(#lineCd#, #sublineCd#))
	</select>
	
	<select id="getDeductibleSum" resultMap="GIISDeductibleAmt">
		SELECT SUM(DEDUCTIBLE_AMT) AS DEDUCTIBLE_AMT FROM GIPI_QUOTE_DEDUCTIBLES WHERE QUOTE_ID = #quoteId#
	</select>
	
	<procedure id="saveGIPIQuoteDeductibles" parameterClass="com.geniisys.gipi.entity.GIPIQuoteDeductibles">
		DECLARE
			deduct GIPI_QUOTE_DEDUCTIBLES%ROWTYPE;
		BEGIN
		 	deduct.QUOTE_ID := #quoteId#;
		 	deduct.ITEM_NO := #itemNo#;
		 	deduct.PERIL_CD := #perilCd#;
			deduct.DED_DEDUCTIBLE_CD := #dedDeductibleCd#;
		 	deduct.DEDUCTIBLE_TEXT := #deductibleText#;
			deduct.DEDUCTIBLE_AMT := #deductibleAmt#;
			deduct.DEDUCTIBLE_RT := #deductibleRate#;
			deduct.USER_ID := #userId#;
			deduct.LAST_UPDATE := #lastUpdate#;
			
			<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles -->
			deduct.DED_LINE_CD := #dedLineCd#;
		 	deduct.DED_SUBLINE_CD := #dedSublineCd#;
		 	deduct.AGGREGATE_SW := #aggregateSW#;
			deduct.CEILING_SW := #ceilingSw#;
			deduct.MAX_AMT := #maxAmt#;
			deduct.MIN_AMT := #minAmt#;
			deduct.RANGE_SW := #rangeSw#;
			<!--nieko 02162016 UW-SPECS-2015-086 Quotation Deductibles end-->
			
			giis_users_pkg.app_user := #userId#; <!--replaced appUser by userId christian 03/12/2013-->
			Gipi_Quote_Deduct_Pkg.set_gipi_quote_deduct(deduct);
		END;	
	</procedure>
	
	<procedure id="deleteGIPIQuoteDeductibles" parameterClass="java.util.HashMap">
		BEGIN
			Gipi_Quote_Deduct_Pkg.del_gipi_quote_deduct(#quoteId#);
		END;
	</procedure>
	
	<delete id="deleteGIPIQuoteDeductibles4" parameterClass="java.util.HashMap">
		DELETE FROM gipi_quote_deductibles
		      WHERE quote_id = #quoteId#
		      <isNotEmpty property="itemNo">
		      	AND item_no = #itemNo#
		      </isNotEmpty>
		      <isNotEmpty property="perilCd">
		      	AND peril_cd = #perilCd#
		      </isNotEmpty>
		      <isNotEmpty property="dedDeductibleCd">
		      	AND ded_deductible_cd = #dedDeductibleCd#
		      </isNotEmpty>
	</delete>
	
	<procedure id="deleteGIPIQuoteDeductibles2" parameterClass="com.geniisys.gipi.entity.GIPIQuoteDeductibles">
		BEGIN
			Gipi_Quote_Deduct_Pkg.del_gipi_quote_deduct2(#quoteId#, #perilCd#, #itemNo#);
		END;
	</procedure>
	
	<procedure id="deleteGIPIQuoteDeductibles3" parameterClass="com.geniisys.gipi.entity.GIPIQuoteDeductibles">
		BEGIN
			Gipi_Quote_Deduct_Pkg.del_gipi_quote_deduct3(#quoteId#, #itemNo#, #perilCd#, #dedDeductibleCd#);
		END;
	</procedure>
	
	<procedure id="getDeductiblesPerItem" resultMap="GIPIQuoteDeductibles" parameterClass="java.lang.Integer">
		SELECT * FROM TABLE(gipi_quote_deduct_pkg.get_quote_deduct_with_tsi(#quoteId#))
	</procedure>
	
	<select id="getGipiQouteDeductiblesForPack" resultMap="GIPIQuoteDeductiblesSummary">
		SELECT * FROM TABLE(GIPI_QUOTE_DEDUCT_PKG.get_gipi_quote_deduct_for_pack(#packQuoteId#))
	</select>
	
</sqlMap>