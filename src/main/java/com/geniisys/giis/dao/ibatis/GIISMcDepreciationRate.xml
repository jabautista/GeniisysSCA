<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIISMcDepreciationRate">
	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>
	
 	<resultMap id="GIISMcDepreciationRateResult" class="com.geniisys.giis.entity.GIISMcDepreciationRate" extends="BaseEntity.TableGridResultMap">
 		<result property="id" 				column="ID" />
		<result property="carCompanyCd"		column="CAR_COMPANY_CD" /> 		
 		<result property="carCompany" 		column="CAR_COMPANY" />
		<result property="makeCd"			column="MAKE_CD" /> 		
		<result property="make"				column="MAKE" />
		<result property="modelYear"		column="MODEL_YEAR" />		
		<result property="seriesCd"			column="SERIES_CD" />		
		<result property="engineSeries"		column="ENGINE_SERIES" /> 
		<result property="lineCd"		    column="LINE_CD" />		
		<result property="sublineCd"		column="SUBLINE_CD" />
		<result property="sublineName"		column="SUBLINE_NAME" />
		<result property="sublineTypeCd"	column="SUBLINE_TYPE_CD" />
		<result property="sublineType"		column="SUBLINE_TYPE" />
		<result property="rate"			    column="RATE" />
		<result property="deleteSw" 	 	column="DELETE_SW" />
		<result property="userId"			column="USER_ID" />
		<result property="lastUpdate"   	column="LAST_UPDATE" />	
	</resultMap>
  
  	<select id="getGIISS224SourceList" resultMap ="GIISMcDepreciationRateResult">
  		SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT *
		          		  FROM TABLE(GIISS224_PKG.get_mc_dep_rate_list(#appUser#))
		          		  <isNotNull property="filter">
		          		  	WHERE 1 = 1
		          		  	  	<isNotEmpty prepend="AND" property="carCompany">
		          		  			UPPER(CAR_COMPANY) LIKE UPPER(#carCompany#)
		          		  	  	</isNotEmpty>
		          		  	  	<isNotEmpty prepend="AND" property="make">
		          		  			UPPER(MAKE) LIKE UPPER(#make#)
		          		  	  	</isNotEmpty>
		          		  	  	<isNotEmpty prepend="AND" property="modelYear">
		          		  			UPPER(MODEL_YEAR) LIKE UPPER(#modelYear#)
		          		  	  	</isNotEmpty>			          		  	  	
		          		  	  	<isNotEmpty prepend="AND" property="engineSeries">
		          		  			UPPER(ENGINE_SERIES) LIKE UPPER(#engineSeries#)
		          		  	  	</isNotEmpty>	
		          		  	  	<isNotEmpty prepend="AND" property="lineCd">
		          		  			UPPER(LINE_CD) LIKE UPPER(#lineCd#)
		          		  	  	</isNotEmpty>			          		  	  		
		          		  	  	<isNotEmpty prepend="AND" property="sublineCd">
		          		  			UPPER(SUBLINE_TYPE) LIKE UPPER(#sublineCd#)
		          		  	  	</isNotEmpty>	
		          		  	  	<isNotEmpty prepend="AND" property="sublineName">
		          		  			UPPER(SUBLINE_TYPE) LIKE UPPER(#sublineName#)
		          		  	  	</isNotEmpty>			          		  	  	
		          		  	  	<isNotEmpty prepend="AND" property="sublineType">
		          		  			UPPER(SUBLINE_TYPE) LIKE UPPER(#sublineType#)
		          		  	  	</isNotEmpty>	
		           		  	  	<isNotEmpty prepend="AND" property="rate">
		          		  			UPPER(RATE) LIKE UPPER(#rate#)
		          		  	  	</isNotEmpty>			          		  	  			          		  	  			          		  	  	          		  	  	
		          		  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="carCompany">
			              		ORDER BY CAR_COMPANY
			              </isEqual>
		          		  <isEqual property="sortColumn" compareValue="make">
			              		ORDER BY MAKE
			              </isEqual>
		          		  <isEqual property="sortColumn" compareValue="modelYear">
			              		ORDER BY MODEL_YEAR
			              </isEqual>			              
		          		  <isEqual property="sortColumn" compareValue="engineSeries">
			              		ORDER BY ENGINE_SERIES
			              </isEqual>		
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY LINE_CD
			              </isEqual>
		          		  <isEqual property="sortColumn" compareValue="sublineName">
			              		ORDER BY SUBLINE_NAME
			              </isEqual>			              
		          		  <isEqual property="sortColumn" compareValue="sublineType">
			              		ORDER BY SUBLINE_TYPE
			              </isEqual>
		          		  <isEqual property="sortColumn" compareValue="rate">
			              		ORDER BY RATE
			              </isEqual>				              	              			              
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIISS224_PKG.get_mc_dep_rate_list(#appUser#))
		                  <isNotNull property="filter">
		          		  	WHERE 1 = 1		          		  	  	
		          		  	  	<isNotEmpty prepend="AND" property="carCompany">
		          		  			UPPER(CAR_COMPANY) LIKE UPPER(#carCompany#)
		          		  	  	</isNotEmpty>
		          		  	  	<isNotEmpty prepend="AND" property="make">
		          		  			UPPER(MAKE) LIKE UPPER(#make#)
		          		  	  	</isNotEmpty>
		          		  	  	<isNotEmpty prepend="AND" property="modelYear">
		          		  			UPPER(MODEL_YEAR) LIKE UPPER(#modelYear#)
		          		  	  	</isNotEmpty>			          		  	  	
		          		  	  	<isNotEmpty prepend="AND" property="engineSeries">
		          		  			UPPER(ENGINE_SERIES) LIKE UPPER(#engineSeries#)
		          		  	  	</isNotEmpty>		
		          		  	  	<isNotEmpty prepend="AND" property="lineCd">
		          		  			UPPER(SUBLINE_TYPE) LIKE UPPER(#lineCd#)
		          		  	  	</isNotEmpty>	
		          		  	  	<isNotEmpty prepend="AND" property="sublineName">
		          		  			UPPER(SUBLINE_TYPE) LIKE UPPER(#sublineName#)
		          		  	  	</isNotEmpty>			          		  	  	
		          		  	  	<isNotEmpty prepend="AND" property="sublineType">
		          		  			UPPER(SUBLINE_TYPE) LIKE UPPER(#sublineType#)
		          		  	  	</isNotEmpty>	
		           		  	  	<isNotEmpty prepend="AND" property="rate">
		          		  			UPPER(RATE) LIKE UPPER(#rate#)
		          		  	  	</isNotEmpty>			          		  	  	
		          		  </isNotNull>
		                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>	  	
	
	<resultMap id="getGIISS224CarCompanyLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	  	<result column="CAR_COMPANY_CD"			property="carCompanyCd"/>
	  	<result column="CAR_COMPANY"			property="carCompany"/>
  	</resultMap>	
  	
	<select id="getGIISS224CarCompany" resultMap="getGIISS224CarCompanyLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_car_company_lov(#findText#))
						  <isEqual property="sortColumn" compareValue="carCompanyCd">
								ORDER BY CAR_COMPANY_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="carCompany">
								ORDER BY CAR_COMPANY
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_car_company_lov(#findText#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  	
	
	<resultMap id="getGIISS224MakeLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	  	<result column="MAKE_CD"			property="makeCd"/>
	  	<result column="MAKE"				property="make"/>
	  	<result column="SUBLINE_CD"  		property="sublineCd"/>
  	</resultMap>	
  	
	<select id="getGIISS224Make" resultMap="getGIISS224MakeLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_make_lov(#findText#,#carCompanyCd#))
						  <isEqual property="sortColumn" compareValue="makeCd">
								ORDER BY MAKE_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="make">
								ORDER BY MAKE
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_make_lov(#findText#,#carCompanyCd#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  		
  	
	<resultMap id="getGIISS224EngineSeriesLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	  	<result column="SERIES_CD"			property="seriesCd"/>
	  	<result column="ENGINE_SERIES"				property="engineSeries"/>
  	</resultMap>	
  	
	<select id="getGIISS224EngineSeries" resultMap="getGIISS224EngineSeriesLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_engine_lov(#findText#,#carCompanyCd#,#makeCd#))
						  <isEqual property="sortColumn" compareValue="seriesCd">
								ORDER BY SERIES_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="engineSeries">
								ORDER BY ENGINE_SERIES
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_engine_lov(#findText#,#carCompanyCd#,#makeCd#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  	  	
	
 	<resultMap id="getGIISS224SublineLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	  	<result column="SUBLINE_CD"			        property="sublineCd"/>
	  	<result column="SUBLINE_NAME"				property="sublineName"/>
  	</resultMap>		
	
	<select id="getGIISS224Subline" resultMap="getGIISS224SublineLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_subline_lov(#findText#,#lineCd#))
						  <isEqual property="sortColumn" compareValue="sublineCd">
								ORDER BY SUBLINE_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="sublineName">
								ORDER BY SUBLINE_NAME
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_subline_lov(#findText#,#lineCd#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  		
	
 	<resultMap id="getGIISS224SublineTypeLovMap" class="java.util.HashMap" extends="BaseEntity.TableGridResultMap">
	  	<result column="SUBLINE_TYPE_CD"			property="sublineTypeCd"/>
	  	<result column="SUBLINE_TYPE"				property="sublineType"/>
  	</resultMap>		
	
	<select id="getGIISS224SublineType" resultMap="getGIISS224SublineTypeLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_subline_type_lov(#findText#,#sublineCd#))
						  <isEqual property="sortColumn" compareValue="sublineTypeCd">
								ORDER BY SUBLINE_TYPE_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="sublineType">
								ORDER BY SUBLINE_TYPE
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_subline_type_lov(#findText#,#sublineCd#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  			
	
   	<procedure id="setGiisMcDr" parameterClass="com.geniisys.giis.entity.GIISMcDepreciationRate">
		DECLARE
		  v_mcdr GIIS_MC_DEP_RATE%ROWTYPE;
		BEGIN
		  giis_users_pkg.app_user := #appUser#;
		  
		  v_mcdr.id 					:= #id#;
		  v_mcdr.car_company_cd 		:= #carCompanyCd#;
		  v_mcdr.make_cd    			:= #makeCd#;
		  v_mcdr.series_cd   			:= #seriesCd#;
          v_mcdr.model_year  			:= #modelYear#;
	      v_mcdr.line_cd		        := #lineCd#;          
          v_mcdr.subline_cd		        := #sublineCd#;
          v_mcdr.subline_type_cd		:= #sublineTypeCd#;
          v_mcdr.rate					:= #rate#;
          v_mcdr.delete_sw    			:= #deleteSw#;
          v_mcdr.user_id 				:= #appUser#;          
		  
		  GIISS224_PKG.set_giis_mcdr(v_mcdr);
		END;
	</procedure>
	
	<select id="validateAddMcDepRate" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIISS224_PKG.validate_add_mc_dep_rate_rec(#id#,#carCompanyCd#,#makeCd#,#seriesCd#,#modelYear#,#lineCd#,#sublineCd#,#sublineTypeCd#) FROM DUAL
	</select>	
	
	<select id="validateMcPerilRec" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT GIISS224_PKG.validate_peril_rec(#id#) FROM DUAL
	</select>			
	
   	<procedure id="deleteMcPerilRec" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		BEGIN		  
		  GIISS224_PKG.delete_peril_rec(#id#);
		END;
	</procedure>	
	
 	<resultMap id="GIISMcDepreciationRatePerilResult" class="com.geniisys.giis.entity.GIISMcDepreciationPeril" extends="BaseEntity.TableGridResultMap">
 		<result property="id" 				column="ID" />
		<result property="lineCd"		    column="LINE_CD" /> 		
 		<result property="perilCd" 		    column="PERIL_CD" />
		<result property="perilName"	    column="PERIL_NAME" /> 		
		<result property="userId"			column="USER_ID" />
		<result property="lastUpdate"   	column="LAST_UPDATE" />	
	</resultMap>	

  	<select id="getGIISMcDrPeril" resultMap ="GIISMcDepreciationRatePerilResult">
  		SELECT *
		  FROM (SELECT rownum rownum_, b.count_, a.* 
		          FROM (SELECT ID, LINE_CD, PERIL_CD, PERIL_NAME, USER_ID, LAST_UPDATE
		          		  FROM TABLE(GIISS224_PKG.get_mc_dep_rate_peril(#id#,#lineCd#))
		          		  <isNotNull property="filter">
		          		  	WHERE 1 = 1
		          		  	  	<isNotEmpty prepend="AND" property="lineCd">
		          		  			UPPER(LINE_CD) LIKE UPPER(#lineCd#)
		          		  	  	</isNotEmpty>
		          		  	  	<isNotEmpty prepend="AND" property="perilName">
		          		  			UPPER(PERIL_NAME) LIKE UPPER(#perilName#)
		          		  	  	</isNotEmpty>			          		  	  			          		  	  			          		  	  	          		  	  	
		          		  </isNotNull>
		          		  <isEqual property="sortColumn" compareValue="lineCd">
			              		ORDER BY LINE_CD
			              </isEqual>
		          		  <isEqual property="sortColumn" compareValue="perilName">
			              		ORDER BY PERIL_NAME
			              </isEqual>			              	              			              
			          	  <isNotNull property="sortColumn">
			              		<isEqual property="ascDescFlg" compareValue="ASC">
			              			ASC
			              		</isEqual>
			              		<isEqual property="ascDescFlg" compareValue="DESC">
			              			DESC
			              		</isEqual>
			              </isNotNull>
		                  ) a, 
		               (SELECT count(*) count_ 
		                  FROM TABLE (GIISS224_PKG.get_mc_dep_rate_peril(#id#,#lineCd#))
		                  <isNotNull property="filter">
		          		  	WHERE 1 = 1		          		  	  	
		          		  	  	<isNotEmpty prepend="AND" property="lineCd">
		          		  			UPPER(LINE_CD) LIKE UPPER(#lineCd#)
		          		  	  	</isNotEmpty>
		          		  	  	<isNotEmpty prepend="AND" property="perilName">
		          		  			UPPER(PERIL_NAME) LIKE UPPER(#perilName#)
		          		  	  	</isNotEmpty>			          		  	  	
		          		  </isNotNull>
		                ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
  	</select>	  

 	<resultMap id="getGIISS224LineCdLovMap" class="com.geniisys.giis.entity.GIISMcDepreciationPeril" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd"		    column="LINE_CD" /> 		
 		<result property="lineName" 		column="LINE_NAME" />
	</resultMap>	
	
	<select id="getGIISS224LineCd" resultMap="getGIISS224LineCdLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_line_cd_lov(#findText#,#appUser#))
						  <isEqual property="sortColumn" compareValue="lineCd">
								ORDER BY LINE_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="lineName">
								ORDER BY LINE_NAME
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_line_cd_lov(#findText#,#appUser#))) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  		

 	<resultMap id="getGIISS224PerilNameLovMap" class="com.geniisys.giis.entity.GIISMcDepreciationPeril" extends="BaseEntity.TableGridResultMap">
		<result property="perilCd"		    column="PERIL_CD" /> 		
 		<result property="perilName" 		column="PERIL_NAME" />
	</resultMap>	
	
	<select id="getGIISS224PerilName" resultMap="getGIISS224PerilNameLovMap" parameterClass="map">
		SELECT *
		  FROM (SELECT rownum rownum_, 
					   b.count_, 
					   a.* 
				  FROM (SELECT * 
						  FROM TABLE (GIISS224_PKG.get_peril_name_lov(#findText#,#lineCd#))			
						  WHERE 1 = 1
						  <isNotNull property="notIn" prepend="AND">
		                  		(peril_cd NOT IN $notIn$)
		                  </isNotNull>						  	  
						  <isEqual property="sortColumn" compareValue="perilCd">
								ORDER BY PERIL_CD
						  </isEqual>
						  <isEqual property="sortColumn" compareValue="perilName">
								ORDER BY PERIL_NAME
						  </isEqual>						  
						  <isNotNull property="sortColumn">
								<isEqual property="ascDescFlg" compareValue="ASC">
									ASC
								</isEqual>
								<isEqual property="ascDescFlg" compareValue="DESC">
									DESC
								</isEqual>
						  </isNotNull>
						  ) a, 
					   (SELECT count(*) count_ 
						  FROM TABLE (GIISS224_PKG.get_peril_name_lov(#findText#,#lineCd#))
						  WHERE 1 = 1
						  <isNotNull property="notIn" prepend="AND">
		                  		(peril_cd NOT IN $notIn$)
		                  </isNotNull>	
		                  ) b) 
		 WHERE rownum_ BETWEEN #from# AND #to#
	</select>  		

   	<delete id="deletePerilDepRate" parameterClass="com.geniisys.giis.entity.GIISMcDepreciationPeril">
		BEGIN
			GIISS224_PKG.delete_peril_dep_rate(#id#, #lineCd#, #perilCd#);
		END;
	</delete> 
	
  	<insert id="setPerilDepRate" parameterClass="com.geniisys.giis.entity.GIISMcDepreciationPeril">
  		DECLARE
  		  v_peril_dep   GIIS_MC_DEP_PERIL%ROWTYPE;
		BEGIN
		  giis_users_pkg.app_user := #appUser#;
		  
		  v_peril_dep.id := #id#;	
		  v_peril_dep.line_cd := #lineCd#;
		  v_peril_dep.peril_cd := #perilCd#;		  
		  v_peril_dep.user_id := #appUser#;
		  
		  GIISS224_PKG.set_peril_dep_rate (v_peril_dep);
		END;
  	</insert>

</sqlMap>
