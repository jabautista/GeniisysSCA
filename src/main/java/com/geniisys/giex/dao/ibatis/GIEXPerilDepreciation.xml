<?xml version="1.0" encoding="UTF-8"?>

<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd" >

<sqlMap namespace="GIEXPerilDepreciation">

	<cacheModel type="MEMORY" id="oneDayClient">
		<flushInterval hours="24"/>
		<property name="reference-type" value="WEAK"/>
	</cacheModel>

	<typeAlias alias="GIEXPerilDepreciationClass" type="com.geniisys.giex.entity.GIEXPerilDepreciation"/>
	
 	<resultMap class="GIEXPerilDepreciationClass" 		id="GIEXPerilDepreciationClass">
		<result property="lineCd"				column="LINE_CD"/>
		<result property="lineName"				column="LINE_NAME"/>
		<result property="perilCd"				column="PERIL_CD"/>
		<result property="perilName"			column="PERIL_NAME"/>
		<result property="rate"					column="RATE"/>
		<result property="userId"				column="USER_ID"/>
		<result property="lastUpdate"			column="LAST_UPDATE"/>
		<result property="remarks"				column="REMARKS"/>
	</resultMap>
	
	<resultMap class="GIEXPerilDepreciationClass" id="GIEXPerilDepTableGridResultMap" extends="BaseEntity.TableGridResultMap">
		<result property="lineCd"				column="LINE_CD"/>
		<result property="lineName"				column="LINE_NAME"/>
		<result property="perilCd"				column="PERIL_CD"/>
		<result property="perilName"			column="PERIL_NAME"/>
		<result property="rate"					column="RATE"/>
		<result property="userId"				column="USER_ID"/>
		<result property="lastUpdate"			column="LAST_UPDATE"/>
		<result property="remarks"				column="REMARKS"/>
	</resultMap>
	
	<resultMap id="GIEXPerilDepreciationLOVmap" class="GIEXPerilDepreciationClass" extends="BaseEntity.TableGridResultMap">
		<result property="perilCd"				column="PERIL_CD"/>
		<result property="perilName"			column="PERIL_NAME"/>
	</resultMap>
	
	<select id="getGiiss208PerilDepreciationList" resultMap="GIEXPerilDepTableGridResultMap" parameterClass="map">
		SELECT *
			FROM (SELECT ROWNUM rownum_, 
		    	b.count_, a.*
		        	FROM (SELECT * 
		            		FROM TABLE (GIISS208_PKG.get_giis_peril_dep_item(#lineCd#))
			            		<isNotNull property="filter">
									WHERE 1=1
										<isNotEmpty prepend="AND"  property="lineCd">
											upper(line_cd) LIKE upper(#lineCd#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="lineName">
											upper(line_name) LIKE upper(#lineName#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="perilCd">
											upper(peril_cd) LIKE upper(#perilCd#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="perilName">
											upper(peril_name) LIKE upper(#perilName#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="rate">
											upper(rate) LIKE upper(#rate#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="userId">
											upper(user_id) LIKE upper(#userId#)
										</isNotEmpty>
										<isNotEmpty prepend="AND"  property="lastUpdate">
											upper(last_update) LIKE upper(#lastUpdate#)
										</isNotEmpty>
								</isNotNull>
								<isEqual property="sortColumn" compareValue="lineCd">
		                        	ORDER BY line_cd
		                        </isEqual>
		                        <isEqual property="sortColumn" compareValue="lineName">
		                            ORDER BY line_name
		                        </isEqual>
		                    	<isEqual property="sortColumn" compareValue="perilCd">
		                        	ORDER BY peril_cd
		                        </isEqual>
		                        <isEqual property="sortColumn" compareValue="perilName">
		                            ORDER BY peril_name
		                        </isEqual>
		                        <isEqual property="sortColumn" compareValue="rate">
		                            ORDER BY rate
		                        </isEqual>
		                        <isEqual property="sortColumn" compareValue="userId">
		                            ORDER BY user_id
		                       	</isEqual>
		                        <isEqual property="sortColumn" compareValue="lastUpdate">
		                            ORDER BY last_update
		                       	</isEqual>
		                        <isNotNull property="sortColumn">
		                        	<isEqual property="ascDescFlg" compareValue="ASC">
		                            	ASC
		                            </isEqual>
		                            <isEqual property="ascDescFlg" compareValue="DESC">
		                                DESC
		                            </isEqual>
		                         </isNotNull>) a, 
		                   (SELECT count(*) count_
		                      FROM TABLE (GIISS208_PKG.get_giis_peril_dep_item(#lineCd#))
			                      <isNotNull property="filter">
										WHERE 1=1
											<isNotEmpty prepend="AND"  property="lineCd">
												upper(line_cd) LIKE upper(#lineCd#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="lineName">
												upper(line_name) LIKE upper(#lineName#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="perilCd">
												upper(peril_cd) LIKE upper(#perilCd#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="perilCd">
												upper(peril_cd) LIKE upper(#perilCd#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="perilName">
												upper(peril_name) LIKE upper(#perilName#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="rate">
												upper(rate) LIKE upper(#rate#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="userId">
												upper(user_id) LIKE upper(#userId#)
											</isNotEmpty>
											<isNotEmpty prepend="AND"  property="lastUpdate">
												upper(last_update) LIKE upper(#lastUpdate#)
											</isNotEmpty>
									</isNotNull>)b) 
		           WHERE rownum_ BETWEEN #from# AND #to# 			 						    	
	</select>
	
	<select id="getPerilDepNameLOV" resultMap="GIEXPerilDepreciationLOVmap" parameterClass="java.util.HashMap">		 
		SELECT *
		  FROM (SELECT ROWNUM rownum_, 
		               b.count_, 
		               a.* 
		          FROM (SELECT * FROM TABLE(GIISS208_PKG.get_giis_peril_list_item(#lineCd#, #perilCd#, #perilName#))
		          	WHERE 1=1
		          	<isNotNull property="notIn">
					  	AND peril_cd NOT IN ($notIn$)
					</isNotNull>
		          	<isNotNull property="findText">
							<isNotEmpty prepend="AND"  property="findText">
								(peril_cd LIKE upper(#findText#) OR
									peril_name LIKE upper(#findText#))
							</isNotEmpty>
					</isNotNull>
		            <isEqual property="sortColumn" compareValue="perilCd">
	              		ORDER BY peril_cd
		            </isEqual>
		            <isEqual property="sortColumn" compareValue="perilName">
	              		ORDER BY peril_name
		            </isEqual>
		            <isNotNull property="sortColumn">
	              		<isEqual property="ascDescFlg" compareValue="ASC">
	              			ASC
	              		</isEqual>
	              		<isEqual property="ascDescFlg" compareValue="DESC">
	              			DESC
	              		</isEqual>
	              	</isNotNull>) a,
	              (SELECT count(*) count_
		          	FROM TABLE (GIISS208_PKG.get_giis_peril_list_item(#lineCd#, #perilCd#, #perilName#))
			          		WHERE 1=1
		          	<isNotNull property="notIn">
					  	AND peril_cd NOT IN ($notIn$)
					</isNotNull> 
		          	<isNotNull property="findText">
							<isNotEmpty prepend="AND"  property="findText">
								(peril_cd LIKE upper(#findText#) OR
									peril_name LIKE upper(#findText#))
							</isNotEmpty>
					</isNotNull>)b) 
		    	WHERE rownum_ BETWEEN #from# AND #to# 	
  	</select>
  	
  	<insert id="setPerilDepreciationRow" parameterClass="GIEXPerilDepreciationClass">
  		DECLARE
  			v_dep_perl   giex_dep_perl%ROWTYPE;
		BEGIN
		  giis_users_pkg.app_user := #appUser#;
		  	
		  v_dep_perl.line_cd := #lineCd#;
		  v_dep_perl.peril_cd := #perilCd#;
		  v_dep_perl.user_id := #appUser#;
		  v_dep_perl.rate := #rate#;
		  v_dep_perl.remarks := #remarks#;
		  
		  giiss208_pkg.set_giis_peril_dep_item (v_dep_perl);
		END;
  	</insert>
  	
  	<delete id="delPerilDepreciationRow" parameterClass="GIEXPerilDepreciationClass">
  		BEGIN
  			giiss208_pkg.del_giis_peril_dep_item(#lineCd#, #perilCd#);
  		END;
  	</delete>
  	
  	<select id="validateAddPerilCd" parameterClass="java.util.HashMap" resultClass="java.lang.String">
		SELECT giiss208_pkg.validate_add_perilcd(#lineCd#, #perilCd#) FROM DUAL
	</select>
  	
</sqlMap>